
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Admin
 * 
 */
export type Admin = $Result.DefaultSelection<Prisma.$AdminPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model RolePermission
 * 
 */
export type RolePermission = $Result.DefaultSelection<Prisma.$RolePermissionPayload>
/**
 * Model OperatorEntity
 * 
 */
export type OperatorEntity = $Result.DefaultSelection<Prisma.$OperatorEntityPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model DeliveryAddress
 * 
 */
export type DeliveryAddress = $Result.DefaultSelection<Prisma.$DeliveryAddressPayload>
/**
 * Model PaymentGatewayServiceProvider
 * 
 */
export type PaymentGatewayServiceProvider = $Result.DefaultSelection<Prisma.$PaymentGatewayServiceProviderPayload>
/**
 * Model Device
 * 
 */
export type Device = $Result.DefaultSelection<Prisma.$DevicePayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model OTP
 * 
 */
export type OTP = $Result.DefaultSelection<Prisma.$OTPPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model ProductImage
 * 
 */
export type ProductImage = $Result.DefaultSelection<Prisma.$ProductImagePayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Location
 * 
 */
export type Location = $Result.DefaultSelection<Prisma.$LocationPayload>
/**
 * Model ProductAttribute
 * 
 */
export type ProductAttribute = $Result.DefaultSelection<Prisma.$ProductAttributePayload>
/**
 * Model ProductTranslation
 * 
 */
export type ProductTranslation = $Result.DefaultSelection<Prisma.$ProductTranslationPayload>
/**
 * Model ProductDeliveryOption
 * 
 */
export type ProductDeliveryOption = $Result.DefaultSelection<Prisma.$ProductDeliveryOptionPayload>
/**
 * Model CategoryTranslation
 * 
 */
export type CategoryTranslation = $Result.DefaultSelection<Prisma.$CategoryTranslationPayload>
/**
 * Model SellerKyc
 * 
 */
export type SellerKyc = $Result.DefaultSelection<Prisma.$SellerKycPayload>
/**
 * Model BankAccount
 * 
 */
export type BankAccount = $Result.DefaultSelection<Prisma.$BankAccountPayload>
/**
 * Model Wallet
 * 
 */
export type Wallet = $Result.DefaultSelection<Prisma.$WalletPayload>
/**
 * Model PaymentMethod
 * 
 */
export type PaymentMethod = $Result.DefaultSelection<Prisma.$PaymentMethodPayload>
/**
 * Model Settlement
 * 
 */
export type Settlement = $Result.DefaultSelection<Prisma.$SettlementPayload>
/**
 * Model ProductView
 * 
 */
export type ProductView = $Result.DefaultSelection<Prisma.$ProductViewPayload>
/**
 * Model ProductOrderInterest
 * 
 */
export type ProductOrderInterest = $Result.DefaultSelection<Prisma.$ProductOrderInterestPayload>
/**
 * Model OrderItem
 * 
 */
export type OrderItem = $Result.DefaultSelection<Prisma.$OrderItemPayload>
/**
 * Model ExternalTransaction
 * 
 */
export type ExternalTransaction = $Result.DefaultSelection<Prisma.$ExternalTransactionPayload>
/**
 * Model UCP
 * 
 */
export type UCP = $Result.DefaultSelection<Prisma.$UCPPayload>
/**
 * Model RiderApplication
 * 
 */
export type RiderApplication = $Result.DefaultSelection<Prisma.$RiderApplicationPayload>
/**
 * Model RiderDocument
 * 
 */
export type RiderDocument = $Result.DefaultSelection<Prisma.$RiderDocumentPayload>
/**
 * Model Driver
 * 
 */
export type Driver = $Result.DefaultSelection<Prisma.$DriverPayload>
/**
 * Model DriverLocation
 * 
 */
export type DriverLocation = $Result.DefaultSelection<Prisma.$DriverLocationPayload>
/**
 * Model RideRequest
 * 
 */
export type RideRequest = $Result.DefaultSelection<Prisma.$RideRequestPayload>
/**
 * Model Ride
 * 
 */
export type Ride = $Result.DefaultSelection<Prisma.$RidePayload>
/**
 * Model RideToken
 * 
 */
export type RideToken = $Result.DefaultSelection<Prisma.$RideTokenPayload>
/**
 * Model RideLocation
 * 
 */
export type RideLocation = $Result.DefaultSelection<Prisma.$RideLocationPayload>
/**
 * Model DriverEarning
 * 
 */
export type DriverEarning = $Result.DefaultSelection<Prisma.$DriverEarningPayload>
/**
 * Model RideService
 * 
 */
export type RideService = $Result.DefaultSelection<Prisma.$RideServicePayload>
/**
 * Model orders
 * 
 */
export type orders = $Result.DefaultSelection<Prisma.$ordersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const AdminRole: {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  SUPPORT: 'SUPPORT'
};

export type AdminRole = (typeof AdminRole)[keyof typeof AdminRole]


export const Permission: {
  ADD: 'ADD',
  EDIT: 'EDIT',
  VIEW: 'VIEW',
  DELETE: 'DELETE',
  EXPORT: 'EXPORT'
};

export type Permission = (typeof Permission)[keyof typeof Permission]


export const EntityType: {
  DASHBOARD: 'DASHBOARD',
  USERS: 'USERS',
  USERS_SNAP_USERS: 'USERS_SNAP_USERS',
  USERS_KYC_APPROVAL: 'USERS_KYC_APPROVAL',
  PRODUCTS: 'PRODUCTS',
  PRODUCTS_CATEGORIES: 'PRODUCTS_CATEGORIES',
  ORDERS: 'ORDERS',
  SETTLEMENTS: 'SETTLEMENTS',
  SETTLEMENTS_REQUESTS: 'SETTLEMENTS_REQUESTS',
  SETTLEMENTS_SHEET: 'SETTLEMENTS_SHEET',
  SETTLEMENTS_CUMULATIVE_ENTRIES: 'SETTLEMENTS_CUMULATIVE_ENTRIES',
  JOURNALS: 'JOURNALS',
  JOURNALS_STRIPE_PAYMENT_REPORT: 'JOURNALS_STRIPE_PAYMENT_REPORT',
  JOURNALS_SNAP_FEE_REPORT: 'JOURNALS_SNAP_FEE_REPORT',
  JOURNALS_AUDIT_REPORT: 'JOURNALS_AUDIT_REPORT',
  SYSTEM_CONFIG: 'SYSTEM_CONFIG',
  SYSTEM_CONFIG_ROLES: 'SYSTEM_CONFIG_ROLES',
  SYSTEM_CONFIG_OPERATOR_ENTITY: 'SYSTEM_CONFIG_OPERATOR_ENTITY',
  SYSTEM_CONFIG_SYSTEM_OPERATOR: 'SYSTEM_CONFIG_SYSTEM_OPERATOR',
  SYSTEM_CONFIG_SETTLEMENT_GROUP: 'SYSTEM_CONFIG_SETTLEMENT_GROUP',
  SYSTEM_CONFIG_PAYMENT_GATEWAYS: 'SYSTEM_CONFIG_PAYMENT_GATEWAYS',
  SNAP_RIDE: 'SNAP_RIDE',
  SNAP_RIDE_RIDER_APPLICATIONS: 'SNAP_RIDE_RIDER_APPLICATIONS',
  SNAP_RIDE_DRIVER_MANAGEMENT: 'SNAP_RIDE_DRIVER_MANAGEMENT',
  SNAP_RIDE_RIDE_MANAGEMENT: 'SNAP_RIDE_RIDE_MANAGEMENT',
  SNAP_RIDE_ANALYTICS: 'SNAP_RIDE_ANALYTICS',
  SNAP_RIDE_RIDE_SERVICE: 'SNAP_RIDE_RIDE_SERVICE',
  SNAP_RIDE_RIDE_SERVICE_TIERS: 'SNAP_RIDE_RIDE_SERVICE_TIERS'
};

export type EntityType = (typeof EntityType)[keyof typeof EntityType]


export const ProductCondition: {
  NEW: 'NEW',
  EXCELLENT: 'EXCELLENT',
  VERY_GOOD: 'VERY_GOOD',
  REFURBISHED: 'REFURBISHED'
};

export type ProductCondition = (typeof ProductCondition)[keyof typeof ProductCondition]


export const ProductStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SOLD: 'SOLD',
  PENDING: 'PENDING'
};

export type ProductStatus = (typeof ProductStatus)[keyof typeof ProductStatus]


export const BusinessType: {
  INDIVIDUAL: 'INDIVIDUAL',
  SOLE_PROPRIETORSHIP: 'SOLE_PROPRIETORSHIP',
  PARTNERSHIP: 'PARTNERSHIP',
  CORPORATION: 'CORPORATION',
  LLC: 'LLC'
};

export type BusinessType = (typeof BusinessType)[keyof typeof BusinessType]


export const DocumentType: {
  NATIONAL_ID: 'NATIONAL_ID',
  PASSPORT: 'PASSPORT',
  DRIVERS_LICENSE: 'DRIVERS_LICENSE',
  BUSINESS_REGISTRATION: 'BUSINESS_REGISTRATION',
  TAX_CERTIFICATE: 'TAX_CERTIFICATE',
  CAR_INTERIOR_PHOTO: 'CAR_INTERIOR_PHOTO',
  CAR_EXTERIOR_PHOTO: 'CAR_EXTERIOR_PHOTO'
};

export type DocumentType = (typeof DocumentType)[keyof typeof DocumentType]


export const KycStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  SUSPENDED: 'SUSPENDED'
};

export type KycStatus = (typeof KycStatus)[keyof typeof KycStatus]


export const AccountStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  BLOCKED: 'BLOCKED'
};

export type AccountStatus = (typeof AccountStatus)[keyof typeof AccountStatus]


export const WalletType: {
  CRYPTO: 'CRYPTO',
  MOBILE_MONEY: 'MOBILE_MONEY',
  DIGITAL_WALLET: 'DIGITAL_WALLET'
};

export type WalletType = (typeof WalletType)[keyof typeof WalletType]


export const PaymentType: {
  BANK_TRANSFER: 'BANK_TRANSFER',
  CREDIT_CARD: 'CREDIT_CARD',
  DEBIT_CARD: 'DEBIT_CARD',
  MOBILE_MONEY: 'MOBILE_MONEY',
  CRYPTO: 'CRYPTO',
  DIGITAL_WALLET: 'DIGITAL_WALLET'
};

export type PaymentType = (typeof PaymentType)[keyof typeof PaymentType]


export const SettlementStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

export type SettlementStatus = (typeof SettlementStatus)[keyof typeof SettlementStatus]


export const SettlementType: {
  BANK_TRANSFER: 'BANK_TRANSFER',
  WALLET_TRANSFER: 'WALLET_TRANSFER',
  ECOMMERCE: 'ECOMMERCE',
  RIDES: 'RIDES'
};

export type SettlementType = (typeof SettlementType)[keyof typeof SettlementType]


export const SettlementChannel: {
  ECOMMERCE: 'ECOMMERCE',
  RIDES: 'RIDES'
};

export type SettlementChannel = (typeof SettlementChannel)[keyof typeof SettlementChannel]


export const OrderInterestStatus: {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  NEGOTIATING: 'NEGOTIATING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED',
  CONVERTED_TO_ORDER: 'CONVERTED_TO_ORDER'
};

export type OrderInterestStatus = (typeof OrderInterestStatus)[keyof typeof OrderInterestStatus]


export const PaymentStatus: {
  PENDING: 'PENDING',
  AUTHORIZED: 'AUTHORIZED',
  PAID: 'PAID',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  CANCELLED: 'CANCELLED',
  SETTLED: 'SETTLED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const OrderStatus: {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED',
  COMPLETED: 'COMPLETED',
  AUTHORIZED: 'AUTHORIZED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const OrderItemStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED'
};

export type OrderItemStatus = (typeof OrderItemStatus)[keyof typeof OrderItemStatus]


export const DeliveryType: {
  STANDARD: 'STANDARD',
  EXPRESS: 'EXPRESS',
  SAME_DAY: 'SAME_DAY',
  NEXT_DAY: 'NEXT_DAY',
  PICKUP: 'PICKUP',
  INTERNATIONAL: 'INTERNATIONAL'
};

export type DeliveryType = (typeof DeliveryType)[keyof typeof DeliveryType]


export const TransactionStatus: {
  PENDING: 'PENDING',
  SUCCESS: 'SUCCESS',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED'
};

export type TransactionStatus = (typeof TransactionStatus)[keyof typeof TransactionStatus]


export const TransactionType: {
  ORIGINAL: 'ORIGINAL',
  FEE: 'FEE',
  SERVICE_FEE: 'SERVICE_FEE'
};

export type TransactionType = (typeof TransactionType)[keyof typeof TransactionType]


export const RiderVehicleType: {
  DRIVER: 'DRIVER',
  MOTORCYCLE: 'MOTORCYCLE',
  BICYCLE: 'BICYCLE'
};

export type RiderVehicleType = (typeof RiderVehicleType)[keyof typeof RiderVehicleType]


export const RiderApplicationStatus: {
  PENDING: 'PENDING',
  UNDER_REVIEW: 'UNDER_REVIEW',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  SUSPENDED: 'SUSPENDED'
};

export type RiderApplicationStatus = (typeof RiderApplicationStatus)[keyof typeof RiderApplicationStatus]


export const RideStatus: {
  REQUESTED: 'REQUESTED',
  ACCEPTED: 'ACCEPTED',
  ARRIVING: 'ARRIVING',
  ARRIVED: 'ARRIVED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED'
};

export type RideStatus = (typeof RideStatus)[keyof typeof RideStatus]


export const DriverStatus: {
  OFFLINE: 'OFFLINE',
  ONLINE: 'ONLINE',
  BUSY: 'BUSY',
  SUSPENDED: 'SUSPENDED'
};

export type DriverStatus = (typeof DriverStatus)[keyof typeof DriverStatus]


export const RideType: {
  STANDARD: 'STANDARD',
  PREMIUM: 'PREMIUM',
  POOL: 'POOL',
  DELIVERY: 'DELIVERY'
};

export type RideType = (typeof RideType)[keyof typeof RideType]


export const RidePaymentMethod: {
  CASH: 'CASH',
  CARD: 'CARD',
  MOBILE_MONEY: 'MOBILE_MONEY',
  WALLET: 'WALLET'
};

export type RidePaymentMethod = (typeof RidePaymentMethod)[keyof typeof RidePaymentMethod]


export const DistanceUnit: {
  KILOMETER: 'KILOMETER',
  MILE: 'MILE',
  METER: 'METER'
};

export type DistanceUnit = (typeof DistanceUnit)[keyof typeof DistanceUnit]


export const ServiceStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  MAINTENANCE: 'MAINTENANCE'
};

export type ServiceStatus = (typeof ServiceStatus)[keyof typeof ServiceStatus]


export const AppService: {
  ECOMMERCE: 'ECOMMERCE',
  RIDES: 'RIDES'
};

export type AppService = (typeof AppService)[keyof typeof AppService]

}

export type AdminRole = $Enums.AdminRole

export const AdminRole: typeof $Enums.AdminRole

export type Permission = $Enums.Permission

export const Permission: typeof $Enums.Permission

export type EntityType = $Enums.EntityType

export const EntityType: typeof $Enums.EntityType

export type ProductCondition = $Enums.ProductCondition

export const ProductCondition: typeof $Enums.ProductCondition

export type ProductStatus = $Enums.ProductStatus

export const ProductStatus: typeof $Enums.ProductStatus

export type BusinessType = $Enums.BusinessType

export const BusinessType: typeof $Enums.BusinessType

export type DocumentType = $Enums.DocumentType

export const DocumentType: typeof $Enums.DocumentType

export type KycStatus = $Enums.KycStatus

export const KycStatus: typeof $Enums.KycStatus

export type AccountStatus = $Enums.AccountStatus

export const AccountStatus: typeof $Enums.AccountStatus

export type WalletType = $Enums.WalletType

export const WalletType: typeof $Enums.WalletType

export type PaymentType = $Enums.PaymentType

export const PaymentType: typeof $Enums.PaymentType

export type SettlementStatus = $Enums.SettlementStatus

export const SettlementStatus: typeof $Enums.SettlementStatus

export type SettlementType = $Enums.SettlementType

export const SettlementType: typeof $Enums.SettlementType

export type SettlementChannel = $Enums.SettlementChannel

export const SettlementChannel: typeof $Enums.SettlementChannel

export type OrderInterestStatus = $Enums.OrderInterestStatus

export const OrderInterestStatus: typeof $Enums.OrderInterestStatus

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type OrderItemStatus = $Enums.OrderItemStatus

export const OrderItemStatus: typeof $Enums.OrderItemStatus

export type DeliveryType = $Enums.DeliveryType

export const DeliveryType: typeof $Enums.DeliveryType

export type TransactionStatus = $Enums.TransactionStatus

export const TransactionStatus: typeof $Enums.TransactionStatus

export type TransactionType = $Enums.TransactionType

export const TransactionType: typeof $Enums.TransactionType

export type RiderVehicleType = $Enums.RiderVehicleType

export const RiderVehicleType: typeof $Enums.RiderVehicleType

export type RiderApplicationStatus = $Enums.RiderApplicationStatus

export const RiderApplicationStatus: typeof $Enums.RiderApplicationStatus

export type RideStatus = $Enums.RideStatus

export const RideStatus: typeof $Enums.RideStatus

export type DriverStatus = $Enums.DriverStatus

export const DriverStatus: typeof $Enums.DriverStatus

export type RideType = $Enums.RideType

export const RideType: typeof $Enums.RideType

export type RidePaymentMethod = $Enums.RidePaymentMethod

export const RidePaymentMethod: typeof $Enums.RidePaymentMethod

export type DistanceUnit = $Enums.DistanceUnit

export const DistanceUnit: typeof $Enums.DistanceUnit

export type ServiceStatus = $Enums.ServiceStatus

export const ServiceStatus: typeof $Enums.ServiceStatus

export type AppService = $Enums.AppService

export const AppService: typeof $Enums.AppService

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Admins
 * const admins = await prisma.admin.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Admins
   * const admins = await prisma.admin.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.admin`: Exposes CRUD operations for the **Admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admin.findMany()
    * ```
    */
  get admin(): Prisma.AdminDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rolePermission`: Exposes CRUD operations for the **RolePermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RolePermissions
    * const rolePermissions = await prisma.rolePermission.findMany()
    * ```
    */
  get rolePermission(): Prisma.RolePermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.operatorEntity`: Exposes CRUD operations for the **OperatorEntity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OperatorEntities
    * const operatorEntities = await prisma.operatorEntity.findMany()
    * ```
    */
  get operatorEntity(): Prisma.OperatorEntityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.deliveryAddress`: Exposes CRUD operations for the **DeliveryAddress** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DeliveryAddresses
    * const deliveryAddresses = await prisma.deliveryAddress.findMany()
    * ```
    */
  get deliveryAddress(): Prisma.DeliveryAddressDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentGatewayServiceProvider`: Exposes CRUD operations for the **PaymentGatewayServiceProvider** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentGatewayServiceProviders
    * const paymentGatewayServiceProviders = await prisma.paymentGatewayServiceProvider.findMany()
    * ```
    */
  get paymentGatewayServiceProvider(): Prisma.PaymentGatewayServiceProviderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.device`: Exposes CRUD operations for the **Device** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Devices
    * const devices = await prisma.device.findMany()
    * ```
    */
  get device(): Prisma.DeviceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.oTP`: Exposes CRUD operations for the **OTP** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OTPS
    * const oTPS = await prisma.oTP.findMany()
    * ```
    */
  get oTP(): Prisma.OTPDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productImage`: Exposes CRUD operations for the **ProductImage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductImages
    * const productImages = await prisma.productImage.findMany()
    * ```
    */
  get productImage(): Prisma.ProductImageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.location`: Exposes CRUD operations for the **Location** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Locations
    * const locations = await prisma.location.findMany()
    * ```
    */
  get location(): Prisma.LocationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productAttribute`: Exposes CRUD operations for the **ProductAttribute** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductAttributes
    * const productAttributes = await prisma.productAttribute.findMany()
    * ```
    */
  get productAttribute(): Prisma.ProductAttributeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productTranslation`: Exposes CRUD operations for the **ProductTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductTranslations
    * const productTranslations = await prisma.productTranslation.findMany()
    * ```
    */
  get productTranslation(): Prisma.ProductTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productDeliveryOption`: Exposes CRUD operations for the **ProductDeliveryOption** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductDeliveryOptions
    * const productDeliveryOptions = await prisma.productDeliveryOption.findMany()
    * ```
    */
  get productDeliveryOption(): Prisma.ProductDeliveryOptionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoryTranslation`: Exposes CRUD operations for the **CategoryTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoryTranslations
    * const categoryTranslations = await prisma.categoryTranslation.findMany()
    * ```
    */
  get categoryTranslation(): Prisma.CategoryTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sellerKyc`: Exposes CRUD operations for the **SellerKyc** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SellerKycs
    * const sellerKycs = await prisma.sellerKyc.findMany()
    * ```
    */
  get sellerKyc(): Prisma.SellerKycDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bankAccount`: Exposes CRUD operations for the **BankAccount** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BankAccounts
    * const bankAccounts = await prisma.bankAccount.findMany()
    * ```
    */
  get bankAccount(): Prisma.BankAccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wallet`: Exposes CRUD operations for the **Wallet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wallets
    * const wallets = await prisma.wallet.findMany()
    * ```
    */
  get wallet(): Prisma.WalletDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentMethod`: Exposes CRUD operations for the **PaymentMethod** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentMethods
    * const paymentMethods = await prisma.paymentMethod.findMany()
    * ```
    */
  get paymentMethod(): Prisma.PaymentMethodDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.settlement`: Exposes CRUD operations for the **Settlement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Settlements
    * const settlements = await prisma.settlement.findMany()
    * ```
    */
  get settlement(): Prisma.SettlementDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productView`: Exposes CRUD operations for the **ProductView** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductViews
    * const productViews = await prisma.productView.findMany()
    * ```
    */
  get productView(): Prisma.ProductViewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productOrderInterest`: Exposes CRUD operations for the **ProductOrderInterest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductOrderInterests
    * const productOrderInterests = await prisma.productOrderInterest.findMany()
    * ```
    */
  get productOrderInterest(): Prisma.ProductOrderInterestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderItem`: Exposes CRUD operations for the **OrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItems
    * const orderItems = await prisma.orderItem.findMany()
    * ```
    */
  get orderItem(): Prisma.OrderItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.externalTransaction`: Exposes CRUD operations for the **ExternalTransaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ExternalTransactions
    * const externalTransactions = await prisma.externalTransaction.findMany()
    * ```
    */
  get externalTransaction(): Prisma.ExternalTransactionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.uCP`: Exposes CRUD operations for the **UCP** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UCPS
    * const uCPS = await prisma.uCP.findMany()
    * ```
    */
  get uCP(): Prisma.UCPDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.riderApplication`: Exposes CRUD operations for the **RiderApplication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RiderApplications
    * const riderApplications = await prisma.riderApplication.findMany()
    * ```
    */
  get riderApplication(): Prisma.RiderApplicationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.riderDocument`: Exposes CRUD operations for the **RiderDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RiderDocuments
    * const riderDocuments = await prisma.riderDocument.findMany()
    * ```
    */
  get riderDocument(): Prisma.RiderDocumentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.driver`: Exposes CRUD operations for the **Driver** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Drivers
    * const drivers = await prisma.driver.findMany()
    * ```
    */
  get driver(): Prisma.DriverDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.driverLocation`: Exposes CRUD operations for the **DriverLocation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DriverLocations
    * const driverLocations = await prisma.driverLocation.findMany()
    * ```
    */
  get driverLocation(): Prisma.DriverLocationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rideRequest`: Exposes CRUD operations for the **RideRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RideRequests
    * const rideRequests = await prisma.rideRequest.findMany()
    * ```
    */
  get rideRequest(): Prisma.RideRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ride`: Exposes CRUD operations for the **Ride** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rides
    * const rides = await prisma.ride.findMany()
    * ```
    */
  get ride(): Prisma.RideDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rideToken`: Exposes CRUD operations for the **RideToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RideTokens
    * const rideTokens = await prisma.rideToken.findMany()
    * ```
    */
  get rideToken(): Prisma.RideTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rideLocation`: Exposes CRUD operations for the **RideLocation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RideLocations
    * const rideLocations = await prisma.rideLocation.findMany()
    * ```
    */
  get rideLocation(): Prisma.RideLocationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.driverEarning`: Exposes CRUD operations for the **DriverEarning** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DriverEarnings
    * const driverEarnings = await prisma.driverEarning.findMany()
    * ```
    */
  get driverEarning(): Prisma.DriverEarningDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rideService`: Exposes CRUD operations for the **RideService** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RideServices
    * const rideServices = await prisma.rideService.findMany()
    * ```
    */
  get rideService(): Prisma.RideServiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orders`: Exposes CRUD operations for the **orders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.orders.findMany()
    * ```
    */
  get orders(): Prisma.ordersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.12.0
   * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Admin: 'Admin',
    Role: 'Role',
    RolePermission: 'RolePermission',
    OperatorEntity: 'OperatorEntity',
    User: 'User',
    DeliveryAddress: 'DeliveryAddress',
    PaymentGatewayServiceProvider: 'PaymentGatewayServiceProvider',
    Device: 'Device',
    Session: 'Session',
    OTP: 'OTP',
    Product: 'Product',
    ProductImage: 'ProductImage',
    Category: 'Category',
    Location: 'Location',
    ProductAttribute: 'ProductAttribute',
    ProductTranslation: 'ProductTranslation',
    ProductDeliveryOption: 'ProductDeliveryOption',
    CategoryTranslation: 'CategoryTranslation',
    SellerKyc: 'SellerKyc',
    BankAccount: 'BankAccount',
    Wallet: 'Wallet',
    PaymentMethod: 'PaymentMethod',
    Settlement: 'Settlement',
    ProductView: 'ProductView',
    ProductOrderInterest: 'ProductOrderInterest',
    OrderItem: 'OrderItem',
    ExternalTransaction: 'ExternalTransaction',
    UCP: 'UCP',
    RiderApplication: 'RiderApplication',
    RiderDocument: 'RiderDocument',
    Driver: 'Driver',
    DriverLocation: 'DriverLocation',
    RideRequest: 'RideRequest',
    Ride: 'Ride',
    RideToken: 'RideToken',
    RideLocation: 'RideLocation',
    DriverEarning: 'DriverEarning',
    RideService: 'RideService',
    orders: 'orders'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "admin" | "role" | "rolePermission" | "operatorEntity" | "user" | "deliveryAddress" | "paymentGatewayServiceProvider" | "device" | "session" | "oTP" | "product" | "productImage" | "category" | "location" | "productAttribute" | "productTranslation" | "productDeliveryOption" | "categoryTranslation" | "sellerKyc" | "bankAccount" | "wallet" | "paymentMethod" | "settlement" | "productView" | "productOrderInterest" | "orderItem" | "externalTransaction" | "uCP" | "riderApplication" | "riderDocument" | "driver" | "driverLocation" | "rideRequest" | "ride" | "rideToken" | "rideLocation" | "driverEarning" | "rideService" | "orders"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Admin: {
        payload: Prisma.$AdminPayload<ExtArgs>
        fields: Prisma.AdminFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findFirst: {
            args: Prisma.AdminFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findMany: {
            args: Prisma.AdminFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          create: {
            args: Prisma.AdminCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          createMany: {
            args: Prisma.AdminCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdminCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          delete: {
            args: Prisma.AdminDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          update: {
            args: Prisma.AdminUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          deleteMany: {
            args: Prisma.AdminDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdminUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdminUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          upsert: {
            args: Prisma.AdminUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          aggregate: {
            args: Prisma.AdminAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin>
          }
          groupBy: {
            args: Prisma.AdminGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminCountArgs<ExtArgs>
            result: $Utils.Optional<AdminCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      RolePermission: {
        payload: Prisma.$RolePermissionPayload<ExtArgs>
        fields: Prisma.RolePermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolePermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolePermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          findFirst: {
            args: Prisma.RolePermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolePermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          findMany: {
            args: Prisma.RolePermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>[]
          }
          create: {
            args: Prisma.RolePermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          createMany: {
            args: Prisma.RolePermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolePermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>[]
          }
          delete: {
            args: Prisma.RolePermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          update: {
            args: Prisma.RolePermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          deleteMany: {
            args: Prisma.RolePermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolePermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RolePermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>[]
          }
          upsert: {
            args: Prisma.RolePermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          aggregate: {
            args: Prisma.RolePermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRolePermission>
          }
          groupBy: {
            args: Prisma.RolePermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolePermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolePermissionCountArgs<ExtArgs>
            result: $Utils.Optional<RolePermissionCountAggregateOutputType> | number
          }
        }
      }
      OperatorEntity: {
        payload: Prisma.$OperatorEntityPayload<ExtArgs>
        fields: Prisma.OperatorEntityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OperatorEntityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OperatorEntityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload>
          }
          findFirst: {
            args: Prisma.OperatorEntityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OperatorEntityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload>
          }
          findMany: {
            args: Prisma.OperatorEntityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload>[]
          }
          create: {
            args: Prisma.OperatorEntityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload>
          }
          createMany: {
            args: Prisma.OperatorEntityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OperatorEntityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload>[]
          }
          delete: {
            args: Prisma.OperatorEntityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload>
          }
          update: {
            args: Prisma.OperatorEntityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload>
          }
          deleteMany: {
            args: Prisma.OperatorEntityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OperatorEntityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OperatorEntityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload>[]
          }
          upsert: {
            args: Prisma.OperatorEntityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperatorEntityPayload>
          }
          aggregate: {
            args: Prisma.OperatorEntityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOperatorEntity>
          }
          groupBy: {
            args: Prisma.OperatorEntityGroupByArgs<ExtArgs>
            result: $Utils.Optional<OperatorEntityGroupByOutputType>[]
          }
          count: {
            args: Prisma.OperatorEntityCountArgs<ExtArgs>
            result: $Utils.Optional<OperatorEntityCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      DeliveryAddress: {
        payload: Prisma.$DeliveryAddressPayload<ExtArgs>
        fields: Prisma.DeliveryAddressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeliveryAddressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeliveryAddressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload>
          }
          findFirst: {
            args: Prisma.DeliveryAddressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeliveryAddressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload>
          }
          findMany: {
            args: Prisma.DeliveryAddressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload>[]
          }
          create: {
            args: Prisma.DeliveryAddressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload>
          }
          createMany: {
            args: Prisma.DeliveryAddressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DeliveryAddressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload>[]
          }
          delete: {
            args: Prisma.DeliveryAddressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload>
          }
          update: {
            args: Prisma.DeliveryAddressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload>
          }
          deleteMany: {
            args: Prisma.DeliveryAddressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeliveryAddressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DeliveryAddressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload>[]
          }
          upsert: {
            args: Prisma.DeliveryAddressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryAddressPayload>
          }
          aggregate: {
            args: Prisma.DeliveryAddressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDeliveryAddress>
          }
          groupBy: {
            args: Prisma.DeliveryAddressGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeliveryAddressGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeliveryAddressCountArgs<ExtArgs>
            result: $Utils.Optional<DeliveryAddressCountAggregateOutputType> | number
          }
        }
      }
      PaymentGatewayServiceProvider: {
        payload: Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>
        fields: Prisma.PaymentGatewayServiceProviderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentGatewayServiceProviderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentGatewayServiceProviderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload>
          }
          findFirst: {
            args: Prisma.PaymentGatewayServiceProviderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentGatewayServiceProviderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload>
          }
          findMany: {
            args: Prisma.PaymentGatewayServiceProviderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload>[]
          }
          create: {
            args: Prisma.PaymentGatewayServiceProviderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload>
          }
          createMany: {
            args: Prisma.PaymentGatewayServiceProviderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentGatewayServiceProviderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload>[]
          }
          delete: {
            args: Prisma.PaymentGatewayServiceProviderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload>
          }
          update: {
            args: Prisma.PaymentGatewayServiceProviderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload>
          }
          deleteMany: {
            args: Prisma.PaymentGatewayServiceProviderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentGatewayServiceProviderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentGatewayServiceProviderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload>[]
          }
          upsert: {
            args: Prisma.PaymentGatewayServiceProviderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentGatewayServiceProviderPayload>
          }
          aggregate: {
            args: Prisma.PaymentGatewayServiceProviderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentGatewayServiceProvider>
          }
          groupBy: {
            args: Prisma.PaymentGatewayServiceProviderGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGatewayServiceProviderGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentGatewayServiceProviderCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentGatewayServiceProviderCountAggregateOutputType> | number
          }
        }
      }
      Device: {
        payload: Prisma.$DevicePayload<ExtArgs>
        fields: Prisma.DeviceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeviceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeviceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          findFirst: {
            args: Prisma.DeviceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeviceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          findMany: {
            args: Prisma.DeviceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>[]
          }
          create: {
            args: Prisma.DeviceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          createMany: {
            args: Prisma.DeviceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DeviceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>[]
          }
          delete: {
            args: Prisma.DeviceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          update: {
            args: Prisma.DeviceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          deleteMany: {
            args: Prisma.DeviceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeviceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DeviceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>[]
          }
          upsert: {
            args: Prisma.DeviceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          aggregate: {
            args: Prisma.DeviceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevice>
          }
          groupBy: {
            args: Prisma.DeviceGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeviceGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeviceCountArgs<ExtArgs>
            result: $Utils.Optional<DeviceCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      OTP: {
        payload: Prisma.$OTPPayload<ExtArgs>
        fields: Prisma.OTPFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OTPFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OTPFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          findFirst: {
            args: Prisma.OTPFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OTPFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          findMany: {
            args: Prisma.OTPFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>[]
          }
          create: {
            args: Prisma.OTPCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          createMany: {
            args: Prisma.OTPCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OTPCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>[]
          }
          delete: {
            args: Prisma.OTPDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          update: {
            args: Prisma.OTPUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          deleteMany: {
            args: Prisma.OTPDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OTPUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OTPUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>[]
          }
          upsert: {
            args: Prisma.OTPUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          aggregate: {
            args: Prisma.OTPAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOTP>
          }
          groupBy: {
            args: Prisma.OTPGroupByArgs<ExtArgs>
            result: $Utils.Optional<OTPGroupByOutputType>[]
          }
          count: {
            args: Prisma.OTPCountArgs<ExtArgs>
            result: $Utils.Optional<OTPCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      ProductImage: {
        payload: Prisma.$ProductImagePayload<ExtArgs>
        fields: Prisma.ProductImageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductImageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductImageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          findFirst: {
            args: Prisma.ProductImageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductImageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          findMany: {
            args: Prisma.ProductImageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          create: {
            args: Prisma.ProductImageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          createMany: {
            args: Prisma.ProductImageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductImageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          delete: {
            args: Prisma.ProductImageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          update: {
            args: Prisma.ProductImageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          deleteMany: {
            args: Prisma.ProductImageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductImageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductImageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          upsert: {
            args: Prisma.ProductImageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          aggregate: {
            args: Prisma.ProductImageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductImage>
          }
          groupBy: {
            args: Prisma.ProductImageGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductImageGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductImageCountArgs<ExtArgs>
            result: $Utils.Optional<ProductImageCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Location: {
        payload: Prisma.$LocationPayload<ExtArgs>
        fields: Prisma.LocationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LocationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LocationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findFirst: {
            args: Prisma.LocationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LocationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findMany: {
            args: Prisma.LocationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          create: {
            args: Prisma.LocationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          createMany: {
            args: Prisma.LocationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LocationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          delete: {
            args: Prisma.LocationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          update: {
            args: Prisma.LocationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          deleteMany: {
            args: Prisma.LocationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LocationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LocationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          upsert: {
            args: Prisma.LocationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          aggregate: {
            args: Prisma.LocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLocation>
          }
          groupBy: {
            args: Prisma.LocationGroupByArgs<ExtArgs>
            result: $Utils.Optional<LocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.LocationCountArgs<ExtArgs>
            result: $Utils.Optional<LocationCountAggregateOutputType> | number
          }
        }
      }
      ProductAttribute: {
        payload: Prisma.$ProductAttributePayload<ExtArgs>
        fields: Prisma.ProductAttributeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductAttributeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductAttributeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          findFirst: {
            args: Prisma.ProductAttributeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductAttributeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          findMany: {
            args: Prisma.ProductAttributeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>[]
          }
          create: {
            args: Prisma.ProductAttributeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          createMany: {
            args: Prisma.ProductAttributeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductAttributeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>[]
          }
          delete: {
            args: Prisma.ProductAttributeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          update: {
            args: Prisma.ProductAttributeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          deleteMany: {
            args: Prisma.ProductAttributeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductAttributeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductAttributeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>[]
          }
          upsert: {
            args: Prisma.ProductAttributeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          aggregate: {
            args: Prisma.ProductAttributeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductAttribute>
          }
          groupBy: {
            args: Prisma.ProductAttributeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductAttributeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductAttributeCountArgs<ExtArgs>
            result: $Utils.Optional<ProductAttributeCountAggregateOutputType> | number
          }
        }
      }
      ProductTranslation: {
        payload: Prisma.$ProductTranslationPayload<ExtArgs>
        fields: Prisma.ProductTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          findFirst: {
            args: Prisma.ProductTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          findMany: {
            args: Prisma.ProductTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>[]
          }
          create: {
            args: Prisma.ProductTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          createMany: {
            args: Prisma.ProductTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>[]
          }
          delete: {
            args: Prisma.ProductTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          update: {
            args: Prisma.ProductTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          deleteMany: {
            args: Prisma.ProductTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>[]
          }
          upsert: {
            args: Prisma.ProductTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          aggregate: {
            args: Prisma.ProductTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductTranslation>
          }
          groupBy: {
            args: Prisma.ProductTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<ProductTranslationCountAggregateOutputType> | number
          }
        }
      }
      ProductDeliveryOption: {
        payload: Prisma.$ProductDeliveryOptionPayload<ExtArgs>
        fields: Prisma.ProductDeliveryOptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductDeliveryOptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductDeliveryOptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload>
          }
          findFirst: {
            args: Prisma.ProductDeliveryOptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductDeliveryOptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload>
          }
          findMany: {
            args: Prisma.ProductDeliveryOptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload>[]
          }
          create: {
            args: Prisma.ProductDeliveryOptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload>
          }
          createMany: {
            args: Prisma.ProductDeliveryOptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductDeliveryOptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload>[]
          }
          delete: {
            args: Prisma.ProductDeliveryOptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload>
          }
          update: {
            args: Prisma.ProductDeliveryOptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeliveryOptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductDeliveryOptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductDeliveryOptionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload>[]
          }
          upsert: {
            args: Prisma.ProductDeliveryOptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductDeliveryOptionPayload>
          }
          aggregate: {
            args: Prisma.ProductDeliveryOptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductDeliveryOption>
          }
          groupBy: {
            args: Prisma.ProductDeliveryOptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductDeliveryOptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductDeliveryOptionCountArgs<ExtArgs>
            result: $Utils.Optional<ProductDeliveryOptionCountAggregateOutputType> | number
          }
        }
      }
      CategoryTranslation: {
        payload: Prisma.$CategoryTranslationPayload<ExtArgs>
        fields: Prisma.CategoryTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          findFirst: {
            args: Prisma.CategoryTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          findMany: {
            args: Prisma.CategoryTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>[]
          }
          create: {
            args: Prisma.CategoryTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          createMany: {
            args: Prisma.CategoryTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>[]
          }
          delete: {
            args: Prisma.CategoryTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          update: {
            args: Prisma.CategoryTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          deleteMany: {
            args: Prisma.CategoryTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>[]
          }
          upsert: {
            args: Prisma.CategoryTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          aggregate: {
            args: Prisma.CategoryTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoryTranslation>
          }
          groupBy: {
            args: Prisma.CategoryTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryTranslationCountAggregateOutputType> | number
          }
        }
      }
      SellerKyc: {
        payload: Prisma.$SellerKycPayload<ExtArgs>
        fields: Prisma.SellerKycFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SellerKycFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SellerKycFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload>
          }
          findFirst: {
            args: Prisma.SellerKycFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SellerKycFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload>
          }
          findMany: {
            args: Prisma.SellerKycFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload>[]
          }
          create: {
            args: Prisma.SellerKycCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload>
          }
          createMany: {
            args: Prisma.SellerKycCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SellerKycCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload>[]
          }
          delete: {
            args: Prisma.SellerKycDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload>
          }
          update: {
            args: Prisma.SellerKycUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload>
          }
          deleteMany: {
            args: Prisma.SellerKycDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SellerKycUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SellerKycUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload>[]
          }
          upsert: {
            args: Prisma.SellerKycUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerKycPayload>
          }
          aggregate: {
            args: Prisma.SellerKycAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSellerKyc>
          }
          groupBy: {
            args: Prisma.SellerKycGroupByArgs<ExtArgs>
            result: $Utils.Optional<SellerKycGroupByOutputType>[]
          }
          count: {
            args: Prisma.SellerKycCountArgs<ExtArgs>
            result: $Utils.Optional<SellerKycCountAggregateOutputType> | number
          }
        }
      }
      BankAccount: {
        payload: Prisma.$BankAccountPayload<ExtArgs>
        fields: Prisma.BankAccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BankAccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BankAccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          findFirst: {
            args: Prisma.BankAccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BankAccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          findMany: {
            args: Prisma.BankAccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>[]
          }
          create: {
            args: Prisma.BankAccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          createMany: {
            args: Prisma.BankAccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BankAccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>[]
          }
          delete: {
            args: Prisma.BankAccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          update: {
            args: Prisma.BankAccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          deleteMany: {
            args: Prisma.BankAccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BankAccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BankAccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>[]
          }
          upsert: {
            args: Prisma.BankAccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          aggregate: {
            args: Prisma.BankAccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBankAccount>
          }
          groupBy: {
            args: Prisma.BankAccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<BankAccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.BankAccountCountArgs<ExtArgs>
            result: $Utils.Optional<BankAccountCountAggregateOutputType> | number
          }
        }
      }
      Wallet: {
        payload: Prisma.$WalletPayload<ExtArgs>
        fields: Prisma.WalletFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WalletFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WalletFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          findFirst: {
            args: Prisma.WalletFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WalletFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          findMany: {
            args: Prisma.WalletFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>[]
          }
          create: {
            args: Prisma.WalletCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          createMany: {
            args: Prisma.WalletCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WalletCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>[]
          }
          delete: {
            args: Prisma.WalletDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          update: {
            args: Prisma.WalletUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          deleteMany: {
            args: Prisma.WalletDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WalletUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.WalletUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>[]
          }
          upsert: {
            args: Prisma.WalletUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          aggregate: {
            args: Prisma.WalletAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWallet>
          }
          groupBy: {
            args: Prisma.WalletGroupByArgs<ExtArgs>
            result: $Utils.Optional<WalletGroupByOutputType>[]
          }
          count: {
            args: Prisma.WalletCountArgs<ExtArgs>
            result: $Utils.Optional<WalletCountAggregateOutputType> | number
          }
        }
      }
      PaymentMethod: {
        payload: Prisma.$PaymentMethodPayload<ExtArgs>
        fields: Prisma.PaymentMethodFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentMethodFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentMethodFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          findFirst: {
            args: Prisma.PaymentMethodFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentMethodFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          findMany: {
            args: Prisma.PaymentMethodFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>[]
          }
          create: {
            args: Prisma.PaymentMethodCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          createMany: {
            args: Prisma.PaymentMethodCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentMethodCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>[]
          }
          delete: {
            args: Prisma.PaymentMethodDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          update: {
            args: Prisma.PaymentMethodUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          deleteMany: {
            args: Prisma.PaymentMethodDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentMethodUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentMethodUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>[]
          }
          upsert: {
            args: Prisma.PaymentMethodUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          aggregate: {
            args: Prisma.PaymentMethodAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentMethod>
          }
          groupBy: {
            args: Prisma.PaymentMethodGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentMethodGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentMethodCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentMethodCountAggregateOutputType> | number
          }
        }
      }
      Settlement: {
        payload: Prisma.$SettlementPayload<ExtArgs>
        fields: Prisma.SettlementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SettlementFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SettlementFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload>
          }
          findFirst: {
            args: Prisma.SettlementFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SettlementFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload>
          }
          findMany: {
            args: Prisma.SettlementFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload>[]
          }
          create: {
            args: Prisma.SettlementCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload>
          }
          createMany: {
            args: Prisma.SettlementCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SettlementCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload>[]
          }
          delete: {
            args: Prisma.SettlementDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload>
          }
          update: {
            args: Prisma.SettlementUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload>
          }
          deleteMany: {
            args: Prisma.SettlementDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SettlementUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SettlementUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload>[]
          }
          upsert: {
            args: Prisma.SettlementUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettlementPayload>
          }
          aggregate: {
            args: Prisma.SettlementAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSettlement>
          }
          groupBy: {
            args: Prisma.SettlementGroupByArgs<ExtArgs>
            result: $Utils.Optional<SettlementGroupByOutputType>[]
          }
          count: {
            args: Prisma.SettlementCountArgs<ExtArgs>
            result: $Utils.Optional<SettlementCountAggregateOutputType> | number
          }
        }
      }
      ProductView: {
        payload: Prisma.$ProductViewPayload<ExtArgs>
        fields: Prisma.ProductViewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductViewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductViewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload>
          }
          findFirst: {
            args: Prisma.ProductViewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductViewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload>
          }
          findMany: {
            args: Prisma.ProductViewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload>[]
          }
          create: {
            args: Prisma.ProductViewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload>
          }
          createMany: {
            args: Prisma.ProductViewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductViewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload>[]
          }
          delete: {
            args: Prisma.ProductViewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload>
          }
          update: {
            args: Prisma.ProductViewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload>
          }
          deleteMany: {
            args: Prisma.ProductViewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductViewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductViewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload>[]
          }
          upsert: {
            args: Prisma.ProductViewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductViewPayload>
          }
          aggregate: {
            args: Prisma.ProductViewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductView>
          }
          groupBy: {
            args: Prisma.ProductViewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductViewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductViewCountArgs<ExtArgs>
            result: $Utils.Optional<ProductViewCountAggregateOutputType> | number
          }
        }
      }
      ProductOrderInterest: {
        payload: Prisma.$ProductOrderInterestPayload<ExtArgs>
        fields: Prisma.ProductOrderInterestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductOrderInterestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductOrderInterestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload>
          }
          findFirst: {
            args: Prisma.ProductOrderInterestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductOrderInterestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload>
          }
          findMany: {
            args: Prisma.ProductOrderInterestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload>[]
          }
          create: {
            args: Prisma.ProductOrderInterestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload>
          }
          createMany: {
            args: Prisma.ProductOrderInterestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductOrderInterestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload>[]
          }
          delete: {
            args: Prisma.ProductOrderInterestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload>
          }
          update: {
            args: Prisma.ProductOrderInterestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload>
          }
          deleteMany: {
            args: Prisma.ProductOrderInterestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductOrderInterestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductOrderInterestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload>[]
          }
          upsert: {
            args: Prisma.ProductOrderInterestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOrderInterestPayload>
          }
          aggregate: {
            args: Prisma.ProductOrderInterestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductOrderInterest>
          }
          groupBy: {
            args: Prisma.ProductOrderInterestGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductOrderInterestGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductOrderInterestCountArgs<ExtArgs>
            result: $Utils.Optional<ProductOrderInterestCountAggregateOutputType> | number
          }
        }
      }
      OrderItem: {
        payload: Prisma.$OrderItemPayload<ExtArgs>
        fields: Prisma.OrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findFirst: {
            args: Prisma.OrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findMany: {
            args: Prisma.OrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          create: {
            args: Prisma.OrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          createMany: {
            args: Prisma.OrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          delete: {
            args: Prisma.OrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          update: {
            args: Prisma.OrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          upsert: {
            args: Prisma.OrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          aggregate: {
            args: Prisma.OrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItem>
          }
          groupBy: {
            args: Prisma.OrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemCountAggregateOutputType> | number
          }
        }
      }
      ExternalTransaction: {
        payload: Prisma.$ExternalTransactionPayload<ExtArgs>
        fields: Prisma.ExternalTransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ExternalTransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ExternalTransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload>
          }
          findFirst: {
            args: Prisma.ExternalTransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ExternalTransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload>
          }
          findMany: {
            args: Prisma.ExternalTransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload>[]
          }
          create: {
            args: Prisma.ExternalTransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload>
          }
          createMany: {
            args: Prisma.ExternalTransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ExternalTransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload>[]
          }
          delete: {
            args: Prisma.ExternalTransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload>
          }
          update: {
            args: Prisma.ExternalTransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload>
          }
          deleteMany: {
            args: Prisma.ExternalTransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ExternalTransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ExternalTransactionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload>[]
          }
          upsert: {
            args: Prisma.ExternalTransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalTransactionPayload>
          }
          aggregate: {
            args: Prisma.ExternalTransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateExternalTransaction>
          }
          groupBy: {
            args: Prisma.ExternalTransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ExternalTransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ExternalTransactionCountArgs<ExtArgs>
            result: $Utils.Optional<ExternalTransactionCountAggregateOutputType> | number
          }
        }
      }
      UCP: {
        payload: Prisma.$UCPPayload<ExtArgs>
        fields: Prisma.UCPFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UCPFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UCPFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload>
          }
          findFirst: {
            args: Prisma.UCPFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UCPFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload>
          }
          findMany: {
            args: Prisma.UCPFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload>[]
          }
          create: {
            args: Prisma.UCPCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload>
          }
          createMany: {
            args: Prisma.UCPCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UCPCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload>[]
          }
          delete: {
            args: Prisma.UCPDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload>
          }
          update: {
            args: Prisma.UCPUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload>
          }
          deleteMany: {
            args: Prisma.UCPDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UCPUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UCPUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload>[]
          }
          upsert: {
            args: Prisma.UCPUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UCPPayload>
          }
          aggregate: {
            args: Prisma.UCPAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUCP>
          }
          groupBy: {
            args: Prisma.UCPGroupByArgs<ExtArgs>
            result: $Utils.Optional<UCPGroupByOutputType>[]
          }
          count: {
            args: Prisma.UCPCountArgs<ExtArgs>
            result: $Utils.Optional<UCPCountAggregateOutputType> | number
          }
        }
      }
      RiderApplication: {
        payload: Prisma.$RiderApplicationPayload<ExtArgs>
        fields: Prisma.RiderApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RiderApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RiderApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload>
          }
          findFirst: {
            args: Prisma.RiderApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RiderApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload>
          }
          findMany: {
            args: Prisma.RiderApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload>[]
          }
          create: {
            args: Prisma.RiderApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload>
          }
          createMany: {
            args: Prisma.RiderApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RiderApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload>[]
          }
          delete: {
            args: Prisma.RiderApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload>
          }
          update: {
            args: Prisma.RiderApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload>
          }
          deleteMany: {
            args: Prisma.RiderApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RiderApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RiderApplicationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload>[]
          }
          upsert: {
            args: Prisma.RiderApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderApplicationPayload>
          }
          aggregate: {
            args: Prisma.RiderApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRiderApplication>
          }
          groupBy: {
            args: Prisma.RiderApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<RiderApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.RiderApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<RiderApplicationCountAggregateOutputType> | number
          }
        }
      }
      RiderDocument: {
        payload: Prisma.$RiderDocumentPayload<ExtArgs>
        fields: Prisma.RiderDocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RiderDocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RiderDocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload>
          }
          findFirst: {
            args: Prisma.RiderDocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RiderDocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload>
          }
          findMany: {
            args: Prisma.RiderDocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload>[]
          }
          create: {
            args: Prisma.RiderDocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload>
          }
          createMany: {
            args: Prisma.RiderDocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RiderDocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload>[]
          }
          delete: {
            args: Prisma.RiderDocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload>
          }
          update: {
            args: Prisma.RiderDocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload>
          }
          deleteMany: {
            args: Prisma.RiderDocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RiderDocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RiderDocumentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload>[]
          }
          upsert: {
            args: Prisma.RiderDocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderDocumentPayload>
          }
          aggregate: {
            args: Prisma.RiderDocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRiderDocument>
          }
          groupBy: {
            args: Prisma.RiderDocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<RiderDocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.RiderDocumentCountArgs<ExtArgs>
            result: $Utils.Optional<RiderDocumentCountAggregateOutputType> | number
          }
        }
      }
      Driver: {
        payload: Prisma.$DriverPayload<ExtArgs>
        fields: Prisma.DriverFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DriverFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DriverFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          findFirst: {
            args: Prisma.DriverFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DriverFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          findMany: {
            args: Prisma.DriverFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>[]
          }
          create: {
            args: Prisma.DriverCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          createMany: {
            args: Prisma.DriverCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DriverCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>[]
          }
          delete: {
            args: Prisma.DriverDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          update: {
            args: Prisma.DriverUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          deleteMany: {
            args: Prisma.DriverDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DriverUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DriverUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>[]
          }
          upsert: {
            args: Prisma.DriverUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          aggregate: {
            args: Prisma.DriverAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDriver>
          }
          groupBy: {
            args: Prisma.DriverGroupByArgs<ExtArgs>
            result: $Utils.Optional<DriverGroupByOutputType>[]
          }
          count: {
            args: Prisma.DriverCountArgs<ExtArgs>
            result: $Utils.Optional<DriverCountAggregateOutputType> | number
          }
        }
      }
      DriverLocation: {
        payload: Prisma.$DriverLocationPayload<ExtArgs>
        fields: Prisma.DriverLocationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DriverLocationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DriverLocationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload>
          }
          findFirst: {
            args: Prisma.DriverLocationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DriverLocationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload>
          }
          findMany: {
            args: Prisma.DriverLocationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload>[]
          }
          create: {
            args: Prisma.DriverLocationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload>
          }
          createMany: {
            args: Prisma.DriverLocationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DriverLocationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload>[]
          }
          delete: {
            args: Prisma.DriverLocationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload>
          }
          update: {
            args: Prisma.DriverLocationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload>
          }
          deleteMany: {
            args: Prisma.DriverLocationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DriverLocationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DriverLocationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload>[]
          }
          upsert: {
            args: Prisma.DriverLocationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverLocationPayload>
          }
          aggregate: {
            args: Prisma.DriverLocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDriverLocation>
          }
          groupBy: {
            args: Prisma.DriverLocationGroupByArgs<ExtArgs>
            result: $Utils.Optional<DriverLocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.DriverLocationCountArgs<ExtArgs>
            result: $Utils.Optional<DriverLocationCountAggregateOutputType> | number
          }
        }
      }
      RideRequest: {
        payload: Prisma.$RideRequestPayload<ExtArgs>
        fields: Prisma.RideRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RideRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RideRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload>
          }
          findFirst: {
            args: Prisma.RideRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RideRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload>
          }
          findMany: {
            args: Prisma.RideRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload>[]
          }
          create: {
            args: Prisma.RideRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload>
          }
          createMany: {
            args: Prisma.RideRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RideRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload>[]
          }
          delete: {
            args: Prisma.RideRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload>
          }
          update: {
            args: Prisma.RideRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload>
          }
          deleteMany: {
            args: Prisma.RideRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RideRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RideRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload>[]
          }
          upsert: {
            args: Prisma.RideRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideRequestPayload>
          }
          aggregate: {
            args: Prisma.RideRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRideRequest>
          }
          groupBy: {
            args: Prisma.RideRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<RideRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.RideRequestCountArgs<ExtArgs>
            result: $Utils.Optional<RideRequestCountAggregateOutputType> | number
          }
        }
      }
      Ride: {
        payload: Prisma.$RidePayload<ExtArgs>
        fields: Prisma.RideFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RideFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RideFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload>
          }
          findFirst: {
            args: Prisma.RideFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RideFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload>
          }
          findMany: {
            args: Prisma.RideFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload>[]
          }
          create: {
            args: Prisma.RideCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload>
          }
          createMany: {
            args: Prisma.RideCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RideCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload>[]
          }
          delete: {
            args: Prisma.RideDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload>
          }
          update: {
            args: Prisma.RideUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload>
          }
          deleteMany: {
            args: Prisma.RideDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RideUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RideUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload>[]
          }
          upsert: {
            args: Prisma.RideUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RidePayload>
          }
          aggregate: {
            args: Prisma.RideAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRide>
          }
          groupBy: {
            args: Prisma.RideGroupByArgs<ExtArgs>
            result: $Utils.Optional<RideGroupByOutputType>[]
          }
          count: {
            args: Prisma.RideCountArgs<ExtArgs>
            result: $Utils.Optional<RideCountAggregateOutputType> | number
          }
        }
      }
      RideToken: {
        payload: Prisma.$RideTokenPayload<ExtArgs>
        fields: Prisma.RideTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RideTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RideTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload>
          }
          findFirst: {
            args: Prisma.RideTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RideTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload>
          }
          findMany: {
            args: Prisma.RideTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload>[]
          }
          create: {
            args: Prisma.RideTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload>
          }
          createMany: {
            args: Prisma.RideTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RideTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload>[]
          }
          delete: {
            args: Prisma.RideTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload>
          }
          update: {
            args: Prisma.RideTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload>
          }
          deleteMany: {
            args: Prisma.RideTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RideTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RideTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload>[]
          }
          upsert: {
            args: Prisma.RideTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideTokenPayload>
          }
          aggregate: {
            args: Prisma.RideTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRideToken>
          }
          groupBy: {
            args: Prisma.RideTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RideTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RideTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RideTokenCountAggregateOutputType> | number
          }
        }
      }
      RideLocation: {
        payload: Prisma.$RideLocationPayload<ExtArgs>
        fields: Prisma.RideLocationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RideLocationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RideLocationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload>
          }
          findFirst: {
            args: Prisma.RideLocationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RideLocationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload>
          }
          findMany: {
            args: Prisma.RideLocationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload>[]
          }
          create: {
            args: Prisma.RideLocationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload>
          }
          createMany: {
            args: Prisma.RideLocationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RideLocationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload>[]
          }
          delete: {
            args: Prisma.RideLocationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload>
          }
          update: {
            args: Prisma.RideLocationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload>
          }
          deleteMany: {
            args: Prisma.RideLocationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RideLocationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RideLocationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload>[]
          }
          upsert: {
            args: Prisma.RideLocationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideLocationPayload>
          }
          aggregate: {
            args: Prisma.RideLocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRideLocation>
          }
          groupBy: {
            args: Prisma.RideLocationGroupByArgs<ExtArgs>
            result: $Utils.Optional<RideLocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.RideLocationCountArgs<ExtArgs>
            result: $Utils.Optional<RideLocationCountAggregateOutputType> | number
          }
        }
      }
      DriverEarning: {
        payload: Prisma.$DriverEarningPayload<ExtArgs>
        fields: Prisma.DriverEarningFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DriverEarningFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DriverEarningFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload>
          }
          findFirst: {
            args: Prisma.DriverEarningFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DriverEarningFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload>
          }
          findMany: {
            args: Prisma.DriverEarningFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload>[]
          }
          create: {
            args: Prisma.DriverEarningCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload>
          }
          createMany: {
            args: Prisma.DriverEarningCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DriverEarningCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload>[]
          }
          delete: {
            args: Prisma.DriverEarningDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload>
          }
          update: {
            args: Prisma.DriverEarningUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload>
          }
          deleteMany: {
            args: Prisma.DriverEarningDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DriverEarningUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DriverEarningUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload>[]
          }
          upsert: {
            args: Prisma.DriverEarningUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverEarningPayload>
          }
          aggregate: {
            args: Prisma.DriverEarningAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDriverEarning>
          }
          groupBy: {
            args: Prisma.DriverEarningGroupByArgs<ExtArgs>
            result: $Utils.Optional<DriverEarningGroupByOutputType>[]
          }
          count: {
            args: Prisma.DriverEarningCountArgs<ExtArgs>
            result: $Utils.Optional<DriverEarningCountAggregateOutputType> | number
          }
        }
      }
      RideService: {
        payload: Prisma.$RideServicePayload<ExtArgs>
        fields: Prisma.RideServiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RideServiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RideServiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload>
          }
          findFirst: {
            args: Prisma.RideServiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RideServiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload>
          }
          findMany: {
            args: Prisma.RideServiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload>[]
          }
          create: {
            args: Prisma.RideServiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload>
          }
          createMany: {
            args: Prisma.RideServiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RideServiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload>[]
          }
          delete: {
            args: Prisma.RideServiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload>
          }
          update: {
            args: Prisma.RideServiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload>
          }
          deleteMany: {
            args: Prisma.RideServiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RideServiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RideServiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload>[]
          }
          upsert: {
            args: Prisma.RideServiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RideServicePayload>
          }
          aggregate: {
            args: Prisma.RideServiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRideService>
          }
          groupBy: {
            args: Prisma.RideServiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<RideServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.RideServiceCountArgs<ExtArgs>
            result: $Utils.Optional<RideServiceCountAggregateOutputType> | number
          }
        }
      }
      orders: {
        payload: Prisma.$ordersPayload<ExtArgs>
        fields: Prisma.ordersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ordersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ordersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findFirst: {
            args: Prisma.ordersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ordersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findMany: {
            args: Prisma.ordersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          create: {
            args: Prisma.ordersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          createMany: {
            args: Prisma.ordersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ordersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          delete: {
            args: Prisma.ordersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          update: {
            args: Prisma.ordersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          deleteMany: {
            args: Prisma.ordersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ordersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ordersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          upsert: {
            args: Prisma.ordersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          aggregate: {
            args: Prisma.OrdersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrders>
          }
          groupBy: {
            args: Prisma.ordersGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdersGroupByOutputType>[]
          }
          count: {
            args: Prisma.ordersCountArgs<ExtArgs>
            result: $Utils.Optional<OrdersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    admin?: AdminOmit
    role?: RoleOmit
    rolePermission?: RolePermissionOmit
    operatorEntity?: OperatorEntityOmit
    user?: UserOmit
    deliveryAddress?: DeliveryAddressOmit
    paymentGatewayServiceProvider?: PaymentGatewayServiceProviderOmit
    device?: DeviceOmit
    session?: SessionOmit
    oTP?: OTPOmit
    product?: ProductOmit
    productImage?: ProductImageOmit
    category?: CategoryOmit
    location?: LocationOmit
    productAttribute?: ProductAttributeOmit
    productTranslation?: ProductTranslationOmit
    productDeliveryOption?: ProductDeliveryOptionOmit
    categoryTranslation?: CategoryTranslationOmit
    sellerKyc?: SellerKycOmit
    bankAccount?: BankAccountOmit
    wallet?: WalletOmit
    paymentMethod?: PaymentMethodOmit
    settlement?: SettlementOmit
    productView?: ProductViewOmit
    productOrderInterest?: ProductOrderInterestOmit
    orderItem?: OrderItemOmit
    externalTransaction?: ExternalTransactionOmit
    uCP?: UCPOmit
    riderApplication?: RiderApplicationOmit
    riderDocument?: RiderDocumentOmit
    driver?: DriverOmit
    driverLocation?: DriverLocationOmit
    rideRequest?: RideRequestOmit
    ride?: RideOmit
    rideToken?: RideTokenOmit
    rideLocation?: RideLocationOmit
    driverEarning?: DriverEarningOmit
    rideService?: RideServiceOmit
    orders?: ordersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    operatorEntities: number
    permissions: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operatorEntities?: boolean | RoleCountOutputTypeCountOperatorEntitiesArgs
    permissions?: boolean | RoleCountOutputTypeCountPermissionsArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountOperatorEntitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OperatorEntityWhereInput
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolePermissionWhereInput
  }


  /**
   * Count Type OperatorEntityCountOutputType
   */

  export type OperatorEntityCountOutputType = {
    admins: number
  }

  export type OperatorEntityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admins?: boolean | OperatorEntityCountOutputTypeCountAdminsArgs
  }

  // Custom InputTypes
  /**
   * OperatorEntityCountOutputType without action
   */
  export type OperatorEntityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntityCountOutputType
     */
    select?: OperatorEntityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OperatorEntityCountOutputType without action
   */
  export type OperatorEntityCountOutputTypeCountAdminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    deliveryAddresses: number
    devices: number
    customerTransactions: number
    sellerTransactions: number
    paymentMethods: number
    products: number
    sessions: number
    settlements: number
    orders_orders_sellerIdToUser: number
    orders_orders_userIdToUser: number
    productOrderInterests: number
    productViews: number
    customerRideRequests: number
    riderApplications: number
    customerRides: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryAddresses?: boolean | UserCountOutputTypeCountDeliveryAddressesArgs
    devices?: boolean | UserCountOutputTypeCountDevicesArgs
    customerTransactions?: boolean | UserCountOutputTypeCountCustomerTransactionsArgs
    sellerTransactions?: boolean | UserCountOutputTypeCountSellerTransactionsArgs
    paymentMethods?: boolean | UserCountOutputTypeCountPaymentMethodsArgs
    products?: boolean | UserCountOutputTypeCountProductsArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    settlements?: boolean | UserCountOutputTypeCountSettlementsArgs
    orders_orders_sellerIdToUser?: boolean | UserCountOutputTypeCountOrders_orders_sellerIdToUserArgs
    orders_orders_userIdToUser?: boolean | UserCountOutputTypeCountOrders_orders_userIdToUserArgs
    productOrderInterests?: boolean | UserCountOutputTypeCountProductOrderInterestsArgs
    productViews?: boolean | UserCountOutputTypeCountProductViewsArgs
    customerRideRequests?: boolean | UserCountOutputTypeCountCustomerRideRequestsArgs
    riderApplications?: boolean | UserCountOutputTypeCountRiderApplicationsArgs
    customerRides?: boolean | UserCountOutputTypeCountCustomerRidesArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeliveryAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryAddressWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDevicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeviceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomerTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExternalTransactionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSellerTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExternalTransactionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPaymentMethodsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentMethodWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSettlementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SettlementWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrders_orders_sellerIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrders_orders_userIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProductOrderInterestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductOrderInterestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProductViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductViewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomerRideRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRiderApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiderApplicationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomerRidesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideWhereInput
  }


  /**
   * Count Type DeviceCountOutputType
   */

  export type DeviceCountOutputType = {
    sessions: number
  }

  export type DeviceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | DeviceCountOutputTypeCountSessionsArgs
  }

  // Custom InputTypes
  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceCountOutputType
     */
    select?: DeviceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    attributes: number
    deliveryOptions: number
    images: number
    translations: number
    orderItems: number
    productOrderInterests: number
    productViews: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attributes?: boolean | ProductCountOutputTypeCountAttributesArgs
    deliveryOptions?: boolean | ProductCountOutputTypeCountDeliveryOptionsArgs
    images?: boolean | ProductCountOutputTypeCountImagesArgs
    translations?: boolean | ProductCountOutputTypeCountTranslationsArgs
    orderItems?: boolean | ProductCountOutputTypeCountOrderItemsArgs
    productOrderInterests?: boolean | ProductCountOutputTypeCountProductOrderInterestsArgs
    productViews?: boolean | ProductCountOutputTypeCountProductViewsArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountAttributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductAttributeWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountDeliveryOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductDeliveryOptionWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductImageWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountProductOrderInterestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductOrderInterestWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountProductViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductViewWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    children: number
    translations: number
    products: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    children?: boolean | CategoryCountOutputTypeCountChildrenArgs
    translations?: boolean | CategoryCountOutputTypeCountTranslationsArgs
    products?: boolean | CategoryCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type LocationCountOutputType
   */

  export type LocationCountOutputType = {
    products: number
  }

  export type LocationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | LocationCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationCountOutputType
     */
    select?: LocationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type SellerKycCountOutputType
   */

  export type SellerKycCountOutputType = {
    bankAccounts: number
    wallets: number
  }

  export type SellerKycCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bankAccounts?: boolean | SellerKycCountOutputTypeCountBankAccountsArgs
    wallets?: boolean | SellerKycCountOutputTypeCountWalletsArgs
  }

  // Custom InputTypes
  /**
   * SellerKycCountOutputType without action
   */
  export type SellerKycCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKycCountOutputType
     */
    select?: SellerKycCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SellerKycCountOutputType without action
   */
  export type SellerKycCountOutputTypeCountBankAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BankAccountWhereInput
  }

  /**
   * SellerKycCountOutputType without action
   */
  export type SellerKycCountOutputTypeCountWalletsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WalletWhereInput
  }


  /**
   * Count Type BankAccountCountOutputType
   */

  export type BankAccountCountOutputType = {
    settlements: number
  }

  export type BankAccountCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    settlements?: boolean | BankAccountCountOutputTypeCountSettlementsArgs
  }

  // Custom InputTypes
  /**
   * BankAccountCountOutputType without action
   */
  export type BankAccountCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccountCountOutputType
     */
    select?: BankAccountCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BankAccountCountOutputType without action
   */
  export type BankAccountCountOutputTypeCountSettlementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SettlementWhereInput
  }


  /**
   * Count Type WalletCountOutputType
   */

  export type WalletCountOutputType = {
    settlements: number
  }

  export type WalletCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    settlements?: boolean | WalletCountOutputTypeCountSettlementsArgs
  }

  // Custom InputTypes
  /**
   * WalletCountOutputType without action
   */
  export type WalletCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WalletCountOutputType
     */
    select?: WalletCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * WalletCountOutputType without action
   */
  export type WalletCountOutputTypeCountSettlementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SettlementWhereInput
  }


  /**
   * Count Type PaymentMethodCountOutputType
   */

  export type PaymentMethodCountOutputType = {
    externalTransactions: number
  }

  export type PaymentMethodCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    externalTransactions?: boolean | PaymentMethodCountOutputTypeCountExternalTransactionsArgs
  }

  // Custom InputTypes
  /**
   * PaymentMethodCountOutputType without action
   */
  export type PaymentMethodCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethodCountOutputType
     */
    select?: PaymentMethodCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaymentMethodCountOutputType without action
   */
  export type PaymentMethodCountOutputTypeCountExternalTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExternalTransactionWhereInput
  }


  /**
   * Count Type RiderApplicationCountOutputType
   */

  export type RiderApplicationCountOutputType = {
    documents: number
  }

  export type RiderApplicationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | RiderApplicationCountOutputTypeCountDocumentsArgs
  }

  // Custom InputTypes
  /**
   * RiderApplicationCountOutputType without action
   */
  export type RiderApplicationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplicationCountOutputType
     */
    select?: RiderApplicationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RiderApplicationCountOutputType without action
   */
  export type RiderApplicationCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiderDocumentWhereInput
  }


  /**
   * Count Type DriverCountOutputType
   */

  export type DriverCountOutputType = {
    earnings: number
    locationHistory: number
    rideRequests: number
    rides: number
  }

  export type DriverCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    earnings?: boolean | DriverCountOutputTypeCountEarningsArgs
    locationHistory?: boolean | DriverCountOutputTypeCountLocationHistoryArgs
    rideRequests?: boolean | DriverCountOutputTypeCountRideRequestsArgs
    rides?: boolean | DriverCountOutputTypeCountRidesArgs
  }

  // Custom InputTypes
  /**
   * DriverCountOutputType without action
   */
  export type DriverCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverCountOutputType
     */
    select?: DriverCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DriverCountOutputType without action
   */
  export type DriverCountOutputTypeCountEarningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DriverEarningWhereInput
  }

  /**
   * DriverCountOutputType without action
   */
  export type DriverCountOutputTypeCountLocationHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DriverLocationWhereInput
  }

  /**
   * DriverCountOutputType without action
   */
  export type DriverCountOutputTypeCountRideRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideRequestWhereInput
  }

  /**
   * DriverCountOutputType without action
   */
  export type DriverCountOutputTypeCountRidesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideWhereInput
  }


  /**
   * Count Type RideRequestCountOutputType
   */

  export type RideRequestCountOutputType = {
    externalTransactions: number
  }

  export type RideRequestCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    externalTransactions?: boolean | RideRequestCountOutputTypeCountExternalTransactionsArgs
  }

  // Custom InputTypes
  /**
   * RideRequestCountOutputType without action
   */
  export type RideRequestCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequestCountOutputType
     */
    select?: RideRequestCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RideRequestCountOutputType without action
   */
  export type RideRequestCountOutputTypeCountExternalTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExternalTransactionWhereInput
  }


  /**
   * Count Type RideCountOutputType
   */

  export type RideCountOutputType = {
    locationUpdates: number
  }

  export type RideCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    locationUpdates?: boolean | RideCountOutputTypeCountLocationUpdatesArgs
  }

  // Custom InputTypes
  /**
   * RideCountOutputType without action
   */
  export type RideCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideCountOutputType
     */
    select?: RideCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RideCountOutputType without action
   */
  export type RideCountOutputTypeCountLocationUpdatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideLocationWhereInput
  }


  /**
   * Count Type RideServiceCountOutputType
   */

  export type RideServiceCountOutputType = {
    drivers: number
    rideRequests: number
    rides: number
  }

  export type RideServiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | RideServiceCountOutputTypeCountDriversArgs
    rideRequests?: boolean | RideServiceCountOutputTypeCountRideRequestsArgs
    rides?: boolean | RideServiceCountOutputTypeCountRidesArgs
  }

  // Custom InputTypes
  /**
   * RideServiceCountOutputType without action
   */
  export type RideServiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideServiceCountOutputType
     */
    select?: RideServiceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RideServiceCountOutputType without action
   */
  export type RideServiceCountOutputTypeCountDriversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DriverWhereInput
  }

  /**
   * RideServiceCountOutputType without action
   */
  export type RideServiceCountOutputTypeCountRideRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideRequestWhereInput
  }

  /**
   * RideServiceCountOutputType without action
   */
  export type RideServiceCountOutputTypeCountRidesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideWhereInput
  }


  /**
   * Count Type OrdersCountOutputType
   */

  export type OrdersCountOutputType = {
    externalTransactions: number
    items: number
  }

  export type OrdersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    externalTransactions?: boolean | OrdersCountOutputTypeCountExternalTransactionsArgs
    items?: boolean | OrdersCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdersCountOutputType
     */
    select?: OrdersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeCountExternalTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExternalTransactionWhereInput
  }

  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Admin
   */

  export type AggregateAdmin = {
    _count: AdminCountAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  export type AdminMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    username: string | null
    isActive: boolean | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    operatorEntityId: string | null
    createdBy: string | null
  }

  export type AdminMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    username: string | null
    isActive: boolean | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    operatorEntityId: string | null
    createdBy: string | null
  }

  export type AdminCountAggregateOutputType = {
    id: number
    email: number
    password: number
    name: number
    username: number
    isActive: number
    lastLogin: number
    createdAt: number
    updatedAt: number
    operatorEntityId: number
    createdBy: number
    _all: number
  }


  export type AdminMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    username?: true
    isActive?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    operatorEntityId?: true
    createdBy?: true
  }

  export type AdminMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    username?: true
    isActive?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    operatorEntityId?: true
    createdBy?: true
  }

  export type AdminCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    username?: true
    isActive?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    operatorEntityId?: true
    createdBy?: true
    _all?: true
  }

  export type AdminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admin to aggregate.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admins
    **/
    _count?: true | AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminMaxAggregateInputType
  }

  export type GetAdminAggregateType<T extends AdminAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin[P]>
      : GetScalarType<T[P], AggregateAdmin[P]>
  }




  export type AdminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminWhereInput
    orderBy?: AdminOrderByWithAggregationInput | AdminOrderByWithAggregationInput[]
    by: AdminScalarFieldEnum[] | AdminScalarFieldEnum
    having?: AdminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminCountAggregateInputType | true
    _min?: AdminMinAggregateInputType
    _max?: AdminMaxAggregateInputType
  }

  export type AdminGroupByOutputType = {
    id: string
    email: string
    password: string
    name: string
    username: string
    isActive: boolean
    lastLogin: Date | null
    createdAt: Date
    updatedAt: Date
    operatorEntityId: string
    createdBy: string | null
    _count: AdminCountAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  type GetAdminGroupByPayload<T extends AdminGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminGroupByOutputType[P]>
            : GetScalarType<T[P], AdminGroupByOutputType[P]>
        }
      >
    >


  export type AdminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    username?: boolean
    isActive?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    operatorEntityId?: boolean
    createdBy?: boolean
    operatorEntity?: boolean | OperatorEntityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    username?: boolean
    isActive?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    operatorEntityId?: boolean
    createdBy?: boolean
    operatorEntity?: boolean | OperatorEntityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    username?: boolean
    isActive?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    operatorEntityId?: boolean
    createdBy?: boolean
    operatorEntity?: boolean | OperatorEntityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    username?: boolean
    isActive?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    operatorEntityId?: boolean
    createdBy?: boolean
  }

  export type AdminOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "name" | "username" | "isActive" | "lastLogin" | "createdAt" | "updatedAt" | "operatorEntityId" | "createdBy", ExtArgs["result"]["admin"]>
  export type AdminInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operatorEntity?: boolean | OperatorEntityDefaultArgs<ExtArgs>
  }
  export type AdminIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operatorEntity?: boolean | OperatorEntityDefaultArgs<ExtArgs>
  }
  export type AdminIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operatorEntity?: boolean | OperatorEntityDefaultArgs<ExtArgs>
  }

  export type $AdminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Admin"
    objects: {
      operatorEntity: Prisma.$OperatorEntityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      name: string
      username: string
      isActive: boolean
      lastLogin: Date | null
      createdAt: Date
      updatedAt: Date
      operatorEntityId: string
      createdBy: string | null
    }, ExtArgs["result"]["admin"]>
    composites: {}
  }

  type AdminGetPayload<S extends boolean | null | undefined | AdminDefaultArgs> = $Result.GetResult<Prisma.$AdminPayload, S>

  type AdminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdminFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminCountAggregateInputType | true
    }

  export interface AdminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Admin'], meta: { name: 'Admin' } }
    /**
     * Find zero or one Admin that matches the filter.
     * @param {AdminFindUniqueArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdminFindUniqueArgs>(args: SelectSubset<T, AdminFindUniqueArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admin that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdminFindUniqueOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdminFindUniqueOrThrowArgs>(args: SelectSubset<T, AdminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdminFindFirstArgs>(args?: SelectSubset<T, AdminFindFirstArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdminFindFirstOrThrowArgs>(args?: SelectSubset<T, AdminFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admin.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminWithIdOnly = await prisma.admin.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdminFindManyArgs>(args?: SelectSubset<T, AdminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admin.
     * @param {AdminCreateArgs} args - Arguments to create a Admin.
     * @example
     * // Create one Admin
     * const Admin = await prisma.admin.create({
     *   data: {
     *     // ... data to create a Admin
     *   }
     * })
     * 
     */
    create<T extends AdminCreateArgs>(args: SelectSubset<T, AdminCreateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admins.
     * @param {AdminCreateManyArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdminCreateManyArgs>(args?: SelectSubset<T, AdminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admins and returns the data saved in the database.
     * @param {AdminCreateManyAndReturnArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admins and only return the `id`
     * const adminWithIdOnly = await prisma.admin.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdminCreateManyAndReturnArgs>(args?: SelectSubset<T, AdminCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admin.
     * @param {AdminDeleteArgs} args - Arguments to delete one Admin.
     * @example
     * // Delete one Admin
     * const Admin = await prisma.admin.delete({
     *   where: {
     *     // ... filter to delete one Admin
     *   }
     * })
     * 
     */
    delete<T extends AdminDeleteArgs>(args: SelectSubset<T, AdminDeleteArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admin.
     * @param {AdminUpdateArgs} args - Arguments to update one Admin.
     * @example
     * // Update one Admin
     * const admin = await prisma.admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdminUpdateArgs>(args: SelectSubset<T, AdminUpdateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admins.
     * @param {AdminDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdminDeleteManyArgs>(args?: SelectSubset<T, AdminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdminUpdateManyArgs>(args: SelectSubset<T, AdminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins and returns the data updated in the database.
     * @param {AdminUpdateManyAndReturnArgs} args - Arguments to update many Admins.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admins and only return the `id`
     * const adminWithIdOnly = await prisma.admin.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdminUpdateManyAndReturnArgs>(args: SelectSubset<T, AdminUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admin.
     * @param {AdminUpsertArgs} args - Arguments to update or create a Admin.
     * @example
     * // Update or create a Admin
     * const admin = await prisma.admin.upsert({
     *   create: {
     *     // ... data to create a Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin we want to update
     *   }
     * })
     */
    upsert<T extends AdminUpsertArgs>(args: SelectSubset<T, AdminUpsertArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admin.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends AdminCountArgs>(
      args?: Subset<T, AdminCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminAggregateArgs>(args: Subset<T, AdminAggregateArgs>): Prisma.PrismaPromise<GetAdminAggregateType<T>>

    /**
     * Group by Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminGroupByArgs['orderBy'] }
        : { orderBy?: AdminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Admin model
   */
  readonly fields: AdminFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operatorEntity<T extends OperatorEntityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OperatorEntityDefaultArgs<ExtArgs>>): Prisma__OperatorEntityClient<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Admin model
   */
  interface AdminFieldRefs {
    readonly id: FieldRef<"Admin", 'String'>
    readonly email: FieldRef<"Admin", 'String'>
    readonly password: FieldRef<"Admin", 'String'>
    readonly name: FieldRef<"Admin", 'String'>
    readonly username: FieldRef<"Admin", 'String'>
    readonly isActive: FieldRef<"Admin", 'Boolean'>
    readonly lastLogin: FieldRef<"Admin", 'DateTime'>
    readonly createdAt: FieldRef<"Admin", 'DateTime'>
    readonly updatedAt: FieldRef<"Admin", 'DateTime'>
    readonly operatorEntityId: FieldRef<"Admin", 'String'>
    readonly createdBy: FieldRef<"Admin", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Admin findUnique
   */
  export type AdminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findUniqueOrThrow
   */
  export type AdminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findFirst
   */
  export type AdminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findFirstOrThrow
   */
  export type AdminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findMany
   */
  export type AdminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin create
   */
  export type AdminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The data needed to create a Admin.
     */
    data: XOR<AdminCreateInput, AdminUncheckedCreateInput>
  }

  /**
   * Admin createMany
   */
  export type AdminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admin createManyAndReturn
   */
  export type AdminCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Admin update
   */
  export type AdminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The data needed to update a Admin.
     */
    data: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
    /**
     * Choose, which Admin to update.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin updateMany
   */
  export type AdminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to update.
     */
    limit?: number
  }

  /**
   * Admin updateManyAndReturn
   */
  export type AdminUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Admin upsert
   */
  export type AdminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The filter to search for the Admin to update in case it exists.
     */
    where: AdminWhereUniqueInput
    /**
     * In case the Admin found by the `where` argument doesn't exist, create a new Admin with this data.
     */
    create: XOR<AdminCreateInput, AdminUncheckedCreateInput>
    /**
     * In case the Admin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
  }

  /**
   * Admin delete
   */
  export type AdminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter which Admin to delete.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin deleteMany
   */
  export type AdminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admins to delete
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to delete.
     */
    limit?: number
  }

  /**
   * Admin without action
   */
  export type AdminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type RoleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    description: number
    isActive: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: string
    name: string
    description: string | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    operatorEntities?: boolean | Role$operatorEntitiesArgs<ExtArgs>
    permissions?: boolean | Role$permissionsArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "isActive" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operatorEntities?: boolean | Role$operatorEntitiesArgs<ExtArgs>
    permissions?: boolean | Role$permissionsArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      operatorEntities: Prisma.$OperatorEntityPayload<ExtArgs>[]
      permissions: Prisma.$RolePermissionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operatorEntities<T extends Role$operatorEntitiesArgs<ExtArgs> = {}>(args?: Subset<T, Role$operatorEntitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    permissions<T extends Role$permissionsArgs<ExtArgs> = {}>(args?: Subset<T, Role$permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'String'>
    readonly name: FieldRef<"Role", 'String'>
    readonly description: FieldRef<"Role", 'String'>
    readonly isActive: FieldRef<"Role", 'Boolean'>
    readonly createdAt: FieldRef<"Role", 'DateTime'>
    readonly updatedAt: FieldRef<"Role", 'DateTime'>
    readonly createdBy: FieldRef<"Role", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.operatorEntities
   */
  export type Role$operatorEntitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    where?: OperatorEntityWhereInput
    orderBy?: OperatorEntityOrderByWithRelationInput | OperatorEntityOrderByWithRelationInput[]
    cursor?: OperatorEntityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OperatorEntityScalarFieldEnum | OperatorEntityScalarFieldEnum[]
  }

  /**
   * Role.permissions
   */
  export type Role$permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    where?: RolePermissionWhereInput
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    cursor?: RolePermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model RolePermission
   */

  export type AggregateRolePermission = {
    _count: RolePermissionCountAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  export type RolePermissionMinAggregateOutputType = {
    id: string | null
    roleId: string | null
    entityType: $Enums.EntityType | null
    permission: $Enums.Permission | null
    isGranted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RolePermissionMaxAggregateOutputType = {
    id: string | null
    roleId: string | null
    entityType: $Enums.EntityType | null
    permission: $Enums.Permission | null
    isGranted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RolePermissionCountAggregateOutputType = {
    id: number
    roleId: number
    entityType: number
    permission: number
    isGranted: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RolePermissionMinAggregateInputType = {
    id?: true
    roleId?: true
    entityType?: true
    permission?: true
    isGranted?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RolePermissionMaxAggregateInputType = {
    id?: true
    roleId?: true
    entityType?: true
    permission?: true
    isGranted?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RolePermissionCountAggregateInputType = {
    id?: true
    roleId?: true
    entityType?: true
    permission?: true
    isGranted?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RolePermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolePermission to aggregate.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RolePermissions
    **/
    _count?: true | RolePermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolePermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolePermissionMaxAggregateInputType
  }

  export type GetRolePermissionAggregateType<T extends RolePermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateRolePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRolePermission[P]>
      : GetScalarType<T[P], AggregateRolePermission[P]>
  }




  export type RolePermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolePermissionWhereInput
    orderBy?: RolePermissionOrderByWithAggregationInput | RolePermissionOrderByWithAggregationInput[]
    by: RolePermissionScalarFieldEnum[] | RolePermissionScalarFieldEnum
    having?: RolePermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolePermissionCountAggregateInputType | true
    _min?: RolePermissionMinAggregateInputType
    _max?: RolePermissionMaxAggregateInputType
  }

  export type RolePermissionGroupByOutputType = {
    id: string
    roleId: string
    entityType: $Enums.EntityType
    permission: $Enums.Permission
    isGranted: boolean
    createdAt: Date
    updatedAt: Date
    _count: RolePermissionCountAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  type GetRolePermissionGroupByPayload<T extends RolePermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolePermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolePermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
            : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
        }
      >
    >


  export type RolePermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleId?: boolean
    entityType?: boolean
    permission?: boolean
    isGranted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolePermission"]>

  export type RolePermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleId?: boolean
    entityType?: boolean
    permission?: boolean
    isGranted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolePermission"]>

  export type RolePermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleId?: boolean
    entityType?: boolean
    permission?: boolean
    isGranted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolePermission"]>

  export type RolePermissionSelectScalar = {
    id?: boolean
    roleId?: boolean
    entityType?: boolean
    permission?: boolean
    isGranted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RolePermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "roleId" | "entityType" | "permission" | "isGranted" | "createdAt" | "updatedAt", ExtArgs["result"]["rolePermission"]>
  export type RolePermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }
  export type RolePermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }
  export type RolePermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $RolePermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RolePermission"
    objects: {
      role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      roleId: string
      entityType: $Enums.EntityType
      permission: $Enums.Permission
      isGranted: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["rolePermission"]>
    composites: {}
  }

  type RolePermissionGetPayload<S extends boolean | null | undefined | RolePermissionDefaultArgs> = $Result.GetResult<Prisma.$RolePermissionPayload, S>

  type RolePermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolePermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolePermissionCountAggregateInputType | true
    }

  export interface RolePermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RolePermission'], meta: { name: 'RolePermission' } }
    /**
     * Find zero or one RolePermission that matches the filter.
     * @param {RolePermissionFindUniqueArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolePermissionFindUniqueArgs>(args: SelectSubset<T, RolePermissionFindUniqueArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RolePermission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolePermissionFindUniqueOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolePermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, RolePermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolePermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolePermissionFindFirstArgs>(args?: SelectSubset<T, RolePermissionFindFirstArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolePermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolePermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, RolePermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RolePermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany()
     * 
     * // Get first 10 RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolePermissionWithIdOnly = await prisma.rolePermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RolePermissionFindManyArgs>(args?: SelectSubset<T, RolePermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RolePermission.
     * @param {RolePermissionCreateArgs} args - Arguments to create a RolePermission.
     * @example
     * // Create one RolePermission
     * const RolePermission = await prisma.rolePermission.create({
     *   data: {
     *     // ... data to create a RolePermission
     *   }
     * })
     * 
     */
    create<T extends RolePermissionCreateArgs>(args: SelectSubset<T, RolePermissionCreateArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RolePermissions.
     * @param {RolePermissionCreateManyArgs} args - Arguments to create many RolePermissions.
     * @example
     * // Create many RolePermissions
     * const rolePermission = await prisma.rolePermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolePermissionCreateManyArgs>(args?: SelectSubset<T, RolePermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RolePermissions and returns the data saved in the database.
     * @param {RolePermissionCreateManyAndReturnArgs} args - Arguments to create many RolePermissions.
     * @example
     * // Create many RolePermissions
     * const rolePermission = await prisma.rolePermission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RolePermissions and only return the `id`
     * const rolePermissionWithIdOnly = await prisma.rolePermission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolePermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, RolePermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RolePermission.
     * @param {RolePermissionDeleteArgs} args - Arguments to delete one RolePermission.
     * @example
     * // Delete one RolePermission
     * const RolePermission = await prisma.rolePermission.delete({
     *   where: {
     *     // ... filter to delete one RolePermission
     *   }
     * })
     * 
     */
    delete<T extends RolePermissionDeleteArgs>(args: SelectSubset<T, RolePermissionDeleteArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RolePermission.
     * @param {RolePermissionUpdateArgs} args - Arguments to update one RolePermission.
     * @example
     * // Update one RolePermission
     * const rolePermission = await prisma.rolePermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolePermissionUpdateArgs>(args: SelectSubset<T, RolePermissionUpdateArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RolePermissions.
     * @param {RolePermissionDeleteManyArgs} args - Arguments to filter RolePermissions to delete.
     * @example
     * // Delete a few RolePermissions
     * const { count } = await prisma.rolePermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolePermissionDeleteManyArgs>(args?: SelectSubset<T, RolePermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RolePermissions
     * const rolePermission = await prisma.rolePermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolePermissionUpdateManyArgs>(args: SelectSubset<T, RolePermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolePermissions and returns the data updated in the database.
     * @param {RolePermissionUpdateManyAndReturnArgs} args - Arguments to update many RolePermissions.
     * @example
     * // Update many RolePermissions
     * const rolePermission = await prisma.rolePermission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RolePermissions and only return the `id`
     * const rolePermissionWithIdOnly = await prisma.rolePermission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RolePermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, RolePermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RolePermission.
     * @param {RolePermissionUpsertArgs} args - Arguments to update or create a RolePermission.
     * @example
     * // Update or create a RolePermission
     * const rolePermission = await prisma.rolePermission.upsert({
     *   create: {
     *     // ... data to create a RolePermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RolePermission we want to update
     *   }
     * })
     */
    upsert<T extends RolePermissionUpsertArgs>(args: SelectSubset<T, RolePermissionUpsertArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionCountArgs} args - Arguments to filter RolePermissions to count.
     * @example
     * // Count the number of RolePermissions
     * const count = await prisma.rolePermission.count({
     *   where: {
     *     // ... the filter for the RolePermissions we want to count
     *   }
     * })
    **/
    count<T extends RolePermissionCountArgs>(
      args?: Subset<T, RolePermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolePermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolePermissionAggregateArgs>(args: Subset<T, RolePermissionAggregateArgs>): Prisma.PrismaPromise<GetRolePermissionAggregateType<T>>

    /**
     * Group by RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolePermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolePermissionGroupByArgs['orderBy'] }
        : { orderBy?: RolePermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolePermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolePermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RolePermission model
   */
  readonly fields: RolePermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RolePermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolePermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RolePermission model
   */
  interface RolePermissionFieldRefs {
    readonly id: FieldRef<"RolePermission", 'String'>
    readonly roleId: FieldRef<"RolePermission", 'String'>
    readonly entityType: FieldRef<"RolePermission", 'EntityType'>
    readonly permission: FieldRef<"RolePermission", 'Permission'>
    readonly isGranted: FieldRef<"RolePermission", 'Boolean'>
    readonly createdAt: FieldRef<"RolePermission", 'DateTime'>
    readonly updatedAt: FieldRef<"RolePermission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RolePermission findUnique
   */
  export type RolePermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission findUniqueOrThrow
   */
  export type RolePermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission findFirst
   */
  export type RolePermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolePermissions.
     */
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission findFirstOrThrow
   */
  export type RolePermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolePermissions.
     */
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission findMany
   */
  export type RolePermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermissions to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission create
   */
  export type RolePermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a RolePermission.
     */
    data: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
  }

  /**
   * RolePermission createMany
   */
  export type RolePermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RolePermissions.
     */
    data: RolePermissionCreateManyInput | RolePermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RolePermission createManyAndReturn
   */
  export type RolePermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * The data used to create many RolePermissions.
     */
    data: RolePermissionCreateManyInput | RolePermissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RolePermission update
   */
  export type RolePermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a RolePermission.
     */
    data: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
    /**
     * Choose, which RolePermission to update.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission updateMany
   */
  export type RolePermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RolePermissions.
     */
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyInput>
    /**
     * Filter which RolePermissions to update
     */
    where?: RolePermissionWhereInput
    /**
     * Limit how many RolePermissions to update.
     */
    limit?: number
  }

  /**
   * RolePermission updateManyAndReturn
   */
  export type RolePermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * The data used to update RolePermissions.
     */
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyInput>
    /**
     * Filter which RolePermissions to update
     */
    where?: RolePermissionWhereInput
    /**
     * Limit how many RolePermissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RolePermission upsert
   */
  export type RolePermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the RolePermission to update in case it exists.
     */
    where: RolePermissionWhereUniqueInput
    /**
     * In case the RolePermission found by the `where` argument doesn't exist, create a new RolePermission with this data.
     */
    create: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
    /**
     * In case the RolePermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
  }

  /**
   * RolePermission delete
   */
  export type RolePermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter which RolePermission to delete.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission deleteMany
   */
  export type RolePermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolePermissions to delete
     */
    where?: RolePermissionWhereInput
    /**
     * Limit how many RolePermissions to delete.
     */
    limit?: number
  }

  /**
   * RolePermission without action
   */
  export type RolePermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
  }


  /**
   * Model OperatorEntity
   */

  export type AggregateOperatorEntity = {
    _count: OperatorEntityCountAggregateOutputType | null
    _min: OperatorEntityMinAggregateOutputType | null
    _max: OperatorEntityMaxAggregateOutputType | null
  }

  export type OperatorEntityMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    roleId: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type OperatorEntityMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    roleId: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type OperatorEntityCountAggregateOutputType = {
    id: number
    name: number
    description: number
    roleId: number
    isActive: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type OperatorEntityMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    roleId?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type OperatorEntityMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    roleId?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type OperatorEntityCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    roleId?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type OperatorEntityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OperatorEntity to aggregate.
     */
    where?: OperatorEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OperatorEntities to fetch.
     */
    orderBy?: OperatorEntityOrderByWithRelationInput | OperatorEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OperatorEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OperatorEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OperatorEntities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OperatorEntities
    **/
    _count?: true | OperatorEntityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OperatorEntityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OperatorEntityMaxAggregateInputType
  }

  export type GetOperatorEntityAggregateType<T extends OperatorEntityAggregateArgs> = {
        [P in keyof T & keyof AggregateOperatorEntity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOperatorEntity[P]>
      : GetScalarType<T[P], AggregateOperatorEntity[P]>
  }




  export type OperatorEntityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OperatorEntityWhereInput
    orderBy?: OperatorEntityOrderByWithAggregationInput | OperatorEntityOrderByWithAggregationInput[]
    by: OperatorEntityScalarFieldEnum[] | OperatorEntityScalarFieldEnum
    having?: OperatorEntityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OperatorEntityCountAggregateInputType | true
    _min?: OperatorEntityMinAggregateInputType
    _max?: OperatorEntityMaxAggregateInputType
  }

  export type OperatorEntityGroupByOutputType = {
    id: string
    name: string
    description: string | null
    roleId: string
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    _count: OperatorEntityCountAggregateOutputType | null
    _min: OperatorEntityMinAggregateOutputType | null
    _max: OperatorEntityMaxAggregateOutputType | null
  }

  type GetOperatorEntityGroupByPayload<T extends OperatorEntityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OperatorEntityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OperatorEntityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OperatorEntityGroupByOutputType[P]>
            : GetScalarType<T[P], OperatorEntityGroupByOutputType[P]>
        }
      >
    >


  export type OperatorEntitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    roleId?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    admins?: boolean | OperatorEntity$adminsArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
    _count?: boolean | OperatorEntityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operatorEntity"]>

  export type OperatorEntitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    roleId?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operatorEntity"]>

  export type OperatorEntitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    roleId?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operatorEntity"]>

  export type OperatorEntitySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    roleId?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type OperatorEntityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "roleId" | "isActive" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["operatorEntity"]>
  export type OperatorEntityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admins?: boolean | OperatorEntity$adminsArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
    _count?: boolean | OperatorEntityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OperatorEntityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }
  export type OperatorEntityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $OperatorEntityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OperatorEntity"
    objects: {
      admins: Prisma.$AdminPayload<ExtArgs>[]
      role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      roleId: string
      isActive: boolean
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["operatorEntity"]>
    composites: {}
  }

  type OperatorEntityGetPayload<S extends boolean | null | undefined | OperatorEntityDefaultArgs> = $Result.GetResult<Prisma.$OperatorEntityPayload, S>

  type OperatorEntityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OperatorEntityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OperatorEntityCountAggregateInputType | true
    }

  export interface OperatorEntityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OperatorEntity'], meta: { name: 'OperatorEntity' } }
    /**
     * Find zero or one OperatorEntity that matches the filter.
     * @param {OperatorEntityFindUniqueArgs} args - Arguments to find a OperatorEntity
     * @example
     * // Get one OperatorEntity
     * const operatorEntity = await prisma.operatorEntity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OperatorEntityFindUniqueArgs>(args: SelectSubset<T, OperatorEntityFindUniqueArgs<ExtArgs>>): Prisma__OperatorEntityClient<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OperatorEntity that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OperatorEntityFindUniqueOrThrowArgs} args - Arguments to find a OperatorEntity
     * @example
     * // Get one OperatorEntity
     * const operatorEntity = await prisma.operatorEntity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OperatorEntityFindUniqueOrThrowArgs>(args: SelectSubset<T, OperatorEntityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OperatorEntityClient<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OperatorEntity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperatorEntityFindFirstArgs} args - Arguments to find a OperatorEntity
     * @example
     * // Get one OperatorEntity
     * const operatorEntity = await prisma.operatorEntity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OperatorEntityFindFirstArgs>(args?: SelectSubset<T, OperatorEntityFindFirstArgs<ExtArgs>>): Prisma__OperatorEntityClient<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OperatorEntity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperatorEntityFindFirstOrThrowArgs} args - Arguments to find a OperatorEntity
     * @example
     * // Get one OperatorEntity
     * const operatorEntity = await prisma.operatorEntity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OperatorEntityFindFirstOrThrowArgs>(args?: SelectSubset<T, OperatorEntityFindFirstOrThrowArgs<ExtArgs>>): Prisma__OperatorEntityClient<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OperatorEntities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperatorEntityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OperatorEntities
     * const operatorEntities = await prisma.operatorEntity.findMany()
     * 
     * // Get first 10 OperatorEntities
     * const operatorEntities = await prisma.operatorEntity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const operatorEntityWithIdOnly = await prisma.operatorEntity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OperatorEntityFindManyArgs>(args?: SelectSubset<T, OperatorEntityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OperatorEntity.
     * @param {OperatorEntityCreateArgs} args - Arguments to create a OperatorEntity.
     * @example
     * // Create one OperatorEntity
     * const OperatorEntity = await prisma.operatorEntity.create({
     *   data: {
     *     // ... data to create a OperatorEntity
     *   }
     * })
     * 
     */
    create<T extends OperatorEntityCreateArgs>(args: SelectSubset<T, OperatorEntityCreateArgs<ExtArgs>>): Prisma__OperatorEntityClient<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OperatorEntities.
     * @param {OperatorEntityCreateManyArgs} args - Arguments to create many OperatorEntities.
     * @example
     * // Create many OperatorEntities
     * const operatorEntity = await prisma.operatorEntity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OperatorEntityCreateManyArgs>(args?: SelectSubset<T, OperatorEntityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OperatorEntities and returns the data saved in the database.
     * @param {OperatorEntityCreateManyAndReturnArgs} args - Arguments to create many OperatorEntities.
     * @example
     * // Create many OperatorEntities
     * const operatorEntity = await prisma.operatorEntity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OperatorEntities and only return the `id`
     * const operatorEntityWithIdOnly = await prisma.operatorEntity.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OperatorEntityCreateManyAndReturnArgs>(args?: SelectSubset<T, OperatorEntityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OperatorEntity.
     * @param {OperatorEntityDeleteArgs} args - Arguments to delete one OperatorEntity.
     * @example
     * // Delete one OperatorEntity
     * const OperatorEntity = await prisma.operatorEntity.delete({
     *   where: {
     *     // ... filter to delete one OperatorEntity
     *   }
     * })
     * 
     */
    delete<T extends OperatorEntityDeleteArgs>(args: SelectSubset<T, OperatorEntityDeleteArgs<ExtArgs>>): Prisma__OperatorEntityClient<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OperatorEntity.
     * @param {OperatorEntityUpdateArgs} args - Arguments to update one OperatorEntity.
     * @example
     * // Update one OperatorEntity
     * const operatorEntity = await prisma.operatorEntity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OperatorEntityUpdateArgs>(args: SelectSubset<T, OperatorEntityUpdateArgs<ExtArgs>>): Prisma__OperatorEntityClient<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OperatorEntities.
     * @param {OperatorEntityDeleteManyArgs} args - Arguments to filter OperatorEntities to delete.
     * @example
     * // Delete a few OperatorEntities
     * const { count } = await prisma.operatorEntity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OperatorEntityDeleteManyArgs>(args?: SelectSubset<T, OperatorEntityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OperatorEntities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperatorEntityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OperatorEntities
     * const operatorEntity = await prisma.operatorEntity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OperatorEntityUpdateManyArgs>(args: SelectSubset<T, OperatorEntityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OperatorEntities and returns the data updated in the database.
     * @param {OperatorEntityUpdateManyAndReturnArgs} args - Arguments to update many OperatorEntities.
     * @example
     * // Update many OperatorEntities
     * const operatorEntity = await prisma.operatorEntity.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OperatorEntities and only return the `id`
     * const operatorEntityWithIdOnly = await prisma.operatorEntity.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OperatorEntityUpdateManyAndReturnArgs>(args: SelectSubset<T, OperatorEntityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OperatorEntity.
     * @param {OperatorEntityUpsertArgs} args - Arguments to update or create a OperatorEntity.
     * @example
     * // Update or create a OperatorEntity
     * const operatorEntity = await prisma.operatorEntity.upsert({
     *   create: {
     *     // ... data to create a OperatorEntity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OperatorEntity we want to update
     *   }
     * })
     */
    upsert<T extends OperatorEntityUpsertArgs>(args: SelectSubset<T, OperatorEntityUpsertArgs<ExtArgs>>): Prisma__OperatorEntityClient<$Result.GetResult<Prisma.$OperatorEntityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OperatorEntities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperatorEntityCountArgs} args - Arguments to filter OperatorEntities to count.
     * @example
     * // Count the number of OperatorEntities
     * const count = await prisma.operatorEntity.count({
     *   where: {
     *     // ... the filter for the OperatorEntities we want to count
     *   }
     * })
    **/
    count<T extends OperatorEntityCountArgs>(
      args?: Subset<T, OperatorEntityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OperatorEntityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OperatorEntity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperatorEntityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OperatorEntityAggregateArgs>(args: Subset<T, OperatorEntityAggregateArgs>): Prisma.PrismaPromise<GetOperatorEntityAggregateType<T>>

    /**
     * Group by OperatorEntity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperatorEntityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OperatorEntityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OperatorEntityGroupByArgs['orderBy'] }
        : { orderBy?: OperatorEntityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OperatorEntityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperatorEntityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OperatorEntity model
   */
  readonly fields: OperatorEntityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OperatorEntity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OperatorEntityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admins<T extends OperatorEntity$adminsArgs<ExtArgs> = {}>(args?: Subset<T, OperatorEntity$adminsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OperatorEntity model
   */
  interface OperatorEntityFieldRefs {
    readonly id: FieldRef<"OperatorEntity", 'String'>
    readonly name: FieldRef<"OperatorEntity", 'String'>
    readonly description: FieldRef<"OperatorEntity", 'String'>
    readonly roleId: FieldRef<"OperatorEntity", 'String'>
    readonly isActive: FieldRef<"OperatorEntity", 'Boolean'>
    readonly createdAt: FieldRef<"OperatorEntity", 'DateTime'>
    readonly updatedAt: FieldRef<"OperatorEntity", 'DateTime'>
    readonly createdBy: FieldRef<"OperatorEntity", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OperatorEntity findUnique
   */
  export type OperatorEntityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    /**
     * Filter, which OperatorEntity to fetch.
     */
    where: OperatorEntityWhereUniqueInput
  }

  /**
   * OperatorEntity findUniqueOrThrow
   */
  export type OperatorEntityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    /**
     * Filter, which OperatorEntity to fetch.
     */
    where: OperatorEntityWhereUniqueInput
  }

  /**
   * OperatorEntity findFirst
   */
  export type OperatorEntityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    /**
     * Filter, which OperatorEntity to fetch.
     */
    where?: OperatorEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OperatorEntities to fetch.
     */
    orderBy?: OperatorEntityOrderByWithRelationInput | OperatorEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OperatorEntities.
     */
    cursor?: OperatorEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OperatorEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OperatorEntities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OperatorEntities.
     */
    distinct?: OperatorEntityScalarFieldEnum | OperatorEntityScalarFieldEnum[]
  }

  /**
   * OperatorEntity findFirstOrThrow
   */
  export type OperatorEntityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    /**
     * Filter, which OperatorEntity to fetch.
     */
    where?: OperatorEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OperatorEntities to fetch.
     */
    orderBy?: OperatorEntityOrderByWithRelationInput | OperatorEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OperatorEntities.
     */
    cursor?: OperatorEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OperatorEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OperatorEntities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OperatorEntities.
     */
    distinct?: OperatorEntityScalarFieldEnum | OperatorEntityScalarFieldEnum[]
  }

  /**
   * OperatorEntity findMany
   */
  export type OperatorEntityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    /**
     * Filter, which OperatorEntities to fetch.
     */
    where?: OperatorEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OperatorEntities to fetch.
     */
    orderBy?: OperatorEntityOrderByWithRelationInput | OperatorEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OperatorEntities.
     */
    cursor?: OperatorEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OperatorEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OperatorEntities.
     */
    skip?: number
    distinct?: OperatorEntityScalarFieldEnum | OperatorEntityScalarFieldEnum[]
  }

  /**
   * OperatorEntity create
   */
  export type OperatorEntityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    /**
     * The data needed to create a OperatorEntity.
     */
    data: XOR<OperatorEntityCreateInput, OperatorEntityUncheckedCreateInput>
  }

  /**
   * OperatorEntity createMany
   */
  export type OperatorEntityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OperatorEntities.
     */
    data: OperatorEntityCreateManyInput | OperatorEntityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OperatorEntity createManyAndReturn
   */
  export type OperatorEntityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * The data used to create many OperatorEntities.
     */
    data: OperatorEntityCreateManyInput | OperatorEntityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OperatorEntity update
   */
  export type OperatorEntityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    /**
     * The data needed to update a OperatorEntity.
     */
    data: XOR<OperatorEntityUpdateInput, OperatorEntityUncheckedUpdateInput>
    /**
     * Choose, which OperatorEntity to update.
     */
    where: OperatorEntityWhereUniqueInput
  }

  /**
   * OperatorEntity updateMany
   */
  export type OperatorEntityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OperatorEntities.
     */
    data: XOR<OperatorEntityUpdateManyMutationInput, OperatorEntityUncheckedUpdateManyInput>
    /**
     * Filter which OperatorEntities to update
     */
    where?: OperatorEntityWhereInput
    /**
     * Limit how many OperatorEntities to update.
     */
    limit?: number
  }

  /**
   * OperatorEntity updateManyAndReturn
   */
  export type OperatorEntityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * The data used to update OperatorEntities.
     */
    data: XOR<OperatorEntityUpdateManyMutationInput, OperatorEntityUncheckedUpdateManyInput>
    /**
     * Filter which OperatorEntities to update
     */
    where?: OperatorEntityWhereInput
    /**
     * Limit how many OperatorEntities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OperatorEntity upsert
   */
  export type OperatorEntityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    /**
     * The filter to search for the OperatorEntity to update in case it exists.
     */
    where: OperatorEntityWhereUniqueInput
    /**
     * In case the OperatorEntity found by the `where` argument doesn't exist, create a new OperatorEntity with this data.
     */
    create: XOR<OperatorEntityCreateInput, OperatorEntityUncheckedCreateInput>
    /**
     * In case the OperatorEntity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OperatorEntityUpdateInput, OperatorEntityUncheckedUpdateInput>
  }

  /**
   * OperatorEntity delete
   */
  export type OperatorEntityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
    /**
     * Filter which OperatorEntity to delete.
     */
    where: OperatorEntityWhereUniqueInput
  }

  /**
   * OperatorEntity deleteMany
   */
  export type OperatorEntityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OperatorEntities to delete
     */
    where?: OperatorEntityWhereInput
    /**
     * Limit how many OperatorEntities to delete.
     */
    limit?: number
  }

  /**
   * OperatorEntity.admins
   */
  export type OperatorEntity$adminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    where?: AdminWhereInput
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    cursor?: AdminWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * OperatorEntity without action
   */
  export type OperatorEntityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperatorEntity
     */
    select?: OperatorEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperatorEntity
     */
    omit?: OperatorEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperatorEntityInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    firstName: string | null
    middleName: string | null
    lastName: string | null
    phoneNumber: string | null
    pin: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    firstName: string | null
    middleName: string | null
    lastName: string | null
    phoneNumber: string | null
    pin: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    firstName: number
    middleName: number
    lastName: number
    phoneNumber: number
    pin: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    firstName?: true
    middleName?: true
    lastName?: true
    phoneNumber?: true
    pin?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    firstName?: true
    middleName?: true
    lastName?: true
    phoneNumber?: true
    pin?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    firstName?: true
    middleName?: true
    lastName?: true
    phoneNumber?: true
    pin?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    firstName: string
    middleName: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    middleName?: boolean
    lastName?: boolean
    phoneNumber?: boolean
    pin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deliveryAddresses?: boolean | User$deliveryAddressesArgs<ExtArgs>
    devices?: boolean | User$devicesArgs<ExtArgs>
    customerTransactions?: boolean | User$customerTransactionsArgs<ExtArgs>
    sellerTransactions?: boolean | User$sellerTransactionsArgs<ExtArgs>
    paymentMethods?: boolean | User$paymentMethodsArgs<ExtArgs>
    products?: boolean | User$productsArgs<ExtArgs>
    sellerKyc?: boolean | User$sellerKycArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    settlements?: boolean | User$settlementsArgs<ExtArgs>
    driver?: boolean | User$driverArgs<ExtArgs>
    orders_orders_sellerIdToUser?: boolean | User$orders_orders_sellerIdToUserArgs<ExtArgs>
    orders_orders_userIdToUser?: boolean | User$orders_orders_userIdToUserArgs<ExtArgs>
    productOrderInterests?: boolean | User$productOrderInterestsArgs<ExtArgs>
    productViews?: boolean | User$productViewsArgs<ExtArgs>
    customerRideRequests?: boolean | User$customerRideRequestsArgs<ExtArgs>
    riderApplications?: boolean | User$riderApplicationsArgs<ExtArgs>
    customerRides?: boolean | User$customerRidesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    middleName?: boolean
    lastName?: boolean
    phoneNumber?: boolean
    pin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    middleName?: boolean
    lastName?: boolean
    phoneNumber?: boolean
    pin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    firstName?: boolean
    middleName?: boolean
    lastName?: boolean
    phoneNumber?: boolean
    pin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firstName" | "middleName" | "lastName" | "phoneNumber" | "pin" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryAddresses?: boolean | User$deliveryAddressesArgs<ExtArgs>
    devices?: boolean | User$devicesArgs<ExtArgs>
    customerTransactions?: boolean | User$customerTransactionsArgs<ExtArgs>
    sellerTransactions?: boolean | User$sellerTransactionsArgs<ExtArgs>
    paymentMethods?: boolean | User$paymentMethodsArgs<ExtArgs>
    products?: boolean | User$productsArgs<ExtArgs>
    sellerKyc?: boolean | User$sellerKycArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    settlements?: boolean | User$settlementsArgs<ExtArgs>
    driver?: boolean | User$driverArgs<ExtArgs>
    orders_orders_sellerIdToUser?: boolean | User$orders_orders_sellerIdToUserArgs<ExtArgs>
    orders_orders_userIdToUser?: boolean | User$orders_orders_userIdToUserArgs<ExtArgs>
    productOrderInterests?: boolean | User$productOrderInterestsArgs<ExtArgs>
    productViews?: boolean | User$productViewsArgs<ExtArgs>
    customerRideRequests?: boolean | User$customerRideRequestsArgs<ExtArgs>
    riderApplications?: boolean | User$riderApplicationsArgs<ExtArgs>
    customerRides?: boolean | User$customerRidesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      deliveryAddresses: Prisma.$DeliveryAddressPayload<ExtArgs>[]
      devices: Prisma.$DevicePayload<ExtArgs>[]
      customerTransactions: Prisma.$ExternalTransactionPayload<ExtArgs>[]
      sellerTransactions: Prisma.$ExternalTransactionPayload<ExtArgs>[]
      paymentMethods: Prisma.$PaymentMethodPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
      sellerKyc: Prisma.$SellerKycPayload<ExtArgs> | null
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      settlements: Prisma.$SettlementPayload<ExtArgs>[]
      driver: Prisma.$DriverPayload<ExtArgs> | null
      orders_orders_sellerIdToUser: Prisma.$ordersPayload<ExtArgs>[]
      orders_orders_userIdToUser: Prisma.$ordersPayload<ExtArgs>[]
      productOrderInterests: Prisma.$ProductOrderInterestPayload<ExtArgs>[]
      productViews: Prisma.$ProductViewPayload<ExtArgs>[]
      customerRideRequests: Prisma.$RideRequestPayload<ExtArgs>[]
      riderApplications: Prisma.$RiderApplicationPayload<ExtArgs>[]
      customerRides: Prisma.$RidePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      firstName: string
      middleName: string | null
      lastName: string
      phoneNumber: string
      pin: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    deliveryAddresses<T extends User$deliveryAddressesArgs<ExtArgs> = {}>(args?: Subset<T, User$deliveryAddressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    devices<T extends User$devicesArgs<ExtArgs> = {}>(args?: Subset<T, User$devicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customerTransactions<T extends User$customerTransactionsArgs<ExtArgs> = {}>(args?: Subset<T, User$customerTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sellerTransactions<T extends User$sellerTransactionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sellerTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    paymentMethods<T extends User$paymentMethodsArgs<ExtArgs> = {}>(args?: Subset<T, User$paymentMethodsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends User$productsArgs<ExtArgs> = {}>(args?: Subset<T, User$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sellerKyc<T extends User$sellerKycArgs<ExtArgs> = {}>(args?: Subset<T, User$sellerKycArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    settlements<T extends User$settlementsArgs<ExtArgs> = {}>(args?: Subset<T, User$settlementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    driver<T extends User$driverArgs<ExtArgs> = {}>(args?: Subset<T, User$driverArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    orders_orders_sellerIdToUser<T extends User$orders_orders_sellerIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$orders_orders_sellerIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders_orders_userIdToUser<T extends User$orders_orders_userIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$orders_orders_userIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productOrderInterests<T extends User$productOrderInterestsArgs<ExtArgs> = {}>(args?: Subset<T, User$productOrderInterestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productViews<T extends User$productViewsArgs<ExtArgs> = {}>(args?: Subset<T, User$productViewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customerRideRequests<T extends User$customerRideRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$customerRideRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    riderApplications<T extends User$riderApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, User$riderApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customerRides<T extends User$customerRidesArgs<ExtArgs> = {}>(args?: Subset<T, User$customerRidesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly middleName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly phoneNumber: FieldRef<"User", 'String'>
    readonly pin: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.deliveryAddresses
   */
  export type User$deliveryAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    where?: DeliveryAddressWhereInput
    orderBy?: DeliveryAddressOrderByWithRelationInput | DeliveryAddressOrderByWithRelationInput[]
    cursor?: DeliveryAddressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryAddressScalarFieldEnum | DeliveryAddressScalarFieldEnum[]
  }

  /**
   * User.devices
   */
  export type User$devicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    where?: DeviceWhereInput
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    cursor?: DeviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * User.customerTransactions
   */
  export type User$customerTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    where?: ExternalTransactionWhereInput
    orderBy?: ExternalTransactionOrderByWithRelationInput | ExternalTransactionOrderByWithRelationInput[]
    cursor?: ExternalTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExternalTransactionScalarFieldEnum | ExternalTransactionScalarFieldEnum[]
  }

  /**
   * User.sellerTransactions
   */
  export type User$sellerTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    where?: ExternalTransactionWhereInput
    orderBy?: ExternalTransactionOrderByWithRelationInput | ExternalTransactionOrderByWithRelationInput[]
    cursor?: ExternalTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExternalTransactionScalarFieldEnum | ExternalTransactionScalarFieldEnum[]
  }

  /**
   * User.paymentMethods
   */
  export type User$paymentMethodsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    where?: PaymentMethodWhereInput
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    cursor?: PaymentMethodWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * User.products
   */
  export type User$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.sellerKyc
   */
  export type User$sellerKycArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    where?: SellerKycWhereInput
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.settlements
   */
  export type User$settlementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    where?: SettlementWhereInput
    orderBy?: SettlementOrderByWithRelationInput | SettlementOrderByWithRelationInput[]
    cursor?: SettlementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SettlementScalarFieldEnum | SettlementScalarFieldEnum[]
  }

  /**
   * User.driver
   */
  export type User$driverArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    where?: DriverWhereInput
  }

  /**
   * User.orders_orders_sellerIdToUser
   */
  export type User$orders_orders_sellerIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    cursor?: ordersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * User.orders_orders_userIdToUser
   */
  export type User$orders_orders_userIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    cursor?: ordersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * User.productOrderInterests
   */
  export type User$productOrderInterestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    where?: ProductOrderInterestWhereInput
    orderBy?: ProductOrderInterestOrderByWithRelationInput | ProductOrderInterestOrderByWithRelationInput[]
    cursor?: ProductOrderInterestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductOrderInterestScalarFieldEnum | ProductOrderInterestScalarFieldEnum[]
  }

  /**
   * User.productViews
   */
  export type User$productViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    where?: ProductViewWhereInput
    orderBy?: ProductViewOrderByWithRelationInput | ProductViewOrderByWithRelationInput[]
    cursor?: ProductViewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductViewScalarFieldEnum | ProductViewScalarFieldEnum[]
  }

  /**
   * User.customerRideRequests
   */
  export type User$customerRideRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    where?: RideRequestWhereInput
    orderBy?: RideRequestOrderByWithRelationInput | RideRequestOrderByWithRelationInput[]
    cursor?: RideRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RideRequestScalarFieldEnum | RideRequestScalarFieldEnum[]
  }

  /**
   * User.riderApplications
   */
  export type User$riderApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    where?: RiderApplicationWhereInput
    orderBy?: RiderApplicationOrderByWithRelationInput | RiderApplicationOrderByWithRelationInput[]
    cursor?: RiderApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RiderApplicationScalarFieldEnum | RiderApplicationScalarFieldEnum[]
  }

  /**
   * User.customerRides
   */
  export type User$customerRidesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    where?: RideWhereInput
    orderBy?: RideOrderByWithRelationInput | RideOrderByWithRelationInput[]
    cursor?: RideWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RideScalarFieldEnum | RideScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model DeliveryAddress
   */

  export type AggregateDeliveryAddress = {
    _count: DeliveryAddressCountAggregateOutputType | null
    _min: DeliveryAddressMinAggregateOutputType | null
    _max: DeliveryAddressMaxAggregateOutputType | null
  }

  export type DeliveryAddressMinAggregateOutputType = {
    id: string | null
    userId: string | null
    address: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    country: string | null
    isDefault: boolean | null
    label: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isDeleted: boolean | null
  }

  export type DeliveryAddressMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    address: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    country: string | null
    isDefault: boolean | null
    label: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isDeleted: boolean | null
  }

  export type DeliveryAddressCountAggregateOutputType = {
    id: number
    userId: number
    address: number
    city: number
    state: number
    postalCode: number
    country: number
    isDefault: number
    label: number
    createdAt: number
    updatedAt: number
    isDeleted: number
    _all: number
  }


  export type DeliveryAddressMinAggregateInputType = {
    id?: true
    userId?: true
    address?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    isDefault?: true
    label?: true
    createdAt?: true
    updatedAt?: true
    isDeleted?: true
  }

  export type DeliveryAddressMaxAggregateInputType = {
    id?: true
    userId?: true
    address?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    isDefault?: true
    label?: true
    createdAt?: true
    updatedAt?: true
    isDeleted?: true
  }

  export type DeliveryAddressCountAggregateInputType = {
    id?: true
    userId?: true
    address?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    isDefault?: true
    label?: true
    createdAt?: true
    updatedAt?: true
    isDeleted?: true
    _all?: true
  }

  export type DeliveryAddressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeliveryAddress to aggregate.
     */
    where?: DeliveryAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryAddresses to fetch.
     */
    orderBy?: DeliveryAddressOrderByWithRelationInput | DeliveryAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeliveryAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DeliveryAddresses
    **/
    _count?: true | DeliveryAddressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeliveryAddressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeliveryAddressMaxAggregateInputType
  }

  export type GetDeliveryAddressAggregateType<T extends DeliveryAddressAggregateArgs> = {
        [P in keyof T & keyof AggregateDeliveryAddress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeliveryAddress[P]>
      : GetScalarType<T[P], AggregateDeliveryAddress[P]>
  }




  export type DeliveryAddressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryAddressWhereInput
    orderBy?: DeliveryAddressOrderByWithAggregationInput | DeliveryAddressOrderByWithAggregationInput[]
    by: DeliveryAddressScalarFieldEnum[] | DeliveryAddressScalarFieldEnum
    having?: DeliveryAddressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeliveryAddressCountAggregateInputType | true
    _min?: DeliveryAddressMinAggregateInputType
    _max?: DeliveryAddressMaxAggregateInputType
  }

  export type DeliveryAddressGroupByOutputType = {
    id: string
    userId: string
    address: string
    city: string
    state: string
    postalCode: string | null
    country: string
    isDefault: boolean
    label: string | null
    createdAt: Date
    updatedAt: Date
    isDeleted: boolean
    _count: DeliveryAddressCountAggregateOutputType | null
    _min: DeliveryAddressMinAggregateOutputType | null
    _max: DeliveryAddressMaxAggregateOutputType | null
  }

  type GetDeliveryAddressGroupByPayload<T extends DeliveryAddressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeliveryAddressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeliveryAddressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeliveryAddressGroupByOutputType[P]>
            : GetScalarType<T[P], DeliveryAddressGroupByOutputType[P]>
        }
      >
    >


  export type DeliveryAddressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    isDefault?: boolean
    label?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isDeleted?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deliveryAddress"]>

  export type DeliveryAddressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    isDefault?: boolean
    label?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isDeleted?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deliveryAddress"]>

  export type DeliveryAddressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    isDefault?: boolean
    label?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isDeleted?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deliveryAddress"]>

  export type DeliveryAddressSelectScalar = {
    id?: boolean
    userId?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    isDefault?: boolean
    label?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isDeleted?: boolean
  }

  export type DeliveryAddressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "address" | "city" | "state" | "postalCode" | "country" | "isDefault" | "label" | "createdAt" | "updatedAt" | "isDeleted", ExtArgs["result"]["deliveryAddress"]>
  export type DeliveryAddressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DeliveryAddressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DeliveryAddressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DeliveryAddressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DeliveryAddress"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      address: string
      city: string
      state: string
      postalCode: string | null
      country: string
      isDefault: boolean
      label: string | null
      createdAt: Date
      updatedAt: Date
      isDeleted: boolean
    }, ExtArgs["result"]["deliveryAddress"]>
    composites: {}
  }

  type DeliveryAddressGetPayload<S extends boolean | null | undefined | DeliveryAddressDefaultArgs> = $Result.GetResult<Prisma.$DeliveryAddressPayload, S>

  type DeliveryAddressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DeliveryAddressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DeliveryAddressCountAggregateInputType | true
    }

  export interface DeliveryAddressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DeliveryAddress'], meta: { name: 'DeliveryAddress' } }
    /**
     * Find zero or one DeliveryAddress that matches the filter.
     * @param {DeliveryAddressFindUniqueArgs} args - Arguments to find a DeliveryAddress
     * @example
     * // Get one DeliveryAddress
     * const deliveryAddress = await prisma.deliveryAddress.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeliveryAddressFindUniqueArgs>(args: SelectSubset<T, DeliveryAddressFindUniqueArgs<ExtArgs>>): Prisma__DeliveryAddressClient<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DeliveryAddress that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DeliveryAddressFindUniqueOrThrowArgs} args - Arguments to find a DeliveryAddress
     * @example
     * // Get one DeliveryAddress
     * const deliveryAddress = await prisma.deliveryAddress.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeliveryAddressFindUniqueOrThrowArgs>(args: SelectSubset<T, DeliveryAddressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeliveryAddressClient<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DeliveryAddress that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryAddressFindFirstArgs} args - Arguments to find a DeliveryAddress
     * @example
     * // Get one DeliveryAddress
     * const deliveryAddress = await prisma.deliveryAddress.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeliveryAddressFindFirstArgs>(args?: SelectSubset<T, DeliveryAddressFindFirstArgs<ExtArgs>>): Prisma__DeliveryAddressClient<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DeliveryAddress that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryAddressFindFirstOrThrowArgs} args - Arguments to find a DeliveryAddress
     * @example
     * // Get one DeliveryAddress
     * const deliveryAddress = await prisma.deliveryAddress.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeliveryAddressFindFirstOrThrowArgs>(args?: SelectSubset<T, DeliveryAddressFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeliveryAddressClient<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DeliveryAddresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryAddressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DeliveryAddresses
     * const deliveryAddresses = await prisma.deliveryAddress.findMany()
     * 
     * // Get first 10 DeliveryAddresses
     * const deliveryAddresses = await prisma.deliveryAddress.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const deliveryAddressWithIdOnly = await prisma.deliveryAddress.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DeliveryAddressFindManyArgs>(args?: SelectSubset<T, DeliveryAddressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DeliveryAddress.
     * @param {DeliveryAddressCreateArgs} args - Arguments to create a DeliveryAddress.
     * @example
     * // Create one DeliveryAddress
     * const DeliveryAddress = await prisma.deliveryAddress.create({
     *   data: {
     *     // ... data to create a DeliveryAddress
     *   }
     * })
     * 
     */
    create<T extends DeliveryAddressCreateArgs>(args: SelectSubset<T, DeliveryAddressCreateArgs<ExtArgs>>): Prisma__DeliveryAddressClient<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DeliveryAddresses.
     * @param {DeliveryAddressCreateManyArgs} args - Arguments to create many DeliveryAddresses.
     * @example
     * // Create many DeliveryAddresses
     * const deliveryAddress = await prisma.deliveryAddress.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeliveryAddressCreateManyArgs>(args?: SelectSubset<T, DeliveryAddressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DeliveryAddresses and returns the data saved in the database.
     * @param {DeliveryAddressCreateManyAndReturnArgs} args - Arguments to create many DeliveryAddresses.
     * @example
     * // Create many DeliveryAddresses
     * const deliveryAddress = await prisma.deliveryAddress.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DeliveryAddresses and only return the `id`
     * const deliveryAddressWithIdOnly = await prisma.deliveryAddress.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DeliveryAddressCreateManyAndReturnArgs>(args?: SelectSubset<T, DeliveryAddressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DeliveryAddress.
     * @param {DeliveryAddressDeleteArgs} args - Arguments to delete one DeliveryAddress.
     * @example
     * // Delete one DeliveryAddress
     * const DeliveryAddress = await prisma.deliveryAddress.delete({
     *   where: {
     *     // ... filter to delete one DeliveryAddress
     *   }
     * })
     * 
     */
    delete<T extends DeliveryAddressDeleteArgs>(args: SelectSubset<T, DeliveryAddressDeleteArgs<ExtArgs>>): Prisma__DeliveryAddressClient<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DeliveryAddress.
     * @param {DeliveryAddressUpdateArgs} args - Arguments to update one DeliveryAddress.
     * @example
     * // Update one DeliveryAddress
     * const deliveryAddress = await prisma.deliveryAddress.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeliveryAddressUpdateArgs>(args: SelectSubset<T, DeliveryAddressUpdateArgs<ExtArgs>>): Prisma__DeliveryAddressClient<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DeliveryAddresses.
     * @param {DeliveryAddressDeleteManyArgs} args - Arguments to filter DeliveryAddresses to delete.
     * @example
     * // Delete a few DeliveryAddresses
     * const { count } = await prisma.deliveryAddress.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeliveryAddressDeleteManyArgs>(args?: SelectSubset<T, DeliveryAddressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DeliveryAddresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryAddressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DeliveryAddresses
     * const deliveryAddress = await prisma.deliveryAddress.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeliveryAddressUpdateManyArgs>(args: SelectSubset<T, DeliveryAddressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DeliveryAddresses and returns the data updated in the database.
     * @param {DeliveryAddressUpdateManyAndReturnArgs} args - Arguments to update many DeliveryAddresses.
     * @example
     * // Update many DeliveryAddresses
     * const deliveryAddress = await prisma.deliveryAddress.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DeliveryAddresses and only return the `id`
     * const deliveryAddressWithIdOnly = await prisma.deliveryAddress.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DeliveryAddressUpdateManyAndReturnArgs>(args: SelectSubset<T, DeliveryAddressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DeliveryAddress.
     * @param {DeliveryAddressUpsertArgs} args - Arguments to update or create a DeliveryAddress.
     * @example
     * // Update or create a DeliveryAddress
     * const deliveryAddress = await prisma.deliveryAddress.upsert({
     *   create: {
     *     // ... data to create a DeliveryAddress
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DeliveryAddress we want to update
     *   }
     * })
     */
    upsert<T extends DeliveryAddressUpsertArgs>(args: SelectSubset<T, DeliveryAddressUpsertArgs<ExtArgs>>): Prisma__DeliveryAddressClient<$Result.GetResult<Prisma.$DeliveryAddressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DeliveryAddresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryAddressCountArgs} args - Arguments to filter DeliveryAddresses to count.
     * @example
     * // Count the number of DeliveryAddresses
     * const count = await prisma.deliveryAddress.count({
     *   where: {
     *     // ... the filter for the DeliveryAddresses we want to count
     *   }
     * })
    **/
    count<T extends DeliveryAddressCountArgs>(
      args?: Subset<T, DeliveryAddressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeliveryAddressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DeliveryAddress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryAddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeliveryAddressAggregateArgs>(args: Subset<T, DeliveryAddressAggregateArgs>): Prisma.PrismaPromise<GetDeliveryAddressAggregateType<T>>

    /**
     * Group by DeliveryAddress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryAddressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeliveryAddressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeliveryAddressGroupByArgs['orderBy'] }
        : { orderBy?: DeliveryAddressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeliveryAddressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeliveryAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DeliveryAddress model
   */
  readonly fields: DeliveryAddressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DeliveryAddress.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeliveryAddressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DeliveryAddress model
   */
  interface DeliveryAddressFieldRefs {
    readonly id: FieldRef<"DeliveryAddress", 'String'>
    readonly userId: FieldRef<"DeliveryAddress", 'String'>
    readonly address: FieldRef<"DeliveryAddress", 'String'>
    readonly city: FieldRef<"DeliveryAddress", 'String'>
    readonly state: FieldRef<"DeliveryAddress", 'String'>
    readonly postalCode: FieldRef<"DeliveryAddress", 'String'>
    readonly country: FieldRef<"DeliveryAddress", 'String'>
    readonly isDefault: FieldRef<"DeliveryAddress", 'Boolean'>
    readonly label: FieldRef<"DeliveryAddress", 'String'>
    readonly createdAt: FieldRef<"DeliveryAddress", 'DateTime'>
    readonly updatedAt: FieldRef<"DeliveryAddress", 'DateTime'>
    readonly isDeleted: FieldRef<"DeliveryAddress", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * DeliveryAddress findUnique
   */
  export type DeliveryAddressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryAddress to fetch.
     */
    where: DeliveryAddressWhereUniqueInput
  }

  /**
   * DeliveryAddress findUniqueOrThrow
   */
  export type DeliveryAddressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryAddress to fetch.
     */
    where: DeliveryAddressWhereUniqueInput
  }

  /**
   * DeliveryAddress findFirst
   */
  export type DeliveryAddressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryAddress to fetch.
     */
    where?: DeliveryAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryAddresses to fetch.
     */
    orderBy?: DeliveryAddressOrderByWithRelationInput | DeliveryAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeliveryAddresses.
     */
    cursor?: DeliveryAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeliveryAddresses.
     */
    distinct?: DeliveryAddressScalarFieldEnum | DeliveryAddressScalarFieldEnum[]
  }

  /**
   * DeliveryAddress findFirstOrThrow
   */
  export type DeliveryAddressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryAddress to fetch.
     */
    where?: DeliveryAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryAddresses to fetch.
     */
    orderBy?: DeliveryAddressOrderByWithRelationInput | DeliveryAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeliveryAddresses.
     */
    cursor?: DeliveryAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeliveryAddresses.
     */
    distinct?: DeliveryAddressScalarFieldEnum | DeliveryAddressScalarFieldEnum[]
  }

  /**
   * DeliveryAddress findMany
   */
  export type DeliveryAddressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryAddresses to fetch.
     */
    where?: DeliveryAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryAddresses to fetch.
     */
    orderBy?: DeliveryAddressOrderByWithRelationInput | DeliveryAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DeliveryAddresses.
     */
    cursor?: DeliveryAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryAddresses.
     */
    skip?: number
    distinct?: DeliveryAddressScalarFieldEnum | DeliveryAddressScalarFieldEnum[]
  }

  /**
   * DeliveryAddress create
   */
  export type DeliveryAddressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    /**
     * The data needed to create a DeliveryAddress.
     */
    data: XOR<DeliveryAddressCreateInput, DeliveryAddressUncheckedCreateInput>
  }

  /**
   * DeliveryAddress createMany
   */
  export type DeliveryAddressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DeliveryAddresses.
     */
    data: DeliveryAddressCreateManyInput | DeliveryAddressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DeliveryAddress createManyAndReturn
   */
  export type DeliveryAddressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * The data used to create many DeliveryAddresses.
     */
    data: DeliveryAddressCreateManyInput | DeliveryAddressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DeliveryAddress update
   */
  export type DeliveryAddressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    /**
     * The data needed to update a DeliveryAddress.
     */
    data: XOR<DeliveryAddressUpdateInput, DeliveryAddressUncheckedUpdateInput>
    /**
     * Choose, which DeliveryAddress to update.
     */
    where: DeliveryAddressWhereUniqueInput
  }

  /**
   * DeliveryAddress updateMany
   */
  export type DeliveryAddressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DeliveryAddresses.
     */
    data: XOR<DeliveryAddressUpdateManyMutationInput, DeliveryAddressUncheckedUpdateManyInput>
    /**
     * Filter which DeliveryAddresses to update
     */
    where?: DeliveryAddressWhereInput
    /**
     * Limit how many DeliveryAddresses to update.
     */
    limit?: number
  }

  /**
   * DeliveryAddress updateManyAndReturn
   */
  export type DeliveryAddressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * The data used to update DeliveryAddresses.
     */
    data: XOR<DeliveryAddressUpdateManyMutationInput, DeliveryAddressUncheckedUpdateManyInput>
    /**
     * Filter which DeliveryAddresses to update
     */
    where?: DeliveryAddressWhereInput
    /**
     * Limit how many DeliveryAddresses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DeliveryAddress upsert
   */
  export type DeliveryAddressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    /**
     * The filter to search for the DeliveryAddress to update in case it exists.
     */
    where: DeliveryAddressWhereUniqueInput
    /**
     * In case the DeliveryAddress found by the `where` argument doesn't exist, create a new DeliveryAddress with this data.
     */
    create: XOR<DeliveryAddressCreateInput, DeliveryAddressUncheckedCreateInput>
    /**
     * In case the DeliveryAddress was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeliveryAddressUpdateInput, DeliveryAddressUncheckedUpdateInput>
  }

  /**
   * DeliveryAddress delete
   */
  export type DeliveryAddressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
    /**
     * Filter which DeliveryAddress to delete.
     */
    where: DeliveryAddressWhereUniqueInput
  }

  /**
   * DeliveryAddress deleteMany
   */
  export type DeliveryAddressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeliveryAddresses to delete
     */
    where?: DeliveryAddressWhereInput
    /**
     * Limit how many DeliveryAddresses to delete.
     */
    limit?: number
  }

  /**
   * DeliveryAddress without action
   */
  export type DeliveryAddressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryAddress
     */
    select?: DeliveryAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryAddress
     */
    omit?: DeliveryAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryAddressInclude<ExtArgs> | null
  }


  /**
   * Model PaymentGatewayServiceProvider
   */

  export type AggregatePaymentGatewayServiceProvider = {
    _count: PaymentGatewayServiceProviderCountAggregateOutputType | null
    _min: PaymentGatewayServiceProviderMinAggregateOutputType | null
    _max: PaymentGatewayServiceProviderMaxAggregateOutputType | null
  }

  export type PaymentGatewayServiceProviderMinAggregateOutputType = {
    id: string | null
    name: string | null
    type: string | null
    countryCode: string | null
    currencyCode: string | null
    isActive: boolean | null
    logoUrl: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type PaymentGatewayServiceProviderMaxAggregateOutputType = {
    id: string | null
    name: string | null
    type: string | null
    countryCode: string | null
    currencyCode: string | null
    isActive: boolean | null
    logoUrl: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type PaymentGatewayServiceProviderCountAggregateOutputType = {
    id: number
    name: number
    type: number
    countryCode: number
    currencyCode: number
    isActive: number
    logoUrl: number
    description: number
    metadata: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type PaymentGatewayServiceProviderMinAggregateInputType = {
    id?: true
    name?: true
    type?: true
    countryCode?: true
    currencyCode?: true
    isActive?: true
    logoUrl?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type PaymentGatewayServiceProviderMaxAggregateInputType = {
    id?: true
    name?: true
    type?: true
    countryCode?: true
    currencyCode?: true
    isActive?: true
    logoUrl?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type PaymentGatewayServiceProviderCountAggregateInputType = {
    id?: true
    name?: true
    type?: true
    countryCode?: true
    currencyCode?: true
    isActive?: true
    logoUrl?: true
    description?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type PaymentGatewayServiceProviderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentGatewayServiceProvider to aggregate.
     */
    where?: PaymentGatewayServiceProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentGatewayServiceProviders to fetch.
     */
    orderBy?: PaymentGatewayServiceProviderOrderByWithRelationInput | PaymentGatewayServiceProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentGatewayServiceProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentGatewayServiceProviders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentGatewayServiceProviders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentGatewayServiceProviders
    **/
    _count?: true | PaymentGatewayServiceProviderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentGatewayServiceProviderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentGatewayServiceProviderMaxAggregateInputType
  }

  export type GetPaymentGatewayServiceProviderAggregateType<T extends PaymentGatewayServiceProviderAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentGatewayServiceProvider]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentGatewayServiceProvider[P]>
      : GetScalarType<T[P], AggregatePaymentGatewayServiceProvider[P]>
  }




  export type PaymentGatewayServiceProviderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentGatewayServiceProviderWhereInput
    orderBy?: PaymentGatewayServiceProviderOrderByWithAggregationInput | PaymentGatewayServiceProviderOrderByWithAggregationInput[]
    by: PaymentGatewayServiceProviderScalarFieldEnum[] | PaymentGatewayServiceProviderScalarFieldEnum
    having?: PaymentGatewayServiceProviderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentGatewayServiceProviderCountAggregateInputType | true
    _min?: PaymentGatewayServiceProviderMinAggregateInputType
    _max?: PaymentGatewayServiceProviderMaxAggregateInputType
  }

  export type PaymentGatewayServiceProviderGroupByOutputType = {
    id: string
    name: string
    type: string
    countryCode: string
    currencyCode: string
    isActive: boolean
    logoUrl: string | null
    description: string | null
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    _count: PaymentGatewayServiceProviderCountAggregateOutputType | null
    _min: PaymentGatewayServiceProviderMinAggregateOutputType | null
    _max: PaymentGatewayServiceProviderMaxAggregateOutputType | null
  }

  type GetPaymentGatewayServiceProviderGroupByPayload<T extends PaymentGatewayServiceProviderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGatewayServiceProviderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGatewayServiceProviderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGatewayServiceProviderGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGatewayServiceProviderGroupByOutputType[P]>
        }
      >
    >


  export type PaymentGatewayServiceProviderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    countryCode?: boolean
    currencyCode?: boolean
    isActive?: boolean
    logoUrl?: boolean
    description?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["paymentGatewayServiceProvider"]>

  export type PaymentGatewayServiceProviderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    countryCode?: boolean
    currencyCode?: boolean
    isActive?: boolean
    logoUrl?: boolean
    description?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["paymentGatewayServiceProvider"]>

  export type PaymentGatewayServiceProviderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    countryCode?: boolean
    currencyCode?: boolean
    isActive?: boolean
    logoUrl?: boolean
    description?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["paymentGatewayServiceProvider"]>

  export type PaymentGatewayServiceProviderSelectScalar = {
    id?: boolean
    name?: boolean
    type?: boolean
    countryCode?: boolean
    currencyCode?: boolean
    isActive?: boolean
    logoUrl?: boolean
    description?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type PaymentGatewayServiceProviderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "type" | "countryCode" | "currencyCode" | "isActive" | "logoUrl" | "description" | "metadata" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["paymentGatewayServiceProvider"]>

  export type $PaymentGatewayServiceProviderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentGatewayServiceProvider"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      type: string
      countryCode: string
      currencyCode: string
      isActive: boolean
      logoUrl: string | null
      description: string | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["paymentGatewayServiceProvider"]>
    composites: {}
  }

  type PaymentGatewayServiceProviderGetPayload<S extends boolean | null | undefined | PaymentGatewayServiceProviderDefaultArgs> = $Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload, S>

  type PaymentGatewayServiceProviderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentGatewayServiceProviderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentGatewayServiceProviderCountAggregateInputType | true
    }

  export interface PaymentGatewayServiceProviderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentGatewayServiceProvider'], meta: { name: 'PaymentGatewayServiceProvider' } }
    /**
     * Find zero or one PaymentGatewayServiceProvider that matches the filter.
     * @param {PaymentGatewayServiceProviderFindUniqueArgs} args - Arguments to find a PaymentGatewayServiceProvider
     * @example
     * // Get one PaymentGatewayServiceProvider
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentGatewayServiceProviderFindUniqueArgs>(args: SelectSubset<T, PaymentGatewayServiceProviderFindUniqueArgs<ExtArgs>>): Prisma__PaymentGatewayServiceProviderClient<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentGatewayServiceProvider that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentGatewayServiceProviderFindUniqueOrThrowArgs} args - Arguments to find a PaymentGatewayServiceProvider
     * @example
     * // Get one PaymentGatewayServiceProvider
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentGatewayServiceProviderFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentGatewayServiceProviderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentGatewayServiceProviderClient<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentGatewayServiceProvider that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGatewayServiceProviderFindFirstArgs} args - Arguments to find a PaymentGatewayServiceProvider
     * @example
     * // Get one PaymentGatewayServiceProvider
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentGatewayServiceProviderFindFirstArgs>(args?: SelectSubset<T, PaymentGatewayServiceProviderFindFirstArgs<ExtArgs>>): Prisma__PaymentGatewayServiceProviderClient<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentGatewayServiceProvider that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGatewayServiceProviderFindFirstOrThrowArgs} args - Arguments to find a PaymentGatewayServiceProvider
     * @example
     * // Get one PaymentGatewayServiceProvider
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentGatewayServiceProviderFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentGatewayServiceProviderFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentGatewayServiceProviderClient<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentGatewayServiceProviders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGatewayServiceProviderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentGatewayServiceProviders
     * const paymentGatewayServiceProviders = await prisma.paymentGatewayServiceProvider.findMany()
     * 
     * // Get first 10 PaymentGatewayServiceProviders
     * const paymentGatewayServiceProviders = await prisma.paymentGatewayServiceProvider.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentGatewayServiceProviderWithIdOnly = await prisma.paymentGatewayServiceProvider.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentGatewayServiceProviderFindManyArgs>(args?: SelectSubset<T, PaymentGatewayServiceProviderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentGatewayServiceProvider.
     * @param {PaymentGatewayServiceProviderCreateArgs} args - Arguments to create a PaymentGatewayServiceProvider.
     * @example
     * // Create one PaymentGatewayServiceProvider
     * const PaymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.create({
     *   data: {
     *     // ... data to create a PaymentGatewayServiceProvider
     *   }
     * })
     * 
     */
    create<T extends PaymentGatewayServiceProviderCreateArgs>(args: SelectSubset<T, PaymentGatewayServiceProviderCreateArgs<ExtArgs>>): Prisma__PaymentGatewayServiceProviderClient<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentGatewayServiceProviders.
     * @param {PaymentGatewayServiceProviderCreateManyArgs} args - Arguments to create many PaymentGatewayServiceProviders.
     * @example
     * // Create many PaymentGatewayServiceProviders
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentGatewayServiceProviderCreateManyArgs>(args?: SelectSubset<T, PaymentGatewayServiceProviderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentGatewayServiceProviders and returns the data saved in the database.
     * @param {PaymentGatewayServiceProviderCreateManyAndReturnArgs} args - Arguments to create many PaymentGatewayServiceProviders.
     * @example
     * // Create many PaymentGatewayServiceProviders
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentGatewayServiceProviders and only return the `id`
     * const paymentGatewayServiceProviderWithIdOnly = await prisma.paymentGatewayServiceProvider.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentGatewayServiceProviderCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentGatewayServiceProviderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentGatewayServiceProvider.
     * @param {PaymentGatewayServiceProviderDeleteArgs} args - Arguments to delete one PaymentGatewayServiceProvider.
     * @example
     * // Delete one PaymentGatewayServiceProvider
     * const PaymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.delete({
     *   where: {
     *     // ... filter to delete one PaymentGatewayServiceProvider
     *   }
     * })
     * 
     */
    delete<T extends PaymentGatewayServiceProviderDeleteArgs>(args: SelectSubset<T, PaymentGatewayServiceProviderDeleteArgs<ExtArgs>>): Prisma__PaymentGatewayServiceProviderClient<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentGatewayServiceProvider.
     * @param {PaymentGatewayServiceProviderUpdateArgs} args - Arguments to update one PaymentGatewayServiceProvider.
     * @example
     * // Update one PaymentGatewayServiceProvider
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentGatewayServiceProviderUpdateArgs>(args: SelectSubset<T, PaymentGatewayServiceProviderUpdateArgs<ExtArgs>>): Prisma__PaymentGatewayServiceProviderClient<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentGatewayServiceProviders.
     * @param {PaymentGatewayServiceProviderDeleteManyArgs} args - Arguments to filter PaymentGatewayServiceProviders to delete.
     * @example
     * // Delete a few PaymentGatewayServiceProviders
     * const { count } = await prisma.paymentGatewayServiceProvider.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentGatewayServiceProviderDeleteManyArgs>(args?: SelectSubset<T, PaymentGatewayServiceProviderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentGatewayServiceProviders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGatewayServiceProviderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentGatewayServiceProviders
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentGatewayServiceProviderUpdateManyArgs>(args: SelectSubset<T, PaymentGatewayServiceProviderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentGatewayServiceProviders and returns the data updated in the database.
     * @param {PaymentGatewayServiceProviderUpdateManyAndReturnArgs} args - Arguments to update many PaymentGatewayServiceProviders.
     * @example
     * // Update many PaymentGatewayServiceProviders
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentGatewayServiceProviders and only return the `id`
     * const paymentGatewayServiceProviderWithIdOnly = await prisma.paymentGatewayServiceProvider.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentGatewayServiceProviderUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentGatewayServiceProviderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentGatewayServiceProvider.
     * @param {PaymentGatewayServiceProviderUpsertArgs} args - Arguments to update or create a PaymentGatewayServiceProvider.
     * @example
     * // Update or create a PaymentGatewayServiceProvider
     * const paymentGatewayServiceProvider = await prisma.paymentGatewayServiceProvider.upsert({
     *   create: {
     *     // ... data to create a PaymentGatewayServiceProvider
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentGatewayServiceProvider we want to update
     *   }
     * })
     */
    upsert<T extends PaymentGatewayServiceProviderUpsertArgs>(args: SelectSubset<T, PaymentGatewayServiceProviderUpsertArgs<ExtArgs>>): Prisma__PaymentGatewayServiceProviderClient<$Result.GetResult<Prisma.$PaymentGatewayServiceProviderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentGatewayServiceProviders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGatewayServiceProviderCountArgs} args - Arguments to filter PaymentGatewayServiceProviders to count.
     * @example
     * // Count the number of PaymentGatewayServiceProviders
     * const count = await prisma.paymentGatewayServiceProvider.count({
     *   where: {
     *     // ... the filter for the PaymentGatewayServiceProviders we want to count
     *   }
     * })
    **/
    count<T extends PaymentGatewayServiceProviderCountArgs>(
      args?: Subset<T, PaymentGatewayServiceProviderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentGatewayServiceProviderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentGatewayServiceProvider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGatewayServiceProviderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentGatewayServiceProviderAggregateArgs>(args: Subset<T, PaymentGatewayServiceProviderAggregateArgs>): Prisma.PrismaPromise<GetPaymentGatewayServiceProviderAggregateType<T>>

    /**
     * Group by PaymentGatewayServiceProvider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGatewayServiceProviderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGatewayServiceProviderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGatewayServiceProviderGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGatewayServiceProviderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGatewayServiceProviderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGatewayServiceProviderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentGatewayServiceProvider model
   */
  readonly fields: PaymentGatewayServiceProviderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentGatewayServiceProvider.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentGatewayServiceProviderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentGatewayServiceProvider model
   */
  interface PaymentGatewayServiceProviderFieldRefs {
    readonly id: FieldRef<"PaymentGatewayServiceProvider", 'String'>
    readonly name: FieldRef<"PaymentGatewayServiceProvider", 'String'>
    readonly type: FieldRef<"PaymentGatewayServiceProvider", 'String'>
    readonly countryCode: FieldRef<"PaymentGatewayServiceProvider", 'String'>
    readonly currencyCode: FieldRef<"PaymentGatewayServiceProvider", 'String'>
    readonly isActive: FieldRef<"PaymentGatewayServiceProvider", 'Boolean'>
    readonly logoUrl: FieldRef<"PaymentGatewayServiceProvider", 'String'>
    readonly description: FieldRef<"PaymentGatewayServiceProvider", 'String'>
    readonly metadata: FieldRef<"PaymentGatewayServiceProvider", 'Json'>
    readonly createdAt: FieldRef<"PaymentGatewayServiceProvider", 'DateTime'>
    readonly updatedAt: FieldRef<"PaymentGatewayServiceProvider", 'DateTime'>
    readonly createdBy: FieldRef<"PaymentGatewayServiceProvider", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PaymentGatewayServiceProvider findUnique
   */
  export type PaymentGatewayServiceProviderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * Filter, which PaymentGatewayServiceProvider to fetch.
     */
    where: PaymentGatewayServiceProviderWhereUniqueInput
  }

  /**
   * PaymentGatewayServiceProvider findUniqueOrThrow
   */
  export type PaymentGatewayServiceProviderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * Filter, which PaymentGatewayServiceProvider to fetch.
     */
    where: PaymentGatewayServiceProviderWhereUniqueInput
  }

  /**
   * PaymentGatewayServiceProvider findFirst
   */
  export type PaymentGatewayServiceProviderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * Filter, which PaymentGatewayServiceProvider to fetch.
     */
    where?: PaymentGatewayServiceProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentGatewayServiceProviders to fetch.
     */
    orderBy?: PaymentGatewayServiceProviderOrderByWithRelationInput | PaymentGatewayServiceProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentGatewayServiceProviders.
     */
    cursor?: PaymentGatewayServiceProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentGatewayServiceProviders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentGatewayServiceProviders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentGatewayServiceProviders.
     */
    distinct?: PaymentGatewayServiceProviderScalarFieldEnum | PaymentGatewayServiceProviderScalarFieldEnum[]
  }

  /**
   * PaymentGatewayServiceProvider findFirstOrThrow
   */
  export type PaymentGatewayServiceProviderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * Filter, which PaymentGatewayServiceProvider to fetch.
     */
    where?: PaymentGatewayServiceProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentGatewayServiceProviders to fetch.
     */
    orderBy?: PaymentGatewayServiceProviderOrderByWithRelationInput | PaymentGatewayServiceProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentGatewayServiceProviders.
     */
    cursor?: PaymentGatewayServiceProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentGatewayServiceProviders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentGatewayServiceProviders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentGatewayServiceProviders.
     */
    distinct?: PaymentGatewayServiceProviderScalarFieldEnum | PaymentGatewayServiceProviderScalarFieldEnum[]
  }

  /**
   * PaymentGatewayServiceProvider findMany
   */
  export type PaymentGatewayServiceProviderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * Filter, which PaymentGatewayServiceProviders to fetch.
     */
    where?: PaymentGatewayServiceProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentGatewayServiceProviders to fetch.
     */
    orderBy?: PaymentGatewayServiceProviderOrderByWithRelationInput | PaymentGatewayServiceProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentGatewayServiceProviders.
     */
    cursor?: PaymentGatewayServiceProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentGatewayServiceProviders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentGatewayServiceProviders.
     */
    skip?: number
    distinct?: PaymentGatewayServiceProviderScalarFieldEnum | PaymentGatewayServiceProviderScalarFieldEnum[]
  }

  /**
   * PaymentGatewayServiceProvider create
   */
  export type PaymentGatewayServiceProviderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * The data needed to create a PaymentGatewayServiceProvider.
     */
    data: XOR<PaymentGatewayServiceProviderCreateInput, PaymentGatewayServiceProviderUncheckedCreateInput>
  }

  /**
   * PaymentGatewayServiceProvider createMany
   */
  export type PaymentGatewayServiceProviderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentGatewayServiceProviders.
     */
    data: PaymentGatewayServiceProviderCreateManyInput | PaymentGatewayServiceProviderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentGatewayServiceProvider createManyAndReturn
   */
  export type PaymentGatewayServiceProviderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentGatewayServiceProviders.
     */
    data: PaymentGatewayServiceProviderCreateManyInput | PaymentGatewayServiceProviderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentGatewayServiceProvider update
   */
  export type PaymentGatewayServiceProviderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * The data needed to update a PaymentGatewayServiceProvider.
     */
    data: XOR<PaymentGatewayServiceProviderUpdateInput, PaymentGatewayServiceProviderUncheckedUpdateInput>
    /**
     * Choose, which PaymentGatewayServiceProvider to update.
     */
    where: PaymentGatewayServiceProviderWhereUniqueInput
  }

  /**
   * PaymentGatewayServiceProvider updateMany
   */
  export type PaymentGatewayServiceProviderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentGatewayServiceProviders.
     */
    data: XOR<PaymentGatewayServiceProviderUpdateManyMutationInput, PaymentGatewayServiceProviderUncheckedUpdateManyInput>
    /**
     * Filter which PaymentGatewayServiceProviders to update
     */
    where?: PaymentGatewayServiceProviderWhereInput
    /**
     * Limit how many PaymentGatewayServiceProviders to update.
     */
    limit?: number
  }

  /**
   * PaymentGatewayServiceProvider updateManyAndReturn
   */
  export type PaymentGatewayServiceProviderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * The data used to update PaymentGatewayServiceProviders.
     */
    data: XOR<PaymentGatewayServiceProviderUpdateManyMutationInput, PaymentGatewayServiceProviderUncheckedUpdateManyInput>
    /**
     * Filter which PaymentGatewayServiceProviders to update
     */
    where?: PaymentGatewayServiceProviderWhereInput
    /**
     * Limit how many PaymentGatewayServiceProviders to update.
     */
    limit?: number
  }

  /**
   * PaymentGatewayServiceProvider upsert
   */
  export type PaymentGatewayServiceProviderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * The filter to search for the PaymentGatewayServiceProvider to update in case it exists.
     */
    where: PaymentGatewayServiceProviderWhereUniqueInput
    /**
     * In case the PaymentGatewayServiceProvider found by the `where` argument doesn't exist, create a new PaymentGatewayServiceProvider with this data.
     */
    create: XOR<PaymentGatewayServiceProviderCreateInput, PaymentGatewayServiceProviderUncheckedCreateInput>
    /**
     * In case the PaymentGatewayServiceProvider was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentGatewayServiceProviderUpdateInput, PaymentGatewayServiceProviderUncheckedUpdateInput>
  }

  /**
   * PaymentGatewayServiceProvider delete
   */
  export type PaymentGatewayServiceProviderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
    /**
     * Filter which PaymentGatewayServiceProvider to delete.
     */
    where: PaymentGatewayServiceProviderWhereUniqueInput
  }

  /**
   * PaymentGatewayServiceProvider deleteMany
   */
  export type PaymentGatewayServiceProviderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentGatewayServiceProviders to delete
     */
    where?: PaymentGatewayServiceProviderWhereInput
    /**
     * Limit how many PaymentGatewayServiceProviders to delete.
     */
    limit?: number
  }

  /**
   * PaymentGatewayServiceProvider without action
   */
  export type PaymentGatewayServiceProviderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentGatewayServiceProvider
     */
    select?: PaymentGatewayServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentGatewayServiceProvider
     */
    omit?: PaymentGatewayServiceProviderOmit<ExtArgs> | null
  }


  /**
   * Model Device
   */

  export type AggregateDevice = {
    _count: DeviceCountAggregateOutputType | null
    _min: DeviceMinAggregateOutputType | null
    _max: DeviceMaxAggregateOutputType | null
  }

  export type DeviceMinAggregateOutputType = {
    id: string | null
    deviceId: string | null
    deviceName: string | null
    deviceType: string | null
    isVerified: boolean | null
    lastLoginAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    brand: string | null
    modelName: string | null
    osVersion: string | null
    phoneNumber: string | null
    lastLogoutAt: Date | null
  }

  export type DeviceMaxAggregateOutputType = {
    id: string | null
    deviceId: string | null
    deviceName: string | null
    deviceType: string | null
    isVerified: boolean | null
    lastLoginAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    brand: string | null
    modelName: string | null
    osVersion: string | null
    phoneNumber: string | null
    lastLogoutAt: Date | null
  }

  export type DeviceCountAggregateOutputType = {
    id: number
    deviceId: number
    deviceName: number
    deviceType: number
    isVerified: number
    lastLoginAt: number
    createdAt: number
    updatedAt: number
    userId: number
    brand: number
    modelName: number
    osVersion: number
    phoneNumber: number
    lastLogoutAt: number
    _all: number
  }


  export type DeviceMinAggregateInputType = {
    id?: true
    deviceId?: true
    deviceName?: true
    deviceType?: true
    isVerified?: true
    lastLoginAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    brand?: true
    modelName?: true
    osVersion?: true
    phoneNumber?: true
    lastLogoutAt?: true
  }

  export type DeviceMaxAggregateInputType = {
    id?: true
    deviceId?: true
    deviceName?: true
    deviceType?: true
    isVerified?: true
    lastLoginAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    brand?: true
    modelName?: true
    osVersion?: true
    phoneNumber?: true
    lastLogoutAt?: true
  }

  export type DeviceCountAggregateInputType = {
    id?: true
    deviceId?: true
    deviceName?: true
    deviceType?: true
    isVerified?: true
    lastLoginAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    brand?: true
    modelName?: true
    osVersion?: true
    phoneNumber?: true
    lastLogoutAt?: true
    _all?: true
  }

  export type DeviceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Device to aggregate.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Devices
    **/
    _count?: true | DeviceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeviceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeviceMaxAggregateInputType
  }

  export type GetDeviceAggregateType<T extends DeviceAggregateArgs> = {
        [P in keyof T & keyof AggregateDevice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevice[P]>
      : GetScalarType<T[P], AggregateDevice[P]>
  }




  export type DeviceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeviceWhereInput
    orderBy?: DeviceOrderByWithAggregationInput | DeviceOrderByWithAggregationInput[]
    by: DeviceScalarFieldEnum[] | DeviceScalarFieldEnum
    having?: DeviceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeviceCountAggregateInputType | true
    _min?: DeviceMinAggregateInputType
    _max?: DeviceMaxAggregateInputType
  }

  export type DeviceGroupByOutputType = {
    id: string
    deviceId: string
    deviceName: string
    deviceType: string
    isVerified: boolean
    lastLoginAt: Date
    createdAt: Date
    updatedAt: Date
    userId: string
    brand: string
    modelName: string
    osVersion: string
    phoneNumber: string
    lastLogoutAt: Date | null
    _count: DeviceCountAggregateOutputType | null
    _min: DeviceMinAggregateOutputType | null
    _max: DeviceMaxAggregateOutputType | null
  }

  type GetDeviceGroupByPayload<T extends DeviceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeviceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeviceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeviceGroupByOutputType[P]>
            : GetScalarType<T[P], DeviceGroupByOutputType[P]>
        }
      >
    >


  export type DeviceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    deviceId?: boolean
    deviceName?: boolean
    deviceType?: boolean
    isVerified?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    brand?: boolean
    modelName?: boolean
    osVersion?: boolean
    phoneNumber?: boolean
    lastLogoutAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    sessions?: boolean | Device$sessionsArgs<ExtArgs>
    _count?: boolean | DeviceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type DeviceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    deviceId?: boolean
    deviceName?: boolean
    deviceType?: boolean
    isVerified?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    brand?: boolean
    modelName?: boolean
    osVersion?: boolean
    phoneNumber?: boolean
    lastLogoutAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type DeviceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    deviceId?: boolean
    deviceName?: boolean
    deviceType?: boolean
    isVerified?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    brand?: boolean
    modelName?: boolean
    osVersion?: boolean
    phoneNumber?: boolean
    lastLogoutAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type DeviceSelectScalar = {
    id?: boolean
    deviceId?: boolean
    deviceName?: boolean
    deviceType?: boolean
    isVerified?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    brand?: boolean
    modelName?: boolean
    osVersion?: boolean
    phoneNumber?: boolean
    lastLogoutAt?: boolean
  }

  export type DeviceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "deviceId" | "deviceName" | "deviceType" | "isVerified" | "lastLoginAt" | "createdAt" | "updatedAt" | "userId" | "brand" | "modelName" | "osVersion" | "phoneNumber" | "lastLogoutAt", ExtArgs["result"]["device"]>
  export type DeviceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    sessions?: boolean | Device$sessionsArgs<ExtArgs>
    _count?: boolean | DeviceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DeviceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DeviceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DevicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Device"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      sessions: Prisma.$SessionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      deviceId: string
      deviceName: string
      deviceType: string
      isVerified: boolean
      lastLoginAt: Date
      createdAt: Date
      updatedAt: Date
      userId: string
      brand: string
      modelName: string
      osVersion: string
      phoneNumber: string
      lastLogoutAt: Date | null
    }, ExtArgs["result"]["device"]>
    composites: {}
  }

  type DeviceGetPayload<S extends boolean | null | undefined | DeviceDefaultArgs> = $Result.GetResult<Prisma.$DevicePayload, S>

  type DeviceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DeviceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DeviceCountAggregateInputType | true
    }

  export interface DeviceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Device'], meta: { name: 'Device' } }
    /**
     * Find zero or one Device that matches the filter.
     * @param {DeviceFindUniqueArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeviceFindUniqueArgs>(args: SelectSubset<T, DeviceFindUniqueArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Device that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DeviceFindUniqueOrThrowArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeviceFindUniqueOrThrowArgs>(args: SelectSubset<T, DeviceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Device that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceFindFirstArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeviceFindFirstArgs>(args?: SelectSubset<T, DeviceFindFirstArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Device that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceFindFirstOrThrowArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeviceFindFirstOrThrowArgs>(args?: SelectSubset<T, DeviceFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Devices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Devices
     * const devices = await prisma.device.findMany()
     * 
     * // Get first 10 Devices
     * const devices = await prisma.device.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const deviceWithIdOnly = await prisma.device.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DeviceFindManyArgs>(args?: SelectSubset<T, DeviceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Device.
     * @param {DeviceCreateArgs} args - Arguments to create a Device.
     * @example
     * // Create one Device
     * const Device = await prisma.device.create({
     *   data: {
     *     // ... data to create a Device
     *   }
     * })
     * 
     */
    create<T extends DeviceCreateArgs>(args: SelectSubset<T, DeviceCreateArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Devices.
     * @param {DeviceCreateManyArgs} args - Arguments to create many Devices.
     * @example
     * // Create many Devices
     * const device = await prisma.device.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeviceCreateManyArgs>(args?: SelectSubset<T, DeviceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Devices and returns the data saved in the database.
     * @param {DeviceCreateManyAndReturnArgs} args - Arguments to create many Devices.
     * @example
     * // Create many Devices
     * const device = await prisma.device.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Devices and only return the `id`
     * const deviceWithIdOnly = await prisma.device.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DeviceCreateManyAndReturnArgs>(args?: SelectSubset<T, DeviceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Device.
     * @param {DeviceDeleteArgs} args - Arguments to delete one Device.
     * @example
     * // Delete one Device
     * const Device = await prisma.device.delete({
     *   where: {
     *     // ... filter to delete one Device
     *   }
     * })
     * 
     */
    delete<T extends DeviceDeleteArgs>(args: SelectSubset<T, DeviceDeleteArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Device.
     * @param {DeviceUpdateArgs} args - Arguments to update one Device.
     * @example
     * // Update one Device
     * const device = await prisma.device.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeviceUpdateArgs>(args: SelectSubset<T, DeviceUpdateArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Devices.
     * @param {DeviceDeleteManyArgs} args - Arguments to filter Devices to delete.
     * @example
     * // Delete a few Devices
     * const { count } = await prisma.device.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeviceDeleteManyArgs>(args?: SelectSubset<T, DeviceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Devices
     * const device = await prisma.device.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeviceUpdateManyArgs>(args: SelectSubset<T, DeviceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devices and returns the data updated in the database.
     * @param {DeviceUpdateManyAndReturnArgs} args - Arguments to update many Devices.
     * @example
     * // Update many Devices
     * const device = await prisma.device.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Devices and only return the `id`
     * const deviceWithIdOnly = await prisma.device.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DeviceUpdateManyAndReturnArgs>(args: SelectSubset<T, DeviceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Device.
     * @param {DeviceUpsertArgs} args - Arguments to update or create a Device.
     * @example
     * // Update or create a Device
     * const device = await prisma.device.upsert({
     *   create: {
     *     // ... data to create a Device
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Device we want to update
     *   }
     * })
     */
    upsert<T extends DeviceUpsertArgs>(args: SelectSubset<T, DeviceUpsertArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Devices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceCountArgs} args - Arguments to filter Devices to count.
     * @example
     * // Count the number of Devices
     * const count = await prisma.device.count({
     *   where: {
     *     // ... the filter for the Devices we want to count
     *   }
     * })
    **/
    count<T extends DeviceCountArgs>(
      args?: Subset<T, DeviceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeviceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Device.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeviceAggregateArgs>(args: Subset<T, DeviceAggregateArgs>): Prisma.PrismaPromise<GetDeviceAggregateType<T>>

    /**
     * Group by Device.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeviceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeviceGroupByArgs['orderBy'] }
        : { orderBy?: DeviceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeviceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeviceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Device model
   */
  readonly fields: DeviceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Device.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeviceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sessions<T extends Device$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, Device$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Device model
   */
  interface DeviceFieldRefs {
    readonly id: FieldRef<"Device", 'String'>
    readonly deviceId: FieldRef<"Device", 'String'>
    readonly deviceName: FieldRef<"Device", 'String'>
    readonly deviceType: FieldRef<"Device", 'String'>
    readonly isVerified: FieldRef<"Device", 'Boolean'>
    readonly lastLoginAt: FieldRef<"Device", 'DateTime'>
    readonly createdAt: FieldRef<"Device", 'DateTime'>
    readonly updatedAt: FieldRef<"Device", 'DateTime'>
    readonly userId: FieldRef<"Device", 'String'>
    readonly brand: FieldRef<"Device", 'String'>
    readonly modelName: FieldRef<"Device", 'String'>
    readonly osVersion: FieldRef<"Device", 'String'>
    readonly phoneNumber: FieldRef<"Device", 'String'>
    readonly lastLogoutAt: FieldRef<"Device", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Device findUnique
   */
  export type DeviceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device findUniqueOrThrow
   */
  export type DeviceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device findFirst
   */
  export type DeviceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devices.
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devices.
     */
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * Device findFirstOrThrow
   */
  export type DeviceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devices.
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devices.
     */
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * Device findMany
   */
  export type DeviceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Devices to fetch.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Devices.
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * Device create
   */
  export type DeviceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * The data needed to create a Device.
     */
    data: XOR<DeviceCreateInput, DeviceUncheckedCreateInput>
  }

  /**
   * Device createMany
   */
  export type DeviceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Devices.
     */
    data: DeviceCreateManyInput | DeviceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Device createManyAndReturn
   */
  export type DeviceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * The data used to create many Devices.
     */
    data: DeviceCreateManyInput | DeviceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Device update
   */
  export type DeviceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * The data needed to update a Device.
     */
    data: XOR<DeviceUpdateInput, DeviceUncheckedUpdateInput>
    /**
     * Choose, which Device to update.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device updateMany
   */
  export type DeviceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Devices.
     */
    data: XOR<DeviceUpdateManyMutationInput, DeviceUncheckedUpdateManyInput>
    /**
     * Filter which Devices to update
     */
    where?: DeviceWhereInput
    /**
     * Limit how many Devices to update.
     */
    limit?: number
  }

  /**
   * Device updateManyAndReturn
   */
  export type DeviceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * The data used to update Devices.
     */
    data: XOR<DeviceUpdateManyMutationInput, DeviceUncheckedUpdateManyInput>
    /**
     * Filter which Devices to update
     */
    where?: DeviceWhereInput
    /**
     * Limit how many Devices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Device upsert
   */
  export type DeviceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * The filter to search for the Device to update in case it exists.
     */
    where: DeviceWhereUniqueInput
    /**
     * In case the Device found by the `where` argument doesn't exist, create a new Device with this data.
     */
    create: XOR<DeviceCreateInput, DeviceUncheckedCreateInput>
    /**
     * In case the Device was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeviceUpdateInput, DeviceUncheckedUpdateInput>
  }

  /**
   * Device delete
   */
  export type DeviceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter which Device to delete.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device deleteMany
   */
  export type DeviceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Devices to delete
     */
    where?: DeviceWhereInput
    /**
     * Limit how many Devices to delete.
     */
    limit?: number
  }

  /**
   * Device.sessions
   */
  export type Device$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Device without action
   */
  export type DeviceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    token: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    deviceId: string | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    token: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    deviceId: string | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    token: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    userId: number
    deviceId: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    token?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    deviceId?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    token?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    deviceId?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    token?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    deviceId?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    token: string
    expiresAt: Date
    createdAt: Date
    updatedAt: Date
    userId: string
    deviceId: string
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    deviceId?: boolean
    device?: boolean | DeviceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    deviceId?: boolean
    device?: boolean | DeviceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    deviceId?: boolean
    device?: boolean | DeviceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    token?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    deviceId?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "expiresAt" | "createdAt" | "updatedAt" | "userId" | "deviceId", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | DeviceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | DeviceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | DeviceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      device: Prisma.$DevicePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      expiresAt: Date
      createdAt: Date
      updatedAt: Date
      userId: string
      deviceId: string
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    device<T extends DeviceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DeviceDefaultArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly token: FieldRef<"Session", 'String'>
    readonly expiresAt: FieldRef<"Session", 'DateTime'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly updatedAt: FieldRef<"Session", 'DateTime'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly deviceId: FieldRef<"Session", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model OTP
   */

  export type AggregateOTP = {
    _count: OTPCountAggregateOutputType | null
    _avg: OTPAvgAggregateOutputType | null
    _sum: OTPSumAggregateOutputType | null
    _min: OTPMinAggregateOutputType | null
    _max: OTPMaxAggregateOutputType | null
  }

  export type OTPAvgAggregateOutputType = {
    attempts: number | null
  }

  export type OTPSumAggregateOutputType = {
    attempts: number | null
  }

  export type OTPMinAggregateOutputType = {
    id: string | null
    phoneNumber: string | null
    code: string | null
    type: string | null
    expiresAt: Date | null
    createdAt: Date | null
    isUsed: boolean | null
    attempts: number | null
    originalCode: string | null
  }

  export type OTPMaxAggregateOutputType = {
    id: string | null
    phoneNumber: string | null
    code: string | null
    type: string | null
    expiresAt: Date | null
    createdAt: Date | null
    isUsed: boolean | null
    attempts: number | null
    originalCode: string | null
  }

  export type OTPCountAggregateOutputType = {
    id: number
    phoneNumber: number
    code: number
    type: number
    expiresAt: number
    createdAt: number
    isUsed: number
    attempts: number
    originalCode: number
    _all: number
  }


  export type OTPAvgAggregateInputType = {
    attempts?: true
  }

  export type OTPSumAggregateInputType = {
    attempts?: true
  }

  export type OTPMinAggregateInputType = {
    id?: true
    phoneNumber?: true
    code?: true
    type?: true
    expiresAt?: true
    createdAt?: true
    isUsed?: true
    attempts?: true
    originalCode?: true
  }

  export type OTPMaxAggregateInputType = {
    id?: true
    phoneNumber?: true
    code?: true
    type?: true
    expiresAt?: true
    createdAt?: true
    isUsed?: true
    attempts?: true
    originalCode?: true
  }

  export type OTPCountAggregateInputType = {
    id?: true
    phoneNumber?: true
    code?: true
    type?: true
    expiresAt?: true
    createdAt?: true
    isUsed?: true
    attempts?: true
    originalCode?: true
    _all?: true
  }

  export type OTPAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OTP to aggregate.
     */
    where?: OTPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OTPS to fetch.
     */
    orderBy?: OTPOrderByWithRelationInput | OTPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OTPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OTPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OTPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OTPS
    **/
    _count?: true | OTPCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OTPAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OTPSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OTPMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OTPMaxAggregateInputType
  }

  export type GetOTPAggregateType<T extends OTPAggregateArgs> = {
        [P in keyof T & keyof AggregateOTP]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOTP[P]>
      : GetScalarType<T[P], AggregateOTP[P]>
  }




  export type OTPGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OTPWhereInput
    orderBy?: OTPOrderByWithAggregationInput | OTPOrderByWithAggregationInput[]
    by: OTPScalarFieldEnum[] | OTPScalarFieldEnum
    having?: OTPScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OTPCountAggregateInputType | true
    _avg?: OTPAvgAggregateInputType
    _sum?: OTPSumAggregateInputType
    _min?: OTPMinAggregateInputType
    _max?: OTPMaxAggregateInputType
  }

  export type OTPGroupByOutputType = {
    id: string
    phoneNumber: string
    code: string
    type: string
    expiresAt: Date
    createdAt: Date
    isUsed: boolean
    attempts: number
    originalCode: string | null
    _count: OTPCountAggregateOutputType | null
    _avg: OTPAvgAggregateOutputType | null
    _sum: OTPSumAggregateOutputType | null
    _min: OTPMinAggregateOutputType | null
    _max: OTPMaxAggregateOutputType | null
  }

  type GetOTPGroupByPayload<T extends OTPGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OTPGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OTPGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OTPGroupByOutputType[P]>
            : GetScalarType<T[P], OTPGroupByOutputType[P]>
        }
      >
    >


  export type OTPSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phoneNumber?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isUsed?: boolean
    attempts?: boolean
    originalCode?: boolean
  }, ExtArgs["result"]["oTP"]>

  export type OTPSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phoneNumber?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isUsed?: boolean
    attempts?: boolean
    originalCode?: boolean
  }, ExtArgs["result"]["oTP"]>

  export type OTPSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phoneNumber?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isUsed?: boolean
    attempts?: boolean
    originalCode?: boolean
  }, ExtArgs["result"]["oTP"]>

  export type OTPSelectScalar = {
    id?: boolean
    phoneNumber?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isUsed?: boolean
    attempts?: boolean
    originalCode?: boolean
  }

  export type OTPOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "phoneNumber" | "code" | "type" | "expiresAt" | "createdAt" | "isUsed" | "attempts" | "originalCode", ExtArgs["result"]["oTP"]>

  export type $OTPPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OTP"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      phoneNumber: string
      code: string
      type: string
      expiresAt: Date
      createdAt: Date
      isUsed: boolean
      attempts: number
      originalCode: string | null
    }, ExtArgs["result"]["oTP"]>
    composites: {}
  }

  type OTPGetPayload<S extends boolean | null | undefined | OTPDefaultArgs> = $Result.GetResult<Prisma.$OTPPayload, S>

  type OTPCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OTPFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OTPCountAggregateInputType | true
    }

  export interface OTPDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OTP'], meta: { name: 'OTP' } }
    /**
     * Find zero or one OTP that matches the filter.
     * @param {OTPFindUniqueArgs} args - Arguments to find a OTP
     * @example
     * // Get one OTP
     * const oTP = await prisma.oTP.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OTPFindUniqueArgs>(args: SelectSubset<T, OTPFindUniqueArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OTP that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OTPFindUniqueOrThrowArgs} args - Arguments to find a OTP
     * @example
     * // Get one OTP
     * const oTP = await prisma.oTP.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OTPFindUniqueOrThrowArgs>(args: SelectSubset<T, OTPFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OTP that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPFindFirstArgs} args - Arguments to find a OTP
     * @example
     * // Get one OTP
     * const oTP = await prisma.oTP.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OTPFindFirstArgs>(args?: SelectSubset<T, OTPFindFirstArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OTP that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPFindFirstOrThrowArgs} args - Arguments to find a OTP
     * @example
     * // Get one OTP
     * const oTP = await prisma.oTP.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OTPFindFirstOrThrowArgs>(args?: SelectSubset<T, OTPFindFirstOrThrowArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OTPS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OTPS
     * const oTPS = await prisma.oTP.findMany()
     * 
     * // Get first 10 OTPS
     * const oTPS = await prisma.oTP.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oTPWithIdOnly = await prisma.oTP.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OTPFindManyArgs>(args?: SelectSubset<T, OTPFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OTP.
     * @param {OTPCreateArgs} args - Arguments to create a OTP.
     * @example
     * // Create one OTP
     * const OTP = await prisma.oTP.create({
     *   data: {
     *     // ... data to create a OTP
     *   }
     * })
     * 
     */
    create<T extends OTPCreateArgs>(args: SelectSubset<T, OTPCreateArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OTPS.
     * @param {OTPCreateManyArgs} args - Arguments to create many OTPS.
     * @example
     * // Create many OTPS
     * const oTP = await prisma.oTP.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OTPCreateManyArgs>(args?: SelectSubset<T, OTPCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OTPS and returns the data saved in the database.
     * @param {OTPCreateManyAndReturnArgs} args - Arguments to create many OTPS.
     * @example
     * // Create many OTPS
     * const oTP = await prisma.oTP.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OTPS and only return the `id`
     * const oTPWithIdOnly = await prisma.oTP.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OTPCreateManyAndReturnArgs>(args?: SelectSubset<T, OTPCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OTP.
     * @param {OTPDeleteArgs} args - Arguments to delete one OTP.
     * @example
     * // Delete one OTP
     * const OTP = await prisma.oTP.delete({
     *   where: {
     *     // ... filter to delete one OTP
     *   }
     * })
     * 
     */
    delete<T extends OTPDeleteArgs>(args: SelectSubset<T, OTPDeleteArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OTP.
     * @param {OTPUpdateArgs} args - Arguments to update one OTP.
     * @example
     * // Update one OTP
     * const oTP = await prisma.oTP.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OTPUpdateArgs>(args: SelectSubset<T, OTPUpdateArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OTPS.
     * @param {OTPDeleteManyArgs} args - Arguments to filter OTPS to delete.
     * @example
     * // Delete a few OTPS
     * const { count } = await prisma.oTP.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OTPDeleteManyArgs>(args?: SelectSubset<T, OTPDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OTPS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OTPS
     * const oTP = await prisma.oTP.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OTPUpdateManyArgs>(args: SelectSubset<T, OTPUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OTPS and returns the data updated in the database.
     * @param {OTPUpdateManyAndReturnArgs} args - Arguments to update many OTPS.
     * @example
     * // Update many OTPS
     * const oTP = await prisma.oTP.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OTPS and only return the `id`
     * const oTPWithIdOnly = await prisma.oTP.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OTPUpdateManyAndReturnArgs>(args: SelectSubset<T, OTPUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OTP.
     * @param {OTPUpsertArgs} args - Arguments to update or create a OTP.
     * @example
     * // Update or create a OTP
     * const oTP = await prisma.oTP.upsert({
     *   create: {
     *     // ... data to create a OTP
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OTP we want to update
     *   }
     * })
     */
    upsert<T extends OTPUpsertArgs>(args: SelectSubset<T, OTPUpsertArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OTPS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPCountArgs} args - Arguments to filter OTPS to count.
     * @example
     * // Count the number of OTPS
     * const count = await prisma.oTP.count({
     *   where: {
     *     // ... the filter for the OTPS we want to count
     *   }
     * })
    **/
    count<T extends OTPCountArgs>(
      args?: Subset<T, OTPCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OTPCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OTP.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OTPAggregateArgs>(args: Subset<T, OTPAggregateArgs>): Prisma.PrismaPromise<GetOTPAggregateType<T>>

    /**
     * Group by OTP.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OTPGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OTPGroupByArgs['orderBy'] }
        : { orderBy?: OTPGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OTPGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOTPGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OTP model
   */
  readonly fields: OTPFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OTP.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OTPClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OTP model
   */
  interface OTPFieldRefs {
    readonly id: FieldRef<"OTP", 'String'>
    readonly phoneNumber: FieldRef<"OTP", 'String'>
    readonly code: FieldRef<"OTP", 'String'>
    readonly type: FieldRef<"OTP", 'String'>
    readonly expiresAt: FieldRef<"OTP", 'DateTime'>
    readonly createdAt: FieldRef<"OTP", 'DateTime'>
    readonly isUsed: FieldRef<"OTP", 'Boolean'>
    readonly attempts: FieldRef<"OTP", 'Int'>
    readonly originalCode: FieldRef<"OTP", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OTP findUnique
   */
  export type OTPFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Filter, which OTP to fetch.
     */
    where: OTPWhereUniqueInput
  }

  /**
   * OTP findUniqueOrThrow
   */
  export type OTPFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Filter, which OTP to fetch.
     */
    where: OTPWhereUniqueInput
  }

  /**
   * OTP findFirst
   */
  export type OTPFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Filter, which OTP to fetch.
     */
    where?: OTPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OTPS to fetch.
     */
    orderBy?: OTPOrderByWithRelationInput | OTPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OTPS.
     */
    cursor?: OTPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OTPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OTPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OTPS.
     */
    distinct?: OTPScalarFieldEnum | OTPScalarFieldEnum[]
  }

  /**
   * OTP findFirstOrThrow
   */
  export type OTPFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Filter, which OTP to fetch.
     */
    where?: OTPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OTPS to fetch.
     */
    orderBy?: OTPOrderByWithRelationInput | OTPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OTPS.
     */
    cursor?: OTPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OTPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OTPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OTPS.
     */
    distinct?: OTPScalarFieldEnum | OTPScalarFieldEnum[]
  }

  /**
   * OTP findMany
   */
  export type OTPFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Filter, which OTPS to fetch.
     */
    where?: OTPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OTPS to fetch.
     */
    orderBy?: OTPOrderByWithRelationInput | OTPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OTPS.
     */
    cursor?: OTPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OTPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OTPS.
     */
    skip?: number
    distinct?: OTPScalarFieldEnum | OTPScalarFieldEnum[]
  }

  /**
   * OTP create
   */
  export type OTPCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * The data needed to create a OTP.
     */
    data: XOR<OTPCreateInput, OTPUncheckedCreateInput>
  }

  /**
   * OTP createMany
   */
  export type OTPCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OTPS.
     */
    data: OTPCreateManyInput | OTPCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OTP createManyAndReturn
   */
  export type OTPCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * The data used to create many OTPS.
     */
    data: OTPCreateManyInput | OTPCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OTP update
   */
  export type OTPUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * The data needed to update a OTP.
     */
    data: XOR<OTPUpdateInput, OTPUncheckedUpdateInput>
    /**
     * Choose, which OTP to update.
     */
    where: OTPWhereUniqueInput
  }

  /**
   * OTP updateMany
   */
  export type OTPUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OTPS.
     */
    data: XOR<OTPUpdateManyMutationInput, OTPUncheckedUpdateManyInput>
    /**
     * Filter which OTPS to update
     */
    where?: OTPWhereInput
    /**
     * Limit how many OTPS to update.
     */
    limit?: number
  }

  /**
   * OTP updateManyAndReturn
   */
  export type OTPUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * The data used to update OTPS.
     */
    data: XOR<OTPUpdateManyMutationInput, OTPUncheckedUpdateManyInput>
    /**
     * Filter which OTPS to update
     */
    where?: OTPWhereInput
    /**
     * Limit how many OTPS to update.
     */
    limit?: number
  }

  /**
   * OTP upsert
   */
  export type OTPUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * The filter to search for the OTP to update in case it exists.
     */
    where: OTPWhereUniqueInput
    /**
     * In case the OTP found by the `where` argument doesn't exist, create a new OTP with this data.
     */
    create: XOR<OTPCreateInput, OTPUncheckedCreateInput>
    /**
     * In case the OTP was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OTPUpdateInput, OTPUncheckedUpdateInput>
  }

  /**
   * OTP delete
   */
  export type OTPDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Filter which OTP to delete.
     */
    where: OTPWhereUniqueInput
  }

  /**
   * OTP deleteMany
   */
  export type OTPDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OTPS to delete
     */
    where?: OTPWhereInput
    /**
     * Limit how many OTPS to delete.
     */
    limit?: number
  }

  /**
   * OTP without action
   */
  export type OTPDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    price: Decimal | null
    quantity: number | null
    views: number | null
    favorites: number | null
    rating: Decimal | null
    ratingCount: number | null
  }

  export type ProductSumAggregateOutputType = {
    price: Decimal | null
    quantity: number | null
    views: number | null
    favorites: number | null
    rating: Decimal | null
    ratingCount: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    sellerId: string | null
    title: string | null
    description: string | null
    price: Decimal | null
    currencyCode: string | null
    quantity: number | null
    categoryId: string | null
    condition: $Enums.ProductCondition | null
    locationId: string | null
    status: $Enums.ProductStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    views: number | null
    favorites: number | null
    rating: Decimal | null
    ratingCount: number | null
    isFeatured: boolean | null
    featuredUntil: Date | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    sellerId: string | null
    title: string | null
    description: string | null
    price: Decimal | null
    currencyCode: string | null
    quantity: number | null
    categoryId: string | null
    condition: $Enums.ProductCondition | null
    locationId: string | null
    status: $Enums.ProductStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    views: number | null
    favorites: number | null
    rating: Decimal | null
    ratingCount: number | null
    isFeatured: boolean | null
    featuredUntil: Date | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    sellerId: number
    title: number
    description: number
    price: number
    currencyCode: number
    quantity: number
    categoryId: number
    condition: number
    locationId: number
    status: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    views: number
    favorites: number
    rating: number
    ratingCount: number
    isFeatured: number
    featuredUntil: number
    metadata: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    price?: true
    quantity?: true
    views?: true
    favorites?: true
    rating?: true
    ratingCount?: true
  }

  export type ProductSumAggregateInputType = {
    price?: true
    quantity?: true
    views?: true
    favorites?: true
    rating?: true
    ratingCount?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    sellerId?: true
    title?: true
    description?: true
    price?: true
    currencyCode?: true
    quantity?: true
    categoryId?: true
    condition?: true
    locationId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    views?: true
    favorites?: true
    rating?: true
    ratingCount?: true
    isFeatured?: true
    featuredUntil?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    sellerId?: true
    title?: true
    description?: true
    price?: true
    currencyCode?: true
    quantity?: true
    categoryId?: true
    condition?: true
    locationId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    views?: true
    favorites?: true
    rating?: true
    ratingCount?: true
    isFeatured?: true
    featuredUntil?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    sellerId?: true
    title?: true
    description?: true
    price?: true
    currencyCode?: true
    quantity?: true
    categoryId?: true
    condition?: true
    locationId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    views?: true
    favorites?: true
    rating?: true
    ratingCount?: true
    isFeatured?: true
    featuredUntil?: true
    metadata?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    sellerId: string
    title: string
    description: string | null
    price: Decimal
    currencyCode: string
    quantity: number
    categoryId: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    views: number
    favorites: number
    rating: Decimal | null
    ratingCount: number
    isFeatured: boolean
    featuredUntil: Date | null
    metadata: JsonValue | null
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerId?: boolean
    title?: boolean
    description?: boolean
    price?: boolean
    currencyCode?: boolean
    quantity?: boolean
    categoryId?: boolean
    condition?: boolean
    locationId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    views?: boolean
    favorites?: boolean
    rating?: boolean
    ratingCount?: boolean
    isFeatured?: boolean
    featuredUntil?: boolean
    metadata?: boolean
    category?: boolean | Product$categoryArgs<ExtArgs>
    location?: boolean | LocationDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    attributes?: boolean | Product$attributesArgs<ExtArgs>
    deliveryOptions?: boolean | Product$deliveryOptionsArgs<ExtArgs>
    images?: boolean | Product$imagesArgs<ExtArgs>
    translations?: boolean | Product$translationsArgs<ExtArgs>
    orderItems?: boolean | Product$orderItemsArgs<ExtArgs>
    productOrderInterests?: boolean | Product$productOrderInterestsArgs<ExtArgs>
    productViews?: boolean | Product$productViewsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerId?: boolean
    title?: boolean
    description?: boolean
    price?: boolean
    currencyCode?: boolean
    quantity?: boolean
    categoryId?: boolean
    condition?: boolean
    locationId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    views?: boolean
    favorites?: boolean
    rating?: boolean
    ratingCount?: boolean
    isFeatured?: boolean
    featuredUntil?: boolean
    metadata?: boolean
    category?: boolean | Product$categoryArgs<ExtArgs>
    location?: boolean | LocationDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerId?: boolean
    title?: boolean
    description?: boolean
    price?: boolean
    currencyCode?: boolean
    quantity?: boolean
    categoryId?: boolean
    condition?: boolean
    locationId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    views?: boolean
    favorites?: boolean
    rating?: boolean
    ratingCount?: boolean
    isFeatured?: boolean
    featuredUntil?: boolean
    metadata?: boolean
    category?: boolean | Product$categoryArgs<ExtArgs>
    location?: boolean | LocationDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    sellerId?: boolean
    title?: boolean
    description?: boolean
    price?: boolean
    currencyCode?: boolean
    quantity?: boolean
    categoryId?: boolean
    condition?: boolean
    locationId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    views?: boolean
    favorites?: boolean
    rating?: boolean
    ratingCount?: boolean
    isFeatured?: boolean
    featuredUntil?: boolean
    metadata?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sellerId" | "title" | "description" | "price" | "currencyCode" | "quantity" | "categoryId" | "condition" | "locationId" | "status" | "createdAt" | "updatedAt" | "deletedAt" | "views" | "favorites" | "rating" | "ratingCount" | "isFeatured" | "featuredUntil" | "metadata", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | Product$categoryArgs<ExtArgs>
    location?: boolean | LocationDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    attributes?: boolean | Product$attributesArgs<ExtArgs>
    deliveryOptions?: boolean | Product$deliveryOptionsArgs<ExtArgs>
    images?: boolean | Product$imagesArgs<ExtArgs>
    translations?: boolean | Product$translationsArgs<ExtArgs>
    orderItems?: boolean | Product$orderItemsArgs<ExtArgs>
    productOrderInterests?: boolean | Product$productOrderInterestsArgs<ExtArgs>
    productViews?: boolean | Product$productViewsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | Product$categoryArgs<ExtArgs>
    location?: boolean | LocationDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | Product$categoryArgs<ExtArgs>
    location?: boolean | LocationDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs> | null
      location: Prisma.$LocationPayload<ExtArgs>
      seller: Prisma.$UserPayload<ExtArgs>
      attributes: Prisma.$ProductAttributePayload<ExtArgs>[]
      deliveryOptions: Prisma.$ProductDeliveryOptionPayload<ExtArgs>[]
      images: Prisma.$ProductImagePayload<ExtArgs>[]
      translations: Prisma.$ProductTranslationPayload<ExtArgs>[]
      orderItems: Prisma.$OrderItemPayload<ExtArgs>[]
      productOrderInterests: Prisma.$ProductOrderInterestPayload<ExtArgs>[]
      productViews: Prisma.$ProductViewPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sellerId: string
      title: string
      description: string | null
      price: Prisma.Decimal
      currencyCode: string
      quantity: number
      categoryId: string | null
      condition: $Enums.ProductCondition
      locationId: string
      status: $Enums.ProductStatus
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      views: number
      favorites: number
      rating: Prisma.Decimal | null
      ratingCount: number
      isFeatured: boolean
      featuredUntil: Date | null
      metadata: Prisma.JsonValue | null
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends Product$categoryArgs<ExtArgs> = {}>(args?: Subset<T, Product$categoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    location<T extends LocationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LocationDefaultArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    seller<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    attributes<T extends Product$attributesArgs<ExtArgs> = {}>(args?: Subset<T, Product$attributesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deliveryOptions<T extends Product$deliveryOptionsArgs<ExtArgs> = {}>(args?: Subset<T, Product$deliveryOptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    images<T extends Product$imagesArgs<ExtArgs> = {}>(args?: Subset<T, Product$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    translations<T extends Product$translationsArgs<ExtArgs> = {}>(args?: Subset<T, Product$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderItems<T extends Product$orderItemsArgs<ExtArgs> = {}>(args?: Subset<T, Product$orderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productOrderInterests<T extends Product$productOrderInterestsArgs<ExtArgs> = {}>(args?: Subset<T, Product$productOrderInterestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productViews<T extends Product$productViewsArgs<ExtArgs> = {}>(args?: Subset<T, Product$productViewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly sellerId: FieldRef<"Product", 'String'>
    readonly title: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly price: FieldRef<"Product", 'Decimal'>
    readonly currencyCode: FieldRef<"Product", 'String'>
    readonly quantity: FieldRef<"Product", 'Int'>
    readonly categoryId: FieldRef<"Product", 'String'>
    readonly condition: FieldRef<"Product", 'ProductCondition'>
    readonly locationId: FieldRef<"Product", 'String'>
    readonly status: FieldRef<"Product", 'ProductStatus'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly deletedAt: FieldRef<"Product", 'DateTime'>
    readonly views: FieldRef<"Product", 'Int'>
    readonly favorites: FieldRef<"Product", 'Int'>
    readonly rating: FieldRef<"Product", 'Decimal'>
    readonly ratingCount: FieldRef<"Product", 'Int'>
    readonly isFeatured: FieldRef<"Product", 'Boolean'>
    readonly featuredUntil: FieldRef<"Product", 'DateTime'>
    readonly metadata: FieldRef<"Product", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.category
   */
  export type Product$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Product.attributes
   */
  export type Product$attributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    where?: ProductAttributeWhereInput
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    cursor?: ProductAttributeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductAttributeScalarFieldEnum | ProductAttributeScalarFieldEnum[]
  }

  /**
   * Product.deliveryOptions
   */
  export type Product$deliveryOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    where?: ProductDeliveryOptionWhereInput
    orderBy?: ProductDeliveryOptionOrderByWithRelationInput | ProductDeliveryOptionOrderByWithRelationInput[]
    cursor?: ProductDeliveryOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductDeliveryOptionScalarFieldEnum | ProductDeliveryOptionScalarFieldEnum[]
  }

  /**
   * Product.images
   */
  export type Product$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    where?: ProductImageWhereInput
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    cursor?: ProductImageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * Product.translations
   */
  export type Product$translationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    cursor?: ProductTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * Product.orderItems
   */
  export type Product$orderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Product.productOrderInterests
   */
  export type Product$productOrderInterestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    where?: ProductOrderInterestWhereInput
    orderBy?: ProductOrderInterestOrderByWithRelationInput | ProductOrderInterestOrderByWithRelationInput[]
    cursor?: ProductOrderInterestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductOrderInterestScalarFieldEnum | ProductOrderInterestScalarFieldEnum[]
  }

  /**
   * Product.productViews
   */
  export type Product$productViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    where?: ProductViewWhereInput
    orderBy?: ProductViewOrderByWithRelationInput | ProductViewOrderByWithRelationInput[]
    cursor?: ProductViewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductViewScalarFieldEnum | ProductViewScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model ProductImage
   */

  export type AggregateProductImage = {
    _count: ProductImageCountAggregateOutputType | null
    _avg: ProductImageAvgAggregateOutputType | null
    _sum: ProductImageSumAggregateOutputType | null
    _min: ProductImageMinAggregateOutputType | null
    _max: ProductImageMaxAggregateOutputType | null
  }

  export type ProductImageAvgAggregateOutputType = {
    width: number | null
    height: number | null
    size: number | null
  }

  export type ProductImageSumAggregateOutputType = {
    width: number | null
    height: number | null
    size: number | null
  }

  export type ProductImageMinAggregateOutputType = {
    id: string | null
    productId: string | null
    imageUrl: string | null
    isPrimary: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    width: number | null
    height: number | null
    size: number | null
    format: string | null
    altText: string | null
  }

  export type ProductImageMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    imageUrl: string | null
    isPrimary: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    width: number | null
    height: number | null
    size: number | null
    format: string | null
    altText: string | null
  }

  export type ProductImageCountAggregateOutputType = {
    id: number
    productId: number
    imageUrl: number
    isPrimary: number
    createdAt: number
    updatedAt: number
    width: number
    height: number
    size: number
    format: number
    altText: number
    _all: number
  }


  export type ProductImageAvgAggregateInputType = {
    width?: true
    height?: true
    size?: true
  }

  export type ProductImageSumAggregateInputType = {
    width?: true
    height?: true
    size?: true
  }

  export type ProductImageMinAggregateInputType = {
    id?: true
    productId?: true
    imageUrl?: true
    isPrimary?: true
    createdAt?: true
    updatedAt?: true
    width?: true
    height?: true
    size?: true
    format?: true
    altText?: true
  }

  export type ProductImageMaxAggregateInputType = {
    id?: true
    productId?: true
    imageUrl?: true
    isPrimary?: true
    createdAt?: true
    updatedAt?: true
    width?: true
    height?: true
    size?: true
    format?: true
    altText?: true
  }

  export type ProductImageCountAggregateInputType = {
    id?: true
    productId?: true
    imageUrl?: true
    isPrimary?: true
    createdAt?: true
    updatedAt?: true
    width?: true
    height?: true
    size?: true
    format?: true
    altText?: true
    _all?: true
  }

  export type ProductImageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductImage to aggregate.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductImages
    **/
    _count?: true | ProductImageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductImageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductImageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductImageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductImageMaxAggregateInputType
  }

  export type GetProductImageAggregateType<T extends ProductImageAggregateArgs> = {
        [P in keyof T & keyof AggregateProductImage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductImage[P]>
      : GetScalarType<T[P], AggregateProductImage[P]>
  }




  export type ProductImageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductImageWhereInput
    orderBy?: ProductImageOrderByWithAggregationInput | ProductImageOrderByWithAggregationInput[]
    by: ProductImageScalarFieldEnum[] | ProductImageScalarFieldEnum
    having?: ProductImageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductImageCountAggregateInputType | true
    _avg?: ProductImageAvgAggregateInputType
    _sum?: ProductImageSumAggregateInputType
    _min?: ProductImageMinAggregateInputType
    _max?: ProductImageMaxAggregateInputType
  }

  export type ProductImageGroupByOutputType = {
    id: string
    productId: string
    imageUrl: string
    isPrimary: boolean
    createdAt: Date
    updatedAt: Date
    width: number | null
    height: number | null
    size: number | null
    format: string | null
    altText: string | null
    _count: ProductImageCountAggregateOutputType | null
    _avg: ProductImageAvgAggregateOutputType | null
    _sum: ProductImageSumAggregateOutputType | null
    _min: ProductImageMinAggregateOutputType | null
    _max: ProductImageMaxAggregateOutputType | null
  }

  type GetProductImageGroupByPayload<T extends ProductImageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductImageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductImageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductImageGroupByOutputType[P]>
            : GetScalarType<T[P], ProductImageGroupByOutputType[P]>
        }
      >
    >


  export type ProductImageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    imageUrl?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    width?: boolean
    height?: boolean
    size?: boolean
    format?: boolean
    altText?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    imageUrl?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    width?: boolean
    height?: boolean
    size?: boolean
    format?: boolean
    altText?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    imageUrl?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    width?: boolean
    height?: boolean
    size?: boolean
    format?: boolean
    altText?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectScalar = {
    id?: boolean
    productId?: boolean
    imageUrl?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    width?: boolean
    height?: boolean
    size?: boolean
    format?: boolean
    altText?: boolean
  }

  export type ProductImageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "imageUrl" | "isPrimary" | "createdAt" | "updatedAt" | "width" | "height" | "size" | "format" | "altText", ExtArgs["result"]["productImage"]>
  export type ProductImageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductImageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductImageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductImagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductImage"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      imageUrl: string
      isPrimary: boolean
      createdAt: Date
      updatedAt: Date
      width: number | null
      height: number | null
      size: number | null
      format: string | null
      altText: string | null
    }, ExtArgs["result"]["productImage"]>
    composites: {}
  }

  type ProductImageGetPayload<S extends boolean | null | undefined | ProductImageDefaultArgs> = $Result.GetResult<Prisma.$ProductImagePayload, S>

  type ProductImageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductImageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductImageCountAggregateInputType | true
    }

  export interface ProductImageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductImage'], meta: { name: 'ProductImage' } }
    /**
     * Find zero or one ProductImage that matches the filter.
     * @param {ProductImageFindUniqueArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductImageFindUniqueArgs>(args: SelectSubset<T, ProductImageFindUniqueArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductImage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductImageFindUniqueOrThrowArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductImageFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductImageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductImage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindFirstArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductImageFindFirstArgs>(args?: SelectSubset<T, ProductImageFindFirstArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductImage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindFirstOrThrowArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductImageFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductImageFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductImages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductImages
     * const productImages = await prisma.productImage.findMany()
     * 
     * // Get first 10 ProductImages
     * const productImages = await prisma.productImage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productImageWithIdOnly = await prisma.productImage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductImageFindManyArgs>(args?: SelectSubset<T, ProductImageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductImage.
     * @param {ProductImageCreateArgs} args - Arguments to create a ProductImage.
     * @example
     * // Create one ProductImage
     * const ProductImage = await prisma.productImage.create({
     *   data: {
     *     // ... data to create a ProductImage
     *   }
     * })
     * 
     */
    create<T extends ProductImageCreateArgs>(args: SelectSubset<T, ProductImageCreateArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductImages.
     * @param {ProductImageCreateManyArgs} args - Arguments to create many ProductImages.
     * @example
     * // Create many ProductImages
     * const productImage = await prisma.productImage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductImageCreateManyArgs>(args?: SelectSubset<T, ProductImageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductImages and returns the data saved in the database.
     * @param {ProductImageCreateManyAndReturnArgs} args - Arguments to create many ProductImages.
     * @example
     * // Create many ProductImages
     * const productImage = await prisma.productImage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductImages and only return the `id`
     * const productImageWithIdOnly = await prisma.productImage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductImageCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductImageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductImage.
     * @param {ProductImageDeleteArgs} args - Arguments to delete one ProductImage.
     * @example
     * // Delete one ProductImage
     * const ProductImage = await prisma.productImage.delete({
     *   where: {
     *     // ... filter to delete one ProductImage
     *   }
     * })
     * 
     */
    delete<T extends ProductImageDeleteArgs>(args: SelectSubset<T, ProductImageDeleteArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductImage.
     * @param {ProductImageUpdateArgs} args - Arguments to update one ProductImage.
     * @example
     * // Update one ProductImage
     * const productImage = await prisma.productImage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductImageUpdateArgs>(args: SelectSubset<T, ProductImageUpdateArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductImages.
     * @param {ProductImageDeleteManyArgs} args - Arguments to filter ProductImages to delete.
     * @example
     * // Delete a few ProductImages
     * const { count } = await prisma.productImage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductImageDeleteManyArgs>(args?: SelectSubset<T, ProductImageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductImages
     * const productImage = await prisma.productImage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductImageUpdateManyArgs>(args: SelectSubset<T, ProductImageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductImages and returns the data updated in the database.
     * @param {ProductImageUpdateManyAndReturnArgs} args - Arguments to update many ProductImages.
     * @example
     * // Update many ProductImages
     * const productImage = await prisma.productImage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductImages and only return the `id`
     * const productImageWithIdOnly = await prisma.productImage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductImageUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductImageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductImage.
     * @param {ProductImageUpsertArgs} args - Arguments to update or create a ProductImage.
     * @example
     * // Update or create a ProductImage
     * const productImage = await prisma.productImage.upsert({
     *   create: {
     *     // ... data to create a ProductImage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductImage we want to update
     *   }
     * })
     */
    upsert<T extends ProductImageUpsertArgs>(args: SelectSubset<T, ProductImageUpsertArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageCountArgs} args - Arguments to filter ProductImages to count.
     * @example
     * // Count the number of ProductImages
     * const count = await prisma.productImage.count({
     *   where: {
     *     // ... the filter for the ProductImages we want to count
     *   }
     * })
    **/
    count<T extends ProductImageCountArgs>(
      args?: Subset<T, ProductImageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductImageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductImageAggregateArgs>(args: Subset<T, ProductImageAggregateArgs>): Prisma.PrismaPromise<GetProductImageAggregateType<T>>

    /**
     * Group by ProductImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductImageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductImageGroupByArgs['orderBy'] }
        : { orderBy?: ProductImageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductImageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductImageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductImage model
   */
  readonly fields: ProductImageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductImage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductImageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductImage model
   */
  interface ProductImageFieldRefs {
    readonly id: FieldRef<"ProductImage", 'String'>
    readonly productId: FieldRef<"ProductImage", 'String'>
    readonly imageUrl: FieldRef<"ProductImage", 'String'>
    readonly isPrimary: FieldRef<"ProductImage", 'Boolean'>
    readonly createdAt: FieldRef<"ProductImage", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductImage", 'DateTime'>
    readonly width: FieldRef<"ProductImage", 'Int'>
    readonly height: FieldRef<"ProductImage", 'Int'>
    readonly size: FieldRef<"ProductImage", 'Int'>
    readonly format: FieldRef<"ProductImage", 'String'>
    readonly altText: FieldRef<"ProductImage", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductImage findUnique
   */
  export type ProductImageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage findUniqueOrThrow
   */
  export type ProductImageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage findFirst
   */
  export type ProductImageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductImages.
     */
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage findFirstOrThrow
   */
  export type ProductImageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductImages.
     */
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage findMany
   */
  export type ProductImageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImages to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage create
   */
  export type ProductImageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductImage.
     */
    data: XOR<ProductImageCreateInput, ProductImageUncheckedCreateInput>
  }

  /**
   * ProductImage createMany
   */
  export type ProductImageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductImages.
     */
    data: ProductImageCreateManyInput | ProductImageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductImage createManyAndReturn
   */
  export type ProductImageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * The data used to create many ProductImages.
     */
    data: ProductImageCreateManyInput | ProductImageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductImage update
   */
  export type ProductImageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductImage.
     */
    data: XOR<ProductImageUpdateInput, ProductImageUncheckedUpdateInput>
    /**
     * Choose, which ProductImage to update.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage updateMany
   */
  export type ProductImageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductImages.
     */
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyInput>
    /**
     * Filter which ProductImages to update
     */
    where?: ProductImageWhereInput
    /**
     * Limit how many ProductImages to update.
     */
    limit?: number
  }

  /**
   * ProductImage updateManyAndReturn
   */
  export type ProductImageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * The data used to update ProductImages.
     */
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyInput>
    /**
     * Filter which ProductImages to update
     */
    where?: ProductImageWhereInput
    /**
     * Limit how many ProductImages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductImage upsert
   */
  export type ProductImageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductImage to update in case it exists.
     */
    where: ProductImageWhereUniqueInput
    /**
     * In case the ProductImage found by the `where` argument doesn't exist, create a new ProductImage with this data.
     */
    create: XOR<ProductImageCreateInput, ProductImageUncheckedCreateInput>
    /**
     * In case the ProductImage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductImageUpdateInput, ProductImageUncheckedUpdateInput>
  }

  /**
   * ProductImage delete
   */
  export type ProductImageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter which ProductImage to delete.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage deleteMany
   */
  export type ProductImageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductImages to delete
     */
    where?: ProductImageWhereInput
    /**
     * Limit how many ProductImages to delete.
     */
    limit?: number
  }

  /**
   * ProductImage without action
   */
  export type ProductImageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    order: number | null
  }

  export type CategorySumAggregateOutputType = {
    order: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    parentId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    slug: string | null
    description: string | null
    imageUrl: string | null
    order: number | null
    isActive: boolean | null
    createdBy: string | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    parentId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    slug: string | null
    description: string | null
    imageUrl: string | null
    order: number | null
    isActive: boolean | null
    createdBy: string | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    parentId: number
    createdAt: number
    updatedAt: number
    slug: number
    description: number
    imageUrl: number
    order: number
    isActive: number
    metadata: number
    createdBy: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    order?: true
  }

  export type CategorySumAggregateInputType = {
    order?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    parentId?: true
    createdAt?: true
    updatedAt?: true
    slug?: true
    description?: true
    imageUrl?: true
    order?: true
    isActive?: true
    createdBy?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    parentId?: true
    createdAt?: true
    updatedAt?: true
    slug?: true
    description?: true
    imageUrl?: true
    order?: true
    isActive?: true
    createdBy?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    parentId?: true
    createdAt?: true
    updatedAt?: true
    slug?: true
    description?: true
    imageUrl?: true
    order?: true
    isActive?: true
    metadata?: true
    createdBy?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: string
    name: string
    parentId: string | null
    createdAt: Date
    updatedAt: Date
    slug: string
    description: string | null
    imageUrl: string | null
    order: number
    isActive: boolean
    metadata: JsonValue | null
    createdBy: string | null
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    parentId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    slug?: boolean
    description?: boolean
    imageUrl?: boolean
    order?: boolean
    isActive?: boolean
    metadata?: boolean
    createdBy?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    translations?: boolean | Category$translationsArgs<ExtArgs>
    products?: boolean | Category$productsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    parentId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    slug?: boolean
    description?: boolean
    imageUrl?: boolean
    order?: boolean
    isActive?: boolean
    metadata?: boolean
    createdBy?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    parentId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    slug?: boolean
    description?: boolean
    imageUrl?: boolean
    order?: boolean
    isActive?: boolean
    metadata?: boolean
    createdBy?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    parentId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    slug?: boolean
    description?: boolean
    imageUrl?: boolean
    order?: boolean
    isActive?: boolean
    metadata?: boolean
    createdBy?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "parentId" | "createdAt" | "updatedAt" | "slug" | "description" | "imageUrl" | "order" | "isActive" | "metadata" | "createdBy", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    translations?: boolean | Category$translationsArgs<ExtArgs>
    products?: boolean | Category$productsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
  }
  export type CategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      parent: Prisma.$CategoryPayload<ExtArgs> | null
      children: Prisma.$CategoryPayload<ExtArgs>[]
      translations: Prisma.$CategoryTranslationPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      parentId: string | null
      createdAt: Date
      updatedAt: Date
      slug: string
      description: string | null
      imageUrl: string | null
      order: number
      isActive: boolean
      metadata: Prisma.JsonValue | null
      createdBy: string | null
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {CategoryUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parent<T extends Category$parentArgs<ExtArgs> = {}>(args?: Subset<T, Category$parentArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    children<T extends Category$childrenArgs<ExtArgs> = {}>(args?: Subset<T, Category$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    translations<T extends Category$translationsArgs<ExtArgs> = {}>(args?: Subset<T, Category$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends Category$productsArgs<ExtArgs> = {}>(args?: Subset<T, Category$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'String'>
    readonly name: FieldRef<"Category", 'String'>
    readonly parentId: FieldRef<"Category", 'String'>
    readonly createdAt: FieldRef<"Category", 'DateTime'>
    readonly updatedAt: FieldRef<"Category", 'DateTime'>
    readonly slug: FieldRef<"Category", 'String'>
    readonly description: FieldRef<"Category", 'String'>
    readonly imageUrl: FieldRef<"Category", 'String'>
    readonly order: FieldRef<"Category", 'Int'>
    readonly isActive: FieldRef<"Category", 'Boolean'>
    readonly metadata: FieldRef<"Category", 'Json'>
    readonly createdBy: FieldRef<"Category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category updateManyAndReturn
   */
  export type CategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.parent
   */
  export type Category$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Category.children
   */
  export type Category$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category.translations
   */
  export type Category$translationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    cursor?: CategoryTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * Category.products
   */
  export type Category$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Location
   */

  export type AggregateLocation = {
    _count: LocationCountAggregateOutputType | null
    _avg: LocationAvgAggregateOutputType | null
    _sum: LocationSumAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  export type LocationAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type LocationSumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type LocationMinAggregateOutputType = {
    id: string | null
    countryCode: string | null
    region: string | null
    city: string | null
    createdAt: Date | null
    updatedAt: Date | null
    latitude: number | null
    longitude: number | null
    timezone: string | null
    isActive: boolean | null
  }

  export type LocationMaxAggregateOutputType = {
    id: string | null
    countryCode: string | null
    region: string | null
    city: string | null
    createdAt: Date | null
    updatedAt: Date | null
    latitude: number | null
    longitude: number | null
    timezone: string | null
    isActive: boolean | null
  }

  export type LocationCountAggregateOutputType = {
    id: number
    countryCode: number
    region: number
    city: number
    createdAt: number
    updatedAt: number
    latitude: number
    longitude: number
    timezone: number
    isActive: number
    _all: number
  }


  export type LocationAvgAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type LocationSumAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type LocationMinAggregateInputType = {
    id?: true
    countryCode?: true
    region?: true
    city?: true
    createdAt?: true
    updatedAt?: true
    latitude?: true
    longitude?: true
    timezone?: true
    isActive?: true
  }

  export type LocationMaxAggregateInputType = {
    id?: true
    countryCode?: true
    region?: true
    city?: true
    createdAt?: true
    updatedAt?: true
    latitude?: true
    longitude?: true
    timezone?: true
    isActive?: true
  }

  export type LocationCountAggregateInputType = {
    id?: true
    countryCode?: true
    region?: true
    city?: true
    createdAt?: true
    updatedAt?: true
    latitude?: true
    longitude?: true
    timezone?: true
    isActive?: true
    _all?: true
  }

  export type LocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Location to aggregate.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Locations
    **/
    _count?: true | LocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LocationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LocationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocationMaxAggregateInputType
  }

  export type GetLocationAggregateType<T extends LocationAggregateArgs> = {
        [P in keyof T & keyof AggregateLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocation[P]>
      : GetScalarType<T[P], AggregateLocation[P]>
  }




  export type LocationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocationWhereInput
    orderBy?: LocationOrderByWithAggregationInput | LocationOrderByWithAggregationInput[]
    by: LocationScalarFieldEnum[] | LocationScalarFieldEnum
    having?: LocationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocationCountAggregateInputType | true
    _avg?: LocationAvgAggregateInputType
    _sum?: LocationSumAggregateInputType
    _min?: LocationMinAggregateInputType
    _max?: LocationMaxAggregateInputType
  }

  export type LocationGroupByOutputType = {
    id: string
    countryCode: string
    region: string
    city: string
    createdAt: Date
    updatedAt: Date
    latitude: number | null
    longitude: number | null
    timezone: string | null
    isActive: boolean
    _count: LocationCountAggregateOutputType | null
    _avg: LocationAvgAggregateOutputType | null
    _sum: LocationSumAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  type GetLocationGroupByPayload<T extends LocationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocationGroupByOutputType[P]>
            : GetScalarType<T[P], LocationGroupByOutputType[P]>
        }
      >
    >


  export type LocationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    countryCode?: boolean
    region?: boolean
    city?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    latitude?: boolean
    longitude?: boolean
    timezone?: boolean
    isActive?: boolean
    products?: boolean | Location$productsArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["location"]>

  export type LocationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    countryCode?: boolean
    region?: boolean
    city?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    latitude?: boolean
    longitude?: boolean
    timezone?: boolean
    isActive?: boolean
  }, ExtArgs["result"]["location"]>

  export type LocationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    countryCode?: boolean
    region?: boolean
    city?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    latitude?: boolean
    longitude?: boolean
    timezone?: boolean
    isActive?: boolean
  }, ExtArgs["result"]["location"]>

  export type LocationSelectScalar = {
    id?: boolean
    countryCode?: boolean
    region?: boolean
    city?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    latitude?: boolean
    longitude?: boolean
    timezone?: boolean
    isActive?: boolean
  }

  export type LocationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "countryCode" | "region" | "city" | "createdAt" | "updatedAt" | "latitude" | "longitude" | "timezone" | "isActive", ExtArgs["result"]["location"]>
  export type LocationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Location$productsArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LocationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type LocationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LocationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Location"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      countryCode: string
      region: string
      city: string
      createdAt: Date
      updatedAt: Date
      latitude: number | null
      longitude: number | null
      timezone: string | null
      isActive: boolean
    }, ExtArgs["result"]["location"]>
    composites: {}
  }

  type LocationGetPayload<S extends boolean | null | undefined | LocationDefaultArgs> = $Result.GetResult<Prisma.$LocationPayload, S>

  type LocationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LocationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LocationCountAggregateInputType | true
    }

  export interface LocationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Location'], meta: { name: 'Location' } }
    /**
     * Find zero or one Location that matches the filter.
     * @param {LocationFindUniqueArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LocationFindUniqueArgs>(args: SelectSubset<T, LocationFindUniqueArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Location that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LocationFindUniqueOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LocationFindUniqueOrThrowArgs>(args: SelectSubset<T, LocationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Location that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LocationFindFirstArgs>(args?: SelectSubset<T, LocationFindFirstArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Location that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LocationFindFirstOrThrowArgs>(args?: SelectSubset<T, LocationFindFirstOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Locations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Locations
     * const locations = await prisma.location.findMany()
     * 
     * // Get first 10 Locations
     * const locations = await prisma.location.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const locationWithIdOnly = await prisma.location.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LocationFindManyArgs>(args?: SelectSubset<T, LocationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Location.
     * @param {LocationCreateArgs} args - Arguments to create a Location.
     * @example
     * // Create one Location
     * const Location = await prisma.location.create({
     *   data: {
     *     // ... data to create a Location
     *   }
     * })
     * 
     */
    create<T extends LocationCreateArgs>(args: SelectSubset<T, LocationCreateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Locations.
     * @param {LocationCreateManyArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LocationCreateManyArgs>(args?: SelectSubset<T, LocationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Locations and returns the data saved in the database.
     * @param {LocationCreateManyAndReturnArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Locations and only return the `id`
     * const locationWithIdOnly = await prisma.location.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LocationCreateManyAndReturnArgs>(args?: SelectSubset<T, LocationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Location.
     * @param {LocationDeleteArgs} args - Arguments to delete one Location.
     * @example
     * // Delete one Location
     * const Location = await prisma.location.delete({
     *   where: {
     *     // ... filter to delete one Location
     *   }
     * })
     * 
     */
    delete<T extends LocationDeleteArgs>(args: SelectSubset<T, LocationDeleteArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Location.
     * @param {LocationUpdateArgs} args - Arguments to update one Location.
     * @example
     * // Update one Location
     * const location = await prisma.location.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LocationUpdateArgs>(args: SelectSubset<T, LocationUpdateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Locations.
     * @param {LocationDeleteManyArgs} args - Arguments to filter Locations to delete.
     * @example
     * // Delete a few Locations
     * const { count } = await prisma.location.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LocationDeleteManyArgs>(args?: SelectSubset<T, LocationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Locations
     * const location = await prisma.location.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LocationUpdateManyArgs>(args: SelectSubset<T, LocationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locations and returns the data updated in the database.
     * @param {LocationUpdateManyAndReturnArgs} args - Arguments to update many Locations.
     * @example
     * // Update many Locations
     * const location = await prisma.location.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Locations and only return the `id`
     * const locationWithIdOnly = await prisma.location.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LocationUpdateManyAndReturnArgs>(args: SelectSubset<T, LocationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Location.
     * @param {LocationUpsertArgs} args - Arguments to update or create a Location.
     * @example
     * // Update or create a Location
     * const location = await prisma.location.upsert({
     *   create: {
     *     // ... data to create a Location
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Location we want to update
     *   }
     * })
     */
    upsert<T extends LocationUpsertArgs>(args: SelectSubset<T, LocationUpsertArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationCountArgs} args - Arguments to filter Locations to count.
     * @example
     * // Count the number of Locations
     * const count = await prisma.location.count({
     *   where: {
     *     // ... the filter for the Locations we want to count
     *   }
     * })
    **/
    count<T extends LocationCountArgs>(
      args?: Subset<T, LocationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocationAggregateArgs>(args: Subset<T, LocationAggregateArgs>): Prisma.PrismaPromise<GetLocationAggregateType<T>>

    /**
     * Group by Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LocationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LocationGroupByArgs['orderBy'] }
        : { orderBy?: LocationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LocationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Location model
   */
  readonly fields: LocationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Location.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LocationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Location$productsArgs<ExtArgs> = {}>(args?: Subset<T, Location$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Location model
   */
  interface LocationFieldRefs {
    readonly id: FieldRef<"Location", 'String'>
    readonly countryCode: FieldRef<"Location", 'String'>
    readonly region: FieldRef<"Location", 'String'>
    readonly city: FieldRef<"Location", 'String'>
    readonly createdAt: FieldRef<"Location", 'DateTime'>
    readonly updatedAt: FieldRef<"Location", 'DateTime'>
    readonly latitude: FieldRef<"Location", 'Float'>
    readonly longitude: FieldRef<"Location", 'Float'>
    readonly timezone: FieldRef<"Location", 'String'>
    readonly isActive: FieldRef<"Location", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Location findUnique
   */
  export type LocationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findUniqueOrThrow
   */
  export type LocationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findFirst
   */
  export type LocationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findFirstOrThrow
   */
  export type LocationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findMany
   */
  export type LocationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Locations to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location create
   */
  export type LocationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to create a Location.
     */
    data: XOR<LocationCreateInput, LocationUncheckedCreateInput>
  }

  /**
   * Location createMany
   */
  export type LocationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Location createManyAndReturn
   */
  export type LocationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Location update
   */
  export type LocationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to update a Location.
     */
    data: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
    /**
     * Choose, which Location to update.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location updateMany
   */
  export type LocationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Locations.
     */
    data: XOR<LocationUpdateManyMutationInput, LocationUncheckedUpdateManyInput>
    /**
     * Filter which Locations to update
     */
    where?: LocationWhereInput
    /**
     * Limit how many Locations to update.
     */
    limit?: number
  }

  /**
   * Location updateManyAndReturn
   */
  export type LocationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * The data used to update Locations.
     */
    data: XOR<LocationUpdateManyMutationInput, LocationUncheckedUpdateManyInput>
    /**
     * Filter which Locations to update
     */
    where?: LocationWhereInput
    /**
     * Limit how many Locations to update.
     */
    limit?: number
  }

  /**
   * Location upsert
   */
  export type LocationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The filter to search for the Location to update in case it exists.
     */
    where: LocationWhereUniqueInput
    /**
     * In case the Location found by the `where` argument doesn't exist, create a new Location with this data.
     */
    create: XOR<LocationCreateInput, LocationUncheckedCreateInput>
    /**
     * In case the Location was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
  }

  /**
   * Location delete
   */
  export type LocationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter which Location to delete.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location deleteMany
   */
  export type LocationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Locations to delete
     */
    where?: LocationWhereInput
    /**
     * Limit how many Locations to delete.
     */
    limit?: number
  }

  /**
   * Location.products
   */
  export type Location$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Location without action
   */
  export type LocationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
  }


  /**
   * Model ProductAttribute
   */

  export type AggregateProductAttribute = {
    _count: ProductAttributeCountAggregateOutputType | null
    _avg: ProductAttributeAvgAggregateOutputType | null
    _sum: ProductAttributeSumAggregateOutputType | null
    _min: ProductAttributeMinAggregateOutputType | null
    _max: ProductAttributeMaxAggregateOutputType | null
  }

  export type ProductAttributeAvgAggregateOutputType = {
    order: number | null
  }

  export type ProductAttributeSumAggregateOutputType = {
    order: number | null
  }

  export type ProductAttributeMinAggregateOutputType = {
    id: string | null
    productId: string | null
    key: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    unit: string | null
    isFilterable: boolean | null
    order: number | null
  }

  export type ProductAttributeMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    key: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    unit: string | null
    isFilterable: boolean | null
    order: number | null
  }

  export type ProductAttributeCountAggregateOutputType = {
    id: number
    productId: number
    key: number
    value: number
    createdAt: number
    updatedAt: number
    unit: number
    isFilterable: number
    order: number
    _all: number
  }


  export type ProductAttributeAvgAggregateInputType = {
    order?: true
  }

  export type ProductAttributeSumAggregateInputType = {
    order?: true
  }

  export type ProductAttributeMinAggregateInputType = {
    id?: true
    productId?: true
    key?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    unit?: true
    isFilterable?: true
    order?: true
  }

  export type ProductAttributeMaxAggregateInputType = {
    id?: true
    productId?: true
    key?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    unit?: true
    isFilterable?: true
    order?: true
  }

  export type ProductAttributeCountAggregateInputType = {
    id?: true
    productId?: true
    key?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    unit?: true
    isFilterable?: true
    order?: true
    _all?: true
  }

  export type ProductAttributeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductAttribute to aggregate.
     */
    where?: ProductAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAttributes to fetch.
     */
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAttributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductAttributes
    **/
    _count?: true | ProductAttributeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAttributeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductAttributeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductAttributeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductAttributeMaxAggregateInputType
  }

  export type GetProductAttributeAggregateType<T extends ProductAttributeAggregateArgs> = {
        [P in keyof T & keyof AggregateProductAttribute]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductAttribute[P]>
      : GetScalarType<T[P], AggregateProductAttribute[P]>
  }




  export type ProductAttributeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductAttributeWhereInput
    orderBy?: ProductAttributeOrderByWithAggregationInput | ProductAttributeOrderByWithAggregationInput[]
    by: ProductAttributeScalarFieldEnum[] | ProductAttributeScalarFieldEnum
    having?: ProductAttributeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductAttributeCountAggregateInputType | true
    _avg?: ProductAttributeAvgAggregateInputType
    _sum?: ProductAttributeSumAggregateInputType
    _min?: ProductAttributeMinAggregateInputType
    _max?: ProductAttributeMaxAggregateInputType
  }

  export type ProductAttributeGroupByOutputType = {
    id: string
    productId: string
    key: string
    value: string
    createdAt: Date
    updatedAt: Date
    unit: string | null
    isFilterable: boolean
    order: number
    _count: ProductAttributeCountAggregateOutputType | null
    _avg: ProductAttributeAvgAggregateOutputType | null
    _sum: ProductAttributeSumAggregateOutputType | null
    _min: ProductAttributeMinAggregateOutputType | null
    _max: ProductAttributeMaxAggregateOutputType | null
  }

  type GetProductAttributeGroupByPayload<T extends ProductAttributeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductAttributeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductAttributeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductAttributeGroupByOutputType[P]>
            : GetScalarType<T[P], ProductAttributeGroupByOutputType[P]>
        }
      >
    >


  export type ProductAttributeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    key?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    unit?: boolean
    isFilterable?: boolean
    order?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productAttribute"]>

  export type ProductAttributeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    key?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    unit?: boolean
    isFilterable?: boolean
    order?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productAttribute"]>

  export type ProductAttributeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    key?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    unit?: boolean
    isFilterable?: boolean
    order?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productAttribute"]>

  export type ProductAttributeSelectScalar = {
    id?: boolean
    productId?: boolean
    key?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    unit?: boolean
    isFilterable?: boolean
    order?: boolean
  }

  export type ProductAttributeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "key" | "value" | "createdAt" | "updatedAt" | "unit" | "isFilterable" | "order", ExtArgs["result"]["productAttribute"]>
  export type ProductAttributeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductAttributeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductAttributeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductAttributePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductAttribute"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      key: string
      value: string
      createdAt: Date
      updatedAt: Date
      unit: string | null
      isFilterable: boolean
      order: number
    }, ExtArgs["result"]["productAttribute"]>
    composites: {}
  }

  type ProductAttributeGetPayload<S extends boolean | null | undefined | ProductAttributeDefaultArgs> = $Result.GetResult<Prisma.$ProductAttributePayload, S>

  type ProductAttributeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductAttributeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductAttributeCountAggregateInputType | true
    }

  export interface ProductAttributeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductAttribute'], meta: { name: 'ProductAttribute' } }
    /**
     * Find zero or one ProductAttribute that matches the filter.
     * @param {ProductAttributeFindUniqueArgs} args - Arguments to find a ProductAttribute
     * @example
     * // Get one ProductAttribute
     * const productAttribute = await prisma.productAttribute.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductAttributeFindUniqueArgs>(args: SelectSubset<T, ProductAttributeFindUniqueArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductAttribute that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductAttributeFindUniqueOrThrowArgs} args - Arguments to find a ProductAttribute
     * @example
     * // Get one ProductAttribute
     * const productAttribute = await prisma.productAttribute.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductAttributeFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductAttributeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductAttribute that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeFindFirstArgs} args - Arguments to find a ProductAttribute
     * @example
     * // Get one ProductAttribute
     * const productAttribute = await prisma.productAttribute.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductAttributeFindFirstArgs>(args?: SelectSubset<T, ProductAttributeFindFirstArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductAttribute that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeFindFirstOrThrowArgs} args - Arguments to find a ProductAttribute
     * @example
     * // Get one ProductAttribute
     * const productAttribute = await prisma.productAttribute.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductAttributeFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductAttributeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductAttributes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductAttributes
     * const productAttributes = await prisma.productAttribute.findMany()
     * 
     * // Get first 10 ProductAttributes
     * const productAttributes = await prisma.productAttribute.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productAttributeWithIdOnly = await prisma.productAttribute.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductAttributeFindManyArgs>(args?: SelectSubset<T, ProductAttributeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductAttribute.
     * @param {ProductAttributeCreateArgs} args - Arguments to create a ProductAttribute.
     * @example
     * // Create one ProductAttribute
     * const ProductAttribute = await prisma.productAttribute.create({
     *   data: {
     *     // ... data to create a ProductAttribute
     *   }
     * })
     * 
     */
    create<T extends ProductAttributeCreateArgs>(args: SelectSubset<T, ProductAttributeCreateArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductAttributes.
     * @param {ProductAttributeCreateManyArgs} args - Arguments to create many ProductAttributes.
     * @example
     * // Create many ProductAttributes
     * const productAttribute = await prisma.productAttribute.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductAttributeCreateManyArgs>(args?: SelectSubset<T, ProductAttributeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductAttributes and returns the data saved in the database.
     * @param {ProductAttributeCreateManyAndReturnArgs} args - Arguments to create many ProductAttributes.
     * @example
     * // Create many ProductAttributes
     * const productAttribute = await prisma.productAttribute.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductAttributes and only return the `id`
     * const productAttributeWithIdOnly = await prisma.productAttribute.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductAttributeCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductAttributeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductAttribute.
     * @param {ProductAttributeDeleteArgs} args - Arguments to delete one ProductAttribute.
     * @example
     * // Delete one ProductAttribute
     * const ProductAttribute = await prisma.productAttribute.delete({
     *   where: {
     *     // ... filter to delete one ProductAttribute
     *   }
     * })
     * 
     */
    delete<T extends ProductAttributeDeleteArgs>(args: SelectSubset<T, ProductAttributeDeleteArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductAttribute.
     * @param {ProductAttributeUpdateArgs} args - Arguments to update one ProductAttribute.
     * @example
     * // Update one ProductAttribute
     * const productAttribute = await prisma.productAttribute.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductAttributeUpdateArgs>(args: SelectSubset<T, ProductAttributeUpdateArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductAttributes.
     * @param {ProductAttributeDeleteManyArgs} args - Arguments to filter ProductAttributes to delete.
     * @example
     * // Delete a few ProductAttributes
     * const { count } = await prisma.productAttribute.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductAttributeDeleteManyArgs>(args?: SelectSubset<T, ProductAttributeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductAttributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductAttributes
     * const productAttribute = await prisma.productAttribute.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductAttributeUpdateManyArgs>(args: SelectSubset<T, ProductAttributeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductAttributes and returns the data updated in the database.
     * @param {ProductAttributeUpdateManyAndReturnArgs} args - Arguments to update many ProductAttributes.
     * @example
     * // Update many ProductAttributes
     * const productAttribute = await prisma.productAttribute.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductAttributes and only return the `id`
     * const productAttributeWithIdOnly = await prisma.productAttribute.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductAttributeUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductAttributeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductAttribute.
     * @param {ProductAttributeUpsertArgs} args - Arguments to update or create a ProductAttribute.
     * @example
     * // Update or create a ProductAttribute
     * const productAttribute = await prisma.productAttribute.upsert({
     *   create: {
     *     // ... data to create a ProductAttribute
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductAttribute we want to update
     *   }
     * })
     */
    upsert<T extends ProductAttributeUpsertArgs>(args: SelectSubset<T, ProductAttributeUpsertArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductAttributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeCountArgs} args - Arguments to filter ProductAttributes to count.
     * @example
     * // Count the number of ProductAttributes
     * const count = await prisma.productAttribute.count({
     *   where: {
     *     // ... the filter for the ProductAttributes we want to count
     *   }
     * })
    **/
    count<T extends ProductAttributeCountArgs>(
      args?: Subset<T, ProductAttributeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductAttributeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductAttribute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAttributeAggregateArgs>(args: Subset<T, ProductAttributeAggregateArgs>): Prisma.PrismaPromise<GetProductAttributeAggregateType<T>>

    /**
     * Group by ProductAttribute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductAttributeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductAttributeGroupByArgs['orderBy'] }
        : { orderBy?: ProductAttributeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductAttributeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductAttributeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductAttribute model
   */
  readonly fields: ProductAttributeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductAttribute.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductAttributeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductAttribute model
   */
  interface ProductAttributeFieldRefs {
    readonly id: FieldRef<"ProductAttribute", 'String'>
    readonly productId: FieldRef<"ProductAttribute", 'String'>
    readonly key: FieldRef<"ProductAttribute", 'String'>
    readonly value: FieldRef<"ProductAttribute", 'String'>
    readonly createdAt: FieldRef<"ProductAttribute", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductAttribute", 'DateTime'>
    readonly unit: FieldRef<"ProductAttribute", 'String'>
    readonly isFilterable: FieldRef<"ProductAttribute", 'Boolean'>
    readonly order: FieldRef<"ProductAttribute", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ProductAttribute findUnique
   */
  export type ProductAttributeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttribute to fetch.
     */
    where: ProductAttributeWhereUniqueInput
  }

  /**
   * ProductAttribute findUniqueOrThrow
   */
  export type ProductAttributeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttribute to fetch.
     */
    where: ProductAttributeWhereUniqueInput
  }

  /**
   * ProductAttribute findFirst
   */
  export type ProductAttributeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttribute to fetch.
     */
    where?: ProductAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAttributes to fetch.
     */
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductAttributes.
     */
    cursor?: ProductAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAttributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductAttributes.
     */
    distinct?: ProductAttributeScalarFieldEnum | ProductAttributeScalarFieldEnum[]
  }

  /**
   * ProductAttribute findFirstOrThrow
   */
  export type ProductAttributeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttribute to fetch.
     */
    where?: ProductAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAttributes to fetch.
     */
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductAttributes.
     */
    cursor?: ProductAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAttributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductAttributes.
     */
    distinct?: ProductAttributeScalarFieldEnum | ProductAttributeScalarFieldEnum[]
  }

  /**
   * ProductAttribute findMany
   */
  export type ProductAttributeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttributes to fetch.
     */
    where?: ProductAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAttributes to fetch.
     */
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductAttributes.
     */
    cursor?: ProductAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAttributes.
     */
    skip?: number
    distinct?: ProductAttributeScalarFieldEnum | ProductAttributeScalarFieldEnum[]
  }

  /**
   * ProductAttribute create
   */
  export type ProductAttributeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductAttribute.
     */
    data: XOR<ProductAttributeCreateInput, ProductAttributeUncheckedCreateInput>
  }

  /**
   * ProductAttribute createMany
   */
  export type ProductAttributeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductAttributes.
     */
    data: ProductAttributeCreateManyInput | ProductAttributeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductAttribute createManyAndReturn
   */
  export type ProductAttributeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * The data used to create many ProductAttributes.
     */
    data: ProductAttributeCreateManyInput | ProductAttributeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductAttribute update
   */
  export type ProductAttributeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductAttribute.
     */
    data: XOR<ProductAttributeUpdateInput, ProductAttributeUncheckedUpdateInput>
    /**
     * Choose, which ProductAttribute to update.
     */
    where: ProductAttributeWhereUniqueInput
  }

  /**
   * ProductAttribute updateMany
   */
  export type ProductAttributeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductAttributes.
     */
    data: XOR<ProductAttributeUpdateManyMutationInput, ProductAttributeUncheckedUpdateManyInput>
    /**
     * Filter which ProductAttributes to update
     */
    where?: ProductAttributeWhereInput
    /**
     * Limit how many ProductAttributes to update.
     */
    limit?: number
  }

  /**
   * ProductAttribute updateManyAndReturn
   */
  export type ProductAttributeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * The data used to update ProductAttributes.
     */
    data: XOR<ProductAttributeUpdateManyMutationInput, ProductAttributeUncheckedUpdateManyInput>
    /**
     * Filter which ProductAttributes to update
     */
    where?: ProductAttributeWhereInput
    /**
     * Limit how many ProductAttributes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductAttribute upsert
   */
  export type ProductAttributeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductAttribute to update in case it exists.
     */
    where: ProductAttributeWhereUniqueInput
    /**
     * In case the ProductAttribute found by the `where` argument doesn't exist, create a new ProductAttribute with this data.
     */
    create: XOR<ProductAttributeCreateInput, ProductAttributeUncheckedCreateInput>
    /**
     * In case the ProductAttribute was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductAttributeUpdateInput, ProductAttributeUncheckedUpdateInput>
  }

  /**
   * ProductAttribute delete
   */
  export type ProductAttributeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter which ProductAttribute to delete.
     */
    where: ProductAttributeWhereUniqueInput
  }

  /**
   * ProductAttribute deleteMany
   */
  export type ProductAttributeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductAttributes to delete
     */
    where?: ProductAttributeWhereInput
    /**
     * Limit how many ProductAttributes to delete.
     */
    limit?: number
  }

  /**
   * ProductAttribute without action
   */
  export type ProductAttributeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAttribute
     */
    omit?: ProductAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
  }


  /**
   * Model ProductTranslation
   */

  export type AggregateProductTranslation = {
    _count: ProductTranslationCountAggregateOutputType | null
    _min: ProductTranslationMinAggregateOutputType | null
    _max: ProductTranslationMaxAggregateOutputType | null
  }

  export type ProductTranslationMinAggregateOutputType = {
    id: string | null
    productId: string | null
    locale: string | null
    title: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductTranslationMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    locale: string | null
    title: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductTranslationCountAggregateOutputType = {
    id: number
    productId: number
    locale: number
    title: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductTranslationMinAggregateInputType = {
    id?: true
    productId?: true
    locale?: true
    title?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductTranslationMaxAggregateInputType = {
    id?: true
    productId?: true
    locale?: true
    title?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductTranslationCountAggregateInputType = {
    id?: true
    productId?: true
    locale?: true
    title?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductTranslation to aggregate.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductTranslations
    **/
    _count?: true | ProductTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductTranslationMaxAggregateInputType
  }

  export type GetProductTranslationAggregateType<T extends ProductTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateProductTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductTranslation[P]>
      : GetScalarType<T[P], AggregateProductTranslation[P]>
  }




  export type ProductTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithAggregationInput | ProductTranslationOrderByWithAggregationInput[]
    by: ProductTranslationScalarFieldEnum[] | ProductTranslationScalarFieldEnum
    having?: ProductTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductTranslationCountAggregateInputType | true
    _min?: ProductTranslationMinAggregateInputType
    _max?: ProductTranslationMaxAggregateInputType
  }

  export type ProductTranslationGroupByOutputType = {
    id: string
    productId: string
    locale: string
    title: string
    description: string
    createdAt: Date
    updatedAt: Date
    _count: ProductTranslationCountAggregateOutputType | null
    _min: ProductTranslationMinAggregateOutputType | null
    _max: ProductTranslationMaxAggregateOutputType | null
  }

  type GetProductTranslationGroupByPayload<T extends ProductTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], ProductTranslationGroupByOutputType[P]>
        }
      >
    >


  export type ProductTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productTranslation"]>

  export type ProductTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productTranslation"]>

  export type ProductTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productTranslation"]>

  export type ProductTranslationSelectScalar = {
    id?: boolean
    productId?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "locale" | "title" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["productTranslation"]>
  export type ProductTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductTranslation"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      locale: string
      title: string
      description: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productTranslation"]>
    composites: {}
  }

  type ProductTranslationGetPayload<S extends boolean | null | undefined | ProductTranslationDefaultArgs> = $Result.GetResult<Prisma.$ProductTranslationPayload, S>

  type ProductTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductTranslationCountAggregateInputType | true
    }

  export interface ProductTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductTranslation'], meta: { name: 'ProductTranslation' } }
    /**
     * Find zero or one ProductTranslation that matches the filter.
     * @param {ProductTranslationFindUniqueArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductTranslationFindUniqueArgs>(args: SelectSubset<T, ProductTranslationFindUniqueArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductTranslationFindUniqueOrThrowArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationFindFirstArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductTranslationFindFirstArgs>(args?: SelectSubset<T, ProductTranslationFindFirstArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationFindFirstOrThrowArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductTranslations
     * const productTranslations = await prisma.productTranslation.findMany()
     * 
     * // Get first 10 ProductTranslations
     * const productTranslations = await prisma.productTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productTranslationWithIdOnly = await prisma.productTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductTranslationFindManyArgs>(args?: SelectSubset<T, ProductTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductTranslation.
     * @param {ProductTranslationCreateArgs} args - Arguments to create a ProductTranslation.
     * @example
     * // Create one ProductTranslation
     * const ProductTranslation = await prisma.productTranslation.create({
     *   data: {
     *     // ... data to create a ProductTranslation
     *   }
     * })
     * 
     */
    create<T extends ProductTranslationCreateArgs>(args: SelectSubset<T, ProductTranslationCreateArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductTranslations.
     * @param {ProductTranslationCreateManyArgs} args - Arguments to create many ProductTranslations.
     * @example
     * // Create many ProductTranslations
     * const productTranslation = await prisma.productTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductTranslationCreateManyArgs>(args?: SelectSubset<T, ProductTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductTranslations and returns the data saved in the database.
     * @param {ProductTranslationCreateManyAndReturnArgs} args - Arguments to create many ProductTranslations.
     * @example
     * // Create many ProductTranslations
     * const productTranslation = await prisma.productTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductTranslations and only return the `id`
     * const productTranslationWithIdOnly = await prisma.productTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductTranslation.
     * @param {ProductTranslationDeleteArgs} args - Arguments to delete one ProductTranslation.
     * @example
     * // Delete one ProductTranslation
     * const ProductTranslation = await prisma.productTranslation.delete({
     *   where: {
     *     // ... filter to delete one ProductTranslation
     *   }
     * })
     * 
     */
    delete<T extends ProductTranslationDeleteArgs>(args: SelectSubset<T, ProductTranslationDeleteArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductTranslation.
     * @param {ProductTranslationUpdateArgs} args - Arguments to update one ProductTranslation.
     * @example
     * // Update one ProductTranslation
     * const productTranslation = await prisma.productTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductTranslationUpdateArgs>(args: SelectSubset<T, ProductTranslationUpdateArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductTranslations.
     * @param {ProductTranslationDeleteManyArgs} args - Arguments to filter ProductTranslations to delete.
     * @example
     * // Delete a few ProductTranslations
     * const { count } = await prisma.productTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductTranslationDeleteManyArgs>(args?: SelectSubset<T, ProductTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductTranslations
     * const productTranslation = await prisma.productTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductTranslationUpdateManyArgs>(args: SelectSubset<T, ProductTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductTranslations and returns the data updated in the database.
     * @param {ProductTranslationUpdateManyAndReturnArgs} args - Arguments to update many ProductTranslations.
     * @example
     * // Update many ProductTranslations
     * const productTranslation = await prisma.productTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductTranslations and only return the `id`
     * const productTranslationWithIdOnly = await prisma.productTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductTranslation.
     * @param {ProductTranslationUpsertArgs} args - Arguments to update or create a ProductTranslation.
     * @example
     * // Update or create a ProductTranslation
     * const productTranslation = await prisma.productTranslation.upsert({
     *   create: {
     *     // ... data to create a ProductTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductTranslation we want to update
     *   }
     * })
     */
    upsert<T extends ProductTranslationUpsertArgs>(args: SelectSubset<T, ProductTranslationUpsertArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationCountArgs} args - Arguments to filter ProductTranslations to count.
     * @example
     * // Count the number of ProductTranslations
     * const count = await prisma.productTranslation.count({
     *   where: {
     *     // ... the filter for the ProductTranslations we want to count
     *   }
     * })
    **/
    count<T extends ProductTranslationCountArgs>(
      args?: Subset<T, ProductTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductTranslationAggregateArgs>(args: Subset<T, ProductTranslationAggregateArgs>): Prisma.PrismaPromise<GetProductTranslationAggregateType<T>>

    /**
     * Group by ProductTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductTranslationGroupByArgs['orderBy'] }
        : { orderBy?: ProductTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductTranslation model
   */
  readonly fields: ProductTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductTranslation model
   */
  interface ProductTranslationFieldRefs {
    readonly id: FieldRef<"ProductTranslation", 'String'>
    readonly productId: FieldRef<"ProductTranslation", 'String'>
    readonly locale: FieldRef<"ProductTranslation", 'String'>
    readonly title: FieldRef<"ProductTranslation", 'String'>
    readonly description: FieldRef<"ProductTranslation", 'String'>
    readonly createdAt: FieldRef<"ProductTranslation", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductTranslation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductTranslation findUnique
   */
  export type ProductTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation findUniqueOrThrow
   */
  export type ProductTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation findFirst
   */
  export type ProductTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductTranslations.
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductTranslations.
     */
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * ProductTranslation findFirstOrThrow
   */
  export type ProductTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductTranslations.
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductTranslations.
     */
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * ProductTranslation findMany
   */
  export type ProductTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslations to fetch.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductTranslations.
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * ProductTranslation create
   */
  export type ProductTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductTranslation.
     */
    data: XOR<ProductTranslationCreateInput, ProductTranslationUncheckedCreateInput>
  }

  /**
   * ProductTranslation createMany
   */
  export type ProductTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductTranslations.
     */
    data: ProductTranslationCreateManyInput | ProductTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductTranslation createManyAndReturn
   */
  export type ProductTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many ProductTranslations.
     */
    data: ProductTranslationCreateManyInput | ProductTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductTranslation update
   */
  export type ProductTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductTranslation.
     */
    data: XOR<ProductTranslationUpdateInput, ProductTranslationUncheckedUpdateInput>
    /**
     * Choose, which ProductTranslation to update.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation updateMany
   */
  export type ProductTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductTranslations.
     */
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ProductTranslations to update
     */
    where?: ProductTranslationWhereInput
    /**
     * Limit how many ProductTranslations to update.
     */
    limit?: number
  }

  /**
   * ProductTranslation updateManyAndReturn
   */
  export type ProductTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * The data used to update ProductTranslations.
     */
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ProductTranslations to update
     */
    where?: ProductTranslationWhereInput
    /**
     * Limit how many ProductTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductTranslation upsert
   */
  export type ProductTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductTranslation to update in case it exists.
     */
    where: ProductTranslationWhereUniqueInput
    /**
     * In case the ProductTranslation found by the `where` argument doesn't exist, create a new ProductTranslation with this data.
     */
    create: XOR<ProductTranslationCreateInput, ProductTranslationUncheckedCreateInput>
    /**
     * In case the ProductTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductTranslationUpdateInput, ProductTranslationUncheckedUpdateInput>
  }

  /**
   * ProductTranslation delete
   */
  export type ProductTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter which ProductTranslation to delete.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation deleteMany
   */
  export type ProductTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductTranslations to delete
     */
    where?: ProductTranslationWhereInput
    /**
     * Limit how many ProductTranslations to delete.
     */
    limit?: number
  }

  /**
   * ProductTranslation without action
   */
  export type ProductTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
  }


  /**
   * Model ProductDeliveryOption
   */

  export type AggregateProductDeliveryOption = {
    _count: ProductDeliveryOptionCountAggregateOutputType | null
    _avg: ProductDeliveryOptionAvgAggregateOutputType | null
    _sum: ProductDeliveryOptionSumAggregateOutputType | null
    _min: ProductDeliveryOptionMinAggregateOutputType | null
    _max: ProductDeliveryOptionMaxAggregateOutputType | null
  }

  export type ProductDeliveryOptionAvgAggregateOutputType = {
    price: Decimal | null
    estimatedDays: number | null
  }

  export type ProductDeliveryOptionSumAggregateOutputType = {
    price: Decimal | null
    estimatedDays: number | null
  }

  export type ProductDeliveryOptionMinAggregateOutputType = {
    id: string | null
    productId: string | null
    deliveryType: $Enums.DeliveryType | null
    name: string | null
    description: string | null
    price: Decimal | null
    currencyCode: string | null
    estimatedDays: number | null
    isDefault: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductDeliveryOptionMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    deliveryType: $Enums.DeliveryType | null
    name: string | null
    description: string | null
    price: Decimal | null
    currencyCode: string | null
    estimatedDays: number | null
    isDefault: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductDeliveryOptionCountAggregateOutputType = {
    id: number
    productId: number
    deliveryType: number
    name: number
    description: number
    price: number
    currencyCode: number
    estimatedDays: number
    isDefault: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductDeliveryOptionAvgAggregateInputType = {
    price?: true
    estimatedDays?: true
  }

  export type ProductDeliveryOptionSumAggregateInputType = {
    price?: true
    estimatedDays?: true
  }

  export type ProductDeliveryOptionMinAggregateInputType = {
    id?: true
    productId?: true
    deliveryType?: true
    name?: true
    description?: true
    price?: true
    currencyCode?: true
    estimatedDays?: true
    isDefault?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductDeliveryOptionMaxAggregateInputType = {
    id?: true
    productId?: true
    deliveryType?: true
    name?: true
    description?: true
    price?: true
    currencyCode?: true
    estimatedDays?: true
    isDefault?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductDeliveryOptionCountAggregateInputType = {
    id?: true
    productId?: true
    deliveryType?: true
    name?: true
    description?: true
    price?: true
    currencyCode?: true
    estimatedDays?: true
    isDefault?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductDeliveryOptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductDeliveryOption to aggregate.
     */
    where?: ProductDeliveryOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductDeliveryOptions to fetch.
     */
    orderBy?: ProductDeliveryOptionOrderByWithRelationInput | ProductDeliveryOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductDeliveryOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductDeliveryOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductDeliveryOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductDeliveryOptions
    **/
    _count?: true | ProductDeliveryOptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductDeliveryOptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductDeliveryOptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductDeliveryOptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductDeliveryOptionMaxAggregateInputType
  }

  export type GetProductDeliveryOptionAggregateType<T extends ProductDeliveryOptionAggregateArgs> = {
        [P in keyof T & keyof AggregateProductDeliveryOption]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductDeliveryOption[P]>
      : GetScalarType<T[P], AggregateProductDeliveryOption[P]>
  }




  export type ProductDeliveryOptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductDeliveryOptionWhereInput
    orderBy?: ProductDeliveryOptionOrderByWithAggregationInput | ProductDeliveryOptionOrderByWithAggregationInput[]
    by: ProductDeliveryOptionScalarFieldEnum[] | ProductDeliveryOptionScalarFieldEnum
    having?: ProductDeliveryOptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductDeliveryOptionCountAggregateInputType | true
    _avg?: ProductDeliveryOptionAvgAggregateInputType
    _sum?: ProductDeliveryOptionSumAggregateInputType
    _min?: ProductDeliveryOptionMinAggregateInputType
    _max?: ProductDeliveryOptionMaxAggregateInputType
  }

  export type ProductDeliveryOptionGroupByOutputType = {
    id: string
    productId: string
    deliveryType: $Enums.DeliveryType
    name: string
    description: string | null
    price: Decimal
    currencyCode: string
    estimatedDays: number
    isDefault: boolean
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProductDeliveryOptionCountAggregateOutputType | null
    _avg: ProductDeliveryOptionAvgAggregateOutputType | null
    _sum: ProductDeliveryOptionSumAggregateOutputType | null
    _min: ProductDeliveryOptionMinAggregateOutputType | null
    _max: ProductDeliveryOptionMaxAggregateOutputType | null
  }

  type GetProductDeliveryOptionGroupByPayload<T extends ProductDeliveryOptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductDeliveryOptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductDeliveryOptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductDeliveryOptionGroupByOutputType[P]>
            : GetScalarType<T[P], ProductDeliveryOptionGroupByOutputType[P]>
        }
      >
    >


  export type ProductDeliveryOptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    deliveryType?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    currencyCode?: boolean
    estimatedDays?: boolean
    isDefault?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productDeliveryOption"]>

  export type ProductDeliveryOptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    deliveryType?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    currencyCode?: boolean
    estimatedDays?: boolean
    isDefault?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productDeliveryOption"]>

  export type ProductDeliveryOptionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    deliveryType?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    currencyCode?: boolean
    estimatedDays?: boolean
    isDefault?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productDeliveryOption"]>

  export type ProductDeliveryOptionSelectScalar = {
    id?: boolean
    productId?: boolean
    deliveryType?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    currencyCode?: boolean
    estimatedDays?: boolean
    isDefault?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductDeliveryOptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "deliveryType" | "name" | "description" | "price" | "currencyCode" | "estimatedDays" | "isDefault" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["productDeliveryOption"]>
  export type ProductDeliveryOptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductDeliveryOptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductDeliveryOptionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductDeliveryOptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductDeliveryOption"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      deliveryType: $Enums.DeliveryType
      name: string
      description: string | null
      price: Prisma.Decimal
      currencyCode: string
      estimatedDays: number
      isDefault: boolean
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productDeliveryOption"]>
    composites: {}
  }

  type ProductDeliveryOptionGetPayload<S extends boolean | null | undefined | ProductDeliveryOptionDefaultArgs> = $Result.GetResult<Prisma.$ProductDeliveryOptionPayload, S>

  type ProductDeliveryOptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductDeliveryOptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductDeliveryOptionCountAggregateInputType | true
    }

  export interface ProductDeliveryOptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductDeliveryOption'], meta: { name: 'ProductDeliveryOption' } }
    /**
     * Find zero or one ProductDeliveryOption that matches the filter.
     * @param {ProductDeliveryOptionFindUniqueArgs} args - Arguments to find a ProductDeliveryOption
     * @example
     * // Get one ProductDeliveryOption
     * const productDeliveryOption = await prisma.productDeliveryOption.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductDeliveryOptionFindUniqueArgs>(args: SelectSubset<T, ProductDeliveryOptionFindUniqueArgs<ExtArgs>>): Prisma__ProductDeliveryOptionClient<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductDeliveryOption that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductDeliveryOptionFindUniqueOrThrowArgs} args - Arguments to find a ProductDeliveryOption
     * @example
     * // Get one ProductDeliveryOption
     * const productDeliveryOption = await prisma.productDeliveryOption.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductDeliveryOptionFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductDeliveryOptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductDeliveryOptionClient<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductDeliveryOption that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductDeliveryOptionFindFirstArgs} args - Arguments to find a ProductDeliveryOption
     * @example
     * // Get one ProductDeliveryOption
     * const productDeliveryOption = await prisma.productDeliveryOption.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductDeliveryOptionFindFirstArgs>(args?: SelectSubset<T, ProductDeliveryOptionFindFirstArgs<ExtArgs>>): Prisma__ProductDeliveryOptionClient<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductDeliveryOption that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductDeliveryOptionFindFirstOrThrowArgs} args - Arguments to find a ProductDeliveryOption
     * @example
     * // Get one ProductDeliveryOption
     * const productDeliveryOption = await prisma.productDeliveryOption.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductDeliveryOptionFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductDeliveryOptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductDeliveryOptionClient<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductDeliveryOptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductDeliveryOptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductDeliveryOptions
     * const productDeliveryOptions = await prisma.productDeliveryOption.findMany()
     * 
     * // Get first 10 ProductDeliveryOptions
     * const productDeliveryOptions = await prisma.productDeliveryOption.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productDeliveryOptionWithIdOnly = await prisma.productDeliveryOption.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductDeliveryOptionFindManyArgs>(args?: SelectSubset<T, ProductDeliveryOptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductDeliveryOption.
     * @param {ProductDeliveryOptionCreateArgs} args - Arguments to create a ProductDeliveryOption.
     * @example
     * // Create one ProductDeliveryOption
     * const ProductDeliveryOption = await prisma.productDeliveryOption.create({
     *   data: {
     *     // ... data to create a ProductDeliveryOption
     *   }
     * })
     * 
     */
    create<T extends ProductDeliveryOptionCreateArgs>(args: SelectSubset<T, ProductDeliveryOptionCreateArgs<ExtArgs>>): Prisma__ProductDeliveryOptionClient<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductDeliveryOptions.
     * @param {ProductDeliveryOptionCreateManyArgs} args - Arguments to create many ProductDeliveryOptions.
     * @example
     * // Create many ProductDeliveryOptions
     * const productDeliveryOption = await prisma.productDeliveryOption.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductDeliveryOptionCreateManyArgs>(args?: SelectSubset<T, ProductDeliveryOptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductDeliveryOptions and returns the data saved in the database.
     * @param {ProductDeliveryOptionCreateManyAndReturnArgs} args - Arguments to create many ProductDeliveryOptions.
     * @example
     * // Create many ProductDeliveryOptions
     * const productDeliveryOption = await prisma.productDeliveryOption.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductDeliveryOptions and only return the `id`
     * const productDeliveryOptionWithIdOnly = await prisma.productDeliveryOption.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductDeliveryOptionCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductDeliveryOptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductDeliveryOption.
     * @param {ProductDeliveryOptionDeleteArgs} args - Arguments to delete one ProductDeliveryOption.
     * @example
     * // Delete one ProductDeliveryOption
     * const ProductDeliveryOption = await prisma.productDeliveryOption.delete({
     *   where: {
     *     // ... filter to delete one ProductDeliveryOption
     *   }
     * })
     * 
     */
    delete<T extends ProductDeliveryOptionDeleteArgs>(args: SelectSubset<T, ProductDeliveryOptionDeleteArgs<ExtArgs>>): Prisma__ProductDeliveryOptionClient<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductDeliveryOption.
     * @param {ProductDeliveryOptionUpdateArgs} args - Arguments to update one ProductDeliveryOption.
     * @example
     * // Update one ProductDeliveryOption
     * const productDeliveryOption = await prisma.productDeliveryOption.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductDeliveryOptionUpdateArgs>(args: SelectSubset<T, ProductDeliveryOptionUpdateArgs<ExtArgs>>): Prisma__ProductDeliveryOptionClient<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductDeliveryOptions.
     * @param {ProductDeliveryOptionDeleteManyArgs} args - Arguments to filter ProductDeliveryOptions to delete.
     * @example
     * // Delete a few ProductDeliveryOptions
     * const { count } = await prisma.productDeliveryOption.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeliveryOptionDeleteManyArgs>(args?: SelectSubset<T, ProductDeliveryOptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductDeliveryOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductDeliveryOptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductDeliveryOptions
     * const productDeliveryOption = await prisma.productDeliveryOption.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductDeliveryOptionUpdateManyArgs>(args: SelectSubset<T, ProductDeliveryOptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductDeliveryOptions and returns the data updated in the database.
     * @param {ProductDeliveryOptionUpdateManyAndReturnArgs} args - Arguments to update many ProductDeliveryOptions.
     * @example
     * // Update many ProductDeliveryOptions
     * const productDeliveryOption = await prisma.productDeliveryOption.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductDeliveryOptions and only return the `id`
     * const productDeliveryOptionWithIdOnly = await prisma.productDeliveryOption.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductDeliveryOptionUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductDeliveryOptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductDeliveryOption.
     * @param {ProductDeliveryOptionUpsertArgs} args - Arguments to update or create a ProductDeliveryOption.
     * @example
     * // Update or create a ProductDeliveryOption
     * const productDeliveryOption = await prisma.productDeliveryOption.upsert({
     *   create: {
     *     // ... data to create a ProductDeliveryOption
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductDeliveryOption we want to update
     *   }
     * })
     */
    upsert<T extends ProductDeliveryOptionUpsertArgs>(args: SelectSubset<T, ProductDeliveryOptionUpsertArgs<ExtArgs>>): Prisma__ProductDeliveryOptionClient<$Result.GetResult<Prisma.$ProductDeliveryOptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductDeliveryOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductDeliveryOptionCountArgs} args - Arguments to filter ProductDeliveryOptions to count.
     * @example
     * // Count the number of ProductDeliveryOptions
     * const count = await prisma.productDeliveryOption.count({
     *   where: {
     *     // ... the filter for the ProductDeliveryOptions we want to count
     *   }
     * })
    **/
    count<T extends ProductDeliveryOptionCountArgs>(
      args?: Subset<T, ProductDeliveryOptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductDeliveryOptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductDeliveryOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductDeliveryOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductDeliveryOptionAggregateArgs>(args: Subset<T, ProductDeliveryOptionAggregateArgs>): Prisma.PrismaPromise<GetProductDeliveryOptionAggregateType<T>>

    /**
     * Group by ProductDeliveryOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductDeliveryOptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductDeliveryOptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductDeliveryOptionGroupByArgs['orderBy'] }
        : { orderBy?: ProductDeliveryOptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductDeliveryOptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductDeliveryOptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductDeliveryOption model
   */
  readonly fields: ProductDeliveryOptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductDeliveryOption.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductDeliveryOptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductDeliveryOption model
   */
  interface ProductDeliveryOptionFieldRefs {
    readonly id: FieldRef<"ProductDeliveryOption", 'String'>
    readonly productId: FieldRef<"ProductDeliveryOption", 'String'>
    readonly deliveryType: FieldRef<"ProductDeliveryOption", 'DeliveryType'>
    readonly name: FieldRef<"ProductDeliveryOption", 'String'>
    readonly description: FieldRef<"ProductDeliveryOption", 'String'>
    readonly price: FieldRef<"ProductDeliveryOption", 'Decimal'>
    readonly currencyCode: FieldRef<"ProductDeliveryOption", 'String'>
    readonly estimatedDays: FieldRef<"ProductDeliveryOption", 'Int'>
    readonly isDefault: FieldRef<"ProductDeliveryOption", 'Boolean'>
    readonly isActive: FieldRef<"ProductDeliveryOption", 'Boolean'>
    readonly createdAt: FieldRef<"ProductDeliveryOption", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductDeliveryOption", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductDeliveryOption findUnique
   */
  export type ProductDeliveryOptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductDeliveryOption to fetch.
     */
    where: ProductDeliveryOptionWhereUniqueInput
  }

  /**
   * ProductDeliveryOption findUniqueOrThrow
   */
  export type ProductDeliveryOptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductDeliveryOption to fetch.
     */
    where: ProductDeliveryOptionWhereUniqueInput
  }

  /**
   * ProductDeliveryOption findFirst
   */
  export type ProductDeliveryOptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductDeliveryOption to fetch.
     */
    where?: ProductDeliveryOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductDeliveryOptions to fetch.
     */
    orderBy?: ProductDeliveryOptionOrderByWithRelationInput | ProductDeliveryOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductDeliveryOptions.
     */
    cursor?: ProductDeliveryOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductDeliveryOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductDeliveryOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductDeliveryOptions.
     */
    distinct?: ProductDeliveryOptionScalarFieldEnum | ProductDeliveryOptionScalarFieldEnum[]
  }

  /**
   * ProductDeliveryOption findFirstOrThrow
   */
  export type ProductDeliveryOptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductDeliveryOption to fetch.
     */
    where?: ProductDeliveryOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductDeliveryOptions to fetch.
     */
    orderBy?: ProductDeliveryOptionOrderByWithRelationInput | ProductDeliveryOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductDeliveryOptions.
     */
    cursor?: ProductDeliveryOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductDeliveryOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductDeliveryOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductDeliveryOptions.
     */
    distinct?: ProductDeliveryOptionScalarFieldEnum | ProductDeliveryOptionScalarFieldEnum[]
  }

  /**
   * ProductDeliveryOption findMany
   */
  export type ProductDeliveryOptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductDeliveryOptions to fetch.
     */
    where?: ProductDeliveryOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductDeliveryOptions to fetch.
     */
    orderBy?: ProductDeliveryOptionOrderByWithRelationInput | ProductDeliveryOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductDeliveryOptions.
     */
    cursor?: ProductDeliveryOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductDeliveryOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductDeliveryOptions.
     */
    skip?: number
    distinct?: ProductDeliveryOptionScalarFieldEnum | ProductDeliveryOptionScalarFieldEnum[]
  }

  /**
   * ProductDeliveryOption create
   */
  export type ProductDeliveryOptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductDeliveryOption.
     */
    data: XOR<ProductDeliveryOptionCreateInput, ProductDeliveryOptionUncheckedCreateInput>
  }

  /**
   * ProductDeliveryOption createMany
   */
  export type ProductDeliveryOptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductDeliveryOptions.
     */
    data: ProductDeliveryOptionCreateManyInput | ProductDeliveryOptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductDeliveryOption createManyAndReturn
   */
  export type ProductDeliveryOptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * The data used to create many ProductDeliveryOptions.
     */
    data: ProductDeliveryOptionCreateManyInput | ProductDeliveryOptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductDeliveryOption update
   */
  export type ProductDeliveryOptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductDeliveryOption.
     */
    data: XOR<ProductDeliveryOptionUpdateInput, ProductDeliveryOptionUncheckedUpdateInput>
    /**
     * Choose, which ProductDeliveryOption to update.
     */
    where: ProductDeliveryOptionWhereUniqueInput
  }

  /**
   * ProductDeliveryOption updateMany
   */
  export type ProductDeliveryOptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductDeliveryOptions.
     */
    data: XOR<ProductDeliveryOptionUpdateManyMutationInput, ProductDeliveryOptionUncheckedUpdateManyInput>
    /**
     * Filter which ProductDeliveryOptions to update
     */
    where?: ProductDeliveryOptionWhereInput
    /**
     * Limit how many ProductDeliveryOptions to update.
     */
    limit?: number
  }

  /**
   * ProductDeliveryOption updateManyAndReturn
   */
  export type ProductDeliveryOptionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * The data used to update ProductDeliveryOptions.
     */
    data: XOR<ProductDeliveryOptionUpdateManyMutationInput, ProductDeliveryOptionUncheckedUpdateManyInput>
    /**
     * Filter which ProductDeliveryOptions to update
     */
    where?: ProductDeliveryOptionWhereInput
    /**
     * Limit how many ProductDeliveryOptions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductDeliveryOption upsert
   */
  export type ProductDeliveryOptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductDeliveryOption to update in case it exists.
     */
    where: ProductDeliveryOptionWhereUniqueInput
    /**
     * In case the ProductDeliveryOption found by the `where` argument doesn't exist, create a new ProductDeliveryOption with this data.
     */
    create: XOR<ProductDeliveryOptionCreateInput, ProductDeliveryOptionUncheckedCreateInput>
    /**
     * In case the ProductDeliveryOption was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductDeliveryOptionUpdateInput, ProductDeliveryOptionUncheckedUpdateInput>
  }

  /**
   * ProductDeliveryOption delete
   */
  export type ProductDeliveryOptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
    /**
     * Filter which ProductDeliveryOption to delete.
     */
    where: ProductDeliveryOptionWhereUniqueInput
  }

  /**
   * ProductDeliveryOption deleteMany
   */
  export type ProductDeliveryOptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductDeliveryOptions to delete
     */
    where?: ProductDeliveryOptionWhereInput
    /**
     * Limit how many ProductDeliveryOptions to delete.
     */
    limit?: number
  }

  /**
   * ProductDeliveryOption without action
   */
  export type ProductDeliveryOptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductDeliveryOption
     */
    select?: ProductDeliveryOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductDeliveryOption
     */
    omit?: ProductDeliveryOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductDeliveryOptionInclude<ExtArgs> | null
  }


  /**
   * Model CategoryTranslation
   */

  export type AggregateCategoryTranslation = {
    _count: CategoryTranslationCountAggregateOutputType | null
    _min: CategoryTranslationMinAggregateOutputType | null
    _max: CategoryTranslationMaxAggregateOutputType | null
  }

  export type CategoryTranslationMinAggregateOutputType = {
    id: string | null
    categoryId: string | null
    locale: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryTranslationMaxAggregateOutputType = {
    id: string | null
    categoryId: string | null
    locale: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryTranslationCountAggregateOutputType = {
    id: number
    categoryId: number
    locale: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CategoryTranslationMinAggregateInputType = {
    id?: true
    categoryId?: true
    locale?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryTranslationMaxAggregateInputType = {
    id?: true
    categoryId?: true
    locale?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryTranslationCountAggregateInputType = {
    id?: true
    categoryId?: true
    locale?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CategoryTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoryTranslation to aggregate.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoryTranslations
    **/
    _count?: true | CategoryTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryTranslationMaxAggregateInputType
  }

  export type GetCategoryTranslationAggregateType<T extends CategoryTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoryTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoryTranslation[P]>
      : GetScalarType<T[P], AggregateCategoryTranslation[P]>
  }




  export type CategoryTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithAggregationInput | CategoryTranslationOrderByWithAggregationInput[]
    by: CategoryTranslationScalarFieldEnum[] | CategoryTranslationScalarFieldEnum
    having?: CategoryTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryTranslationCountAggregateInputType | true
    _min?: CategoryTranslationMinAggregateInputType
    _max?: CategoryTranslationMaxAggregateInputType
  }

  export type CategoryTranslationGroupByOutputType = {
    id: string
    categoryId: string
    locale: string
    name: string
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: CategoryTranslationCountAggregateOutputType | null
    _min: CategoryTranslationMinAggregateOutputType | null
    _max: CategoryTranslationMaxAggregateOutputType | null
  }

  type GetCategoryTranslationGroupByPayload<T extends CategoryTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryTranslationGroupByOutputType[P]>
        }
      >
    >


  export type CategoryTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    locale?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoryTranslation"]>

  export type CategoryTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    locale?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoryTranslation"]>

  export type CategoryTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    locale?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoryTranslation"]>

  export type CategoryTranslationSelectScalar = {
    id?: boolean
    categoryId?: boolean
    locale?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CategoryTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "categoryId" | "locale" | "name" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["categoryTranslation"]>
  export type CategoryTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }
  export type CategoryTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }
  export type CategoryTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }

  export type $CategoryTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoryTranslation"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      categoryId: string
      locale: string
      name: string
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["categoryTranslation"]>
    composites: {}
  }

  type CategoryTranslationGetPayload<S extends boolean | null | undefined | CategoryTranslationDefaultArgs> = $Result.GetResult<Prisma.$CategoryTranslationPayload, S>

  type CategoryTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryTranslationCountAggregateInputType | true
    }

  export interface CategoryTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoryTranslation'], meta: { name: 'CategoryTranslation' } }
    /**
     * Find zero or one CategoryTranslation that matches the filter.
     * @param {CategoryTranslationFindUniqueArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryTranslationFindUniqueArgs>(args: SelectSubset<T, CategoryTranslationFindUniqueArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CategoryTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryTranslationFindUniqueOrThrowArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoryTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationFindFirstArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryTranslationFindFirstArgs>(args?: SelectSubset<T, CategoryTranslationFindFirstArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoryTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationFindFirstOrThrowArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CategoryTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoryTranslations
     * const categoryTranslations = await prisma.categoryTranslation.findMany()
     * 
     * // Get first 10 CategoryTranslations
     * const categoryTranslations = await prisma.categoryTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryTranslationWithIdOnly = await prisma.categoryTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryTranslationFindManyArgs>(args?: SelectSubset<T, CategoryTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CategoryTranslation.
     * @param {CategoryTranslationCreateArgs} args - Arguments to create a CategoryTranslation.
     * @example
     * // Create one CategoryTranslation
     * const CategoryTranslation = await prisma.categoryTranslation.create({
     *   data: {
     *     // ... data to create a CategoryTranslation
     *   }
     * })
     * 
     */
    create<T extends CategoryTranslationCreateArgs>(args: SelectSubset<T, CategoryTranslationCreateArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CategoryTranslations.
     * @param {CategoryTranslationCreateManyArgs} args - Arguments to create many CategoryTranslations.
     * @example
     * // Create many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryTranslationCreateManyArgs>(args?: SelectSubset<T, CategoryTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CategoryTranslations and returns the data saved in the database.
     * @param {CategoryTranslationCreateManyAndReturnArgs} args - Arguments to create many CategoryTranslations.
     * @example
     * // Create many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CategoryTranslations and only return the `id`
     * const categoryTranslationWithIdOnly = await prisma.categoryTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CategoryTranslation.
     * @param {CategoryTranslationDeleteArgs} args - Arguments to delete one CategoryTranslation.
     * @example
     * // Delete one CategoryTranslation
     * const CategoryTranslation = await prisma.categoryTranslation.delete({
     *   where: {
     *     // ... filter to delete one CategoryTranslation
     *   }
     * })
     * 
     */
    delete<T extends CategoryTranslationDeleteArgs>(args: SelectSubset<T, CategoryTranslationDeleteArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CategoryTranslation.
     * @param {CategoryTranslationUpdateArgs} args - Arguments to update one CategoryTranslation.
     * @example
     * // Update one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryTranslationUpdateArgs>(args: SelectSubset<T, CategoryTranslationUpdateArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CategoryTranslations.
     * @param {CategoryTranslationDeleteManyArgs} args - Arguments to filter CategoryTranslations to delete.
     * @example
     * // Delete a few CategoryTranslations
     * const { count } = await prisma.categoryTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryTranslationDeleteManyArgs>(args?: SelectSubset<T, CategoryTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoryTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryTranslationUpdateManyArgs>(args: SelectSubset<T, CategoryTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoryTranslations and returns the data updated in the database.
     * @param {CategoryTranslationUpdateManyAndReturnArgs} args - Arguments to update many CategoryTranslations.
     * @example
     * // Update many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CategoryTranslations and only return the `id`
     * const categoryTranslationWithIdOnly = await prisma.categoryTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CategoryTranslation.
     * @param {CategoryTranslationUpsertArgs} args - Arguments to update or create a CategoryTranslation.
     * @example
     * // Update or create a CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.upsert({
     *   create: {
     *     // ... data to create a CategoryTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoryTranslation we want to update
     *   }
     * })
     */
    upsert<T extends CategoryTranslationUpsertArgs>(args: SelectSubset<T, CategoryTranslationUpsertArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CategoryTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationCountArgs} args - Arguments to filter CategoryTranslations to count.
     * @example
     * // Count the number of CategoryTranslations
     * const count = await prisma.categoryTranslation.count({
     *   where: {
     *     // ... the filter for the CategoryTranslations we want to count
     *   }
     * })
    **/
    count<T extends CategoryTranslationCountArgs>(
      args?: Subset<T, CategoryTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoryTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryTranslationAggregateArgs>(args: Subset<T, CategoryTranslationAggregateArgs>): Prisma.PrismaPromise<GetCategoryTranslationAggregateType<T>>

    /**
     * Group by CategoryTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryTranslationGroupByArgs['orderBy'] }
        : { orderBy?: CategoryTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoryTranslation model
   */
  readonly fields: CategoryTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoryTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CategoryTranslation model
   */
  interface CategoryTranslationFieldRefs {
    readonly id: FieldRef<"CategoryTranslation", 'String'>
    readonly categoryId: FieldRef<"CategoryTranslation", 'String'>
    readonly locale: FieldRef<"CategoryTranslation", 'String'>
    readonly name: FieldRef<"CategoryTranslation", 'String'>
    readonly description: FieldRef<"CategoryTranslation", 'String'>
    readonly createdAt: FieldRef<"CategoryTranslation", 'DateTime'>
    readonly updatedAt: FieldRef<"CategoryTranslation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CategoryTranslation findUnique
   */
  export type CategoryTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation findUniqueOrThrow
   */
  export type CategoryTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation findFirst
   */
  export type CategoryTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoryTranslations.
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoryTranslations.
     */
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * CategoryTranslation findFirstOrThrow
   */
  export type CategoryTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoryTranslations.
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoryTranslations.
     */
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * CategoryTranslation findMany
   */
  export type CategoryTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslations to fetch.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoryTranslations.
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * CategoryTranslation create
   */
  export type CategoryTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoryTranslation.
     */
    data: XOR<CategoryTranslationCreateInput, CategoryTranslationUncheckedCreateInput>
  }

  /**
   * CategoryTranslation createMany
   */
  export type CategoryTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoryTranslations.
     */
    data: CategoryTranslationCreateManyInput | CategoryTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoryTranslation createManyAndReturn
   */
  export type CategoryTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many CategoryTranslations.
     */
    data: CategoryTranslationCreateManyInput | CategoryTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CategoryTranslation update
   */
  export type CategoryTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoryTranslation.
     */
    data: XOR<CategoryTranslationUpdateInput, CategoryTranslationUncheckedUpdateInput>
    /**
     * Choose, which CategoryTranslation to update.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation updateMany
   */
  export type CategoryTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoryTranslations.
     */
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyInput>
    /**
     * Filter which CategoryTranslations to update
     */
    where?: CategoryTranslationWhereInput
    /**
     * Limit how many CategoryTranslations to update.
     */
    limit?: number
  }

  /**
   * CategoryTranslation updateManyAndReturn
   */
  export type CategoryTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * The data used to update CategoryTranslations.
     */
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyInput>
    /**
     * Filter which CategoryTranslations to update
     */
    where?: CategoryTranslationWhereInput
    /**
     * Limit how many CategoryTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CategoryTranslation upsert
   */
  export type CategoryTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoryTranslation to update in case it exists.
     */
    where: CategoryTranslationWhereUniqueInput
    /**
     * In case the CategoryTranslation found by the `where` argument doesn't exist, create a new CategoryTranslation with this data.
     */
    create: XOR<CategoryTranslationCreateInput, CategoryTranslationUncheckedCreateInput>
    /**
     * In case the CategoryTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryTranslationUpdateInput, CategoryTranslationUncheckedUpdateInput>
  }

  /**
   * CategoryTranslation delete
   */
  export type CategoryTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter which CategoryTranslation to delete.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation deleteMany
   */
  export type CategoryTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoryTranslations to delete
     */
    where?: CategoryTranslationWhereInput
    /**
     * Limit how many CategoryTranslations to delete.
     */
    limit?: number
  }

  /**
   * CategoryTranslation without action
   */
  export type CategoryTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
  }


  /**
   * Model SellerKyc
   */

  export type AggregateSellerKyc = {
    _count: SellerKycCountAggregateOutputType | null
    _min: SellerKycMinAggregateOutputType | null
    _max: SellerKycMaxAggregateOutputType | null
  }

  export type SellerKycMinAggregateOutputType = {
    id: string | null
    userId: string | null
    businessName: string | null
    businessType: $Enums.BusinessType | null
    registrationNumber: string | null
    taxId: string | null
    address: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    documentType: $Enums.DocumentType | null
    documentNumber: string | null
    documentUrl: string | null
    status: $Enums.KycStatus | null
    rejectionReason: string | null
    verifiedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    documentExpiryDate: Date | null
    statusChangedBy: string | null
    statusChangedAt: Date | null
  }

  export type SellerKycMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    businessName: string | null
    businessType: $Enums.BusinessType | null
    registrationNumber: string | null
    taxId: string | null
    address: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    documentType: $Enums.DocumentType | null
    documentNumber: string | null
    documentUrl: string | null
    status: $Enums.KycStatus | null
    rejectionReason: string | null
    verifiedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    documentExpiryDate: Date | null
    statusChangedBy: string | null
    statusChangedAt: Date | null
  }

  export type SellerKycCountAggregateOutputType = {
    id: number
    userId: number
    businessName: number
    businessType: number
    registrationNumber: number
    taxId: number
    address: number
    city: number
    state: number
    postalCode: number
    documentType: number
    documentNumber: number
    documentUrl: number
    status: number
    rejectionReason: number
    verifiedAt: number
    createdAt: number
    updatedAt: number
    country: number
    documentExpiryDate: number
    statusChangedBy: number
    statusChangedAt: number
    _all: number
  }


  export type SellerKycMinAggregateInputType = {
    id?: true
    userId?: true
    businessName?: true
    businessType?: true
    registrationNumber?: true
    taxId?: true
    address?: true
    city?: true
    state?: true
    postalCode?: true
    documentType?: true
    documentNumber?: true
    documentUrl?: true
    status?: true
    rejectionReason?: true
    verifiedAt?: true
    createdAt?: true
    updatedAt?: true
    documentExpiryDate?: true
    statusChangedBy?: true
    statusChangedAt?: true
  }

  export type SellerKycMaxAggregateInputType = {
    id?: true
    userId?: true
    businessName?: true
    businessType?: true
    registrationNumber?: true
    taxId?: true
    address?: true
    city?: true
    state?: true
    postalCode?: true
    documentType?: true
    documentNumber?: true
    documentUrl?: true
    status?: true
    rejectionReason?: true
    verifiedAt?: true
    createdAt?: true
    updatedAt?: true
    documentExpiryDate?: true
    statusChangedBy?: true
    statusChangedAt?: true
  }

  export type SellerKycCountAggregateInputType = {
    id?: true
    userId?: true
    businessName?: true
    businessType?: true
    registrationNumber?: true
    taxId?: true
    address?: true
    city?: true
    state?: true
    postalCode?: true
    documentType?: true
    documentNumber?: true
    documentUrl?: true
    status?: true
    rejectionReason?: true
    verifiedAt?: true
    createdAt?: true
    updatedAt?: true
    country?: true
    documentExpiryDate?: true
    statusChangedBy?: true
    statusChangedAt?: true
    _all?: true
  }

  export type SellerKycAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SellerKyc to aggregate.
     */
    where?: SellerKycWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SellerKycs to fetch.
     */
    orderBy?: SellerKycOrderByWithRelationInput | SellerKycOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SellerKycWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SellerKycs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SellerKycs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SellerKycs
    **/
    _count?: true | SellerKycCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SellerKycMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SellerKycMaxAggregateInputType
  }

  export type GetSellerKycAggregateType<T extends SellerKycAggregateArgs> = {
        [P in keyof T & keyof AggregateSellerKyc]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSellerKyc[P]>
      : GetScalarType<T[P], AggregateSellerKyc[P]>
  }




  export type SellerKycGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SellerKycWhereInput
    orderBy?: SellerKycOrderByWithAggregationInput | SellerKycOrderByWithAggregationInput[]
    by: SellerKycScalarFieldEnum[] | SellerKycScalarFieldEnum
    having?: SellerKycScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SellerKycCountAggregateInputType | true
    _min?: SellerKycMinAggregateInputType
    _max?: SellerKycMaxAggregateInputType
  }

  export type SellerKycGroupByOutputType = {
    id: string
    userId: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber: string | null
    taxId: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status: $Enums.KycStatus
    rejectionReason: string | null
    verifiedAt: Date | null
    createdAt: Date
    updatedAt: Date
    country: string[]
    documentExpiryDate: Date | null
    statusChangedBy: string | null
    statusChangedAt: Date | null
    _count: SellerKycCountAggregateOutputType | null
    _min: SellerKycMinAggregateOutputType | null
    _max: SellerKycMaxAggregateOutputType | null
  }

  type GetSellerKycGroupByPayload<T extends SellerKycGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SellerKycGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SellerKycGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SellerKycGroupByOutputType[P]>
            : GetScalarType<T[P], SellerKycGroupByOutputType[P]>
        }
      >
    >


  export type SellerKycSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    businessName?: boolean
    businessType?: boolean
    registrationNumber?: boolean
    taxId?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentUrl?: boolean
    status?: boolean
    rejectionReason?: boolean
    verifiedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    country?: boolean
    documentExpiryDate?: boolean
    statusChangedBy?: boolean
    statusChangedAt?: boolean
    bankAccounts?: boolean | SellerKyc$bankAccountsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    wallets?: boolean | SellerKyc$walletsArgs<ExtArgs>
    _count?: boolean | SellerKycCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sellerKyc"]>

  export type SellerKycSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    businessName?: boolean
    businessType?: boolean
    registrationNumber?: boolean
    taxId?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentUrl?: boolean
    status?: boolean
    rejectionReason?: boolean
    verifiedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    country?: boolean
    documentExpiryDate?: boolean
    statusChangedBy?: boolean
    statusChangedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sellerKyc"]>

  export type SellerKycSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    businessName?: boolean
    businessType?: boolean
    registrationNumber?: boolean
    taxId?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentUrl?: boolean
    status?: boolean
    rejectionReason?: boolean
    verifiedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    country?: boolean
    documentExpiryDate?: boolean
    statusChangedBy?: boolean
    statusChangedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sellerKyc"]>

  export type SellerKycSelectScalar = {
    id?: boolean
    userId?: boolean
    businessName?: boolean
    businessType?: boolean
    registrationNumber?: boolean
    taxId?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentUrl?: boolean
    status?: boolean
    rejectionReason?: boolean
    verifiedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    country?: boolean
    documentExpiryDate?: boolean
    statusChangedBy?: boolean
    statusChangedAt?: boolean
  }

  export type SellerKycOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "businessName" | "businessType" | "registrationNumber" | "taxId" | "address" | "city" | "state" | "postalCode" | "documentType" | "documentNumber" | "documentUrl" | "status" | "rejectionReason" | "verifiedAt" | "createdAt" | "updatedAt" | "country" | "documentExpiryDate" | "statusChangedBy" | "statusChangedAt", ExtArgs["result"]["sellerKyc"]>
  export type SellerKycInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bankAccounts?: boolean | SellerKyc$bankAccountsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    wallets?: boolean | SellerKyc$walletsArgs<ExtArgs>
    _count?: boolean | SellerKycCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SellerKycIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SellerKycIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SellerKycPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SellerKyc"
    objects: {
      bankAccounts: Prisma.$BankAccountPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
      wallets: Prisma.$WalletPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      businessName: string
      businessType: $Enums.BusinessType
      registrationNumber: string | null
      taxId: string | null
      address: string
      city: string
      state: string
      postalCode: string
      documentType: $Enums.DocumentType
      documentNumber: string
      documentUrl: string
      status: $Enums.KycStatus
      rejectionReason: string | null
      verifiedAt: Date | null
      createdAt: Date
      updatedAt: Date
      country: string[]
      documentExpiryDate: Date | null
      statusChangedBy: string | null
      statusChangedAt: Date | null
    }, ExtArgs["result"]["sellerKyc"]>
    composites: {}
  }

  type SellerKycGetPayload<S extends boolean | null | undefined | SellerKycDefaultArgs> = $Result.GetResult<Prisma.$SellerKycPayload, S>

  type SellerKycCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SellerKycFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SellerKycCountAggregateInputType | true
    }

  export interface SellerKycDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SellerKyc'], meta: { name: 'SellerKyc' } }
    /**
     * Find zero or one SellerKyc that matches the filter.
     * @param {SellerKycFindUniqueArgs} args - Arguments to find a SellerKyc
     * @example
     * // Get one SellerKyc
     * const sellerKyc = await prisma.sellerKyc.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SellerKycFindUniqueArgs>(args: SelectSubset<T, SellerKycFindUniqueArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SellerKyc that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SellerKycFindUniqueOrThrowArgs} args - Arguments to find a SellerKyc
     * @example
     * // Get one SellerKyc
     * const sellerKyc = await prisma.sellerKyc.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SellerKycFindUniqueOrThrowArgs>(args: SelectSubset<T, SellerKycFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SellerKyc that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerKycFindFirstArgs} args - Arguments to find a SellerKyc
     * @example
     * // Get one SellerKyc
     * const sellerKyc = await prisma.sellerKyc.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SellerKycFindFirstArgs>(args?: SelectSubset<T, SellerKycFindFirstArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SellerKyc that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerKycFindFirstOrThrowArgs} args - Arguments to find a SellerKyc
     * @example
     * // Get one SellerKyc
     * const sellerKyc = await prisma.sellerKyc.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SellerKycFindFirstOrThrowArgs>(args?: SelectSubset<T, SellerKycFindFirstOrThrowArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SellerKycs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerKycFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SellerKycs
     * const sellerKycs = await prisma.sellerKyc.findMany()
     * 
     * // Get first 10 SellerKycs
     * const sellerKycs = await prisma.sellerKyc.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sellerKycWithIdOnly = await prisma.sellerKyc.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SellerKycFindManyArgs>(args?: SelectSubset<T, SellerKycFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SellerKyc.
     * @param {SellerKycCreateArgs} args - Arguments to create a SellerKyc.
     * @example
     * // Create one SellerKyc
     * const SellerKyc = await prisma.sellerKyc.create({
     *   data: {
     *     // ... data to create a SellerKyc
     *   }
     * })
     * 
     */
    create<T extends SellerKycCreateArgs>(args: SelectSubset<T, SellerKycCreateArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SellerKycs.
     * @param {SellerKycCreateManyArgs} args - Arguments to create many SellerKycs.
     * @example
     * // Create many SellerKycs
     * const sellerKyc = await prisma.sellerKyc.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SellerKycCreateManyArgs>(args?: SelectSubset<T, SellerKycCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SellerKycs and returns the data saved in the database.
     * @param {SellerKycCreateManyAndReturnArgs} args - Arguments to create many SellerKycs.
     * @example
     * // Create many SellerKycs
     * const sellerKyc = await prisma.sellerKyc.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SellerKycs and only return the `id`
     * const sellerKycWithIdOnly = await prisma.sellerKyc.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SellerKycCreateManyAndReturnArgs>(args?: SelectSubset<T, SellerKycCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SellerKyc.
     * @param {SellerKycDeleteArgs} args - Arguments to delete one SellerKyc.
     * @example
     * // Delete one SellerKyc
     * const SellerKyc = await prisma.sellerKyc.delete({
     *   where: {
     *     // ... filter to delete one SellerKyc
     *   }
     * })
     * 
     */
    delete<T extends SellerKycDeleteArgs>(args: SelectSubset<T, SellerKycDeleteArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SellerKyc.
     * @param {SellerKycUpdateArgs} args - Arguments to update one SellerKyc.
     * @example
     * // Update one SellerKyc
     * const sellerKyc = await prisma.sellerKyc.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SellerKycUpdateArgs>(args: SelectSubset<T, SellerKycUpdateArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SellerKycs.
     * @param {SellerKycDeleteManyArgs} args - Arguments to filter SellerKycs to delete.
     * @example
     * // Delete a few SellerKycs
     * const { count } = await prisma.sellerKyc.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SellerKycDeleteManyArgs>(args?: SelectSubset<T, SellerKycDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SellerKycs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerKycUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SellerKycs
     * const sellerKyc = await prisma.sellerKyc.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SellerKycUpdateManyArgs>(args: SelectSubset<T, SellerKycUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SellerKycs and returns the data updated in the database.
     * @param {SellerKycUpdateManyAndReturnArgs} args - Arguments to update many SellerKycs.
     * @example
     * // Update many SellerKycs
     * const sellerKyc = await prisma.sellerKyc.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SellerKycs and only return the `id`
     * const sellerKycWithIdOnly = await prisma.sellerKyc.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SellerKycUpdateManyAndReturnArgs>(args: SelectSubset<T, SellerKycUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SellerKyc.
     * @param {SellerKycUpsertArgs} args - Arguments to update or create a SellerKyc.
     * @example
     * // Update or create a SellerKyc
     * const sellerKyc = await prisma.sellerKyc.upsert({
     *   create: {
     *     // ... data to create a SellerKyc
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SellerKyc we want to update
     *   }
     * })
     */
    upsert<T extends SellerKycUpsertArgs>(args: SelectSubset<T, SellerKycUpsertArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SellerKycs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerKycCountArgs} args - Arguments to filter SellerKycs to count.
     * @example
     * // Count the number of SellerKycs
     * const count = await prisma.sellerKyc.count({
     *   where: {
     *     // ... the filter for the SellerKycs we want to count
     *   }
     * })
    **/
    count<T extends SellerKycCountArgs>(
      args?: Subset<T, SellerKycCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SellerKycCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SellerKyc.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerKycAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SellerKycAggregateArgs>(args: Subset<T, SellerKycAggregateArgs>): Prisma.PrismaPromise<GetSellerKycAggregateType<T>>

    /**
     * Group by SellerKyc.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerKycGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SellerKycGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SellerKycGroupByArgs['orderBy'] }
        : { orderBy?: SellerKycGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SellerKycGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSellerKycGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SellerKyc model
   */
  readonly fields: SellerKycFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SellerKyc.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SellerKycClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    bankAccounts<T extends SellerKyc$bankAccountsArgs<ExtArgs> = {}>(args?: Subset<T, SellerKyc$bankAccountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    wallets<T extends SellerKyc$walletsArgs<ExtArgs> = {}>(args?: Subset<T, SellerKyc$walletsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SellerKyc model
   */
  interface SellerKycFieldRefs {
    readonly id: FieldRef<"SellerKyc", 'String'>
    readonly userId: FieldRef<"SellerKyc", 'String'>
    readonly businessName: FieldRef<"SellerKyc", 'String'>
    readonly businessType: FieldRef<"SellerKyc", 'BusinessType'>
    readonly registrationNumber: FieldRef<"SellerKyc", 'String'>
    readonly taxId: FieldRef<"SellerKyc", 'String'>
    readonly address: FieldRef<"SellerKyc", 'String'>
    readonly city: FieldRef<"SellerKyc", 'String'>
    readonly state: FieldRef<"SellerKyc", 'String'>
    readonly postalCode: FieldRef<"SellerKyc", 'String'>
    readonly documentType: FieldRef<"SellerKyc", 'DocumentType'>
    readonly documentNumber: FieldRef<"SellerKyc", 'String'>
    readonly documentUrl: FieldRef<"SellerKyc", 'String'>
    readonly status: FieldRef<"SellerKyc", 'KycStatus'>
    readonly rejectionReason: FieldRef<"SellerKyc", 'String'>
    readonly verifiedAt: FieldRef<"SellerKyc", 'DateTime'>
    readonly createdAt: FieldRef<"SellerKyc", 'DateTime'>
    readonly updatedAt: FieldRef<"SellerKyc", 'DateTime'>
    readonly country: FieldRef<"SellerKyc", 'String[]'>
    readonly documentExpiryDate: FieldRef<"SellerKyc", 'DateTime'>
    readonly statusChangedBy: FieldRef<"SellerKyc", 'String'>
    readonly statusChangedAt: FieldRef<"SellerKyc", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SellerKyc findUnique
   */
  export type SellerKycFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    /**
     * Filter, which SellerKyc to fetch.
     */
    where: SellerKycWhereUniqueInput
  }

  /**
   * SellerKyc findUniqueOrThrow
   */
  export type SellerKycFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    /**
     * Filter, which SellerKyc to fetch.
     */
    where: SellerKycWhereUniqueInput
  }

  /**
   * SellerKyc findFirst
   */
  export type SellerKycFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    /**
     * Filter, which SellerKyc to fetch.
     */
    where?: SellerKycWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SellerKycs to fetch.
     */
    orderBy?: SellerKycOrderByWithRelationInput | SellerKycOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SellerKycs.
     */
    cursor?: SellerKycWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SellerKycs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SellerKycs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SellerKycs.
     */
    distinct?: SellerKycScalarFieldEnum | SellerKycScalarFieldEnum[]
  }

  /**
   * SellerKyc findFirstOrThrow
   */
  export type SellerKycFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    /**
     * Filter, which SellerKyc to fetch.
     */
    where?: SellerKycWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SellerKycs to fetch.
     */
    orderBy?: SellerKycOrderByWithRelationInput | SellerKycOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SellerKycs.
     */
    cursor?: SellerKycWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SellerKycs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SellerKycs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SellerKycs.
     */
    distinct?: SellerKycScalarFieldEnum | SellerKycScalarFieldEnum[]
  }

  /**
   * SellerKyc findMany
   */
  export type SellerKycFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    /**
     * Filter, which SellerKycs to fetch.
     */
    where?: SellerKycWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SellerKycs to fetch.
     */
    orderBy?: SellerKycOrderByWithRelationInput | SellerKycOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SellerKycs.
     */
    cursor?: SellerKycWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SellerKycs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SellerKycs.
     */
    skip?: number
    distinct?: SellerKycScalarFieldEnum | SellerKycScalarFieldEnum[]
  }

  /**
   * SellerKyc create
   */
  export type SellerKycCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    /**
     * The data needed to create a SellerKyc.
     */
    data: XOR<SellerKycCreateInput, SellerKycUncheckedCreateInput>
  }

  /**
   * SellerKyc createMany
   */
  export type SellerKycCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SellerKycs.
     */
    data: SellerKycCreateManyInput | SellerKycCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SellerKyc createManyAndReturn
   */
  export type SellerKycCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * The data used to create many SellerKycs.
     */
    data: SellerKycCreateManyInput | SellerKycCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SellerKyc update
   */
  export type SellerKycUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    /**
     * The data needed to update a SellerKyc.
     */
    data: XOR<SellerKycUpdateInput, SellerKycUncheckedUpdateInput>
    /**
     * Choose, which SellerKyc to update.
     */
    where: SellerKycWhereUniqueInput
  }

  /**
   * SellerKyc updateMany
   */
  export type SellerKycUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SellerKycs.
     */
    data: XOR<SellerKycUpdateManyMutationInput, SellerKycUncheckedUpdateManyInput>
    /**
     * Filter which SellerKycs to update
     */
    where?: SellerKycWhereInput
    /**
     * Limit how many SellerKycs to update.
     */
    limit?: number
  }

  /**
   * SellerKyc updateManyAndReturn
   */
  export type SellerKycUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * The data used to update SellerKycs.
     */
    data: XOR<SellerKycUpdateManyMutationInput, SellerKycUncheckedUpdateManyInput>
    /**
     * Filter which SellerKycs to update
     */
    where?: SellerKycWhereInput
    /**
     * Limit how many SellerKycs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SellerKyc upsert
   */
  export type SellerKycUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    /**
     * The filter to search for the SellerKyc to update in case it exists.
     */
    where: SellerKycWhereUniqueInput
    /**
     * In case the SellerKyc found by the `where` argument doesn't exist, create a new SellerKyc with this data.
     */
    create: XOR<SellerKycCreateInput, SellerKycUncheckedCreateInput>
    /**
     * In case the SellerKyc was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SellerKycUpdateInput, SellerKycUncheckedUpdateInput>
  }

  /**
   * SellerKyc delete
   */
  export type SellerKycDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
    /**
     * Filter which SellerKyc to delete.
     */
    where: SellerKycWhereUniqueInput
  }

  /**
   * SellerKyc deleteMany
   */
  export type SellerKycDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SellerKycs to delete
     */
    where?: SellerKycWhereInput
    /**
     * Limit how many SellerKycs to delete.
     */
    limit?: number
  }

  /**
   * SellerKyc.bankAccounts
   */
  export type SellerKyc$bankAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    where?: BankAccountWhereInput
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    cursor?: BankAccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }

  /**
   * SellerKyc.wallets
   */
  export type SellerKyc$walletsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    where?: WalletWhereInput
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    cursor?: WalletWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WalletScalarFieldEnum | WalletScalarFieldEnum[]
  }

  /**
   * SellerKyc without action
   */
  export type SellerKycDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerKyc
     */
    select?: SellerKycSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SellerKyc
     */
    omit?: SellerKycOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerKycInclude<ExtArgs> | null
  }


  /**
   * Model BankAccount
   */

  export type AggregateBankAccount = {
    _count: BankAccountCountAggregateOutputType | null
    _min: BankAccountMinAggregateOutputType | null
    _max: BankAccountMaxAggregateOutputType | null
  }

  export type BankAccountMinAggregateOutputType = {
    id: string | null
    sellerKycId: string | null
    accountName: string | null
    accountNumber: string | null
    bankName: string | null
    bankCode: string | null
    branchCode: string | null
    swiftCode: string | null
    iban: string | null
    currency: string | null
    isDefault: boolean | null
    status: $Enums.AccountStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BankAccountMaxAggregateOutputType = {
    id: string | null
    sellerKycId: string | null
    accountName: string | null
    accountNumber: string | null
    bankName: string | null
    bankCode: string | null
    branchCode: string | null
    swiftCode: string | null
    iban: string | null
    currency: string | null
    isDefault: boolean | null
    status: $Enums.AccountStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BankAccountCountAggregateOutputType = {
    id: number
    sellerKycId: number
    accountName: number
    accountNumber: number
    bankName: number
    bankCode: number
    branchCode: number
    swiftCode: number
    iban: number
    currency: number
    isDefault: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BankAccountMinAggregateInputType = {
    id?: true
    sellerKycId?: true
    accountName?: true
    accountNumber?: true
    bankName?: true
    bankCode?: true
    branchCode?: true
    swiftCode?: true
    iban?: true
    currency?: true
    isDefault?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BankAccountMaxAggregateInputType = {
    id?: true
    sellerKycId?: true
    accountName?: true
    accountNumber?: true
    bankName?: true
    bankCode?: true
    branchCode?: true
    swiftCode?: true
    iban?: true
    currency?: true
    isDefault?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BankAccountCountAggregateInputType = {
    id?: true
    sellerKycId?: true
    accountName?: true
    accountNumber?: true
    bankName?: true
    bankCode?: true
    branchCode?: true
    swiftCode?: true
    iban?: true
    currency?: true
    isDefault?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BankAccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BankAccount to aggregate.
     */
    where?: BankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankAccounts to fetch.
     */
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BankAccounts
    **/
    _count?: true | BankAccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BankAccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BankAccountMaxAggregateInputType
  }

  export type GetBankAccountAggregateType<T extends BankAccountAggregateArgs> = {
        [P in keyof T & keyof AggregateBankAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBankAccount[P]>
      : GetScalarType<T[P], AggregateBankAccount[P]>
  }




  export type BankAccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BankAccountWhereInput
    orderBy?: BankAccountOrderByWithAggregationInput | BankAccountOrderByWithAggregationInput[]
    by: BankAccountScalarFieldEnum[] | BankAccountScalarFieldEnum
    having?: BankAccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BankAccountCountAggregateInputType | true
    _min?: BankAccountMinAggregateInputType
    _max?: BankAccountMaxAggregateInputType
  }

  export type BankAccountGroupByOutputType = {
    id: string
    sellerKycId: string
    accountName: string
    accountNumber: string
    bankName: string
    bankCode: string
    branchCode: string | null
    swiftCode: string | null
    iban: string | null
    currency: string
    isDefault: boolean
    status: $Enums.AccountStatus
    createdAt: Date
    updatedAt: Date
    _count: BankAccountCountAggregateOutputType | null
    _min: BankAccountMinAggregateOutputType | null
    _max: BankAccountMaxAggregateOutputType | null
  }

  type GetBankAccountGroupByPayload<T extends BankAccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BankAccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BankAccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BankAccountGroupByOutputType[P]>
            : GetScalarType<T[P], BankAccountGroupByOutputType[P]>
        }
      >
    >


  export type BankAccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerKycId?: boolean
    accountName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    bankCode?: boolean
    branchCode?: boolean
    swiftCode?: boolean
    iban?: boolean
    currency?: boolean
    isDefault?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
    settlements?: boolean | BankAccount$settlementsArgs<ExtArgs>
    _count?: boolean | BankAccountCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bankAccount"]>

  export type BankAccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerKycId?: boolean
    accountName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    bankCode?: boolean
    branchCode?: boolean
    swiftCode?: boolean
    iban?: boolean
    currency?: boolean
    isDefault?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bankAccount"]>

  export type BankAccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerKycId?: boolean
    accountName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    bankCode?: boolean
    branchCode?: boolean
    swiftCode?: boolean
    iban?: boolean
    currency?: boolean
    isDefault?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bankAccount"]>

  export type BankAccountSelectScalar = {
    id?: boolean
    sellerKycId?: boolean
    accountName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    bankCode?: boolean
    branchCode?: boolean
    swiftCode?: boolean
    iban?: boolean
    currency?: boolean
    isDefault?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BankAccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sellerKycId" | "accountName" | "accountNumber" | "bankName" | "bankCode" | "branchCode" | "swiftCode" | "iban" | "currency" | "isDefault" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["bankAccount"]>
  export type BankAccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
    settlements?: boolean | BankAccount$settlementsArgs<ExtArgs>
    _count?: boolean | BankAccountCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BankAccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
  }
  export type BankAccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
  }

  export type $BankAccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BankAccount"
    objects: {
      sellerKyc: Prisma.$SellerKycPayload<ExtArgs>
      settlements: Prisma.$SettlementPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sellerKycId: string
      accountName: string
      accountNumber: string
      bankName: string
      bankCode: string
      branchCode: string | null
      swiftCode: string | null
      iban: string | null
      currency: string
      isDefault: boolean
      status: $Enums.AccountStatus
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["bankAccount"]>
    composites: {}
  }

  type BankAccountGetPayload<S extends boolean | null | undefined | BankAccountDefaultArgs> = $Result.GetResult<Prisma.$BankAccountPayload, S>

  type BankAccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BankAccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BankAccountCountAggregateInputType | true
    }

  export interface BankAccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BankAccount'], meta: { name: 'BankAccount' } }
    /**
     * Find zero or one BankAccount that matches the filter.
     * @param {BankAccountFindUniqueArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BankAccountFindUniqueArgs>(args: SelectSubset<T, BankAccountFindUniqueArgs<ExtArgs>>): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BankAccount that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BankAccountFindUniqueOrThrowArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BankAccountFindUniqueOrThrowArgs>(args: SelectSubset<T, BankAccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BankAccount that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountFindFirstArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BankAccountFindFirstArgs>(args?: SelectSubset<T, BankAccountFindFirstArgs<ExtArgs>>): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BankAccount that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountFindFirstOrThrowArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BankAccountFindFirstOrThrowArgs>(args?: SelectSubset<T, BankAccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BankAccounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BankAccounts
     * const bankAccounts = await prisma.bankAccount.findMany()
     * 
     * // Get first 10 BankAccounts
     * const bankAccounts = await prisma.bankAccount.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bankAccountWithIdOnly = await prisma.bankAccount.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BankAccountFindManyArgs>(args?: SelectSubset<T, BankAccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BankAccount.
     * @param {BankAccountCreateArgs} args - Arguments to create a BankAccount.
     * @example
     * // Create one BankAccount
     * const BankAccount = await prisma.bankAccount.create({
     *   data: {
     *     // ... data to create a BankAccount
     *   }
     * })
     * 
     */
    create<T extends BankAccountCreateArgs>(args: SelectSubset<T, BankAccountCreateArgs<ExtArgs>>): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BankAccounts.
     * @param {BankAccountCreateManyArgs} args - Arguments to create many BankAccounts.
     * @example
     * // Create many BankAccounts
     * const bankAccount = await prisma.bankAccount.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BankAccountCreateManyArgs>(args?: SelectSubset<T, BankAccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BankAccounts and returns the data saved in the database.
     * @param {BankAccountCreateManyAndReturnArgs} args - Arguments to create many BankAccounts.
     * @example
     * // Create many BankAccounts
     * const bankAccount = await prisma.bankAccount.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BankAccounts and only return the `id`
     * const bankAccountWithIdOnly = await prisma.bankAccount.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BankAccountCreateManyAndReturnArgs>(args?: SelectSubset<T, BankAccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BankAccount.
     * @param {BankAccountDeleteArgs} args - Arguments to delete one BankAccount.
     * @example
     * // Delete one BankAccount
     * const BankAccount = await prisma.bankAccount.delete({
     *   where: {
     *     // ... filter to delete one BankAccount
     *   }
     * })
     * 
     */
    delete<T extends BankAccountDeleteArgs>(args: SelectSubset<T, BankAccountDeleteArgs<ExtArgs>>): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BankAccount.
     * @param {BankAccountUpdateArgs} args - Arguments to update one BankAccount.
     * @example
     * // Update one BankAccount
     * const bankAccount = await prisma.bankAccount.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BankAccountUpdateArgs>(args: SelectSubset<T, BankAccountUpdateArgs<ExtArgs>>): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BankAccounts.
     * @param {BankAccountDeleteManyArgs} args - Arguments to filter BankAccounts to delete.
     * @example
     * // Delete a few BankAccounts
     * const { count } = await prisma.bankAccount.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BankAccountDeleteManyArgs>(args?: SelectSubset<T, BankAccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BankAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BankAccounts
     * const bankAccount = await prisma.bankAccount.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BankAccountUpdateManyArgs>(args: SelectSubset<T, BankAccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BankAccounts and returns the data updated in the database.
     * @param {BankAccountUpdateManyAndReturnArgs} args - Arguments to update many BankAccounts.
     * @example
     * // Update many BankAccounts
     * const bankAccount = await prisma.bankAccount.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BankAccounts and only return the `id`
     * const bankAccountWithIdOnly = await prisma.bankAccount.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BankAccountUpdateManyAndReturnArgs>(args: SelectSubset<T, BankAccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BankAccount.
     * @param {BankAccountUpsertArgs} args - Arguments to update or create a BankAccount.
     * @example
     * // Update or create a BankAccount
     * const bankAccount = await prisma.bankAccount.upsert({
     *   create: {
     *     // ... data to create a BankAccount
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BankAccount we want to update
     *   }
     * })
     */
    upsert<T extends BankAccountUpsertArgs>(args: SelectSubset<T, BankAccountUpsertArgs<ExtArgs>>): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BankAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountCountArgs} args - Arguments to filter BankAccounts to count.
     * @example
     * // Count the number of BankAccounts
     * const count = await prisma.bankAccount.count({
     *   where: {
     *     // ... the filter for the BankAccounts we want to count
     *   }
     * })
    **/
    count<T extends BankAccountCountArgs>(
      args?: Subset<T, BankAccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BankAccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BankAccount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BankAccountAggregateArgs>(args: Subset<T, BankAccountAggregateArgs>): Prisma.PrismaPromise<GetBankAccountAggregateType<T>>

    /**
     * Group by BankAccount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BankAccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BankAccountGroupByArgs['orderBy'] }
        : { orderBy?: BankAccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BankAccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBankAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BankAccount model
   */
  readonly fields: BankAccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BankAccount.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BankAccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sellerKyc<T extends SellerKycDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SellerKycDefaultArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    settlements<T extends BankAccount$settlementsArgs<ExtArgs> = {}>(args?: Subset<T, BankAccount$settlementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BankAccount model
   */
  interface BankAccountFieldRefs {
    readonly id: FieldRef<"BankAccount", 'String'>
    readonly sellerKycId: FieldRef<"BankAccount", 'String'>
    readonly accountName: FieldRef<"BankAccount", 'String'>
    readonly accountNumber: FieldRef<"BankAccount", 'String'>
    readonly bankName: FieldRef<"BankAccount", 'String'>
    readonly bankCode: FieldRef<"BankAccount", 'String'>
    readonly branchCode: FieldRef<"BankAccount", 'String'>
    readonly swiftCode: FieldRef<"BankAccount", 'String'>
    readonly iban: FieldRef<"BankAccount", 'String'>
    readonly currency: FieldRef<"BankAccount", 'String'>
    readonly isDefault: FieldRef<"BankAccount", 'Boolean'>
    readonly status: FieldRef<"BankAccount", 'AccountStatus'>
    readonly createdAt: FieldRef<"BankAccount", 'DateTime'>
    readonly updatedAt: FieldRef<"BankAccount", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BankAccount findUnique
   */
  export type BankAccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccount to fetch.
     */
    where: BankAccountWhereUniqueInput
  }

  /**
   * BankAccount findUniqueOrThrow
   */
  export type BankAccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccount to fetch.
     */
    where: BankAccountWhereUniqueInput
  }

  /**
   * BankAccount findFirst
   */
  export type BankAccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccount to fetch.
     */
    where?: BankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankAccounts to fetch.
     */
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BankAccounts.
     */
    cursor?: BankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BankAccounts.
     */
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }

  /**
   * BankAccount findFirstOrThrow
   */
  export type BankAccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccount to fetch.
     */
    where?: BankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankAccounts to fetch.
     */
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BankAccounts.
     */
    cursor?: BankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BankAccounts.
     */
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }

  /**
   * BankAccount findMany
   */
  export type BankAccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccounts to fetch.
     */
    where?: BankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankAccounts to fetch.
     */
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BankAccounts.
     */
    cursor?: BankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankAccounts.
     */
    skip?: number
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }

  /**
   * BankAccount create
   */
  export type BankAccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * The data needed to create a BankAccount.
     */
    data: XOR<BankAccountCreateInput, BankAccountUncheckedCreateInput>
  }

  /**
   * BankAccount createMany
   */
  export type BankAccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BankAccounts.
     */
    data: BankAccountCreateManyInput | BankAccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BankAccount createManyAndReturn
   */
  export type BankAccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * The data used to create many BankAccounts.
     */
    data: BankAccountCreateManyInput | BankAccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BankAccount update
   */
  export type BankAccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * The data needed to update a BankAccount.
     */
    data: XOR<BankAccountUpdateInput, BankAccountUncheckedUpdateInput>
    /**
     * Choose, which BankAccount to update.
     */
    where: BankAccountWhereUniqueInput
  }

  /**
   * BankAccount updateMany
   */
  export type BankAccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BankAccounts.
     */
    data: XOR<BankAccountUpdateManyMutationInput, BankAccountUncheckedUpdateManyInput>
    /**
     * Filter which BankAccounts to update
     */
    where?: BankAccountWhereInput
    /**
     * Limit how many BankAccounts to update.
     */
    limit?: number
  }

  /**
   * BankAccount updateManyAndReturn
   */
  export type BankAccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * The data used to update BankAccounts.
     */
    data: XOR<BankAccountUpdateManyMutationInput, BankAccountUncheckedUpdateManyInput>
    /**
     * Filter which BankAccounts to update
     */
    where?: BankAccountWhereInput
    /**
     * Limit how many BankAccounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BankAccount upsert
   */
  export type BankAccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * The filter to search for the BankAccount to update in case it exists.
     */
    where: BankAccountWhereUniqueInput
    /**
     * In case the BankAccount found by the `where` argument doesn't exist, create a new BankAccount with this data.
     */
    create: XOR<BankAccountCreateInput, BankAccountUncheckedCreateInput>
    /**
     * In case the BankAccount was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BankAccountUpdateInput, BankAccountUncheckedUpdateInput>
  }

  /**
   * BankAccount delete
   */
  export type BankAccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter which BankAccount to delete.
     */
    where: BankAccountWhereUniqueInput
  }

  /**
   * BankAccount deleteMany
   */
  export type BankAccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BankAccounts to delete
     */
    where?: BankAccountWhereInput
    /**
     * Limit how many BankAccounts to delete.
     */
    limit?: number
  }

  /**
   * BankAccount.settlements
   */
  export type BankAccount$settlementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    where?: SettlementWhereInput
    orderBy?: SettlementOrderByWithRelationInput | SettlementOrderByWithRelationInput[]
    cursor?: SettlementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SettlementScalarFieldEnum | SettlementScalarFieldEnum[]
  }

  /**
   * BankAccount without action
   */
  export type BankAccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
  }


  /**
   * Model Wallet
   */

  export type AggregateWallet = {
    _count: WalletCountAggregateOutputType | null
    _min: WalletMinAggregateOutputType | null
    _max: WalletMaxAggregateOutputType | null
  }

  export type WalletMinAggregateOutputType = {
    id: string | null
    sellerKycId: string | null
    walletType: $Enums.WalletType | null
    walletAddress: string | null
    currency: string | null
    isDefault: boolean | null
    status: $Enums.AccountStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    account: string | null
  }

  export type WalletMaxAggregateOutputType = {
    id: string | null
    sellerKycId: string | null
    walletType: $Enums.WalletType | null
    walletAddress: string | null
    currency: string | null
    isDefault: boolean | null
    status: $Enums.AccountStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    account: string | null
  }

  export type WalletCountAggregateOutputType = {
    id: number
    sellerKycId: number
    walletType: number
    walletAddress: number
    currency: number
    isDefault: number
    status: number
    createdAt: number
    updatedAt: number
    account: number
    _all: number
  }


  export type WalletMinAggregateInputType = {
    id?: true
    sellerKycId?: true
    walletType?: true
    walletAddress?: true
    currency?: true
    isDefault?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    account?: true
  }

  export type WalletMaxAggregateInputType = {
    id?: true
    sellerKycId?: true
    walletType?: true
    walletAddress?: true
    currency?: true
    isDefault?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    account?: true
  }

  export type WalletCountAggregateInputType = {
    id?: true
    sellerKycId?: true
    walletType?: true
    walletAddress?: true
    currency?: true
    isDefault?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    account?: true
    _all?: true
  }

  export type WalletAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Wallet to aggregate.
     */
    where?: WalletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wallets to fetch.
     */
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WalletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wallets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Wallets
    **/
    _count?: true | WalletCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WalletMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WalletMaxAggregateInputType
  }

  export type GetWalletAggregateType<T extends WalletAggregateArgs> = {
        [P in keyof T & keyof AggregateWallet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWallet[P]>
      : GetScalarType<T[P], AggregateWallet[P]>
  }




  export type WalletGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WalletWhereInput
    orderBy?: WalletOrderByWithAggregationInput | WalletOrderByWithAggregationInput[]
    by: WalletScalarFieldEnum[] | WalletScalarFieldEnum
    having?: WalletScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WalletCountAggregateInputType | true
    _min?: WalletMinAggregateInputType
    _max?: WalletMaxAggregateInputType
  }

  export type WalletGroupByOutputType = {
    id: string
    sellerKycId: string
    walletType: $Enums.WalletType
    walletAddress: string
    currency: string
    isDefault: boolean
    status: $Enums.AccountStatus
    createdAt: Date
    updatedAt: Date
    account: string
    _count: WalletCountAggregateOutputType | null
    _min: WalletMinAggregateOutputType | null
    _max: WalletMaxAggregateOutputType | null
  }

  type GetWalletGroupByPayload<T extends WalletGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WalletGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WalletGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WalletGroupByOutputType[P]>
            : GetScalarType<T[P], WalletGroupByOutputType[P]>
        }
      >
    >


  export type WalletSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerKycId?: boolean
    walletType?: boolean
    walletAddress?: boolean
    currency?: boolean
    isDefault?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    account?: boolean
    settlements?: boolean | Wallet$settlementsArgs<ExtArgs>
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
    _count?: boolean | WalletCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["wallet"]>

  export type WalletSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerKycId?: boolean
    walletType?: boolean
    walletAddress?: boolean
    currency?: boolean
    isDefault?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    account?: boolean
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["wallet"]>

  export type WalletSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerKycId?: boolean
    walletType?: boolean
    walletAddress?: boolean
    currency?: boolean
    isDefault?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    account?: boolean
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["wallet"]>

  export type WalletSelectScalar = {
    id?: boolean
    sellerKycId?: boolean
    walletType?: boolean
    walletAddress?: boolean
    currency?: boolean
    isDefault?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    account?: boolean
  }

  export type WalletOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sellerKycId" | "walletType" | "walletAddress" | "currency" | "isDefault" | "status" | "createdAt" | "updatedAt" | "account", ExtArgs["result"]["wallet"]>
  export type WalletInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    settlements?: boolean | Wallet$settlementsArgs<ExtArgs>
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
    _count?: boolean | WalletCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type WalletIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
  }
  export type WalletIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sellerKyc?: boolean | SellerKycDefaultArgs<ExtArgs>
  }

  export type $WalletPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Wallet"
    objects: {
      settlements: Prisma.$SettlementPayload<ExtArgs>[]
      sellerKyc: Prisma.$SellerKycPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sellerKycId: string
      walletType: $Enums.WalletType
      walletAddress: string
      currency: string
      isDefault: boolean
      status: $Enums.AccountStatus
      createdAt: Date
      updatedAt: Date
      account: string
    }, ExtArgs["result"]["wallet"]>
    composites: {}
  }

  type WalletGetPayload<S extends boolean | null | undefined | WalletDefaultArgs> = $Result.GetResult<Prisma.$WalletPayload, S>

  type WalletCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<WalletFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WalletCountAggregateInputType | true
    }

  export interface WalletDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Wallet'], meta: { name: 'Wallet' } }
    /**
     * Find zero or one Wallet that matches the filter.
     * @param {WalletFindUniqueArgs} args - Arguments to find a Wallet
     * @example
     * // Get one Wallet
     * const wallet = await prisma.wallet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WalletFindUniqueArgs>(args: SelectSubset<T, WalletFindUniqueArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wallet that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WalletFindUniqueOrThrowArgs} args - Arguments to find a Wallet
     * @example
     * // Get one Wallet
     * const wallet = await prisma.wallet.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WalletFindUniqueOrThrowArgs>(args: SelectSubset<T, WalletFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wallet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletFindFirstArgs} args - Arguments to find a Wallet
     * @example
     * // Get one Wallet
     * const wallet = await prisma.wallet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WalletFindFirstArgs>(args?: SelectSubset<T, WalletFindFirstArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wallet that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletFindFirstOrThrowArgs} args - Arguments to find a Wallet
     * @example
     * // Get one Wallet
     * const wallet = await prisma.wallet.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WalletFindFirstOrThrowArgs>(args?: SelectSubset<T, WalletFindFirstOrThrowArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wallets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wallets
     * const wallets = await prisma.wallet.findMany()
     * 
     * // Get first 10 Wallets
     * const wallets = await prisma.wallet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const walletWithIdOnly = await prisma.wallet.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WalletFindManyArgs>(args?: SelectSubset<T, WalletFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wallet.
     * @param {WalletCreateArgs} args - Arguments to create a Wallet.
     * @example
     * // Create one Wallet
     * const Wallet = await prisma.wallet.create({
     *   data: {
     *     // ... data to create a Wallet
     *   }
     * })
     * 
     */
    create<T extends WalletCreateArgs>(args: SelectSubset<T, WalletCreateArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wallets.
     * @param {WalletCreateManyArgs} args - Arguments to create many Wallets.
     * @example
     * // Create many Wallets
     * const wallet = await prisma.wallet.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WalletCreateManyArgs>(args?: SelectSubset<T, WalletCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Wallets and returns the data saved in the database.
     * @param {WalletCreateManyAndReturnArgs} args - Arguments to create many Wallets.
     * @example
     * // Create many Wallets
     * const wallet = await prisma.wallet.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Wallets and only return the `id`
     * const walletWithIdOnly = await prisma.wallet.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WalletCreateManyAndReturnArgs>(args?: SelectSubset<T, WalletCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Wallet.
     * @param {WalletDeleteArgs} args - Arguments to delete one Wallet.
     * @example
     * // Delete one Wallet
     * const Wallet = await prisma.wallet.delete({
     *   where: {
     *     // ... filter to delete one Wallet
     *   }
     * })
     * 
     */
    delete<T extends WalletDeleteArgs>(args: SelectSubset<T, WalletDeleteArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wallet.
     * @param {WalletUpdateArgs} args - Arguments to update one Wallet.
     * @example
     * // Update one Wallet
     * const wallet = await prisma.wallet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WalletUpdateArgs>(args: SelectSubset<T, WalletUpdateArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wallets.
     * @param {WalletDeleteManyArgs} args - Arguments to filter Wallets to delete.
     * @example
     * // Delete a few Wallets
     * const { count } = await prisma.wallet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WalletDeleteManyArgs>(args?: SelectSubset<T, WalletDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wallets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wallets
     * const wallet = await prisma.wallet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WalletUpdateManyArgs>(args: SelectSubset<T, WalletUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wallets and returns the data updated in the database.
     * @param {WalletUpdateManyAndReturnArgs} args - Arguments to update many Wallets.
     * @example
     * // Update many Wallets
     * const wallet = await prisma.wallet.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Wallets and only return the `id`
     * const walletWithIdOnly = await prisma.wallet.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends WalletUpdateManyAndReturnArgs>(args: SelectSubset<T, WalletUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Wallet.
     * @param {WalletUpsertArgs} args - Arguments to update or create a Wallet.
     * @example
     * // Update or create a Wallet
     * const wallet = await prisma.wallet.upsert({
     *   create: {
     *     // ... data to create a Wallet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wallet we want to update
     *   }
     * })
     */
    upsert<T extends WalletUpsertArgs>(args: SelectSubset<T, WalletUpsertArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wallets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletCountArgs} args - Arguments to filter Wallets to count.
     * @example
     * // Count the number of Wallets
     * const count = await prisma.wallet.count({
     *   where: {
     *     // ... the filter for the Wallets we want to count
     *   }
     * })
    **/
    count<T extends WalletCountArgs>(
      args?: Subset<T, WalletCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WalletCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wallet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WalletAggregateArgs>(args: Subset<T, WalletAggregateArgs>): Prisma.PrismaPromise<GetWalletAggregateType<T>>

    /**
     * Group by Wallet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WalletGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WalletGroupByArgs['orderBy'] }
        : { orderBy?: WalletGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WalletGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWalletGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Wallet model
   */
  readonly fields: WalletFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Wallet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WalletClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    settlements<T extends Wallet$settlementsArgs<ExtArgs> = {}>(args?: Subset<T, Wallet$settlementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sellerKyc<T extends SellerKycDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SellerKycDefaultArgs<ExtArgs>>): Prisma__SellerKycClient<$Result.GetResult<Prisma.$SellerKycPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Wallet model
   */
  interface WalletFieldRefs {
    readonly id: FieldRef<"Wallet", 'String'>
    readonly sellerKycId: FieldRef<"Wallet", 'String'>
    readonly walletType: FieldRef<"Wallet", 'WalletType'>
    readonly walletAddress: FieldRef<"Wallet", 'String'>
    readonly currency: FieldRef<"Wallet", 'String'>
    readonly isDefault: FieldRef<"Wallet", 'Boolean'>
    readonly status: FieldRef<"Wallet", 'AccountStatus'>
    readonly createdAt: FieldRef<"Wallet", 'DateTime'>
    readonly updatedAt: FieldRef<"Wallet", 'DateTime'>
    readonly account: FieldRef<"Wallet", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Wallet findUnique
   */
  export type WalletFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallet to fetch.
     */
    where: WalletWhereUniqueInput
  }

  /**
   * Wallet findUniqueOrThrow
   */
  export type WalletFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallet to fetch.
     */
    where: WalletWhereUniqueInput
  }

  /**
   * Wallet findFirst
   */
  export type WalletFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallet to fetch.
     */
    where?: WalletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wallets to fetch.
     */
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Wallets.
     */
    cursor?: WalletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wallets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Wallets.
     */
    distinct?: WalletScalarFieldEnum | WalletScalarFieldEnum[]
  }

  /**
   * Wallet findFirstOrThrow
   */
  export type WalletFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallet to fetch.
     */
    where?: WalletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wallets to fetch.
     */
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Wallets.
     */
    cursor?: WalletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wallets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Wallets.
     */
    distinct?: WalletScalarFieldEnum | WalletScalarFieldEnum[]
  }

  /**
   * Wallet findMany
   */
  export type WalletFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallets to fetch.
     */
    where?: WalletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wallets to fetch.
     */
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Wallets.
     */
    cursor?: WalletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wallets.
     */
    skip?: number
    distinct?: WalletScalarFieldEnum | WalletScalarFieldEnum[]
  }

  /**
   * Wallet create
   */
  export type WalletCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * The data needed to create a Wallet.
     */
    data: XOR<WalletCreateInput, WalletUncheckedCreateInput>
  }

  /**
   * Wallet createMany
   */
  export type WalletCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Wallets.
     */
    data: WalletCreateManyInput | WalletCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Wallet createManyAndReturn
   */
  export type WalletCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * The data used to create many Wallets.
     */
    data: WalletCreateManyInput | WalletCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Wallet update
   */
  export type WalletUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * The data needed to update a Wallet.
     */
    data: XOR<WalletUpdateInput, WalletUncheckedUpdateInput>
    /**
     * Choose, which Wallet to update.
     */
    where: WalletWhereUniqueInput
  }

  /**
   * Wallet updateMany
   */
  export type WalletUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Wallets.
     */
    data: XOR<WalletUpdateManyMutationInput, WalletUncheckedUpdateManyInput>
    /**
     * Filter which Wallets to update
     */
    where?: WalletWhereInput
    /**
     * Limit how many Wallets to update.
     */
    limit?: number
  }

  /**
   * Wallet updateManyAndReturn
   */
  export type WalletUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * The data used to update Wallets.
     */
    data: XOR<WalletUpdateManyMutationInput, WalletUncheckedUpdateManyInput>
    /**
     * Filter which Wallets to update
     */
    where?: WalletWhereInput
    /**
     * Limit how many Wallets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Wallet upsert
   */
  export type WalletUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * The filter to search for the Wallet to update in case it exists.
     */
    where: WalletWhereUniqueInput
    /**
     * In case the Wallet found by the `where` argument doesn't exist, create a new Wallet with this data.
     */
    create: XOR<WalletCreateInput, WalletUncheckedCreateInput>
    /**
     * In case the Wallet was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WalletUpdateInput, WalletUncheckedUpdateInput>
  }

  /**
   * Wallet delete
   */
  export type WalletDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter which Wallet to delete.
     */
    where: WalletWhereUniqueInput
  }

  /**
   * Wallet deleteMany
   */
  export type WalletDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Wallets to delete
     */
    where?: WalletWhereInput
    /**
     * Limit how many Wallets to delete.
     */
    limit?: number
  }

  /**
   * Wallet.settlements
   */
  export type Wallet$settlementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    where?: SettlementWhereInput
    orderBy?: SettlementOrderByWithRelationInput | SettlementOrderByWithRelationInput[]
    cursor?: SettlementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SettlementScalarFieldEnum | SettlementScalarFieldEnum[]
  }

  /**
   * Wallet without action
   */
  export type WalletDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
  }


  /**
   * Model PaymentMethod
   */

  export type AggregatePaymentMethod = {
    _count: PaymentMethodCountAggregateOutputType | null
    _min: PaymentMethodMinAggregateOutputType | null
    _max: PaymentMethodMaxAggregateOutputType | null
  }

  export type PaymentMethodMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: $Enums.PaymentType | null
    provider: string | null
    accountId: string | null
    accountName: string | null
    isDefault: boolean | null
    status: $Enums.AccountStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentMethodMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: $Enums.PaymentType | null
    provider: string | null
    accountId: string | null
    accountName: string | null
    isDefault: boolean | null
    status: $Enums.AccountStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentMethodCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    provider: number
    accountId: number
    accountName: number
    isDefault: number
    status: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PaymentMethodMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    accountId?: true
    accountName?: true
    isDefault?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentMethodMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    accountId?: true
    accountName?: true
    isDefault?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentMethodCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    accountId?: true
    accountName?: true
    isDefault?: true
    status?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PaymentMethodAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentMethod to aggregate.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentMethods
    **/
    _count?: true | PaymentMethodCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMethodMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMethodMaxAggregateInputType
  }

  export type GetPaymentMethodAggregateType<T extends PaymentMethodAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentMethod]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentMethod[P]>
      : GetScalarType<T[P], AggregatePaymentMethod[P]>
  }




  export type PaymentMethodGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentMethodWhereInput
    orderBy?: PaymentMethodOrderByWithAggregationInput | PaymentMethodOrderByWithAggregationInput[]
    by: PaymentMethodScalarFieldEnum[] | PaymentMethodScalarFieldEnum
    having?: PaymentMethodScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentMethodCountAggregateInputType | true
    _min?: PaymentMethodMinAggregateInputType
    _max?: PaymentMethodMaxAggregateInputType
  }

  export type PaymentMethodGroupByOutputType = {
    id: string
    userId: string
    type: $Enums.PaymentType
    provider: string
    accountId: string
    accountName: string
    isDefault: boolean
    status: $Enums.AccountStatus
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: PaymentMethodCountAggregateOutputType | null
    _min: PaymentMethodMinAggregateOutputType | null
    _max: PaymentMethodMaxAggregateOutputType | null
  }

  type GetPaymentMethodGroupByPayload<T extends PaymentMethodGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentMethodGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentMethodGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentMethodGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentMethodGroupByOutputType[P]>
        }
      >
    >


  export type PaymentMethodSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    accountId?: boolean
    accountName?: boolean
    isDefault?: boolean
    status?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    externalTransactions?: boolean | PaymentMethod$externalTransactionsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | PaymentMethodCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentMethod"]>

  export type PaymentMethodSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    accountId?: boolean
    accountName?: boolean
    isDefault?: boolean
    status?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentMethod"]>

  export type PaymentMethodSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    accountId?: boolean
    accountName?: boolean
    isDefault?: boolean
    status?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentMethod"]>

  export type PaymentMethodSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    accountId?: boolean
    accountName?: boolean
    isDefault?: boolean
    status?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PaymentMethodOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "type" | "provider" | "accountId" | "accountName" | "isDefault" | "status" | "metadata" | "createdAt" | "updatedAt", ExtArgs["result"]["paymentMethod"]>
  export type PaymentMethodInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    externalTransactions?: boolean | PaymentMethod$externalTransactionsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | PaymentMethodCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PaymentMethodIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PaymentMethodIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PaymentMethodPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentMethod"
    objects: {
      externalTransactions: Prisma.$ExternalTransactionPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: $Enums.PaymentType
      provider: string
      accountId: string
      accountName: string
      isDefault: boolean
      status: $Enums.AccountStatus
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["paymentMethod"]>
    composites: {}
  }

  type PaymentMethodGetPayload<S extends boolean | null | undefined | PaymentMethodDefaultArgs> = $Result.GetResult<Prisma.$PaymentMethodPayload, S>

  type PaymentMethodCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentMethodFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentMethodCountAggregateInputType | true
    }

  export interface PaymentMethodDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentMethod'], meta: { name: 'PaymentMethod' } }
    /**
     * Find zero or one PaymentMethod that matches the filter.
     * @param {PaymentMethodFindUniqueArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentMethodFindUniqueArgs>(args: SelectSubset<T, PaymentMethodFindUniqueArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentMethod that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentMethodFindUniqueOrThrowArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentMethodFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentMethodFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentMethod that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodFindFirstArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentMethodFindFirstArgs>(args?: SelectSubset<T, PaymentMethodFindFirstArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentMethod that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodFindFirstOrThrowArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentMethodFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentMethodFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentMethods that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentMethods
     * const paymentMethods = await prisma.paymentMethod.findMany()
     * 
     * // Get first 10 PaymentMethods
     * const paymentMethods = await prisma.paymentMethod.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentMethodWithIdOnly = await prisma.paymentMethod.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentMethodFindManyArgs>(args?: SelectSubset<T, PaymentMethodFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentMethod.
     * @param {PaymentMethodCreateArgs} args - Arguments to create a PaymentMethod.
     * @example
     * // Create one PaymentMethod
     * const PaymentMethod = await prisma.paymentMethod.create({
     *   data: {
     *     // ... data to create a PaymentMethod
     *   }
     * })
     * 
     */
    create<T extends PaymentMethodCreateArgs>(args: SelectSubset<T, PaymentMethodCreateArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentMethods.
     * @param {PaymentMethodCreateManyArgs} args - Arguments to create many PaymentMethods.
     * @example
     * // Create many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentMethodCreateManyArgs>(args?: SelectSubset<T, PaymentMethodCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentMethods and returns the data saved in the database.
     * @param {PaymentMethodCreateManyAndReturnArgs} args - Arguments to create many PaymentMethods.
     * @example
     * // Create many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentMethods and only return the `id`
     * const paymentMethodWithIdOnly = await prisma.paymentMethod.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentMethodCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentMethodCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentMethod.
     * @param {PaymentMethodDeleteArgs} args - Arguments to delete one PaymentMethod.
     * @example
     * // Delete one PaymentMethod
     * const PaymentMethod = await prisma.paymentMethod.delete({
     *   where: {
     *     // ... filter to delete one PaymentMethod
     *   }
     * })
     * 
     */
    delete<T extends PaymentMethodDeleteArgs>(args: SelectSubset<T, PaymentMethodDeleteArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentMethod.
     * @param {PaymentMethodUpdateArgs} args - Arguments to update one PaymentMethod.
     * @example
     * // Update one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentMethodUpdateArgs>(args: SelectSubset<T, PaymentMethodUpdateArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentMethods.
     * @param {PaymentMethodDeleteManyArgs} args - Arguments to filter PaymentMethods to delete.
     * @example
     * // Delete a few PaymentMethods
     * const { count } = await prisma.paymentMethod.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentMethodDeleteManyArgs>(args?: SelectSubset<T, PaymentMethodDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentMethodUpdateManyArgs>(args: SelectSubset<T, PaymentMethodUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentMethods and returns the data updated in the database.
     * @param {PaymentMethodUpdateManyAndReturnArgs} args - Arguments to update many PaymentMethods.
     * @example
     * // Update many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentMethods and only return the `id`
     * const paymentMethodWithIdOnly = await prisma.paymentMethod.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentMethodUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentMethodUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentMethod.
     * @param {PaymentMethodUpsertArgs} args - Arguments to update or create a PaymentMethod.
     * @example
     * // Update or create a PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.upsert({
     *   create: {
     *     // ... data to create a PaymentMethod
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentMethod we want to update
     *   }
     * })
     */
    upsert<T extends PaymentMethodUpsertArgs>(args: SelectSubset<T, PaymentMethodUpsertArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodCountArgs} args - Arguments to filter PaymentMethods to count.
     * @example
     * // Count the number of PaymentMethods
     * const count = await prisma.paymentMethod.count({
     *   where: {
     *     // ... the filter for the PaymentMethods we want to count
     *   }
     * })
    **/
    count<T extends PaymentMethodCountArgs>(
      args?: Subset<T, PaymentMethodCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentMethodCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentMethodAggregateArgs>(args: Subset<T, PaymentMethodAggregateArgs>): Prisma.PrismaPromise<GetPaymentMethodAggregateType<T>>

    /**
     * Group by PaymentMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentMethodGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentMethodGroupByArgs['orderBy'] }
        : { orderBy?: PaymentMethodGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentMethodGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentMethodGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentMethod model
   */
  readonly fields: PaymentMethodFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentMethod.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentMethodClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    externalTransactions<T extends PaymentMethod$externalTransactionsArgs<ExtArgs> = {}>(args?: Subset<T, PaymentMethod$externalTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentMethod model
   */
  interface PaymentMethodFieldRefs {
    readonly id: FieldRef<"PaymentMethod", 'String'>
    readonly userId: FieldRef<"PaymentMethod", 'String'>
    readonly type: FieldRef<"PaymentMethod", 'PaymentType'>
    readonly provider: FieldRef<"PaymentMethod", 'String'>
    readonly accountId: FieldRef<"PaymentMethod", 'String'>
    readonly accountName: FieldRef<"PaymentMethod", 'String'>
    readonly isDefault: FieldRef<"PaymentMethod", 'Boolean'>
    readonly status: FieldRef<"PaymentMethod", 'AccountStatus'>
    readonly metadata: FieldRef<"PaymentMethod", 'Json'>
    readonly createdAt: FieldRef<"PaymentMethod", 'DateTime'>
    readonly updatedAt: FieldRef<"PaymentMethod", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PaymentMethod findUnique
   */
  export type PaymentMethodFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod findUniqueOrThrow
   */
  export type PaymentMethodFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod findFirst
   */
  export type PaymentMethodFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentMethods.
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentMethods.
     */
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * PaymentMethod findFirstOrThrow
   */
  export type PaymentMethodFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentMethods.
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentMethods.
     */
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * PaymentMethod findMany
   */
  export type PaymentMethodFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethods to fetch.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentMethods.
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * PaymentMethod create
   */
  export type PaymentMethodCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentMethod.
     */
    data: XOR<PaymentMethodCreateInput, PaymentMethodUncheckedCreateInput>
  }

  /**
   * PaymentMethod createMany
   */
  export type PaymentMethodCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentMethods.
     */
    data: PaymentMethodCreateManyInput | PaymentMethodCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentMethod createManyAndReturn
   */
  export type PaymentMethodCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentMethods.
     */
    data: PaymentMethodCreateManyInput | PaymentMethodCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentMethod update
   */
  export type PaymentMethodUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentMethod.
     */
    data: XOR<PaymentMethodUpdateInput, PaymentMethodUncheckedUpdateInput>
    /**
     * Choose, which PaymentMethod to update.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod updateMany
   */
  export type PaymentMethodUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentMethods.
     */
    data: XOR<PaymentMethodUpdateManyMutationInput, PaymentMethodUncheckedUpdateManyInput>
    /**
     * Filter which PaymentMethods to update
     */
    where?: PaymentMethodWhereInput
    /**
     * Limit how many PaymentMethods to update.
     */
    limit?: number
  }

  /**
   * PaymentMethod updateManyAndReturn
   */
  export type PaymentMethodUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * The data used to update PaymentMethods.
     */
    data: XOR<PaymentMethodUpdateManyMutationInput, PaymentMethodUncheckedUpdateManyInput>
    /**
     * Filter which PaymentMethods to update
     */
    where?: PaymentMethodWhereInput
    /**
     * Limit how many PaymentMethods to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentMethod upsert
   */
  export type PaymentMethodUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentMethod to update in case it exists.
     */
    where: PaymentMethodWhereUniqueInput
    /**
     * In case the PaymentMethod found by the `where` argument doesn't exist, create a new PaymentMethod with this data.
     */
    create: XOR<PaymentMethodCreateInput, PaymentMethodUncheckedCreateInput>
    /**
     * In case the PaymentMethod was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentMethodUpdateInput, PaymentMethodUncheckedUpdateInput>
  }

  /**
   * PaymentMethod delete
   */
  export type PaymentMethodDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter which PaymentMethod to delete.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod deleteMany
   */
  export type PaymentMethodDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentMethods to delete
     */
    where?: PaymentMethodWhereInput
    /**
     * Limit how many PaymentMethods to delete.
     */
    limit?: number
  }

  /**
   * PaymentMethod.externalTransactions
   */
  export type PaymentMethod$externalTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    where?: ExternalTransactionWhereInput
    orderBy?: ExternalTransactionOrderByWithRelationInput | ExternalTransactionOrderByWithRelationInput[]
    cursor?: ExternalTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExternalTransactionScalarFieldEnum | ExternalTransactionScalarFieldEnum[]
  }

  /**
   * PaymentMethod without action
   */
  export type PaymentMethodDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
  }


  /**
   * Model Settlement
   */

  export type AggregateSettlement = {
    _count: SettlementCountAggregateOutputType | null
    _avg: SettlementAvgAggregateOutputType | null
    _sum: SettlementSumAggregateOutputType | null
    _min: SettlementMinAggregateOutputType | null
    _max: SettlementMaxAggregateOutputType | null
  }

  export type SettlementAvgAggregateOutputType = {
    amount: Decimal | null
    netAmountBeforeFees: Decimal | null
    serviceFeesDeducted: Decimal | null
    totalOrdersCount: number | null
    totalRidesCount: number | null
  }

  export type SettlementSumAggregateOutputType = {
    amount: Decimal | null
    netAmountBeforeFees: Decimal | null
    serviceFeesDeducted: Decimal | null
    totalOrdersCount: number | null
    totalRidesCount: number | null
  }

  export type SettlementMinAggregateOutputType = {
    id: string | null
    userId: string | null
    amount: Decimal | null
    currency: string | null
    status: $Enums.SettlementStatus | null
    type: $Enums.SettlementType | null
    reference: string | null
    bankAccountId: string | null
    walletId: string | null
    processedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    netAmountBeforeFees: Decimal | null
    serviceFeesDeducted: Decimal | null
    totalOrdersCount: number | null
    channel: $Enums.SettlementChannel | null
    totalRidesCount: number | null
  }

  export type SettlementMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    amount: Decimal | null
    currency: string | null
    status: $Enums.SettlementStatus | null
    type: $Enums.SettlementType | null
    reference: string | null
    bankAccountId: string | null
    walletId: string | null
    processedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    netAmountBeforeFees: Decimal | null
    serviceFeesDeducted: Decimal | null
    totalOrdersCount: number | null
    channel: $Enums.SettlementChannel | null
    totalRidesCount: number | null
  }

  export type SettlementCountAggregateOutputType = {
    id: number
    userId: number
    amount: number
    currency: number
    status: number
    type: number
    reference: number
    bankAccountId: number
    walletId: number
    metadata: number
    processedAt: number
    createdAt: number
    updatedAt: number
    includedOrderIds: number
    netAmountBeforeFees: number
    serviceFeesDeducted: number
    totalOrdersCount: number
    channel: number
    includedRideIds: number
    totalRidesCount: number
    _all: number
  }


  export type SettlementAvgAggregateInputType = {
    amount?: true
    netAmountBeforeFees?: true
    serviceFeesDeducted?: true
    totalOrdersCount?: true
    totalRidesCount?: true
  }

  export type SettlementSumAggregateInputType = {
    amount?: true
    netAmountBeforeFees?: true
    serviceFeesDeducted?: true
    totalOrdersCount?: true
    totalRidesCount?: true
  }

  export type SettlementMinAggregateInputType = {
    id?: true
    userId?: true
    amount?: true
    currency?: true
    status?: true
    type?: true
    reference?: true
    bankAccountId?: true
    walletId?: true
    processedAt?: true
    createdAt?: true
    updatedAt?: true
    netAmountBeforeFees?: true
    serviceFeesDeducted?: true
    totalOrdersCount?: true
    channel?: true
    totalRidesCount?: true
  }

  export type SettlementMaxAggregateInputType = {
    id?: true
    userId?: true
    amount?: true
    currency?: true
    status?: true
    type?: true
    reference?: true
    bankAccountId?: true
    walletId?: true
    processedAt?: true
    createdAt?: true
    updatedAt?: true
    netAmountBeforeFees?: true
    serviceFeesDeducted?: true
    totalOrdersCount?: true
    channel?: true
    totalRidesCount?: true
  }

  export type SettlementCountAggregateInputType = {
    id?: true
    userId?: true
    amount?: true
    currency?: true
    status?: true
    type?: true
    reference?: true
    bankAccountId?: true
    walletId?: true
    metadata?: true
    processedAt?: true
    createdAt?: true
    updatedAt?: true
    includedOrderIds?: true
    netAmountBeforeFees?: true
    serviceFeesDeducted?: true
    totalOrdersCount?: true
    channel?: true
    includedRideIds?: true
    totalRidesCount?: true
    _all?: true
  }

  export type SettlementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Settlement to aggregate.
     */
    where?: SettlementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settlements to fetch.
     */
    orderBy?: SettlementOrderByWithRelationInput | SettlementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SettlementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settlements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settlements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Settlements
    **/
    _count?: true | SettlementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SettlementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SettlementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SettlementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SettlementMaxAggregateInputType
  }

  export type GetSettlementAggregateType<T extends SettlementAggregateArgs> = {
        [P in keyof T & keyof AggregateSettlement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSettlement[P]>
      : GetScalarType<T[P], AggregateSettlement[P]>
  }




  export type SettlementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SettlementWhereInput
    orderBy?: SettlementOrderByWithAggregationInput | SettlementOrderByWithAggregationInput[]
    by: SettlementScalarFieldEnum[] | SettlementScalarFieldEnum
    having?: SettlementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SettlementCountAggregateInputType | true
    _avg?: SettlementAvgAggregateInputType
    _sum?: SettlementSumAggregateInputType
    _min?: SettlementMinAggregateInputType
    _max?: SettlementMaxAggregateInputType
  }

  export type SettlementGroupByOutputType = {
    id: string
    userId: string
    amount: Decimal
    currency: string
    status: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    bankAccountId: string | null
    walletId: string | null
    metadata: JsonValue | null
    processedAt: Date | null
    createdAt: Date
    updatedAt: Date
    includedOrderIds: JsonValue | null
    netAmountBeforeFees: Decimal
    serviceFeesDeducted: Decimal
    totalOrdersCount: number
    channel: $Enums.SettlementChannel
    includedRideIds: JsonValue | null
    totalRidesCount: number
    _count: SettlementCountAggregateOutputType | null
    _avg: SettlementAvgAggregateOutputType | null
    _sum: SettlementSumAggregateOutputType | null
    _min: SettlementMinAggregateOutputType | null
    _max: SettlementMaxAggregateOutputType | null
  }

  type GetSettlementGroupByPayload<T extends SettlementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SettlementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SettlementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SettlementGroupByOutputType[P]>
            : GetScalarType<T[P], SettlementGroupByOutputType[P]>
        }
      >
    >


  export type SettlementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    type?: boolean
    reference?: boolean
    bankAccountId?: boolean
    walletId?: boolean
    metadata?: boolean
    processedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    includedOrderIds?: boolean
    netAmountBeforeFees?: boolean
    serviceFeesDeducted?: boolean
    totalOrdersCount?: boolean
    channel?: boolean
    includedRideIds?: boolean
    totalRidesCount?: boolean
    bankAccount?: boolean | Settlement$bankAccountArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    wallet?: boolean | Settlement$walletArgs<ExtArgs>
  }, ExtArgs["result"]["settlement"]>

  export type SettlementSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    type?: boolean
    reference?: boolean
    bankAccountId?: boolean
    walletId?: boolean
    metadata?: boolean
    processedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    includedOrderIds?: boolean
    netAmountBeforeFees?: boolean
    serviceFeesDeducted?: boolean
    totalOrdersCount?: boolean
    channel?: boolean
    includedRideIds?: boolean
    totalRidesCount?: boolean
    bankAccount?: boolean | Settlement$bankAccountArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    wallet?: boolean | Settlement$walletArgs<ExtArgs>
  }, ExtArgs["result"]["settlement"]>

  export type SettlementSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    type?: boolean
    reference?: boolean
    bankAccountId?: boolean
    walletId?: boolean
    metadata?: boolean
    processedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    includedOrderIds?: boolean
    netAmountBeforeFees?: boolean
    serviceFeesDeducted?: boolean
    totalOrdersCount?: boolean
    channel?: boolean
    includedRideIds?: boolean
    totalRidesCount?: boolean
    bankAccount?: boolean | Settlement$bankAccountArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    wallet?: boolean | Settlement$walletArgs<ExtArgs>
  }, ExtArgs["result"]["settlement"]>

  export type SettlementSelectScalar = {
    id?: boolean
    userId?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    type?: boolean
    reference?: boolean
    bankAccountId?: boolean
    walletId?: boolean
    metadata?: boolean
    processedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    includedOrderIds?: boolean
    netAmountBeforeFees?: boolean
    serviceFeesDeducted?: boolean
    totalOrdersCount?: boolean
    channel?: boolean
    includedRideIds?: boolean
    totalRidesCount?: boolean
  }

  export type SettlementOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "amount" | "currency" | "status" | "type" | "reference" | "bankAccountId" | "walletId" | "metadata" | "processedAt" | "createdAt" | "updatedAt" | "includedOrderIds" | "netAmountBeforeFees" | "serviceFeesDeducted" | "totalOrdersCount" | "channel" | "includedRideIds" | "totalRidesCount", ExtArgs["result"]["settlement"]>
  export type SettlementInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bankAccount?: boolean | Settlement$bankAccountArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    wallet?: boolean | Settlement$walletArgs<ExtArgs>
  }
  export type SettlementIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bankAccount?: boolean | Settlement$bankAccountArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    wallet?: boolean | Settlement$walletArgs<ExtArgs>
  }
  export type SettlementIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bankAccount?: boolean | Settlement$bankAccountArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    wallet?: boolean | Settlement$walletArgs<ExtArgs>
  }

  export type $SettlementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Settlement"
    objects: {
      bankAccount: Prisma.$BankAccountPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
      wallet: Prisma.$WalletPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      amount: Prisma.Decimal
      currency: string
      status: $Enums.SettlementStatus
      type: $Enums.SettlementType
      reference: string
      bankAccountId: string | null
      walletId: string | null
      metadata: Prisma.JsonValue | null
      processedAt: Date | null
      createdAt: Date
      updatedAt: Date
      includedOrderIds: Prisma.JsonValue | null
      netAmountBeforeFees: Prisma.Decimal
      serviceFeesDeducted: Prisma.Decimal
      totalOrdersCount: number
      channel: $Enums.SettlementChannel
      includedRideIds: Prisma.JsonValue | null
      totalRidesCount: number
    }, ExtArgs["result"]["settlement"]>
    composites: {}
  }

  type SettlementGetPayload<S extends boolean | null | undefined | SettlementDefaultArgs> = $Result.GetResult<Prisma.$SettlementPayload, S>

  type SettlementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SettlementFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SettlementCountAggregateInputType | true
    }

  export interface SettlementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Settlement'], meta: { name: 'Settlement' } }
    /**
     * Find zero or one Settlement that matches the filter.
     * @param {SettlementFindUniqueArgs} args - Arguments to find a Settlement
     * @example
     * // Get one Settlement
     * const settlement = await prisma.settlement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SettlementFindUniqueArgs>(args: SelectSubset<T, SettlementFindUniqueArgs<ExtArgs>>): Prisma__SettlementClient<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Settlement that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SettlementFindUniqueOrThrowArgs} args - Arguments to find a Settlement
     * @example
     * // Get one Settlement
     * const settlement = await prisma.settlement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SettlementFindUniqueOrThrowArgs>(args: SelectSubset<T, SettlementFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SettlementClient<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Settlement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettlementFindFirstArgs} args - Arguments to find a Settlement
     * @example
     * // Get one Settlement
     * const settlement = await prisma.settlement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SettlementFindFirstArgs>(args?: SelectSubset<T, SettlementFindFirstArgs<ExtArgs>>): Prisma__SettlementClient<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Settlement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettlementFindFirstOrThrowArgs} args - Arguments to find a Settlement
     * @example
     * // Get one Settlement
     * const settlement = await prisma.settlement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SettlementFindFirstOrThrowArgs>(args?: SelectSubset<T, SettlementFindFirstOrThrowArgs<ExtArgs>>): Prisma__SettlementClient<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Settlements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettlementFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Settlements
     * const settlements = await prisma.settlement.findMany()
     * 
     * // Get first 10 Settlements
     * const settlements = await prisma.settlement.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const settlementWithIdOnly = await prisma.settlement.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SettlementFindManyArgs>(args?: SelectSubset<T, SettlementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Settlement.
     * @param {SettlementCreateArgs} args - Arguments to create a Settlement.
     * @example
     * // Create one Settlement
     * const Settlement = await prisma.settlement.create({
     *   data: {
     *     // ... data to create a Settlement
     *   }
     * })
     * 
     */
    create<T extends SettlementCreateArgs>(args: SelectSubset<T, SettlementCreateArgs<ExtArgs>>): Prisma__SettlementClient<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Settlements.
     * @param {SettlementCreateManyArgs} args - Arguments to create many Settlements.
     * @example
     * // Create many Settlements
     * const settlement = await prisma.settlement.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SettlementCreateManyArgs>(args?: SelectSubset<T, SettlementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Settlements and returns the data saved in the database.
     * @param {SettlementCreateManyAndReturnArgs} args - Arguments to create many Settlements.
     * @example
     * // Create many Settlements
     * const settlement = await prisma.settlement.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Settlements and only return the `id`
     * const settlementWithIdOnly = await prisma.settlement.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SettlementCreateManyAndReturnArgs>(args?: SelectSubset<T, SettlementCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Settlement.
     * @param {SettlementDeleteArgs} args - Arguments to delete one Settlement.
     * @example
     * // Delete one Settlement
     * const Settlement = await prisma.settlement.delete({
     *   where: {
     *     // ... filter to delete one Settlement
     *   }
     * })
     * 
     */
    delete<T extends SettlementDeleteArgs>(args: SelectSubset<T, SettlementDeleteArgs<ExtArgs>>): Prisma__SettlementClient<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Settlement.
     * @param {SettlementUpdateArgs} args - Arguments to update one Settlement.
     * @example
     * // Update one Settlement
     * const settlement = await prisma.settlement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SettlementUpdateArgs>(args: SelectSubset<T, SettlementUpdateArgs<ExtArgs>>): Prisma__SettlementClient<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Settlements.
     * @param {SettlementDeleteManyArgs} args - Arguments to filter Settlements to delete.
     * @example
     * // Delete a few Settlements
     * const { count } = await prisma.settlement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SettlementDeleteManyArgs>(args?: SelectSubset<T, SettlementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settlements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettlementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Settlements
     * const settlement = await prisma.settlement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SettlementUpdateManyArgs>(args: SelectSubset<T, SettlementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settlements and returns the data updated in the database.
     * @param {SettlementUpdateManyAndReturnArgs} args - Arguments to update many Settlements.
     * @example
     * // Update many Settlements
     * const settlement = await prisma.settlement.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Settlements and only return the `id`
     * const settlementWithIdOnly = await prisma.settlement.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SettlementUpdateManyAndReturnArgs>(args: SelectSubset<T, SettlementUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Settlement.
     * @param {SettlementUpsertArgs} args - Arguments to update or create a Settlement.
     * @example
     * // Update or create a Settlement
     * const settlement = await prisma.settlement.upsert({
     *   create: {
     *     // ... data to create a Settlement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Settlement we want to update
     *   }
     * })
     */
    upsert<T extends SettlementUpsertArgs>(args: SelectSubset<T, SettlementUpsertArgs<ExtArgs>>): Prisma__SettlementClient<$Result.GetResult<Prisma.$SettlementPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Settlements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettlementCountArgs} args - Arguments to filter Settlements to count.
     * @example
     * // Count the number of Settlements
     * const count = await prisma.settlement.count({
     *   where: {
     *     // ... the filter for the Settlements we want to count
     *   }
     * })
    **/
    count<T extends SettlementCountArgs>(
      args?: Subset<T, SettlementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SettlementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Settlement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettlementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SettlementAggregateArgs>(args: Subset<T, SettlementAggregateArgs>): Prisma.PrismaPromise<GetSettlementAggregateType<T>>

    /**
     * Group by Settlement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettlementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SettlementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SettlementGroupByArgs['orderBy'] }
        : { orderBy?: SettlementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SettlementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSettlementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Settlement model
   */
  readonly fields: SettlementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Settlement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SettlementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    bankAccount<T extends Settlement$bankAccountArgs<ExtArgs> = {}>(args?: Subset<T, Settlement$bankAccountArgs<ExtArgs>>): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    wallet<T extends Settlement$walletArgs<ExtArgs> = {}>(args?: Subset<T, Settlement$walletArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Settlement model
   */
  interface SettlementFieldRefs {
    readonly id: FieldRef<"Settlement", 'String'>
    readonly userId: FieldRef<"Settlement", 'String'>
    readonly amount: FieldRef<"Settlement", 'Decimal'>
    readonly currency: FieldRef<"Settlement", 'String'>
    readonly status: FieldRef<"Settlement", 'SettlementStatus'>
    readonly type: FieldRef<"Settlement", 'SettlementType'>
    readonly reference: FieldRef<"Settlement", 'String'>
    readonly bankAccountId: FieldRef<"Settlement", 'String'>
    readonly walletId: FieldRef<"Settlement", 'String'>
    readonly metadata: FieldRef<"Settlement", 'Json'>
    readonly processedAt: FieldRef<"Settlement", 'DateTime'>
    readonly createdAt: FieldRef<"Settlement", 'DateTime'>
    readonly updatedAt: FieldRef<"Settlement", 'DateTime'>
    readonly includedOrderIds: FieldRef<"Settlement", 'Json'>
    readonly netAmountBeforeFees: FieldRef<"Settlement", 'Decimal'>
    readonly serviceFeesDeducted: FieldRef<"Settlement", 'Decimal'>
    readonly totalOrdersCount: FieldRef<"Settlement", 'Int'>
    readonly channel: FieldRef<"Settlement", 'SettlementChannel'>
    readonly includedRideIds: FieldRef<"Settlement", 'Json'>
    readonly totalRidesCount: FieldRef<"Settlement", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Settlement findUnique
   */
  export type SettlementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    /**
     * Filter, which Settlement to fetch.
     */
    where: SettlementWhereUniqueInput
  }

  /**
   * Settlement findUniqueOrThrow
   */
  export type SettlementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    /**
     * Filter, which Settlement to fetch.
     */
    where: SettlementWhereUniqueInput
  }

  /**
   * Settlement findFirst
   */
  export type SettlementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    /**
     * Filter, which Settlement to fetch.
     */
    where?: SettlementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settlements to fetch.
     */
    orderBy?: SettlementOrderByWithRelationInput | SettlementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Settlements.
     */
    cursor?: SettlementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settlements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settlements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Settlements.
     */
    distinct?: SettlementScalarFieldEnum | SettlementScalarFieldEnum[]
  }

  /**
   * Settlement findFirstOrThrow
   */
  export type SettlementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    /**
     * Filter, which Settlement to fetch.
     */
    where?: SettlementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settlements to fetch.
     */
    orderBy?: SettlementOrderByWithRelationInput | SettlementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Settlements.
     */
    cursor?: SettlementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settlements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settlements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Settlements.
     */
    distinct?: SettlementScalarFieldEnum | SettlementScalarFieldEnum[]
  }

  /**
   * Settlement findMany
   */
  export type SettlementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    /**
     * Filter, which Settlements to fetch.
     */
    where?: SettlementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settlements to fetch.
     */
    orderBy?: SettlementOrderByWithRelationInput | SettlementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Settlements.
     */
    cursor?: SettlementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settlements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settlements.
     */
    skip?: number
    distinct?: SettlementScalarFieldEnum | SettlementScalarFieldEnum[]
  }

  /**
   * Settlement create
   */
  export type SettlementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    /**
     * The data needed to create a Settlement.
     */
    data: XOR<SettlementCreateInput, SettlementUncheckedCreateInput>
  }

  /**
   * Settlement createMany
   */
  export type SettlementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Settlements.
     */
    data: SettlementCreateManyInput | SettlementCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Settlement createManyAndReturn
   */
  export type SettlementCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * The data used to create many Settlements.
     */
    data: SettlementCreateManyInput | SettlementCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Settlement update
   */
  export type SettlementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    /**
     * The data needed to update a Settlement.
     */
    data: XOR<SettlementUpdateInput, SettlementUncheckedUpdateInput>
    /**
     * Choose, which Settlement to update.
     */
    where: SettlementWhereUniqueInput
  }

  /**
   * Settlement updateMany
   */
  export type SettlementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Settlements.
     */
    data: XOR<SettlementUpdateManyMutationInput, SettlementUncheckedUpdateManyInput>
    /**
     * Filter which Settlements to update
     */
    where?: SettlementWhereInput
    /**
     * Limit how many Settlements to update.
     */
    limit?: number
  }

  /**
   * Settlement updateManyAndReturn
   */
  export type SettlementUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * The data used to update Settlements.
     */
    data: XOR<SettlementUpdateManyMutationInput, SettlementUncheckedUpdateManyInput>
    /**
     * Filter which Settlements to update
     */
    where?: SettlementWhereInput
    /**
     * Limit how many Settlements to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Settlement upsert
   */
  export type SettlementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    /**
     * The filter to search for the Settlement to update in case it exists.
     */
    where: SettlementWhereUniqueInput
    /**
     * In case the Settlement found by the `where` argument doesn't exist, create a new Settlement with this data.
     */
    create: XOR<SettlementCreateInput, SettlementUncheckedCreateInput>
    /**
     * In case the Settlement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SettlementUpdateInput, SettlementUncheckedUpdateInput>
  }

  /**
   * Settlement delete
   */
  export type SettlementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
    /**
     * Filter which Settlement to delete.
     */
    where: SettlementWhereUniqueInput
  }

  /**
   * Settlement deleteMany
   */
  export type SettlementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Settlements to delete
     */
    where?: SettlementWhereInput
    /**
     * Limit how many Settlements to delete.
     */
    limit?: number
  }

  /**
   * Settlement.bankAccount
   */
  export type Settlement$bankAccountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankAccount
     */
    omit?: BankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BankAccountInclude<ExtArgs> | null
    where?: BankAccountWhereInput
  }

  /**
   * Settlement.wallet
   */
  export type Settlement$walletArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Wallet
     */
    omit?: WalletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    where?: WalletWhereInput
  }

  /**
   * Settlement without action
   */
  export type SettlementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settlement
     */
    select?: SettlementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settlement
     */
    omit?: SettlementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettlementInclude<ExtArgs> | null
  }


  /**
   * Model ProductView
   */

  export type AggregateProductView = {
    _count: ProductViewCountAggregateOutputType | null
    _min: ProductViewMinAggregateOutputType | null
    _max: ProductViewMaxAggregateOutputType | null
  }

  export type ProductViewMinAggregateOutputType = {
    id: string | null
    productId: string | null
    userId: string | null
    deviceId: string | null
    ipAddress: string | null
    viewedAt: Date | null
  }

  export type ProductViewMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    userId: string | null
    deviceId: string | null
    ipAddress: string | null
    viewedAt: Date | null
  }

  export type ProductViewCountAggregateOutputType = {
    id: number
    productId: number
    userId: number
    deviceId: number
    ipAddress: number
    viewedAt: number
    _all: number
  }


  export type ProductViewMinAggregateInputType = {
    id?: true
    productId?: true
    userId?: true
    deviceId?: true
    ipAddress?: true
    viewedAt?: true
  }

  export type ProductViewMaxAggregateInputType = {
    id?: true
    productId?: true
    userId?: true
    deviceId?: true
    ipAddress?: true
    viewedAt?: true
  }

  export type ProductViewCountAggregateInputType = {
    id?: true
    productId?: true
    userId?: true
    deviceId?: true
    ipAddress?: true
    viewedAt?: true
    _all?: true
  }

  export type ProductViewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductView to aggregate.
     */
    where?: ProductViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductViews to fetch.
     */
    orderBy?: ProductViewOrderByWithRelationInput | ProductViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductViews
    **/
    _count?: true | ProductViewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductViewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductViewMaxAggregateInputType
  }

  export type GetProductViewAggregateType<T extends ProductViewAggregateArgs> = {
        [P in keyof T & keyof AggregateProductView]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductView[P]>
      : GetScalarType<T[P], AggregateProductView[P]>
  }




  export type ProductViewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductViewWhereInput
    orderBy?: ProductViewOrderByWithAggregationInput | ProductViewOrderByWithAggregationInput[]
    by: ProductViewScalarFieldEnum[] | ProductViewScalarFieldEnum
    having?: ProductViewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductViewCountAggregateInputType | true
    _min?: ProductViewMinAggregateInputType
    _max?: ProductViewMaxAggregateInputType
  }

  export type ProductViewGroupByOutputType = {
    id: string
    productId: string
    userId: string
    deviceId: string | null
    ipAddress: string | null
    viewedAt: Date
    _count: ProductViewCountAggregateOutputType | null
    _min: ProductViewMinAggregateOutputType | null
    _max: ProductViewMaxAggregateOutputType | null
  }

  type GetProductViewGroupByPayload<T extends ProductViewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductViewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductViewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductViewGroupByOutputType[P]>
            : GetScalarType<T[P], ProductViewGroupByOutputType[P]>
        }
      >
    >


  export type ProductViewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    userId?: boolean
    deviceId?: boolean
    ipAddress?: boolean
    viewedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productView"]>

  export type ProductViewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    userId?: boolean
    deviceId?: boolean
    ipAddress?: boolean
    viewedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productView"]>

  export type ProductViewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    userId?: boolean
    deviceId?: boolean
    ipAddress?: boolean
    viewedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productView"]>

  export type ProductViewSelectScalar = {
    id?: boolean
    productId?: boolean
    userId?: boolean
    deviceId?: boolean
    ipAddress?: boolean
    viewedAt?: boolean
  }

  export type ProductViewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "userId" | "deviceId" | "ipAddress" | "viewedAt", ExtArgs["result"]["productView"]>
  export type ProductViewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProductViewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProductViewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProductViewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductView"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      userId: string
      deviceId: string | null
      ipAddress: string | null
      viewedAt: Date
    }, ExtArgs["result"]["productView"]>
    composites: {}
  }

  type ProductViewGetPayload<S extends boolean | null | undefined | ProductViewDefaultArgs> = $Result.GetResult<Prisma.$ProductViewPayload, S>

  type ProductViewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductViewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductViewCountAggregateInputType | true
    }

  export interface ProductViewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductView'], meta: { name: 'ProductView' } }
    /**
     * Find zero or one ProductView that matches the filter.
     * @param {ProductViewFindUniqueArgs} args - Arguments to find a ProductView
     * @example
     * // Get one ProductView
     * const productView = await prisma.productView.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductViewFindUniqueArgs>(args: SelectSubset<T, ProductViewFindUniqueArgs<ExtArgs>>): Prisma__ProductViewClient<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductView that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductViewFindUniqueOrThrowArgs} args - Arguments to find a ProductView
     * @example
     * // Get one ProductView
     * const productView = await prisma.productView.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductViewFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductViewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductViewClient<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductView that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductViewFindFirstArgs} args - Arguments to find a ProductView
     * @example
     * // Get one ProductView
     * const productView = await prisma.productView.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductViewFindFirstArgs>(args?: SelectSubset<T, ProductViewFindFirstArgs<ExtArgs>>): Prisma__ProductViewClient<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductView that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductViewFindFirstOrThrowArgs} args - Arguments to find a ProductView
     * @example
     * // Get one ProductView
     * const productView = await prisma.productView.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductViewFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductViewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductViewClient<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductViews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductViewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductViews
     * const productViews = await prisma.productView.findMany()
     * 
     * // Get first 10 ProductViews
     * const productViews = await prisma.productView.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productViewWithIdOnly = await prisma.productView.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductViewFindManyArgs>(args?: SelectSubset<T, ProductViewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductView.
     * @param {ProductViewCreateArgs} args - Arguments to create a ProductView.
     * @example
     * // Create one ProductView
     * const ProductView = await prisma.productView.create({
     *   data: {
     *     // ... data to create a ProductView
     *   }
     * })
     * 
     */
    create<T extends ProductViewCreateArgs>(args: SelectSubset<T, ProductViewCreateArgs<ExtArgs>>): Prisma__ProductViewClient<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductViews.
     * @param {ProductViewCreateManyArgs} args - Arguments to create many ProductViews.
     * @example
     * // Create many ProductViews
     * const productView = await prisma.productView.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductViewCreateManyArgs>(args?: SelectSubset<T, ProductViewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductViews and returns the data saved in the database.
     * @param {ProductViewCreateManyAndReturnArgs} args - Arguments to create many ProductViews.
     * @example
     * // Create many ProductViews
     * const productView = await prisma.productView.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductViews and only return the `id`
     * const productViewWithIdOnly = await prisma.productView.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductViewCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductViewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductView.
     * @param {ProductViewDeleteArgs} args - Arguments to delete one ProductView.
     * @example
     * // Delete one ProductView
     * const ProductView = await prisma.productView.delete({
     *   where: {
     *     // ... filter to delete one ProductView
     *   }
     * })
     * 
     */
    delete<T extends ProductViewDeleteArgs>(args: SelectSubset<T, ProductViewDeleteArgs<ExtArgs>>): Prisma__ProductViewClient<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductView.
     * @param {ProductViewUpdateArgs} args - Arguments to update one ProductView.
     * @example
     * // Update one ProductView
     * const productView = await prisma.productView.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductViewUpdateArgs>(args: SelectSubset<T, ProductViewUpdateArgs<ExtArgs>>): Prisma__ProductViewClient<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductViews.
     * @param {ProductViewDeleteManyArgs} args - Arguments to filter ProductViews to delete.
     * @example
     * // Delete a few ProductViews
     * const { count } = await prisma.productView.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductViewDeleteManyArgs>(args?: SelectSubset<T, ProductViewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductViewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductViews
     * const productView = await prisma.productView.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductViewUpdateManyArgs>(args: SelectSubset<T, ProductViewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductViews and returns the data updated in the database.
     * @param {ProductViewUpdateManyAndReturnArgs} args - Arguments to update many ProductViews.
     * @example
     * // Update many ProductViews
     * const productView = await prisma.productView.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductViews and only return the `id`
     * const productViewWithIdOnly = await prisma.productView.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductViewUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductViewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductView.
     * @param {ProductViewUpsertArgs} args - Arguments to update or create a ProductView.
     * @example
     * // Update or create a ProductView
     * const productView = await prisma.productView.upsert({
     *   create: {
     *     // ... data to create a ProductView
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductView we want to update
     *   }
     * })
     */
    upsert<T extends ProductViewUpsertArgs>(args: SelectSubset<T, ProductViewUpsertArgs<ExtArgs>>): Prisma__ProductViewClient<$Result.GetResult<Prisma.$ProductViewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductViewCountArgs} args - Arguments to filter ProductViews to count.
     * @example
     * // Count the number of ProductViews
     * const count = await prisma.productView.count({
     *   where: {
     *     // ... the filter for the ProductViews we want to count
     *   }
     * })
    **/
    count<T extends ProductViewCountArgs>(
      args?: Subset<T, ProductViewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductViewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductViewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductViewAggregateArgs>(args: Subset<T, ProductViewAggregateArgs>): Prisma.PrismaPromise<GetProductViewAggregateType<T>>

    /**
     * Group by ProductView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductViewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductViewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductViewGroupByArgs['orderBy'] }
        : { orderBy?: ProductViewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductViewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductViewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductView model
   */
  readonly fields: ProductViewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductView.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductViewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductView model
   */
  interface ProductViewFieldRefs {
    readonly id: FieldRef<"ProductView", 'String'>
    readonly productId: FieldRef<"ProductView", 'String'>
    readonly userId: FieldRef<"ProductView", 'String'>
    readonly deviceId: FieldRef<"ProductView", 'String'>
    readonly ipAddress: FieldRef<"ProductView", 'String'>
    readonly viewedAt: FieldRef<"ProductView", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductView findUnique
   */
  export type ProductViewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    /**
     * Filter, which ProductView to fetch.
     */
    where: ProductViewWhereUniqueInput
  }

  /**
   * ProductView findUniqueOrThrow
   */
  export type ProductViewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    /**
     * Filter, which ProductView to fetch.
     */
    where: ProductViewWhereUniqueInput
  }

  /**
   * ProductView findFirst
   */
  export type ProductViewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    /**
     * Filter, which ProductView to fetch.
     */
    where?: ProductViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductViews to fetch.
     */
    orderBy?: ProductViewOrderByWithRelationInput | ProductViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductViews.
     */
    cursor?: ProductViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductViews.
     */
    distinct?: ProductViewScalarFieldEnum | ProductViewScalarFieldEnum[]
  }

  /**
   * ProductView findFirstOrThrow
   */
  export type ProductViewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    /**
     * Filter, which ProductView to fetch.
     */
    where?: ProductViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductViews to fetch.
     */
    orderBy?: ProductViewOrderByWithRelationInput | ProductViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductViews.
     */
    cursor?: ProductViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductViews.
     */
    distinct?: ProductViewScalarFieldEnum | ProductViewScalarFieldEnum[]
  }

  /**
   * ProductView findMany
   */
  export type ProductViewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    /**
     * Filter, which ProductViews to fetch.
     */
    where?: ProductViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductViews to fetch.
     */
    orderBy?: ProductViewOrderByWithRelationInput | ProductViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductViews.
     */
    cursor?: ProductViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductViews.
     */
    skip?: number
    distinct?: ProductViewScalarFieldEnum | ProductViewScalarFieldEnum[]
  }

  /**
   * ProductView create
   */
  export type ProductViewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductView.
     */
    data: XOR<ProductViewCreateInput, ProductViewUncheckedCreateInput>
  }

  /**
   * ProductView createMany
   */
  export type ProductViewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductViews.
     */
    data: ProductViewCreateManyInput | ProductViewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductView createManyAndReturn
   */
  export type ProductViewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * The data used to create many ProductViews.
     */
    data: ProductViewCreateManyInput | ProductViewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductView update
   */
  export type ProductViewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductView.
     */
    data: XOR<ProductViewUpdateInput, ProductViewUncheckedUpdateInput>
    /**
     * Choose, which ProductView to update.
     */
    where: ProductViewWhereUniqueInput
  }

  /**
   * ProductView updateMany
   */
  export type ProductViewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductViews.
     */
    data: XOR<ProductViewUpdateManyMutationInput, ProductViewUncheckedUpdateManyInput>
    /**
     * Filter which ProductViews to update
     */
    where?: ProductViewWhereInput
    /**
     * Limit how many ProductViews to update.
     */
    limit?: number
  }

  /**
   * ProductView updateManyAndReturn
   */
  export type ProductViewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * The data used to update ProductViews.
     */
    data: XOR<ProductViewUpdateManyMutationInput, ProductViewUncheckedUpdateManyInput>
    /**
     * Filter which ProductViews to update
     */
    where?: ProductViewWhereInput
    /**
     * Limit how many ProductViews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductView upsert
   */
  export type ProductViewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductView to update in case it exists.
     */
    where: ProductViewWhereUniqueInput
    /**
     * In case the ProductView found by the `where` argument doesn't exist, create a new ProductView with this data.
     */
    create: XOR<ProductViewCreateInput, ProductViewUncheckedCreateInput>
    /**
     * In case the ProductView was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductViewUpdateInput, ProductViewUncheckedUpdateInput>
  }

  /**
   * ProductView delete
   */
  export type ProductViewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
    /**
     * Filter which ProductView to delete.
     */
    where: ProductViewWhereUniqueInput
  }

  /**
   * ProductView deleteMany
   */
  export type ProductViewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductViews to delete
     */
    where?: ProductViewWhereInput
    /**
     * Limit how many ProductViews to delete.
     */
    limit?: number
  }

  /**
   * ProductView without action
   */
  export type ProductViewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductView
     */
    select?: ProductViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductView
     */
    omit?: ProductViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductViewInclude<ExtArgs> | null
  }


  /**
   * Model ProductOrderInterest
   */

  export type AggregateProductOrderInterest = {
    _count: ProductOrderInterestCountAggregateOutputType | null
    _avg: ProductOrderInterestAvgAggregateOutputType | null
    _sum: ProductOrderInterestSumAggregateOutputType | null
    _min: ProductOrderInterestMinAggregateOutputType | null
    _max: ProductOrderInterestMaxAggregateOutputType | null
  }

  export type ProductOrderInterestAvgAggregateOutputType = {
    quantity: number | null
    originalPrice: Decimal | null
    discountPrice: Decimal | null
    totalAmount: Decimal | null
  }

  export type ProductOrderInterestSumAggregateOutputType = {
    quantity: number | null
    originalPrice: Decimal | null
    discountPrice: Decimal | null
    totalAmount: Decimal | null
  }

  export type ProductOrderInterestMinAggregateOutputType = {
    id: string | null
    productId: string | null
    userId: string | null
    quantity: number | null
    originalPrice: Decimal | null
    discountPrice: Decimal | null
    currencyCode: string | null
    totalAmount: Decimal | null
    status: $Enums.OrderInterestStatus | null
    notes: string | null
    preferredDeliveryDate: Date | null
    deliveryAddress: string | null
    contactPhone: string | null
    paymentMethod: string | null
    paymentStatus: $Enums.PaymentStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    expiresAt: Date | null
  }

  export type ProductOrderInterestMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    userId: string | null
    quantity: number | null
    originalPrice: Decimal | null
    discountPrice: Decimal | null
    currencyCode: string | null
    totalAmount: Decimal | null
    status: $Enums.OrderInterestStatus | null
    notes: string | null
    preferredDeliveryDate: Date | null
    deliveryAddress: string | null
    contactPhone: string | null
    paymentMethod: string | null
    paymentStatus: $Enums.PaymentStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    expiresAt: Date | null
  }

  export type ProductOrderInterestCountAggregateOutputType = {
    id: number
    productId: number
    userId: number
    quantity: number
    originalPrice: number
    discountPrice: number
    currencyCode: number
    totalAmount: number
    status: number
    notes: number
    preferredDeliveryDate: number
    deliveryAddress: number
    contactPhone: number
    paymentMethod: number
    paymentStatus: number
    createdAt: number
    updatedAt: number
    expiresAt: number
    _all: number
  }


  export type ProductOrderInterestAvgAggregateInputType = {
    quantity?: true
    originalPrice?: true
    discountPrice?: true
    totalAmount?: true
  }

  export type ProductOrderInterestSumAggregateInputType = {
    quantity?: true
    originalPrice?: true
    discountPrice?: true
    totalAmount?: true
  }

  export type ProductOrderInterestMinAggregateInputType = {
    id?: true
    productId?: true
    userId?: true
    quantity?: true
    originalPrice?: true
    discountPrice?: true
    currencyCode?: true
    totalAmount?: true
    status?: true
    notes?: true
    preferredDeliveryDate?: true
    deliveryAddress?: true
    contactPhone?: true
    paymentMethod?: true
    paymentStatus?: true
    createdAt?: true
    updatedAt?: true
    expiresAt?: true
  }

  export type ProductOrderInterestMaxAggregateInputType = {
    id?: true
    productId?: true
    userId?: true
    quantity?: true
    originalPrice?: true
    discountPrice?: true
    currencyCode?: true
    totalAmount?: true
    status?: true
    notes?: true
    preferredDeliveryDate?: true
    deliveryAddress?: true
    contactPhone?: true
    paymentMethod?: true
    paymentStatus?: true
    createdAt?: true
    updatedAt?: true
    expiresAt?: true
  }

  export type ProductOrderInterestCountAggregateInputType = {
    id?: true
    productId?: true
    userId?: true
    quantity?: true
    originalPrice?: true
    discountPrice?: true
    currencyCode?: true
    totalAmount?: true
    status?: true
    notes?: true
    preferredDeliveryDate?: true
    deliveryAddress?: true
    contactPhone?: true
    paymentMethod?: true
    paymentStatus?: true
    createdAt?: true
    updatedAt?: true
    expiresAt?: true
    _all?: true
  }

  export type ProductOrderInterestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductOrderInterest to aggregate.
     */
    where?: ProductOrderInterestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOrderInterests to fetch.
     */
    orderBy?: ProductOrderInterestOrderByWithRelationInput | ProductOrderInterestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductOrderInterestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOrderInterests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOrderInterests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductOrderInterests
    **/
    _count?: true | ProductOrderInterestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductOrderInterestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductOrderInterestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductOrderInterestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductOrderInterestMaxAggregateInputType
  }

  export type GetProductOrderInterestAggregateType<T extends ProductOrderInterestAggregateArgs> = {
        [P in keyof T & keyof AggregateProductOrderInterest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductOrderInterest[P]>
      : GetScalarType<T[P], AggregateProductOrderInterest[P]>
  }




  export type ProductOrderInterestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductOrderInterestWhereInput
    orderBy?: ProductOrderInterestOrderByWithAggregationInput | ProductOrderInterestOrderByWithAggregationInput[]
    by: ProductOrderInterestScalarFieldEnum[] | ProductOrderInterestScalarFieldEnum
    having?: ProductOrderInterestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductOrderInterestCountAggregateInputType | true
    _avg?: ProductOrderInterestAvgAggregateInputType
    _sum?: ProductOrderInterestSumAggregateInputType
    _min?: ProductOrderInterestMinAggregateInputType
    _max?: ProductOrderInterestMaxAggregateInputType
  }

  export type ProductOrderInterestGroupByOutputType = {
    id: string
    productId: string
    userId: string
    quantity: number
    originalPrice: Decimal
    discountPrice: Decimal | null
    currencyCode: string
    totalAmount: Decimal
    status: $Enums.OrderInterestStatus
    notes: string | null
    preferredDeliveryDate: Date | null
    deliveryAddress: string | null
    contactPhone: string | null
    paymentMethod: string | null
    paymentStatus: $Enums.PaymentStatus
    createdAt: Date
    updatedAt: Date
    expiresAt: Date | null
    _count: ProductOrderInterestCountAggregateOutputType | null
    _avg: ProductOrderInterestAvgAggregateOutputType | null
    _sum: ProductOrderInterestSumAggregateOutputType | null
    _min: ProductOrderInterestMinAggregateOutputType | null
    _max: ProductOrderInterestMaxAggregateOutputType | null
  }

  type GetProductOrderInterestGroupByPayload<T extends ProductOrderInterestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductOrderInterestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductOrderInterestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductOrderInterestGroupByOutputType[P]>
            : GetScalarType<T[P], ProductOrderInterestGroupByOutputType[P]>
        }
      >
    >


  export type ProductOrderInterestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    userId?: boolean
    quantity?: boolean
    originalPrice?: boolean
    discountPrice?: boolean
    currencyCode?: boolean
    totalAmount?: boolean
    status?: boolean
    notes?: boolean
    preferredDeliveryDate?: boolean
    deliveryAddress?: boolean
    contactPhone?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    expiresAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productOrderInterest"]>

  export type ProductOrderInterestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    userId?: boolean
    quantity?: boolean
    originalPrice?: boolean
    discountPrice?: boolean
    currencyCode?: boolean
    totalAmount?: boolean
    status?: boolean
    notes?: boolean
    preferredDeliveryDate?: boolean
    deliveryAddress?: boolean
    contactPhone?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    expiresAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productOrderInterest"]>

  export type ProductOrderInterestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    userId?: boolean
    quantity?: boolean
    originalPrice?: boolean
    discountPrice?: boolean
    currencyCode?: boolean
    totalAmount?: boolean
    status?: boolean
    notes?: boolean
    preferredDeliveryDate?: boolean
    deliveryAddress?: boolean
    contactPhone?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    expiresAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productOrderInterest"]>

  export type ProductOrderInterestSelectScalar = {
    id?: boolean
    productId?: boolean
    userId?: boolean
    quantity?: boolean
    originalPrice?: boolean
    discountPrice?: boolean
    currencyCode?: boolean
    totalAmount?: boolean
    status?: boolean
    notes?: boolean
    preferredDeliveryDate?: boolean
    deliveryAddress?: boolean
    contactPhone?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    expiresAt?: boolean
  }

  export type ProductOrderInterestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "userId" | "quantity" | "originalPrice" | "discountPrice" | "currencyCode" | "totalAmount" | "status" | "notes" | "preferredDeliveryDate" | "deliveryAddress" | "contactPhone" | "paymentMethod" | "paymentStatus" | "createdAt" | "updatedAt" | "expiresAt", ExtArgs["result"]["productOrderInterest"]>
  export type ProductOrderInterestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProductOrderInterestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProductOrderInterestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProductOrderInterestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductOrderInterest"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      userId: string
      quantity: number
      originalPrice: Prisma.Decimal
      discountPrice: Prisma.Decimal | null
      currencyCode: string
      totalAmount: Prisma.Decimal
      status: $Enums.OrderInterestStatus
      notes: string | null
      preferredDeliveryDate: Date | null
      deliveryAddress: string | null
      contactPhone: string | null
      paymentMethod: string | null
      paymentStatus: $Enums.PaymentStatus
      createdAt: Date
      updatedAt: Date
      expiresAt: Date | null
    }, ExtArgs["result"]["productOrderInterest"]>
    composites: {}
  }

  type ProductOrderInterestGetPayload<S extends boolean | null | undefined | ProductOrderInterestDefaultArgs> = $Result.GetResult<Prisma.$ProductOrderInterestPayload, S>

  type ProductOrderInterestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductOrderInterestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductOrderInterestCountAggregateInputType | true
    }

  export interface ProductOrderInterestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductOrderInterest'], meta: { name: 'ProductOrderInterest' } }
    /**
     * Find zero or one ProductOrderInterest that matches the filter.
     * @param {ProductOrderInterestFindUniqueArgs} args - Arguments to find a ProductOrderInterest
     * @example
     * // Get one ProductOrderInterest
     * const productOrderInterest = await prisma.productOrderInterest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductOrderInterestFindUniqueArgs>(args: SelectSubset<T, ProductOrderInterestFindUniqueArgs<ExtArgs>>): Prisma__ProductOrderInterestClient<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductOrderInterest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductOrderInterestFindUniqueOrThrowArgs} args - Arguments to find a ProductOrderInterest
     * @example
     * // Get one ProductOrderInterest
     * const productOrderInterest = await prisma.productOrderInterest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductOrderInterestFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductOrderInterestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductOrderInterestClient<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductOrderInterest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOrderInterestFindFirstArgs} args - Arguments to find a ProductOrderInterest
     * @example
     * // Get one ProductOrderInterest
     * const productOrderInterest = await prisma.productOrderInterest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductOrderInterestFindFirstArgs>(args?: SelectSubset<T, ProductOrderInterestFindFirstArgs<ExtArgs>>): Prisma__ProductOrderInterestClient<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductOrderInterest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOrderInterestFindFirstOrThrowArgs} args - Arguments to find a ProductOrderInterest
     * @example
     * // Get one ProductOrderInterest
     * const productOrderInterest = await prisma.productOrderInterest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductOrderInterestFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductOrderInterestFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductOrderInterestClient<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductOrderInterests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOrderInterestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductOrderInterests
     * const productOrderInterests = await prisma.productOrderInterest.findMany()
     * 
     * // Get first 10 ProductOrderInterests
     * const productOrderInterests = await prisma.productOrderInterest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productOrderInterestWithIdOnly = await prisma.productOrderInterest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductOrderInterestFindManyArgs>(args?: SelectSubset<T, ProductOrderInterestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductOrderInterest.
     * @param {ProductOrderInterestCreateArgs} args - Arguments to create a ProductOrderInterest.
     * @example
     * // Create one ProductOrderInterest
     * const ProductOrderInterest = await prisma.productOrderInterest.create({
     *   data: {
     *     // ... data to create a ProductOrderInterest
     *   }
     * })
     * 
     */
    create<T extends ProductOrderInterestCreateArgs>(args: SelectSubset<T, ProductOrderInterestCreateArgs<ExtArgs>>): Prisma__ProductOrderInterestClient<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductOrderInterests.
     * @param {ProductOrderInterestCreateManyArgs} args - Arguments to create many ProductOrderInterests.
     * @example
     * // Create many ProductOrderInterests
     * const productOrderInterest = await prisma.productOrderInterest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductOrderInterestCreateManyArgs>(args?: SelectSubset<T, ProductOrderInterestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductOrderInterests and returns the data saved in the database.
     * @param {ProductOrderInterestCreateManyAndReturnArgs} args - Arguments to create many ProductOrderInterests.
     * @example
     * // Create many ProductOrderInterests
     * const productOrderInterest = await prisma.productOrderInterest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductOrderInterests and only return the `id`
     * const productOrderInterestWithIdOnly = await prisma.productOrderInterest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductOrderInterestCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductOrderInterestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductOrderInterest.
     * @param {ProductOrderInterestDeleteArgs} args - Arguments to delete one ProductOrderInterest.
     * @example
     * // Delete one ProductOrderInterest
     * const ProductOrderInterest = await prisma.productOrderInterest.delete({
     *   where: {
     *     // ... filter to delete one ProductOrderInterest
     *   }
     * })
     * 
     */
    delete<T extends ProductOrderInterestDeleteArgs>(args: SelectSubset<T, ProductOrderInterestDeleteArgs<ExtArgs>>): Prisma__ProductOrderInterestClient<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductOrderInterest.
     * @param {ProductOrderInterestUpdateArgs} args - Arguments to update one ProductOrderInterest.
     * @example
     * // Update one ProductOrderInterest
     * const productOrderInterest = await prisma.productOrderInterest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductOrderInterestUpdateArgs>(args: SelectSubset<T, ProductOrderInterestUpdateArgs<ExtArgs>>): Prisma__ProductOrderInterestClient<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductOrderInterests.
     * @param {ProductOrderInterestDeleteManyArgs} args - Arguments to filter ProductOrderInterests to delete.
     * @example
     * // Delete a few ProductOrderInterests
     * const { count } = await prisma.productOrderInterest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductOrderInterestDeleteManyArgs>(args?: SelectSubset<T, ProductOrderInterestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductOrderInterests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOrderInterestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductOrderInterests
     * const productOrderInterest = await prisma.productOrderInterest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductOrderInterestUpdateManyArgs>(args: SelectSubset<T, ProductOrderInterestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductOrderInterests and returns the data updated in the database.
     * @param {ProductOrderInterestUpdateManyAndReturnArgs} args - Arguments to update many ProductOrderInterests.
     * @example
     * // Update many ProductOrderInterests
     * const productOrderInterest = await prisma.productOrderInterest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductOrderInterests and only return the `id`
     * const productOrderInterestWithIdOnly = await prisma.productOrderInterest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductOrderInterestUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductOrderInterestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductOrderInterest.
     * @param {ProductOrderInterestUpsertArgs} args - Arguments to update or create a ProductOrderInterest.
     * @example
     * // Update or create a ProductOrderInterest
     * const productOrderInterest = await prisma.productOrderInterest.upsert({
     *   create: {
     *     // ... data to create a ProductOrderInterest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductOrderInterest we want to update
     *   }
     * })
     */
    upsert<T extends ProductOrderInterestUpsertArgs>(args: SelectSubset<T, ProductOrderInterestUpsertArgs<ExtArgs>>): Prisma__ProductOrderInterestClient<$Result.GetResult<Prisma.$ProductOrderInterestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductOrderInterests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOrderInterestCountArgs} args - Arguments to filter ProductOrderInterests to count.
     * @example
     * // Count the number of ProductOrderInterests
     * const count = await prisma.productOrderInterest.count({
     *   where: {
     *     // ... the filter for the ProductOrderInterests we want to count
     *   }
     * })
    **/
    count<T extends ProductOrderInterestCountArgs>(
      args?: Subset<T, ProductOrderInterestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductOrderInterestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductOrderInterest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOrderInterestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductOrderInterestAggregateArgs>(args: Subset<T, ProductOrderInterestAggregateArgs>): Prisma.PrismaPromise<GetProductOrderInterestAggregateType<T>>

    /**
     * Group by ProductOrderInterest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOrderInterestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductOrderInterestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductOrderInterestGroupByArgs['orderBy'] }
        : { orderBy?: ProductOrderInterestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductOrderInterestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductOrderInterestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductOrderInterest model
   */
  readonly fields: ProductOrderInterestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductOrderInterest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductOrderInterestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductOrderInterest model
   */
  interface ProductOrderInterestFieldRefs {
    readonly id: FieldRef<"ProductOrderInterest", 'String'>
    readonly productId: FieldRef<"ProductOrderInterest", 'String'>
    readonly userId: FieldRef<"ProductOrderInterest", 'String'>
    readonly quantity: FieldRef<"ProductOrderInterest", 'Int'>
    readonly originalPrice: FieldRef<"ProductOrderInterest", 'Decimal'>
    readonly discountPrice: FieldRef<"ProductOrderInterest", 'Decimal'>
    readonly currencyCode: FieldRef<"ProductOrderInterest", 'String'>
    readonly totalAmount: FieldRef<"ProductOrderInterest", 'Decimal'>
    readonly status: FieldRef<"ProductOrderInterest", 'OrderInterestStatus'>
    readonly notes: FieldRef<"ProductOrderInterest", 'String'>
    readonly preferredDeliveryDate: FieldRef<"ProductOrderInterest", 'DateTime'>
    readonly deliveryAddress: FieldRef<"ProductOrderInterest", 'String'>
    readonly contactPhone: FieldRef<"ProductOrderInterest", 'String'>
    readonly paymentMethod: FieldRef<"ProductOrderInterest", 'String'>
    readonly paymentStatus: FieldRef<"ProductOrderInterest", 'PaymentStatus'>
    readonly createdAt: FieldRef<"ProductOrderInterest", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductOrderInterest", 'DateTime'>
    readonly expiresAt: FieldRef<"ProductOrderInterest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductOrderInterest findUnique
   */
  export type ProductOrderInterestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    /**
     * Filter, which ProductOrderInterest to fetch.
     */
    where: ProductOrderInterestWhereUniqueInput
  }

  /**
   * ProductOrderInterest findUniqueOrThrow
   */
  export type ProductOrderInterestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    /**
     * Filter, which ProductOrderInterest to fetch.
     */
    where: ProductOrderInterestWhereUniqueInput
  }

  /**
   * ProductOrderInterest findFirst
   */
  export type ProductOrderInterestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    /**
     * Filter, which ProductOrderInterest to fetch.
     */
    where?: ProductOrderInterestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOrderInterests to fetch.
     */
    orderBy?: ProductOrderInterestOrderByWithRelationInput | ProductOrderInterestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductOrderInterests.
     */
    cursor?: ProductOrderInterestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOrderInterests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOrderInterests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductOrderInterests.
     */
    distinct?: ProductOrderInterestScalarFieldEnum | ProductOrderInterestScalarFieldEnum[]
  }

  /**
   * ProductOrderInterest findFirstOrThrow
   */
  export type ProductOrderInterestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    /**
     * Filter, which ProductOrderInterest to fetch.
     */
    where?: ProductOrderInterestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOrderInterests to fetch.
     */
    orderBy?: ProductOrderInterestOrderByWithRelationInput | ProductOrderInterestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductOrderInterests.
     */
    cursor?: ProductOrderInterestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOrderInterests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOrderInterests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductOrderInterests.
     */
    distinct?: ProductOrderInterestScalarFieldEnum | ProductOrderInterestScalarFieldEnum[]
  }

  /**
   * ProductOrderInterest findMany
   */
  export type ProductOrderInterestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    /**
     * Filter, which ProductOrderInterests to fetch.
     */
    where?: ProductOrderInterestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOrderInterests to fetch.
     */
    orderBy?: ProductOrderInterestOrderByWithRelationInput | ProductOrderInterestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductOrderInterests.
     */
    cursor?: ProductOrderInterestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOrderInterests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOrderInterests.
     */
    skip?: number
    distinct?: ProductOrderInterestScalarFieldEnum | ProductOrderInterestScalarFieldEnum[]
  }

  /**
   * ProductOrderInterest create
   */
  export type ProductOrderInterestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductOrderInterest.
     */
    data: XOR<ProductOrderInterestCreateInput, ProductOrderInterestUncheckedCreateInput>
  }

  /**
   * ProductOrderInterest createMany
   */
  export type ProductOrderInterestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductOrderInterests.
     */
    data: ProductOrderInterestCreateManyInput | ProductOrderInterestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductOrderInterest createManyAndReturn
   */
  export type ProductOrderInterestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * The data used to create many ProductOrderInterests.
     */
    data: ProductOrderInterestCreateManyInput | ProductOrderInterestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductOrderInterest update
   */
  export type ProductOrderInterestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductOrderInterest.
     */
    data: XOR<ProductOrderInterestUpdateInput, ProductOrderInterestUncheckedUpdateInput>
    /**
     * Choose, which ProductOrderInterest to update.
     */
    where: ProductOrderInterestWhereUniqueInput
  }

  /**
   * ProductOrderInterest updateMany
   */
  export type ProductOrderInterestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductOrderInterests.
     */
    data: XOR<ProductOrderInterestUpdateManyMutationInput, ProductOrderInterestUncheckedUpdateManyInput>
    /**
     * Filter which ProductOrderInterests to update
     */
    where?: ProductOrderInterestWhereInput
    /**
     * Limit how many ProductOrderInterests to update.
     */
    limit?: number
  }

  /**
   * ProductOrderInterest updateManyAndReturn
   */
  export type ProductOrderInterestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * The data used to update ProductOrderInterests.
     */
    data: XOR<ProductOrderInterestUpdateManyMutationInput, ProductOrderInterestUncheckedUpdateManyInput>
    /**
     * Filter which ProductOrderInterests to update
     */
    where?: ProductOrderInterestWhereInput
    /**
     * Limit how many ProductOrderInterests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductOrderInterest upsert
   */
  export type ProductOrderInterestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductOrderInterest to update in case it exists.
     */
    where: ProductOrderInterestWhereUniqueInput
    /**
     * In case the ProductOrderInterest found by the `where` argument doesn't exist, create a new ProductOrderInterest with this data.
     */
    create: XOR<ProductOrderInterestCreateInput, ProductOrderInterestUncheckedCreateInput>
    /**
     * In case the ProductOrderInterest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductOrderInterestUpdateInput, ProductOrderInterestUncheckedUpdateInput>
  }

  /**
   * ProductOrderInterest delete
   */
  export type ProductOrderInterestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
    /**
     * Filter which ProductOrderInterest to delete.
     */
    where: ProductOrderInterestWhereUniqueInput
  }

  /**
   * ProductOrderInterest deleteMany
   */
  export type ProductOrderInterestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductOrderInterests to delete
     */
    where?: ProductOrderInterestWhereInput
    /**
     * Limit how many ProductOrderInterests to delete.
     */
    limit?: number
  }

  /**
   * ProductOrderInterest without action
   */
  export type ProductOrderInterestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOrderInterest
     */
    select?: ProductOrderInterestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOrderInterest
     */
    omit?: ProductOrderInterestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOrderInterestInclude<ExtArgs> | null
  }


  /**
   * Model OrderItem
   */

  export type AggregateOrderItem = {
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  export type OrderItemAvgAggregateOutputType = {
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
  }

  export type OrderItemSumAggregateOutputType = {
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
  }

  export type OrderItemMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    status: $Enums.OrderItemStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderItemMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    status: $Enums.OrderItemStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderItemCountAggregateOutputType = {
    id: number
    orderId: number
    productId: number
    productSnapshot: number
    quantity: number
    unitPrice: number
    totalPrice: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderItemAvgAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemSumAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemMinAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderItemMaxAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderItemCountAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    productSnapshot?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItem to aggregate.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItems
    **/
    _count?: true | OrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemMaxAggregateInputType
  }

  export type GetOrderItemAggregateType<T extends OrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItem[P]>
      : GetScalarType<T[P], AggregateOrderItem[P]>
  }




  export type OrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithAggregationInput | OrderItemOrderByWithAggregationInput[]
    by: OrderItemScalarFieldEnum[] | OrderItemScalarFieldEnum
    having?: OrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemCountAggregateInputType | true
    _avg?: OrderItemAvgAggregateInputType
    _sum?: OrderItemSumAggregateInputType
    _min?: OrderItemMinAggregateInputType
    _max?: OrderItemMaxAggregateInputType
  }

  export type OrderItemGroupByOutputType = {
    id: string
    orderId: string
    productId: string
    productSnapshot: JsonValue
    quantity: number
    unitPrice: Decimal
    totalPrice: Decimal
    status: $Enums.OrderItemStatus
    createdAt: Date
    updatedAt: Date
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  type GetOrderItemGroupByPayload<T extends OrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    productSnapshot?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | ordersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    productSnapshot?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | ordersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    productSnapshot?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | ordersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectScalar = {
    id?: boolean
    orderId?: boolean
    productId?: boolean
    productSnapshot?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "productId" | "productSnapshot" | "quantity" | "unitPrice" | "totalPrice" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["orderItem"]>
  export type OrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | ordersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type OrderItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | ordersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type OrderItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | ordersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $OrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItem"
    objects: {
      order: Prisma.$ordersPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      productId: string
      productSnapshot: Prisma.JsonValue
      quantity: number
      unitPrice: Prisma.Decimal
      totalPrice: Prisma.Decimal
      status: $Enums.OrderItemStatus
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["orderItem"]>
    composites: {}
  }

  type OrderItemGetPayload<S extends boolean | null | undefined | OrderItemDefaultArgs> = $Result.GetResult<Prisma.$OrderItemPayload, S>

  type OrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderItemCountAggregateInputType | true
    }

  export interface OrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItem'], meta: { name: 'OrderItem' } }
    /**
     * Find zero or one OrderItem that matches the filter.
     * @param {OrderItemFindUniqueArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemFindUniqueArgs>(args: SelectSubset<T, OrderItemFindUniqueArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderItemFindUniqueOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemFindFirstArgs>(args?: SelectSubset<T, OrderItemFindFirstArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItems
     * const orderItems = await prisma.orderItem.findMany()
     * 
     * // Get first 10 OrderItems
     * const orderItems = await prisma.orderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemFindManyArgs>(args?: SelectSubset<T, OrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderItem.
     * @param {OrderItemCreateArgs} args - Arguments to create a OrderItem.
     * @example
     * // Create one OrderItem
     * const OrderItem = await prisma.orderItem.create({
     *   data: {
     *     // ... data to create a OrderItem
     *   }
     * })
     * 
     */
    create<T extends OrderItemCreateArgs>(args: SelectSubset<T, OrderItemCreateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderItems.
     * @param {OrderItemCreateManyArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemCreateManyArgs>(args?: SelectSubset<T, OrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderItems and returns the data saved in the database.
     * @param {OrderItemCreateManyAndReturnArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderItemCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderItem.
     * @param {OrderItemDeleteArgs} args - Arguments to delete one OrderItem.
     * @example
     * // Delete one OrderItem
     * const OrderItem = await prisma.orderItem.delete({
     *   where: {
     *     // ... filter to delete one OrderItem
     *   }
     * })
     * 
     */
    delete<T extends OrderItemDeleteArgs>(args: SelectSubset<T, OrderItemDeleteArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderItem.
     * @param {OrderItemUpdateArgs} args - Arguments to update one OrderItem.
     * @example
     * // Update one OrderItem
     * const orderItem = await prisma.orderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemUpdateArgs>(args: SelectSubset<T, OrderItemUpdateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderItems.
     * @param {OrderItemDeleteManyArgs} args - Arguments to filter OrderItems to delete.
     * @example
     * // Delete a few OrderItems
     * const { count } = await prisma.orderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemDeleteManyArgs>(args?: SelectSubset<T, OrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemUpdateManyArgs>(args: SelectSubset<T, OrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems and returns the data updated in the database.
     * @param {OrderItemUpdateManyAndReturnArgs} args - Arguments to update many OrderItems.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderItemUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderItem.
     * @param {OrderItemUpsertArgs} args - Arguments to update or create a OrderItem.
     * @example
     * // Update or create a OrderItem
     * const orderItem = await prisma.orderItem.upsert({
     *   create: {
     *     // ... data to create a OrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItem we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemUpsertArgs>(args: SelectSubset<T, OrderItemUpsertArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemCountArgs} args - Arguments to filter OrderItems to count.
     * @example
     * // Count the number of OrderItems
     * const count = await prisma.orderItem.count({
     *   where: {
     *     // ... the filter for the OrderItems we want to count
     *   }
     * })
    **/
    count<T extends OrderItemCountArgs>(
      args?: Subset<T, OrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemAggregateArgs>(args: Subset<T, OrderItemAggregateArgs>): Prisma.PrismaPromise<GetOrderItemAggregateType<T>>

    /**
     * Group by OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItem model
   */
  readonly fields: OrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends ordersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ordersDefaultArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItem model
   */
  interface OrderItemFieldRefs {
    readonly id: FieldRef<"OrderItem", 'String'>
    readonly orderId: FieldRef<"OrderItem", 'String'>
    readonly productId: FieldRef<"OrderItem", 'String'>
    readonly productSnapshot: FieldRef<"OrderItem", 'Json'>
    readonly quantity: FieldRef<"OrderItem", 'Int'>
    readonly unitPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly totalPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly status: FieldRef<"OrderItem", 'OrderItemStatus'>
    readonly createdAt: FieldRef<"OrderItem", 'DateTime'>
    readonly updatedAt: FieldRef<"OrderItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderItem findUnique
   */
  export type OrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findUniqueOrThrow
   */
  export type OrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findFirst
   */
  export type OrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findFirstOrThrow
   */
  export type OrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findMany
   */
  export type OrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItems to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem create
   */
  export type OrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItem.
     */
    data: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
  }

  /**
   * OrderItem createMany
   */
  export type OrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItem createManyAndReturn
   */
  export type OrderItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem update
   */
  export type OrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItem.
     */
    data: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
    /**
     * Choose, which OrderItem to update.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem updateMany
   */
  export type OrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
  }

  /**
   * OrderItem updateManyAndReturn
   */
  export type OrderItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem upsert
   */
  export type OrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItem to update in case it exists.
     */
    where: OrderItemWhereUniqueInput
    /**
     * In case the OrderItem found by the `where` argument doesn't exist, create a new OrderItem with this data.
     */
    create: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
    /**
     * In case the OrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
  }

  /**
   * OrderItem delete
   */
  export type OrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter which OrderItem to delete.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem deleteMany
   */
  export type OrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItems to delete
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to delete.
     */
    limit?: number
  }

  /**
   * OrderItem without action
   */
  export type OrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
  }


  /**
   * Model ExternalTransaction
   */

  export type AggregateExternalTransaction = {
    _count: ExternalTransactionCountAggregateOutputType | null
    _avg: ExternalTransactionAvgAggregateOutputType | null
    _sum: ExternalTransactionSumAggregateOutputType | null
    _min: ExternalTransactionMinAggregateOutputType | null
    _max: ExternalTransactionMaxAggregateOutputType | null
  }

  export type ExternalTransactionAvgAggregateOutputType = {
    amount: Decimal | null
    gatewayChargeFees: Decimal | null
    processedAmount: Decimal | null
  }

  export type ExternalTransactionSumAggregateOutputType = {
    amount: Decimal | null
    gatewayChargeFees: Decimal | null
    processedAmount: Decimal | null
  }

  export type ExternalTransactionMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    customerId: string | null
    sellerId: string | null
    paymentMethodId: string | null
    gatewayProvider: string | null
    gatewayTransactionId: string | null
    paymentReference: string | null
    amount: Decimal | null
    currencyCode: string | null
    gatewayChargeFees: Decimal | null
    paidThroughGateway: boolean | null
    status: $Enums.TransactionStatus | null
    failureReason: string | null
    processedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    appTransactionId: string | null
    processedAmount: Decimal | null
    transactionType: $Enums.TransactionType | null
    appService: $Enums.AppService | null
    rideRequestId: string | null
  }

  export type ExternalTransactionMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    customerId: string | null
    sellerId: string | null
    paymentMethodId: string | null
    gatewayProvider: string | null
    gatewayTransactionId: string | null
    paymentReference: string | null
    amount: Decimal | null
    currencyCode: string | null
    gatewayChargeFees: Decimal | null
    paidThroughGateway: boolean | null
    status: $Enums.TransactionStatus | null
    failureReason: string | null
    processedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    appTransactionId: string | null
    processedAmount: Decimal | null
    transactionType: $Enums.TransactionType | null
    appService: $Enums.AppService | null
    rideRequestId: string | null
  }

  export type ExternalTransactionCountAggregateOutputType = {
    id: number
    orderId: number
    customerId: number
    sellerId: number
    paymentMethodId: number
    gatewayProvider: number
    gatewayTransactionId: number
    paymentReference: number
    amount: number
    currencyCode: number
    gatewayChargeFees: number
    paidThroughGateway: number
    gatewayResponse: number
    gatewayRequest: number
    status: number
    failureReason: number
    processedAt: number
    createdAt: number
    updatedAt: number
    appTransactionId: number
    processedAmount: number
    transactionType: number
    appService: number
    rideRequestId: number
    _all: number
  }


  export type ExternalTransactionAvgAggregateInputType = {
    amount?: true
    gatewayChargeFees?: true
    processedAmount?: true
  }

  export type ExternalTransactionSumAggregateInputType = {
    amount?: true
    gatewayChargeFees?: true
    processedAmount?: true
  }

  export type ExternalTransactionMinAggregateInputType = {
    id?: true
    orderId?: true
    customerId?: true
    sellerId?: true
    paymentMethodId?: true
    gatewayProvider?: true
    gatewayTransactionId?: true
    paymentReference?: true
    amount?: true
    currencyCode?: true
    gatewayChargeFees?: true
    paidThroughGateway?: true
    status?: true
    failureReason?: true
    processedAt?: true
    createdAt?: true
    updatedAt?: true
    appTransactionId?: true
    processedAmount?: true
    transactionType?: true
    appService?: true
    rideRequestId?: true
  }

  export type ExternalTransactionMaxAggregateInputType = {
    id?: true
    orderId?: true
    customerId?: true
    sellerId?: true
    paymentMethodId?: true
    gatewayProvider?: true
    gatewayTransactionId?: true
    paymentReference?: true
    amount?: true
    currencyCode?: true
    gatewayChargeFees?: true
    paidThroughGateway?: true
    status?: true
    failureReason?: true
    processedAt?: true
    createdAt?: true
    updatedAt?: true
    appTransactionId?: true
    processedAmount?: true
    transactionType?: true
    appService?: true
    rideRequestId?: true
  }

  export type ExternalTransactionCountAggregateInputType = {
    id?: true
    orderId?: true
    customerId?: true
    sellerId?: true
    paymentMethodId?: true
    gatewayProvider?: true
    gatewayTransactionId?: true
    paymentReference?: true
    amount?: true
    currencyCode?: true
    gatewayChargeFees?: true
    paidThroughGateway?: true
    gatewayResponse?: true
    gatewayRequest?: true
    status?: true
    failureReason?: true
    processedAt?: true
    createdAt?: true
    updatedAt?: true
    appTransactionId?: true
    processedAmount?: true
    transactionType?: true
    appService?: true
    rideRequestId?: true
    _all?: true
  }

  export type ExternalTransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExternalTransaction to aggregate.
     */
    where?: ExternalTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalTransactions to fetch.
     */
    orderBy?: ExternalTransactionOrderByWithRelationInput | ExternalTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ExternalTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ExternalTransactions
    **/
    _count?: true | ExternalTransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ExternalTransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ExternalTransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExternalTransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExternalTransactionMaxAggregateInputType
  }

  export type GetExternalTransactionAggregateType<T extends ExternalTransactionAggregateArgs> = {
        [P in keyof T & keyof AggregateExternalTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExternalTransaction[P]>
      : GetScalarType<T[P], AggregateExternalTransaction[P]>
  }




  export type ExternalTransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExternalTransactionWhereInput
    orderBy?: ExternalTransactionOrderByWithAggregationInput | ExternalTransactionOrderByWithAggregationInput[]
    by: ExternalTransactionScalarFieldEnum[] | ExternalTransactionScalarFieldEnum
    having?: ExternalTransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExternalTransactionCountAggregateInputType | true
    _avg?: ExternalTransactionAvgAggregateInputType
    _sum?: ExternalTransactionSumAggregateInputType
    _min?: ExternalTransactionMinAggregateInputType
    _max?: ExternalTransactionMaxAggregateInputType
  }

  export type ExternalTransactionGroupByOutputType = {
    id: string
    orderId: string | null
    customerId: string
    sellerId: string
    paymentMethodId: string | null
    gatewayProvider: string
    gatewayTransactionId: string | null
    paymentReference: string | null
    amount: Decimal
    currencyCode: string
    gatewayChargeFees: Decimal | null
    paidThroughGateway: boolean
    gatewayResponse: JsonValue | null
    gatewayRequest: JsonValue | null
    status: $Enums.TransactionStatus
    failureReason: string | null
    processedAt: Date | null
    createdAt: Date
    updatedAt: Date
    appTransactionId: string
    processedAmount: Decimal | null
    transactionType: $Enums.TransactionType
    appService: $Enums.AppService
    rideRequestId: string | null
    _count: ExternalTransactionCountAggregateOutputType | null
    _avg: ExternalTransactionAvgAggregateOutputType | null
    _sum: ExternalTransactionSumAggregateOutputType | null
    _min: ExternalTransactionMinAggregateOutputType | null
    _max: ExternalTransactionMaxAggregateOutputType | null
  }

  type GetExternalTransactionGroupByPayload<T extends ExternalTransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExternalTransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExternalTransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExternalTransactionGroupByOutputType[P]>
            : GetScalarType<T[P], ExternalTransactionGroupByOutputType[P]>
        }
      >
    >


  export type ExternalTransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    customerId?: boolean
    sellerId?: boolean
    paymentMethodId?: boolean
    gatewayProvider?: boolean
    gatewayTransactionId?: boolean
    paymentReference?: boolean
    amount?: boolean
    currencyCode?: boolean
    gatewayChargeFees?: boolean
    paidThroughGateway?: boolean
    gatewayResponse?: boolean
    gatewayRequest?: boolean
    status?: boolean
    failureReason?: boolean
    processedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    appTransactionId?: boolean
    processedAmount?: boolean
    transactionType?: boolean
    appService?: boolean
    rideRequestId?: boolean
    customer?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | ExternalTransaction$orderArgs<ExtArgs>
    paymentMethod?: boolean | ExternalTransaction$paymentMethodArgs<ExtArgs>
    rideRequest?: boolean | ExternalTransaction$rideRequestArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["externalTransaction"]>

  export type ExternalTransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    customerId?: boolean
    sellerId?: boolean
    paymentMethodId?: boolean
    gatewayProvider?: boolean
    gatewayTransactionId?: boolean
    paymentReference?: boolean
    amount?: boolean
    currencyCode?: boolean
    gatewayChargeFees?: boolean
    paidThroughGateway?: boolean
    gatewayResponse?: boolean
    gatewayRequest?: boolean
    status?: boolean
    failureReason?: boolean
    processedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    appTransactionId?: boolean
    processedAmount?: boolean
    transactionType?: boolean
    appService?: boolean
    rideRequestId?: boolean
    customer?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | ExternalTransaction$orderArgs<ExtArgs>
    paymentMethod?: boolean | ExternalTransaction$paymentMethodArgs<ExtArgs>
    rideRequest?: boolean | ExternalTransaction$rideRequestArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["externalTransaction"]>

  export type ExternalTransactionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    customerId?: boolean
    sellerId?: boolean
    paymentMethodId?: boolean
    gatewayProvider?: boolean
    gatewayTransactionId?: boolean
    paymentReference?: boolean
    amount?: boolean
    currencyCode?: boolean
    gatewayChargeFees?: boolean
    paidThroughGateway?: boolean
    gatewayResponse?: boolean
    gatewayRequest?: boolean
    status?: boolean
    failureReason?: boolean
    processedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    appTransactionId?: boolean
    processedAmount?: boolean
    transactionType?: boolean
    appService?: boolean
    rideRequestId?: boolean
    customer?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | ExternalTransaction$orderArgs<ExtArgs>
    paymentMethod?: boolean | ExternalTransaction$paymentMethodArgs<ExtArgs>
    rideRequest?: boolean | ExternalTransaction$rideRequestArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["externalTransaction"]>

  export type ExternalTransactionSelectScalar = {
    id?: boolean
    orderId?: boolean
    customerId?: boolean
    sellerId?: boolean
    paymentMethodId?: boolean
    gatewayProvider?: boolean
    gatewayTransactionId?: boolean
    paymentReference?: boolean
    amount?: boolean
    currencyCode?: boolean
    gatewayChargeFees?: boolean
    paidThroughGateway?: boolean
    gatewayResponse?: boolean
    gatewayRequest?: boolean
    status?: boolean
    failureReason?: boolean
    processedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    appTransactionId?: boolean
    processedAmount?: boolean
    transactionType?: boolean
    appService?: boolean
    rideRequestId?: boolean
  }

  export type ExternalTransactionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "customerId" | "sellerId" | "paymentMethodId" | "gatewayProvider" | "gatewayTransactionId" | "paymentReference" | "amount" | "currencyCode" | "gatewayChargeFees" | "paidThroughGateway" | "gatewayResponse" | "gatewayRequest" | "status" | "failureReason" | "processedAt" | "createdAt" | "updatedAt" | "appTransactionId" | "processedAmount" | "transactionType" | "appService" | "rideRequestId", ExtArgs["result"]["externalTransaction"]>
  export type ExternalTransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | ExternalTransaction$orderArgs<ExtArgs>
    paymentMethod?: boolean | ExternalTransaction$paymentMethodArgs<ExtArgs>
    rideRequest?: boolean | ExternalTransaction$rideRequestArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ExternalTransactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | ExternalTransaction$orderArgs<ExtArgs>
    paymentMethod?: boolean | ExternalTransaction$paymentMethodArgs<ExtArgs>
    rideRequest?: boolean | ExternalTransaction$rideRequestArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ExternalTransactionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | ExternalTransaction$orderArgs<ExtArgs>
    paymentMethod?: boolean | ExternalTransaction$paymentMethodArgs<ExtArgs>
    rideRequest?: boolean | ExternalTransaction$rideRequestArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ExternalTransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ExternalTransaction"
    objects: {
      customer: Prisma.$UserPayload<ExtArgs>
      order: Prisma.$ordersPayload<ExtArgs> | null
      paymentMethod: Prisma.$PaymentMethodPayload<ExtArgs> | null
      rideRequest: Prisma.$RideRequestPayload<ExtArgs> | null
      seller: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string | null
      customerId: string
      sellerId: string
      paymentMethodId: string | null
      gatewayProvider: string
      gatewayTransactionId: string | null
      paymentReference: string | null
      amount: Prisma.Decimal
      currencyCode: string
      gatewayChargeFees: Prisma.Decimal | null
      paidThroughGateway: boolean
      gatewayResponse: Prisma.JsonValue | null
      gatewayRequest: Prisma.JsonValue | null
      status: $Enums.TransactionStatus
      failureReason: string | null
      processedAt: Date | null
      createdAt: Date
      updatedAt: Date
      appTransactionId: string
      processedAmount: Prisma.Decimal | null
      transactionType: $Enums.TransactionType
      appService: $Enums.AppService
      rideRequestId: string | null
    }, ExtArgs["result"]["externalTransaction"]>
    composites: {}
  }

  type ExternalTransactionGetPayload<S extends boolean | null | undefined | ExternalTransactionDefaultArgs> = $Result.GetResult<Prisma.$ExternalTransactionPayload, S>

  type ExternalTransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ExternalTransactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ExternalTransactionCountAggregateInputType | true
    }

  export interface ExternalTransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ExternalTransaction'], meta: { name: 'ExternalTransaction' } }
    /**
     * Find zero or one ExternalTransaction that matches the filter.
     * @param {ExternalTransactionFindUniqueArgs} args - Arguments to find a ExternalTransaction
     * @example
     * // Get one ExternalTransaction
     * const externalTransaction = await prisma.externalTransaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ExternalTransactionFindUniqueArgs>(args: SelectSubset<T, ExternalTransactionFindUniqueArgs<ExtArgs>>): Prisma__ExternalTransactionClient<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ExternalTransaction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ExternalTransactionFindUniqueOrThrowArgs} args - Arguments to find a ExternalTransaction
     * @example
     * // Get one ExternalTransaction
     * const externalTransaction = await prisma.externalTransaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ExternalTransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, ExternalTransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ExternalTransactionClient<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ExternalTransaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalTransactionFindFirstArgs} args - Arguments to find a ExternalTransaction
     * @example
     * // Get one ExternalTransaction
     * const externalTransaction = await prisma.externalTransaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ExternalTransactionFindFirstArgs>(args?: SelectSubset<T, ExternalTransactionFindFirstArgs<ExtArgs>>): Prisma__ExternalTransactionClient<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ExternalTransaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalTransactionFindFirstOrThrowArgs} args - Arguments to find a ExternalTransaction
     * @example
     * // Get one ExternalTransaction
     * const externalTransaction = await prisma.externalTransaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ExternalTransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, ExternalTransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ExternalTransactionClient<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ExternalTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalTransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ExternalTransactions
     * const externalTransactions = await prisma.externalTransaction.findMany()
     * 
     * // Get first 10 ExternalTransactions
     * const externalTransactions = await prisma.externalTransaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const externalTransactionWithIdOnly = await prisma.externalTransaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ExternalTransactionFindManyArgs>(args?: SelectSubset<T, ExternalTransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ExternalTransaction.
     * @param {ExternalTransactionCreateArgs} args - Arguments to create a ExternalTransaction.
     * @example
     * // Create one ExternalTransaction
     * const ExternalTransaction = await prisma.externalTransaction.create({
     *   data: {
     *     // ... data to create a ExternalTransaction
     *   }
     * })
     * 
     */
    create<T extends ExternalTransactionCreateArgs>(args: SelectSubset<T, ExternalTransactionCreateArgs<ExtArgs>>): Prisma__ExternalTransactionClient<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ExternalTransactions.
     * @param {ExternalTransactionCreateManyArgs} args - Arguments to create many ExternalTransactions.
     * @example
     * // Create many ExternalTransactions
     * const externalTransaction = await prisma.externalTransaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ExternalTransactionCreateManyArgs>(args?: SelectSubset<T, ExternalTransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ExternalTransactions and returns the data saved in the database.
     * @param {ExternalTransactionCreateManyAndReturnArgs} args - Arguments to create many ExternalTransactions.
     * @example
     * // Create many ExternalTransactions
     * const externalTransaction = await prisma.externalTransaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ExternalTransactions and only return the `id`
     * const externalTransactionWithIdOnly = await prisma.externalTransaction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ExternalTransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, ExternalTransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ExternalTransaction.
     * @param {ExternalTransactionDeleteArgs} args - Arguments to delete one ExternalTransaction.
     * @example
     * // Delete one ExternalTransaction
     * const ExternalTransaction = await prisma.externalTransaction.delete({
     *   where: {
     *     // ... filter to delete one ExternalTransaction
     *   }
     * })
     * 
     */
    delete<T extends ExternalTransactionDeleteArgs>(args: SelectSubset<T, ExternalTransactionDeleteArgs<ExtArgs>>): Prisma__ExternalTransactionClient<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ExternalTransaction.
     * @param {ExternalTransactionUpdateArgs} args - Arguments to update one ExternalTransaction.
     * @example
     * // Update one ExternalTransaction
     * const externalTransaction = await prisma.externalTransaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ExternalTransactionUpdateArgs>(args: SelectSubset<T, ExternalTransactionUpdateArgs<ExtArgs>>): Prisma__ExternalTransactionClient<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ExternalTransactions.
     * @param {ExternalTransactionDeleteManyArgs} args - Arguments to filter ExternalTransactions to delete.
     * @example
     * // Delete a few ExternalTransactions
     * const { count } = await prisma.externalTransaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ExternalTransactionDeleteManyArgs>(args?: SelectSubset<T, ExternalTransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ExternalTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalTransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ExternalTransactions
     * const externalTransaction = await prisma.externalTransaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ExternalTransactionUpdateManyArgs>(args: SelectSubset<T, ExternalTransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ExternalTransactions and returns the data updated in the database.
     * @param {ExternalTransactionUpdateManyAndReturnArgs} args - Arguments to update many ExternalTransactions.
     * @example
     * // Update many ExternalTransactions
     * const externalTransaction = await prisma.externalTransaction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ExternalTransactions and only return the `id`
     * const externalTransactionWithIdOnly = await prisma.externalTransaction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ExternalTransactionUpdateManyAndReturnArgs>(args: SelectSubset<T, ExternalTransactionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ExternalTransaction.
     * @param {ExternalTransactionUpsertArgs} args - Arguments to update or create a ExternalTransaction.
     * @example
     * // Update or create a ExternalTransaction
     * const externalTransaction = await prisma.externalTransaction.upsert({
     *   create: {
     *     // ... data to create a ExternalTransaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ExternalTransaction we want to update
     *   }
     * })
     */
    upsert<T extends ExternalTransactionUpsertArgs>(args: SelectSubset<T, ExternalTransactionUpsertArgs<ExtArgs>>): Prisma__ExternalTransactionClient<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ExternalTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalTransactionCountArgs} args - Arguments to filter ExternalTransactions to count.
     * @example
     * // Count the number of ExternalTransactions
     * const count = await prisma.externalTransaction.count({
     *   where: {
     *     // ... the filter for the ExternalTransactions we want to count
     *   }
     * })
    **/
    count<T extends ExternalTransactionCountArgs>(
      args?: Subset<T, ExternalTransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExternalTransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ExternalTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalTransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExternalTransactionAggregateArgs>(args: Subset<T, ExternalTransactionAggregateArgs>): Prisma.PrismaPromise<GetExternalTransactionAggregateType<T>>

    /**
     * Group by ExternalTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalTransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ExternalTransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ExternalTransactionGroupByArgs['orderBy'] }
        : { orderBy?: ExternalTransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ExternalTransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExternalTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ExternalTransaction model
   */
  readonly fields: ExternalTransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ExternalTransaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ExternalTransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    order<T extends ExternalTransaction$orderArgs<ExtArgs> = {}>(args?: Subset<T, ExternalTransaction$orderArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    paymentMethod<T extends ExternalTransaction$paymentMethodArgs<ExtArgs> = {}>(args?: Subset<T, ExternalTransaction$paymentMethodArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    rideRequest<T extends ExternalTransaction$rideRequestArgs<ExtArgs> = {}>(args?: Subset<T, ExternalTransaction$rideRequestArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    seller<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ExternalTransaction model
   */
  interface ExternalTransactionFieldRefs {
    readonly id: FieldRef<"ExternalTransaction", 'String'>
    readonly orderId: FieldRef<"ExternalTransaction", 'String'>
    readonly customerId: FieldRef<"ExternalTransaction", 'String'>
    readonly sellerId: FieldRef<"ExternalTransaction", 'String'>
    readonly paymentMethodId: FieldRef<"ExternalTransaction", 'String'>
    readonly gatewayProvider: FieldRef<"ExternalTransaction", 'String'>
    readonly gatewayTransactionId: FieldRef<"ExternalTransaction", 'String'>
    readonly paymentReference: FieldRef<"ExternalTransaction", 'String'>
    readonly amount: FieldRef<"ExternalTransaction", 'Decimal'>
    readonly currencyCode: FieldRef<"ExternalTransaction", 'String'>
    readonly gatewayChargeFees: FieldRef<"ExternalTransaction", 'Decimal'>
    readonly paidThroughGateway: FieldRef<"ExternalTransaction", 'Boolean'>
    readonly gatewayResponse: FieldRef<"ExternalTransaction", 'Json'>
    readonly gatewayRequest: FieldRef<"ExternalTransaction", 'Json'>
    readonly status: FieldRef<"ExternalTransaction", 'TransactionStatus'>
    readonly failureReason: FieldRef<"ExternalTransaction", 'String'>
    readonly processedAt: FieldRef<"ExternalTransaction", 'DateTime'>
    readonly createdAt: FieldRef<"ExternalTransaction", 'DateTime'>
    readonly updatedAt: FieldRef<"ExternalTransaction", 'DateTime'>
    readonly appTransactionId: FieldRef<"ExternalTransaction", 'String'>
    readonly processedAmount: FieldRef<"ExternalTransaction", 'Decimal'>
    readonly transactionType: FieldRef<"ExternalTransaction", 'TransactionType'>
    readonly appService: FieldRef<"ExternalTransaction", 'AppService'>
    readonly rideRequestId: FieldRef<"ExternalTransaction", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ExternalTransaction findUnique
   */
  export type ExternalTransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ExternalTransaction to fetch.
     */
    where: ExternalTransactionWhereUniqueInput
  }

  /**
   * ExternalTransaction findUniqueOrThrow
   */
  export type ExternalTransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ExternalTransaction to fetch.
     */
    where: ExternalTransactionWhereUniqueInput
  }

  /**
   * ExternalTransaction findFirst
   */
  export type ExternalTransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ExternalTransaction to fetch.
     */
    where?: ExternalTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalTransactions to fetch.
     */
    orderBy?: ExternalTransactionOrderByWithRelationInput | ExternalTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExternalTransactions.
     */
    cursor?: ExternalTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExternalTransactions.
     */
    distinct?: ExternalTransactionScalarFieldEnum | ExternalTransactionScalarFieldEnum[]
  }

  /**
   * ExternalTransaction findFirstOrThrow
   */
  export type ExternalTransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ExternalTransaction to fetch.
     */
    where?: ExternalTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalTransactions to fetch.
     */
    orderBy?: ExternalTransactionOrderByWithRelationInput | ExternalTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExternalTransactions.
     */
    cursor?: ExternalTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExternalTransactions.
     */
    distinct?: ExternalTransactionScalarFieldEnum | ExternalTransactionScalarFieldEnum[]
  }

  /**
   * ExternalTransaction findMany
   */
  export type ExternalTransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ExternalTransactions to fetch.
     */
    where?: ExternalTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalTransactions to fetch.
     */
    orderBy?: ExternalTransactionOrderByWithRelationInput | ExternalTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ExternalTransactions.
     */
    cursor?: ExternalTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalTransactions.
     */
    skip?: number
    distinct?: ExternalTransactionScalarFieldEnum | ExternalTransactionScalarFieldEnum[]
  }

  /**
   * ExternalTransaction create
   */
  export type ExternalTransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a ExternalTransaction.
     */
    data: XOR<ExternalTransactionCreateInput, ExternalTransactionUncheckedCreateInput>
  }

  /**
   * ExternalTransaction createMany
   */
  export type ExternalTransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ExternalTransactions.
     */
    data: ExternalTransactionCreateManyInput | ExternalTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ExternalTransaction createManyAndReturn
   */
  export type ExternalTransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * The data used to create many ExternalTransactions.
     */
    data: ExternalTransactionCreateManyInput | ExternalTransactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ExternalTransaction update
   */
  export type ExternalTransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a ExternalTransaction.
     */
    data: XOR<ExternalTransactionUpdateInput, ExternalTransactionUncheckedUpdateInput>
    /**
     * Choose, which ExternalTransaction to update.
     */
    where: ExternalTransactionWhereUniqueInput
  }

  /**
   * ExternalTransaction updateMany
   */
  export type ExternalTransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ExternalTransactions.
     */
    data: XOR<ExternalTransactionUpdateManyMutationInput, ExternalTransactionUncheckedUpdateManyInput>
    /**
     * Filter which ExternalTransactions to update
     */
    where?: ExternalTransactionWhereInput
    /**
     * Limit how many ExternalTransactions to update.
     */
    limit?: number
  }

  /**
   * ExternalTransaction updateManyAndReturn
   */
  export type ExternalTransactionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * The data used to update ExternalTransactions.
     */
    data: XOR<ExternalTransactionUpdateManyMutationInput, ExternalTransactionUncheckedUpdateManyInput>
    /**
     * Filter which ExternalTransactions to update
     */
    where?: ExternalTransactionWhereInput
    /**
     * Limit how many ExternalTransactions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ExternalTransaction upsert
   */
  export type ExternalTransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the ExternalTransaction to update in case it exists.
     */
    where: ExternalTransactionWhereUniqueInput
    /**
     * In case the ExternalTransaction found by the `where` argument doesn't exist, create a new ExternalTransaction with this data.
     */
    create: XOR<ExternalTransactionCreateInput, ExternalTransactionUncheckedCreateInput>
    /**
     * In case the ExternalTransaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ExternalTransactionUpdateInput, ExternalTransactionUncheckedUpdateInput>
  }

  /**
   * ExternalTransaction delete
   */
  export type ExternalTransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    /**
     * Filter which ExternalTransaction to delete.
     */
    where: ExternalTransactionWhereUniqueInput
  }

  /**
   * ExternalTransaction deleteMany
   */
  export type ExternalTransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExternalTransactions to delete
     */
    where?: ExternalTransactionWhereInput
    /**
     * Limit how many ExternalTransactions to delete.
     */
    limit?: number
  }

  /**
   * ExternalTransaction.order
   */
  export type ExternalTransaction$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
  }

  /**
   * ExternalTransaction.paymentMethod
   */
  export type ExternalTransaction$paymentMethodArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    where?: PaymentMethodWhereInput
  }

  /**
   * ExternalTransaction.rideRequest
   */
  export type ExternalTransaction$rideRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    where?: RideRequestWhereInput
  }

  /**
   * ExternalTransaction without action
   */
  export type ExternalTransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
  }


  /**
   * Model UCP
   */

  export type AggregateUCP = {
    _count: UCPCountAggregateOutputType | null
    _avg: UCPAvgAggregateOutputType | null
    _sum: UCPSumAggregateOutputType | null
    _min: UCPMinAggregateOutputType | null
    _max: UCPMaxAggregateOutputType | null
  }

  export type UCPAvgAggregateOutputType = {
    value: Decimal | null
  }

  export type UCPSumAggregateOutputType = {
    value: Decimal | null
  }

  export type UCPMinAggregateOutputType = {
    id: string | null
    name: string | null
    value: Decimal | null
    description: string | null
    serviceType: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type UCPMaxAggregateOutputType = {
    id: string | null
    name: string | null
    value: Decimal | null
    description: string | null
    serviceType: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type UCPCountAggregateOutputType = {
    id: number
    name: number
    value: number
    description: number
    serviceType: number
    isActive: number
    metadata: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type UCPAvgAggregateInputType = {
    value?: true
  }

  export type UCPSumAggregateInputType = {
    value?: true
  }

  export type UCPMinAggregateInputType = {
    id?: true
    name?: true
    value?: true
    description?: true
    serviceType?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type UCPMaxAggregateInputType = {
    id?: true
    name?: true
    value?: true
    description?: true
    serviceType?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type UCPCountAggregateInputType = {
    id?: true
    name?: true
    value?: true
    description?: true
    serviceType?: true
    isActive?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type UCPAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UCP to aggregate.
     */
    where?: UCPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UCPS to fetch.
     */
    orderBy?: UCPOrderByWithRelationInput | UCPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UCPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UCPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UCPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UCPS
    **/
    _count?: true | UCPCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UCPAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UCPSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UCPMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UCPMaxAggregateInputType
  }

  export type GetUCPAggregateType<T extends UCPAggregateArgs> = {
        [P in keyof T & keyof AggregateUCP]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUCP[P]>
      : GetScalarType<T[P], AggregateUCP[P]>
  }




  export type UCPGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UCPWhereInput
    orderBy?: UCPOrderByWithAggregationInput | UCPOrderByWithAggregationInput[]
    by: UCPScalarFieldEnum[] | UCPScalarFieldEnum
    having?: UCPScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UCPCountAggregateInputType | true
    _avg?: UCPAvgAggregateInputType
    _sum?: UCPSumAggregateInputType
    _min?: UCPMinAggregateInputType
    _max?: UCPMaxAggregateInputType
  }

  export type UCPGroupByOutputType = {
    id: string
    name: string
    value: Decimal
    description: string | null
    serviceType: string | null
    isActive: boolean
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    _count: UCPCountAggregateOutputType | null
    _avg: UCPAvgAggregateOutputType | null
    _sum: UCPSumAggregateOutputType | null
    _min: UCPMinAggregateOutputType | null
    _max: UCPMaxAggregateOutputType | null
  }

  type GetUCPGroupByPayload<T extends UCPGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UCPGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UCPGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UCPGroupByOutputType[P]>
            : GetScalarType<T[P], UCPGroupByOutputType[P]>
        }
      >
    >


  export type UCPSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    description?: boolean
    serviceType?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["uCP"]>

  export type UCPSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    description?: boolean
    serviceType?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["uCP"]>

  export type UCPSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    description?: boolean
    serviceType?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["uCP"]>

  export type UCPSelectScalar = {
    id?: boolean
    name?: boolean
    value?: boolean
    description?: boolean
    serviceType?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type UCPOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "value" | "description" | "serviceType" | "isActive" | "metadata" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["uCP"]>

  export type $UCPPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UCP"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      value: Prisma.Decimal
      description: string | null
      serviceType: string | null
      isActive: boolean
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["uCP"]>
    composites: {}
  }

  type UCPGetPayload<S extends boolean | null | undefined | UCPDefaultArgs> = $Result.GetResult<Prisma.$UCPPayload, S>

  type UCPCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UCPFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UCPCountAggregateInputType | true
    }

  export interface UCPDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UCP'], meta: { name: 'UCP' } }
    /**
     * Find zero or one UCP that matches the filter.
     * @param {UCPFindUniqueArgs} args - Arguments to find a UCP
     * @example
     * // Get one UCP
     * const uCP = await prisma.uCP.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UCPFindUniqueArgs>(args: SelectSubset<T, UCPFindUniqueArgs<ExtArgs>>): Prisma__UCPClient<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UCP that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UCPFindUniqueOrThrowArgs} args - Arguments to find a UCP
     * @example
     * // Get one UCP
     * const uCP = await prisma.uCP.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UCPFindUniqueOrThrowArgs>(args: SelectSubset<T, UCPFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UCPClient<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UCP that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UCPFindFirstArgs} args - Arguments to find a UCP
     * @example
     * // Get one UCP
     * const uCP = await prisma.uCP.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UCPFindFirstArgs>(args?: SelectSubset<T, UCPFindFirstArgs<ExtArgs>>): Prisma__UCPClient<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UCP that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UCPFindFirstOrThrowArgs} args - Arguments to find a UCP
     * @example
     * // Get one UCP
     * const uCP = await prisma.uCP.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UCPFindFirstOrThrowArgs>(args?: SelectSubset<T, UCPFindFirstOrThrowArgs<ExtArgs>>): Prisma__UCPClient<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UCPS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UCPFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UCPS
     * const uCPS = await prisma.uCP.findMany()
     * 
     * // Get first 10 UCPS
     * const uCPS = await prisma.uCP.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const uCPWithIdOnly = await prisma.uCP.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UCPFindManyArgs>(args?: SelectSubset<T, UCPFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UCP.
     * @param {UCPCreateArgs} args - Arguments to create a UCP.
     * @example
     * // Create one UCP
     * const UCP = await prisma.uCP.create({
     *   data: {
     *     // ... data to create a UCP
     *   }
     * })
     * 
     */
    create<T extends UCPCreateArgs>(args: SelectSubset<T, UCPCreateArgs<ExtArgs>>): Prisma__UCPClient<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UCPS.
     * @param {UCPCreateManyArgs} args - Arguments to create many UCPS.
     * @example
     * // Create many UCPS
     * const uCP = await prisma.uCP.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UCPCreateManyArgs>(args?: SelectSubset<T, UCPCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UCPS and returns the data saved in the database.
     * @param {UCPCreateManyAndReturnArgs} args - Arguments to create many UCPS.
     * @example
     * // Create many UCPS
     * const uCP = await prisma.uCP.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UCPS and only return the `id`
     * const uCPWithIdOnly = await prisma.uCP.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UCPCreateManyAndReturnArgs>(args?: SelectSubset<T, UCPCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UCP.
     * @param {UCPDeleteArgs} args - Arguments to delete one UCP.
     * @example
     * // Delete one UCP
     * const UCP = await prisma.uCP.delete({
     *   where: {
     *     // ... filter to delete one UCP
     *   }
     * })
     * 
     */
    delete<T extends UCPDeleteArgs>(args: SelectSubset<T, UCPDeleteArgs<ExtArgs>>): Prisma__UCPClient<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UCP.
     * @param {UCPUpdateArgs} args - Arguments to update one UCP.
     * @example
     * // Update one UCP
     * const uCP = await prisma.uCP.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UCPUpdateArgs>(args: SelectSubset<T, UCPUpdateArgs<ExtArgs>>): Prisma__UCPClient<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UCPS.
     * @param {UCPDeleteManyArgs} args - Arguments to filter UCPS to delete.
     * @example
     * // Delete a few UCPS
     * const { count } = await prisma.uCP.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UCPDeleteManyArgs>(args?: SelectSubset<T, UCPDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UCPS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UCPUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UCPS
     * const uCP = await prisma.uCP.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UCPUpdateManyArgs>(args: SelectSubset<T, UCPUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UCPS and returns the data updated in the database.
     * @param {UCPUpdateManyAndReturnArgs} args - Arguments to update many UCPS.
     * @example
     * // Update many UCPS
     * const uCP = await prisma.uCP.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UCPS and only return the `id`
     * const uCPWithIdOnly = await prisma.uCP.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UCPUpdateManyAndReturnArgs>(args: SelectSubset<T, UCPUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UCP.
     * @param {UCPUpsertArgs} args - Arguments to update or create a UCP.
     * @example
     * // Update or create a UCP
     * const uCP = await prisma.uCP.upsert({
     *   create: {
     *     // ... data to create a UCP
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UCP we want to update
     *   }
     * })
     */
    upsert<T extends UCPUpsertArgs>(args: SelectSubset<T, UCPUpsertArgs<ExtArgs>>): Prisma__UCPClient<$Result.GetResult<Prisma.$UCPPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UCPS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UCPCountArgs} args - Arguments to filter UCPS to count.
     * @example
     * // Count the number of UCPS
     * const count = await prisma.uCP.count({
     *   where: {
     *     // ... the filter for the UCPS we want to count
     *   }
     * })
    **/
    count<T extends UCPCountArgs>(
      args?: Subset<T, UCPCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UCPCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UCP.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UCPAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UCPAggregateArgs>(args: Subset<T, UCPAggregateArgs>): Prisma.PrismaPromise<GetUCPAggregateType<T>>

    /**
     * Group by UCP.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UCPGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UCPGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UCPGroupByArgs['orderBy'] }
        : { orderBy?: UCPGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UCPGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUCPGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UCP model
   */
  readonly fields: UCPFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UCP.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UCPClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UCP model
   */
  interface UCPFieldRefs {
    readonly id: FieldRef<"UCP", 'String'>
    readonly name: FieldRef<"UCP", 'String'>
    readonly value: FieldRef<"UCP", 'Decimal'>
    readonly description: FieldRef<"UCP", 'String'>
    readonly serviceType: FieldRef<"UCP", 'String'>
    readonly isActive: FieldRef<"UCP", 'Boolean'>
    readonly metadata: FieldRef<"UCP", 'Json'>
    readonly createdAt: FieldRef<"UCP", 'DateTime'>
    readonly updatedAt: FieldRef<"UCP", 'DateTime'>
    readonly createdBy: FieldRef<"UCP", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UCP findUnique
   */
  export type UCPFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * Filter, which UCP to fetch.
     */
    where: UCPWhereUniqueInput
  }

  /**
   * UCP findUniqueOrThrow
   */
  export type UCPFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * Filter, which UCP to fetch.
     */
    where: UCPWhereUniqueInput
  }

  /**
   * UCP findFirst
   */
  export type UCPFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * Filter, which UCP to fetch.
     */
    where?: UCPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UCPS to fetch.
     */
    orderBy?: UCPOrderByWithRelationInput | UCPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UCPS.
     */
    cursor?: UCPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UCPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UCPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UCPS.
     */
    distinct?: UCPScalarFieldEnum | UCPScalarFieldEnum[]
  }

  /**
   * UCP findFirstOrThrow
   */
  export type UCPFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * Filter, which UCP to fetch.
     */
    where?: UCPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UCPS to fetch.
     */
    orderBy?: UCPOrderByWithRelationInput | UCPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UCPS.
     */
    cursor?: UCPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UCPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UCPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UCPS.
     */
    distinct?: UCPScalarFieldEnum | UCPScalarFieldEnum[]
  }

  /**
   * UCP findMany
   */
  export type UCPFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * Filter, which UCPS to fetch.
     */
    where?: UCPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UCPS to fetch.
     */
    orderBy?: UCPOrderByWithRelationInput | UCPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UCPS.
     */
    cursor?: UCPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UCPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UCPS.
     */
    skip?: number
    distinct?: UCPScalarFieldEnum | UCPScalarFieldEnum[]
  }

  /**
   * UCP create
   */
  export type UCPCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * The data needed to create a UCP.
     */
    data: XOR<UCPCreateInput, UCPUncheckedCreateInput>
  }

  /**
   * UCP createMany
   */
  export type UCPCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UCPS.
     */
    data: UCPCreateManyInput | UCPCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UCP createManyAndReturn
   */
  export type UCPCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * The data used to create many UCPS.
     */
    data: UCPCreateManyInput | UCPCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UCP update
   */
  export type UCPUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * The data needed to update a UCP.
     */
    data: XOR<UCPUpdateInput, UCPUncheckedUpdateInput>
    /**
     * Choose, which UCP to update.
     */
    where: UCPWhereUniqueInput
  }

  /**
   * UCP updateMany
   */
  export type UCPUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UCPS.
     */
    data: XOR<UCPUpdateManyMutationInput, UCPUncheckedUpdateManyInput>
    /**
     * Filter which UCPS to update
     */
    where?: UCPWhereInput
    /**
     * Limit how many UCPS to update.
     */
    limit?: number
  }

  /**
   * UCP updateManyAndReturn
   */
  export type UCPUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * The data used to update UCPS.
     */
    data: XOR<UCPUpdateManyMutationInput, UCPUncheckedUpdateManyInput>
    /**
     * Filter which UCPS to update
     */
    where?: UCPWhereInput
    /**
     * Limit how many UCPS to update.
     */
    limit?: number
  }

  /**
   * UCP upsert
   */
  export type UCPUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * The filter to search for the UCP to update in case it exists.
     */
    where: UCPWhereUniqueInput
    /**
     * In case the UCP found by the `where` argument doesn't exist, create a new UCP with this data.
     */
    create: XOR<UCPCreateInput, UCPUncheckedCreateInput>
    /**
     * In case the UCP was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UCPUpdateInput, UCPUncheckedUpdateInput>
  }

  /**
   * UCP delete
   */
  export type UCPDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
    /**
     * Filter which UCP to delete.
     */
    where: UCPWhereUniqueInput
  }

  /**
   * UCP deleteMany
   */
  export type UCPDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UCPS to delete
     */
    where?: UCPWhereInput
    /**
     * Limit how many UCPS to delete.
     */
    limit?: number
  }

  /**
   * UCP without action
   */
  export type UCPDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UCP
     */
    select?: UCPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UCP
     */
    omit?: UCPOmit<ExtArgs> | null
  }


  /**
   * Model RiderApplication
   */

  export type AggregateRiderApplication = {
    _count: RiderApplicationCountAggregateOutputType | null
    _min: RiderApplicationMinAggregateOutputType | null
    _max: RiderApplicationMaxAggregateOutputType | null
  }

  export type RiderApplicationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    vehicleType: $Enums.RiderVehicleType | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phoneNumber: string | null
    dateOfBirth: string | null
    address: string | null
    city: string | null
    licenseNumber: string | null
    licenseExpiry: string | null
    vehicleModel: string | null
    vehiclePlate: string | null
    insuranceNumber: string | null
    insuranceExpiry: string | null
    emergencyContact: string | null
    emergencyPhone: string | null
    experience: string | null
    availability: string | null
    status: $Enums.RiderApplicationStatus | null
    rejectionReason: string | null
    reviewedBy: string | null
    reviewedAt: Date | null
    approvedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RiderApplicationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    vehicleType: $Enums.RiderVehicleType | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phoneNumber: string | null
    dateOfBirth: string | null
    address: string | null
    city: string | null
    licenseNumber: string | null
    licenseExpiry: string | null
    vehicleModel: string | null
    vehiclePlate: string | null
    insuranceNumber: string | null
    insuranceExpiry: string | null
    emergencyContact: string | null
    emergencyPhone: string | null
    experience: string | null
    availability: string | null
    status: $Enums.RiderApplicationStatus | null
    rejectionReason: string | null
    reviewedBy: string | null
    reviewedAt: Date | null
    approvedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RiderApplicationCountAggregateOutputType = {
    id: number
    userId: number
    vehicleType: number
    firstName: number
    lastName: number
    email: number
    phoneNumber: number
    dateOfBirth: number
    address: number
    city: number
    licenseNumber: number
    licenseExpiry: number
    vehicleModel: number
    vehiclePlate: number
    insuranceNumber: number
    insuranceExpiry: number
    emergencyContact: number
    emergencyPhone: number
    experience: number
    availability: number
    status: number
    rejectionReason: number
    reviewedBy: number
    reviewedAt: number
    approvedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RiderApplicationMinAggregateInputType = {
    id?: true
    userId?: true
    vehicleType?: true
    firstName?: true
    lastName?: true
    email?: true
    phoneNumber?: true
    dateOfBirth?: true
    address?: true
    city?: true
    licenseNumber?: true
    licenseExpiry?: true
    vehicleModel?: true
    vehiclePlate?: true
    insuranceNumber?: true
    insuranceExpiry?: true
    emergencyContact?: true
    emergencyPhone?: true
    experience?: true
    availability?: true
    status?: true
    rejectionReason?: true
    reviewedBy?: true
    reviewedAt?: true
    approvedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RiderApplicationMaxAggregateInputType = {
    id?: true
    userId?: true
    vehicleType?: true
    firstName?: true
    lastName?: true
    email?: true
    phoneNumber?: true
    dateOfBirth?: true
    address?: true
    city?: true
    licenseNumber?: true
    licenseExpiry?: true
    vehicleModel?: true
    vehiclePlate?: true
    insuranceNumber?: true
    insuranceExpiry?: true
    emergencyContact?: true
    emergencyPhone?: true
    experience?: true
    availability?: true
    status?: true
    rejectionReason?: true
    reviewedBy?: true
    reviewedAt?: true
    approvedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RiderApplicationCountAggregateInputType = {
    id?: true
    userId?: true
    vehicleType?: true
    firstName?: true
    lastName?: true
    email?: true
    phoneNumber?: true
    dateOfBirth?: true
    address?: true
    city?: true
    licenseNumber?: true
    licenseExpiry?: true
    vehicleModel?: true
    vehiclePlate?: true
    insuranceNumber?: true
    insuranceExpiry?: true
    emergencyContact?: true
    emergencyPhone?: true
    experience?: true
    availability?: true
    status?: true
    rejectionReason?: true
    reviewedBy?: true
    reviewedAt?: true
    approvedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RiderApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiderApplication to aggregate.
     */
    where?: RiderApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderApplications to fetch.
     */
    orderBy?: RiderApplicationOrderByWithRelationInput | RiderApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RiderApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RiderApplications
    **/
    _count?: true | RiderApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RiderApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RiderApplicationMaxAggregateInputType
  }

  export type GetRiderApplicationAggregateType<T extends RiderApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateRiderApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRiderApplication[P]>
      : GetScalarType<T[P], AggregateRiderApplication[P]>
  }




  export type RiderApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiderApplicationWhereInput
    orderBy?: RiderApplicationOrderByWithAggregationInput | RiderApplicationOrderByWithAggregationInput[]
    by: RiderApplicationScalarFieldEnum[] | RiderApplicationScalarFieldEnum
    having?: RiderApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RiderApplicationCountAggregateInputType | true
    _min?: RiderApplicationMinAggregateInputType
    _max?: RiderApplicationMaxAggregateInputType
  }

  export type RiderApplicationGroupByOutputType = {
    id: string
    userId: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email: string | null
    phoneNumber: string
    dateOfBirth: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber: string | null
    insuranceExpiry: string | null
    emergencyContact: string | null
    emergencyPhone: string | null
    experience: string | null
    availability: string | null
    status: $Enums.RiderApplicationStatus
    rejectionReason: string | null
    reviewedBy: string | null
    reviewedAt: Date | null
    approvedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: RiderApplicationCountAggregateOutputType | null
    _min: RiderApplicationMinAggregateOutputType | null
    _max: RiderApplicationMaxAggregateOutputType | null
  }

  type GetRiderApplicationGroupByPayload<T extends RiderApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RiderApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RiderApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RiderApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], RiderApplicationGroupByOutputType[P]>
        }
      >
    >


  export type RiderApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    vehicleType?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phoneNumber?: boolean
    dateOfBirth?: boolean
    address?: boolean
    city?: boolean
    licenseNumber?: boolean
    licenseExpiry?: boolean
    vehicleModel?: boolean
    vehiclePlate?: boolean
    insuranceNumber?: boolean
    insuranceExpiry?: boolean
    emergencyContact?: boolean
    emergencyPhone?: boolean
    experience?: boolean
    availability?: boolean
    status?: boolean
    rejectionReason?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    approvedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driver?: boolean | RiderApplication$driverArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    documents?: boolean | RiderApplication$documentsArgs<ExtArgs>
    _count?: boolean | RiderApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riderApplication"]>

  export type RiderApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    vehicleType?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phoneNumber?: boolean
    dateOfBirth?: boolean
    address?: boolean
    city?: boolean
    licenseNumber?: boolean
    licenseExpiry?: boolean
    vehicleModel?: boolean
    vehiclePlate?: boolean
    insuranceNumber?: boolean
    insuranceExpiry?: boolean
    emergencyContact?: boolean
    emergencyPhone?: boolean
    experience?: boolean
    availability?: boolean
    status?: boolean
    rejectionReason?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    approvedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riderApplication"]>

  export type RiderApplicationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    vehicleType?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phoneNumber?: boolean
    dateOfBirth?: boolean
    address?: boolean
    city?: boolean
    licenseNumber?: boolean
    licenseExpiry?: boolean
    vehicleModel?: boolean
    vehiclePlate?: boolean
    insuranceNumber?: boolean
    insuranceExpiry?: boolean
    emergencyContact?: boolean
    emergencyPhone?: boolean
    experience?: boolean
    availability?: boolean
    status?: boolean
    rejectionReason?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    approvedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riderApplication"]>

  export type RiderApplicationSelectScalar = {
    id?: boolean
    userId?: boolean
    vehicleType?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phoneNumber?: boolean
    dateOfBirth?: boolean
    address?: boolean
    city?: boolean
    licenseNumber?: boolean
    licenseExpiry?: boolean
    vehicleModel?: boolean
    vehiclePlate?: boolean
    insuranceNumber?: boolean
    insuranceExpiry?: boolean
    emergencyContact?: boolean
    emergencyPhone?: boolean
    experience?: boolean
    availability?: boolean
    status?: boolean
    rejectionReason?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    approvedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RiderApplicationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "vehicleType" | "firstName" | "lastName" | "email" | "phoneNumber" | "dateOfBirth" | "address" | "city" | "licenseNumber" | "licenseExpiry" | "vehicleModel" | "vehiclePlate" | "insuranceNumber" | "insuranceExpiry" | "emergencyContact" | "emergencyPhone" | "experience" | "availability" | "status" | "rejectionReason" | "reviewedBy" | "reviewedAt" | "approvedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["riderApplication"]>
  export type RiderApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    driver?: boolean | RiderApplication$driverArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    documents?: boolean | RiderApplication$documentsArgs<ExtArgs>
    _count?: boolean | RiderApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RiderApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RiderApplicationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RiderApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RiderApplication"
    objects: {
      driver: Prisma.$DriverPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
      documents: Prisma.$RiderDocumentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      vehicleType: $Enums.RiderVehicleType
      firstName: string
      lastName: string
      email: string | null
      phoneNumber: string
      dateOfBirth: string | null
      address: string
      city: string
      licenseNumber: string
      licenseExpiry: string
      vehicleModel: string
      vehiclePlate: string
      insuranceNumber: string | null
      insuranceExpiry: string | null
      emergencyContact: string | null
      emergencyPhone: string | null
      experience: string | null
      availability: string | null
      status: $Enums.RiderApplicationStatus
      rejectionReason: string | null
      reviewedBy: string | null
      reviewedAt: Date | null
      approvedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["riderApplication"]>
    composites: {}
  }

  type RiderApplicationGetPayload<S extends boolean | null | undefined | RiderApplicationDefaultArgs> = $Result.GetResult<Prisma.$RiderApplicationPayload, S>

  type RiderApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RiderApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RiderApplicationCountAggregateInputType | true
    }

  export interface RiderApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RiderApplication'], meta: { name: 'RiderApplication' } }
    /**
     * Find zero or one RiderApplication that matches the filter.
     * @param {RiderApplicationFindUniqueArgs} args - Arguments to find a RiderApplication
     * @example
     * // Get one RiderApplication
     * const riderApplication = await prisma.riderApplication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RiderApplicationFindUniqueArgs>(args: SelectSubset<T, RiderApplicationFindUniqueArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RiderApplication that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RiderApplicationFindUniqueOrThrowArgs} args - Arguments to find a RiderApplication
     * @example
     * // Get one RiderApplication
     * const riderApplication = await prisma.riderApplication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RiderApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, RiderApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiderApplication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderApplicationFindFirstArgs} args - Arguments to find a RiderApplication
     * @example
     * // Get one RiderApplication
     * const riderApplication = await prisma.riderApplication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RiderApplicationFindFirstArgs>(args?: SelectSubset<T, RiderApplicationFindFirstArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiderApplication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderApplicationFindFirstOrThrowArgs} args - Arguments to find a RiderApplication
     * @example
     * // Get one RiderApplication
     * const riderApplication = await prisma.riderApplication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RiderApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, RiderApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RiderApplications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RiderApplications
     * const riderApplications = await prisma.riderApplication.findMany()
     * 
     * // Get first 10 RiderApplications
     * const riderApplications = await prisma.riderApplication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const riderApplicationWithIdOnly = await prisma.riderApplication.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RiderApplicationFindManyArgs>(args?: SelectSubset<T, RiderApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RiderApplication.
     * @param {RiderApplicationCreateArgs} args - Arguments to create a RiderApplication.
     * @example
     * // Create one RiderApplication
     * const RiderApplication = await prisma.riderApplication.create({
     *   data: {
     *     // ... data to create a RiderApplication
     *   }
     * })
     * 
     */
    create<T extends RiderApplicationCreateArgs>(args: SelectSubset<T, RiderApplicationCreateArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RiderApplications.
     * @param {RiderApplicationCreateManyArgs} args - Arguments to create many RiderApplications.
     * @example
     * // Create many RiderApplications
     * const riderApplication = await prisma.riderApplication.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RiderApplicationCreateManyArgs>(args?: SelectSubset<T, RiderApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RiderApplications and returns the data saved in the database.
     * @param {RiderApplicationCreateManyAndReturnArgs} args - Arguments to create many RiderApplications.
     * @example
     * // Create many RiderApplications
     * const riderApplication = await prisma.riderApplication.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RiderApplications and only return the `id`
     * const riderApplicationWithIdOnly = await prisma.riderApplication.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RiderApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, RiderApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RiderApplication.
     * @param {RiderApplicationDeleteArgs} args - Arguments to delete one RiderApplication.
     * @example
     * // Delete one RiderApplication
     * const RiderApplication = await prisma.riderApplication.delete({
     *   where: {
     *     // ... filter to delete one RiderApplication
     *   }
     * })
     * 
     */
    delete<T extends RiderApplicationDeleteArgs>(args: SelectSubset<T, RiderApplicationDeleteArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RiderApplication.
     * @param {RiderApplicationUpdateArgs} args - Arguments to update one RiderApplication.
     * @example
     * // Update one RiderApplication
     * const riderApplication = await prisma.riderApplication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RiderApplicationUpdateArgs>(args: SelectSubset<T, RiderApplicationUpdateArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RiderApplications.
     * @param {RiderApplicationDeleteManyArgs} args - Arguments to filter RiderApplications to delete.
     * @example
     * // Delete a few RiderApplications
     * const { count } = await prisma.riderApplication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RiderApplicationDeleteManyArgs>(args?: SelectSubset<T, RiderApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiderApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RiderApplications
     * const riderApplication = await prisma.riderApplication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RiderApplicationUpdateManyArgs>(args: SelectSubset<T, RiderApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiderApplications and returns the data updated in the database.
     * @param {RiderApplicationUpdateManyAndReturnArgs} args - Arguments to update many RiderApplications.
     * @example
     * // Update many RiderApplications
     * const riderApplication = await prisma.riderApplication.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RiderApplications and only return the `id`
     * const riderApplicationWithIdOnly = await prisma.riderApplication.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RiderApplicationUpdateManyAndReturnArgs>(args: SelectSubset<T, RiderApplicationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RiderApplication.
     * @param {RiderApplicationUpsertArgs} args - Arguments to update or create a RiderApplication.
     * @example
     * // Update or create a RiderApplication
     * const riderApplication = await prisma.riderApplication.upsert({
     *   create: {
     *     // ... data to create a RiderApplication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RiderApplication we want to update
     *   }
     * })
     */
    upsert<T extends RiderApplicationUpsertArgs>(args: SelectSubset<T, RiderApplicationUpsertArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RiderApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderApplicationCountArgs} args - Arguments to filter RiderApplications to count.
     * @example
     * // Count the number of RiderApplications
     * const count = await prisma.riderApplication.count({
     *   where: {
     *     // ... the filter for the RiderApplications we want to count
     *   }
     * })
    **/
    count<T extends RiderApplicationCountArgs>(
      args?: Subset<T, RiderApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RiderApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RiderApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RiderApplicationAggregateArgs>(args: Subset<T, RiderApplicationAggregateArgs>): Prisma.PrismaPromise<GetRiderApplicationAggregateType<T>>

    /**
     * Group by RiderApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RiderApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RiderApplicationGroupByArgs['orderBy'] }
        : { orderBy?: RiderApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RiderApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRiderApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RiderApplication model
   */
  readonly fields: RiderApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RiderApplication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RiderApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    driver<T extends RiderApplication$driverArgs<ExtArgs> = {}>(args?: Subset<T, RiderApplication$driverArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    documents<T extends RiderApplication$documentsArgs<ExtArgs> = {}>(args?: Subset<T, RiderApplication$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RiderApplication model
   */
  interface RiderApplicationFieldRefs {
    readonly id: FieldRef<"RiderApplication", 'String'>
    readonly userId: FieldRef<"RiderApplication", 'String'>
    readonly vehicleType: FieldRef<"RiderApplication", 'RiderVehicleType'>
    readonly firstName: FieldRef<"RiderApplication", 'String'>
    readonly lastName: FieldRef<"RiderApplication", 'String'>
    readonly email: FieldRef<"RiderApplication", 'String'>
    readonly phoneNumber: FieldRef<"RiderApplication", 'String'>
    readonly dateOfBirth: FieldRef<"RiderApplication", 'String'>
    readonly address: FieldRef<"RiderApplication", 'String'>
    readonly city: FieldRef<"RiderApplication", 'String'>
    readonly licenseNumber: FieldRef<"RiderApplication", 'String'>
    readonly licenseExpiry: FieldRef<"RiderApplication", 'String'>
    readonly vehicleModel: FieldRef<"RiderApplication", 'String'>
    readonly vehiclePlate: FieldRef<"RiderApplication", 'String'>
    readonly insuranceNumber: FieldRef<"RiderApplication", 'String'>
    readonly insuranceExpiry: FieldRef<"RiderApplication", 'String'>
    readonly emergencyContact: FieldRef<"RiderApplication", 'String'>
    readonly emergencyPhone: FieldRef<"RiderApplication", 'String'>
    readonly experience: FieldRef<"RiderApplication", 'String'>
    readonly availability: FieldRef<"RiderApplication", 'String'>
    readonly status: FieldRef<"RiderApplication", 'RiderApplicationStatus'>
    readonly rejectionReason: FieldRef<"RiderApplication", 'String'>
    readonly reviewedBy: FieldRef<"RiderApplication", 'String'>
    readonly reviewedAt: FieldRef<"RiderApplication", 'DateTime'>
    readonly approvedAt: FieldRef<"RiderApplication", 'DateTime'>
    readonly createdAt: FieldRef<"RiderApplication", 'DateTime'>
    readonly updatedAt: FieldRef<"RiderApplication", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RiderApplication findUnique
   */
  export type RiderApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    /**
     * Filter, which RiderApplication to fetch.
     */
    where: RiderApplicationWhereUniqueInput
  }

  /**
   * RiderApplication findUniqueOrThrow
   */
  export type RiderApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    /**
     * Filter, which RiderApplication to fetch.
     */
    where: RiderApplicationWhereUniqueInput
  }

  /**
   * RiderApplication findFirst
   */
  export type RiderApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    /**
     * Filter, which RiderApplication to fetch.
     */
    where?: RiderApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderApplications to fetch.
     */
    orderBy?: RiderApplicationOrderByWithRelationInput | RiderApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiderApplications.
     */
    cursor?: RiderApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiderApplications.
     */
    distinct?: RiderApplicationScalarFieldEnum | RiderApplicationScalarFieldEnum[]
  }

  /**
   * RiderApplication findFirstOrThrow
   */
  export type RiderApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    /**
     * Filter, which RiderApplication to fetch.
     */
    where?: RiderApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderApplications to fetch.
     */
    orderBy?: RiderApplicationOrderByWithRelationInput | RiderApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiderApplications.
     */
    cursor?: RiderApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiderApplications.
     */
    distinct?: RiderApplicationScalarFieldEnum | RiderApplicationScalarFieldEnum[]
  }

  /**
   * RiderApplication findMany
   */
  export type RiderApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    /**
     * Filter, which RiderApplications to fetch.
     */
    where?: RiderApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderApplications to fetch.
     */
    orderBy?: RiderApplicationOrderByWithRelationInput | RiderApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RiderApplications.
     */
    cursor?: RiderApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderApplications.
     */
    skip?: number
    distinct?: RiderApplicationScalarFieldEnum | RiderApplicationScalarFieldEnum[]
  }

  /**
   * RiderApplication create
   */
  export type RiderApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a RiderApplication.
     */
    data: XOR<RiderApplicationCreateInput, RiderApplicationUncheckedCreateInput>
  }

  /**
   * RiderApplication createMany
   */
  export type RiderApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RiderApplications.
     */
    data: RiderApplicationCreateManyInput | RiderApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RiderApplication createManyAndReturn
   */
  export type RiderApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * The data used to create many RiderApplications.
     */
    data: RiderApplicationCreateManyInput | RiderApplicationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiderApplication update
   */
  export type RiderApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a RiderApplication.
     */
    data: XOR<RiderApplicationUpdateInput, RiderApplicationUncheckedUpdateInput>
    /**
     * Choose, which RiderApplication to update.
     */
    where: RiderApplicationWhereUniqueInput
  }

  /**
   * RiderApplication updateMany
   */
  export type RiderApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RiderApplications.
     */
    data: XOR<RiderApplicationUpdateManyMutationInput, RiderApplicationUncheckedUpdateManyInput>
    /**
     * Filter which RiderApplications to update
     */
    where?: RiderApplicationWhereInput
    /**
     * Limit how many RiderApplications to update.
     */
    limit?: number
  }

  /**
   * RiderApplication updateManyAndReturn
   */
  export type RiderApplicationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * The data used to update RiderApplications.
     */
    data: XOR<RiderApplicationUpdateManyMutationInput, RiderApplicationUncheckedUpdateManyInput>
    /**
     * Filter which RiderApplications to update
     */
    where?: RiderApplicationWhereInput
    /**
     * Limit how many RiderApplications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiderApplication upsert
   */
  export type RiderApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the RiderApplication to update in case it exists.
     */
    where: RiderApplicationWhereUniqueInput
    /**
     * In case the RiderApplication found by the `where` argument doesn't exist, create a new RiderApplication with this data.
     */
    create: XOR<RiderApplicationCreateInput, RiderApplicationUncheckedCreateInput>
    /**
     * In case the RiderApplication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RiderApplicationUpdateInput, RiderApplicationUncheckedUpdateInput>
  }

  /**
   * RiderApplication delete
   */
  export type RiderApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
    /**
     * Filter which RiderApplication to delete.
     */
    where: RiderApplicationWhereUniqueInput
  }

  /**
   * RiderApplication deleteMany
   */
  export type RiderApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiderApplications to delete
     */
    where?: RiderApplicationWhereInput
    /**
     * Limit how many RiderApplications to delete.
     */
    limit?: number
  }

  /**
   * RiderApplication.driver
   */
  export type RiderApplication$driverArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    where?: DriverWhereInput
  }

  /**
   * RiderApplication.documents
   */
  export type RiderApplication$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    where?: RiderDocumentWhereInput
    orderBy?: RiderDocumentOrderByWithRelationInput | RiderDocumentOrderByWithRelationInput[]
    cursor?: RiderDocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RiderDocumentScalarFieldEnum | RiderDocumentScalarFieldEnum[]
  }

  /**
   * RiderApplication without action
   */
  export type RiderApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderApplication
     */
    select?: RiderApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderApplication
     */
    omit?: RiderApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderApplicationInclude<ExtArgs> | null
  }


  /**
   * Model RiderDocument
   */

  export type AggregateRiderDocument = {
    _count: RiderDocumentCountAggregateOutputType | null
    _avg: RiderDocumentAvgAggregateOutputType | null
    _sum: RiderDocumentSumAggregateOutputType | null
    _min: RiderDocumentMinAggregateOutputType | null
    _max: RiderDocumentMaxAggregateOutputType | null
  }

  export type RiderDocumentAvgAggregateOutputType = {
    fileSize: number | null
  }

  export type RiderDocumentSumAggregateOutputType = {
    fileSize: number | null
  }

  export type RiderDocumentMinAggregateOutputType = {
    id: string | null
    riderApplicationId: string | null
    documentType: string | null
    fileName: string | null
    fileUrl: string | null
    fileSize: number | null
    mimeType: string | null
    uploadedAt: Date | null
  }

  export type RiderDocumentMaxAggregateOutputType = {
    id: string | null
    riderApplicationId: string | null
    documentType: string | null
    fileName: string | null
    fileUrl: string | null
    fileSize: number | null
    mimeType: string | null
    uploadedAt: Date | null
  }

  export type RiderDocumentCountAggregateOutputType = {
    id: number
    riderApplicationId: number
    documentType: number
    fileName: number
    fileUrl: number
    fileSize: number
    mimeType: number
    uploadedAt: number
    _all: number
  }


  export type RiderDocumentAvgAggregateInputType = {
    fileSize?: true
  }

  export type RiderDocumentSumAggregateInputType = {
    fileSize?: true
  }

  export type RiderDocumentMinAggregateInputType = {
    id?: true
    riderApplicationId?: true
    documentType?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    uploadedAt?: true
  }

  export type RiderDocumentMaxAggregateInputType = {
    id?: true
    riderApplicationId?: true
    documentType?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    uploadedAt?: true
  }

  export type RiderDocumentCountAggregateInputType = {
    id?: true
    riderApplicationId?: true
    documentType?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    uploadedAt?: true
    _all?: true
  }

  export type RiderDocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiderDocument to aggregate.
     */
    where?: RiderDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderDocuments to fetch.
     */
    orderBy?: RiderDocumentOrderByWithRelationInput | RiderDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RiderDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RiderDocuments
    **/
    _count?: true | RiderDocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RiderDocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RiderDocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RiderDocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RiderDocumentMaxAggregateInputType
  }

  export type GetRiderDocumentAggregateType<T extends RiderDocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateRiderDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRiderDocument[P]>
      : GetScalarType<T[P], AggregateRiderDocument[P]>
  }




  export type RiderDocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiderDocumentWhereInput
    orderBy?: RiderDocumentOrderByWithAggregationInput | RiderDocumentOrderByWithAggregationInput[]
    by: RiderDocumentScalarFieldEnum[] | RiderDocumentScalarFieldEnum
    having?: RiderDocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RiderDocumentCountAggregateInputType | true
    _avg?: RiderDocumentAvgAggregateInputType
    _sum?: RiderDocumentSumAggregateInputType
    _min?: RiderDocumentMinAggregateInputType
    _max?: RiderDocumentMaxAggregateInputType
  }

  export type RiderDocumentGroupByOutputType = {
    id: string
    riderApplicationId: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize: number | null
    mimeType: string | null
    uploadedAt: Date
    _count: RiderDocumentCountAggregateOutputType | null
    _avg: RiderDocumentAvgAggregateOutputType | null
    _sum: RiderDocumentSumAggregateOutputType | null
    _min: RiderDocumentMinAggregateOutputType | null
    _max: RiderDocumentMaxAggregateOutputType | null
  }

  type GetRiderDocumentGroupByPayload<T extends RiderDocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RiderDocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RiderDocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RiderDocumentGroupByOutputType[P]>
            : GetScalarType<T[P], RiderDocumentGroupByOutputType[P]>
        }
      >
    >


  export type RiderDocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    riderApplicationId?: boolean
    documentType?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    uploadedAt?: boolean
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riderDocument"]>

  export type RiderDocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    riderApplicationId?: boolean
    documentType?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    uploadedAt?: boolean
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riderDocument"]>

  export type RiderDocumentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    riderApplicationId?: boolean
    documentType?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    uploadedAt?: boolean
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riderDocument"]>

  export type RiderDocumentSelectScalar = {
    id?: boolean
    riderApplicationId?: boolean
    documentType?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    uploadedAt?: boolean
  }

  export type RiderDocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "riderApplicationId" | "documentType" | "fileName" | "fileUrl" | "fileSize" | "mimeType" | "uploadedAt", ExtArgs["result"]["riderDocument"]>
  export type RiderDocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
  }
  export type RiderDocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
  }
  export type RiderDocumentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
  }

  export type $RiderDocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RiderDocument"
    objects: {
      riderApplication: Prisma.$RiderApplicationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      riderApplicationId: string
      documentType: string
      fileName: string
      fileUrl: string
      fileSize: number | null
      mimeType: string | null
      uploadedAt: Date
    }, ExtArgs["result"]["riderDocument"]>
    composites: {}
  }

  type RiderDocumentGetPayload<S extends boolean | null | undefined | RiderDocumentDefaultArgs> = $Result.GetResult<Prisma.$RiderDocumentPayload, S>

  type RiderDocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RiderDocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RiderDocumentCountAggregateInputType | true
    }

  export interface RiderDocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RiderDocument'], meta: { name: 'RiderDocument' } }
    /**
     * Find zero or one RiderDocument that matches the filter.
     * @param {RiderDocumentFindUniqueArgs} args - Arguments to find a RiderDocument
     * @example
     * // Get one RiderDocument
     * const riderDocument = await prisma.riderDocument.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RiderDocumentFindUniqueArgs>(args: SelectSubset<T, RiderDocumentFindUniqueArgs<ExtArgs>>): Prisma__RiderDocumentClient<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RiderDocument that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RiderDocumentFindUniqueOrThrowArgs} args - Arguments to find a RiderDocument
     * @example
     * // Get one RiderDocument
     * const riderDocument = await prisma.riderDocument.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RiderDocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, RiderDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RiderDocumentClient<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiderDocument that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderDocumentFindFirstArgs} args - Arguments to find a RiderDocument
     * @example
     * // Get one RiderDocument
     * const riderDocument = await prisma.riderDocument.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RiderDocumentFindFirstArgs>(args?: SelectSubset<T, RiderDocumentFindFirstArgs<ExtArgs>>): Prisma__RiderDocumentClient<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiderDocument that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderDocumentFindFirstOrThrowArgs} args - Arguments to find a RiderDocument
     * @example
     * // Get one RiderDocument
     * const riderDocument = await prisma.riderDocument.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RiderDocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, RiderDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__RiderDocumentClient<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RiderDocuments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RiderDocuments
     * const riderDocuments = await prisma.riderDocument.findMany()
     * 
     * // Get first 10 RiderDocuments
     * const riderDocuments = await prisma.riderDocument.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const riderDocumentWithIdOnly = await prisma.riderDocument.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RiderDocumentFindManyArgs>(args?: SelectSubset<T, RiderDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RiderDocument.
     * @param {RiderDocumentCreateArgs} args - Arguments to create a RiderDocument.
     * @example
     * // Create one RiderDocument
     * const RiderDocument = await prisma.riderDocument.create({
     *   data: {
     *     // ... data to create a RiderDocument
     *   }
     * })
     * 
     */
    create<T extends RiderDocumentCreateArgs>(args: SelectSubset<T, RiderDocumentCreateArgs<ExtArgs>>): Prisma__RiderDocumentClient<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RiderDocuments.
     * @param {RiderDocumentCreateManyArgs} args - Arguments to create many RiderDocuments.
     * @example
     * // Create many RiderDocuments
     * const riderDocument = await prisma.riderDocument.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RiderDocumentCreateManyArgs>(args?: SelectSubset<T, RiderDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RiderDocuments and returns the data saved in the database.
     * @param {RiderDocumentCreateManyAndReturnArgs} args - Arguments to create many RiderDocuments.
     * @example
     * // Create many RiderDocuments
     * const riderDocument = await prisma.riderDocument.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RiderDocuments and only return the `id`
     * const riderDocumentWithIdOnly = await prisma.riderDocument.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RiderDocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, RiderDocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RiderDocument.
     * @param {RiderDocumentDeleteArgs} args - Arguments to delete one RiderDocument.
     * @example
     * // Delete one RiderDocument
     * const RiderDocument = await prisma.riderDocument.delete({
     *   where: {
     *     // ... filter to delete one RiderDocument
     *   }
     * })
     * 
     */
    delete<T extends RiderDocumentDeleteArgs>(args: SelectSubset<T, RiderDocumentDeleteArgs<ExtArgs>>): Prisma__RiderDocumentClient<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RiderDocument.
     * @param {RiderDocumentUpdateArgs} args - Arguments to update one RiderDocument.
     * @example
     * // Update one RiderDocument
     * const riderDocument = await prisma.riderDocument.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RiderDocumentUpdateArgs>(args: SelectSubset<T, RiderDocumentUpdateArgs<ExtArgs>>): Prisma__RiderDocumentClient<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RiderDocuments.
     * @param {RiderDocumentDeleteManyArgs} args - Arguments to filter RiderDocuments to delete.
     * @example
     * // Delete a few RiderDocuments
     * const { count } = await prisma.riderDocument.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RiderDocumentDeleteManyArgs>(args?: SelectSubset<T, RiderDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiderDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderDocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RiderDocuments
     * const riderDocument = await prisma.riderDocument.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RiderDocumentUpdateManyArgs>(args: SelectSubset<T, RiderDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiderDocuments and returns the data updated in the database.
     * @param {RiderDocumentUpdateManyAndReturnArgs} args - Arguments to update many RiderDocuments.
     * @example
     * // Update many RiderDocuments
     * const riderDocument = await prisma.riderDocument.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RiderDocuments and only return the `id`
     * const riderDocumentWithIdOnly = await prisma.riderDocument.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RiderDocumentUpdateManyAndReturnArgs>(args: SelectSubset<T, RiderDocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RiderDocument.
     * @param {RiderDocumentUpsertArgs} args - Arguments to update or create a RiderDocument.
     * @example
     * // Update or create a RiderDocument
     * const riderDocument = await prisma.riderDocument.upsert({
     *   create: {
     *     // ... data to create a RiderDocument
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RiderDocument we want to update
     *   }
     * })
     */
    upsert<T extends RiderDocumentUpsertArgs>(args: SelectSubset<T, RiderDocumentUpsertArgs<ExtArgs>>): Prisma__RiderDocumentClient<$Result.GetResult<Prisma.$RiderDocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RiderDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderDocumentCountArgs} args - Arguments to filter RiderDocuments to count.
     * @example
     * // Count the number of RiderDocuments
     * const count = await prisma.riderDocument.count({
     *   where: {
     *     // ... the filter for the RiderDocuments we want to count
     *   }
     * })
    **/
    count<T extends RiderDocumentCountArgs>(
      args?: Subset<T, RiderDocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RiderDocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RiderDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RiderDocumentAggregateArgs>(args: Subset<T, RiderDocumentAggregateArgs>): Prisma.PrismaPromise<GetRiderDocumentAggregateType<T>>

    /**
     * Group by RiderDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderDocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RiderDocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RiderDocumentGroupByArgs['orderBy'] }
        : { orderBy?: RiderDocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RiderDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRiderDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RiderDocument model
   */
  readonly fields: RiderDocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RiderDocument.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RiderDocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    riderApplication<T extends RiderApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RiderApplicationDefaultArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RiderDocument model
   */
  interface RiderDocumentFieldRefs {
    readonly id: FieldRef<"RiderDocument", 'String'>
    readonly riderApplicationId: FieldRef<"RiderDocument", 'String'>
    readonly documentType: FieldRef<"RiderDocument", 'String'>
    readonly fileName: FieldRef<"RiderDocument", 'String'>
    readonly fileUrl: FieldRef<"RiderDocument", 'String'>
    readonly fileSize: FieldRef<"RiderDocument", 'Int'>
    readonly mimeType: FieldRef<"RiderDocument", 'String'>
    readonly uploadedAt: FieldRef<"RiderDocument", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RiderDocument findUnique
   */
  export type RiderDocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which RiderDocument to fetch.
     */
    where: RiderDocumentWhereUniqueInput
  }

  /**
   * RiderDocument findUniqueOrThrow
   */
  export type RiderDocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which RiderDocument to fetch.
     */
    where: RiderDocumentWhereUniqueInput
  }

  /**
   * RiderDocument findFirst
   */
  export type RiderDocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which RiderDocument to fetch.
     */
    where?: RiderDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderDocuments to fetch.
     */
    orderBy?: RiderDocumentOrderByWithRelationInput | RiderDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiderDocuments.
     */
    cursor?: RiderDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiderDocuments.
     */
    distinct?: RiderDocumentScalarFieldEnum | RiderDocumentScalarFieldEnum[]
  }

  /**
   * RiderDocument findFirstOrThrow
   */
  export type RiderDocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which RiderDocument to fetch.
     */
    where?: RiderDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderDocuments to fetch.
     */
    orderBy?: RiderDocumentOrderByWithRelationInput | RiderDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiderDocuments.
     */
    cursor?: RiderDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiderDocuments.
     */
    distinct?: RiderDocumentScalarFieldEnum | RiderDocumentScalarFieldEnum[]
  }

  /**
   * RiderDocument findMany
   */
  export type RiderDocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which RiderDocuments to fetch.
     */
    where?: RiderDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderDocuments to fetch.
     */
    orderBy?: RiderDocumentOrderByWithRelationInput | RiderDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RiderDocuments.
     */
    cursor?: RiderDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderDocuments.
     */
    skip?: number
    distinct?: RiderDocumentScalarFieldEnum | RiderDocumentScalarFieldEnum[]
  }

  /**
   * RiderDocument create
   */
  export type RiderDocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a RiderDocument.
     */
    data: XOR<RiderDocumentCreateInput, RiderDocumentUncheckedCreateInput>
  }

  /**
   * RiderDocument createMany
   */
  export type RiderDocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RiderDocuments.
     */
    data: RiderDocumentCreateManyInput | RiderDocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RiderDocument createManyAndReturn
   */
  export type RiderDocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * The data used to create many RiderDocuments.
     */
    data: RiderDocumentCreateManyInput | RiderDocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiderDocument update
   */
  export type RiderDocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a RiderDocument.
     */
    data: XOR<RiderDocumentUpdateInput, RiderDocumentUncheckedUpdateInput>
    /**
     * Choose, which RiderDocument to update.
     */
    where: RiderDocumentWhereUniqueInput
  }

  /**
   * RiderDocument updateMany
   */
  export type RiderDocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RiderDocuments.
     */
    data: XOR<RiderDocumentUpdateManyMutationInput, RiderDocumentUncheckedUpdateManyInput>
    /**
     * Filter which RiderDocuments to update
     */
    where?: RiderDocumentWhereInput
    /**
     * Limit how many RiderDocuments to update.
     */
    limit?: number
  }

  /**
   * RiderDocument updateManyAndReturn
   */
  export type RiderDocumentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * The data used to update RiderDocuments.
     */
    data: XOR<RiderDocumentUpdateManyMutationInput, RiderDocumentUncheckedUpdateManyInput>
    /**
     * Filter which RiderDocuments to update
     */
    where?: RiderDocumentWhereInput
    /**
     * Limit how many RiderDocuments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiderDocument upsert
   */
  export type RiderDocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the RiderDocument to update in case it exists.
     */
    where: RiderDocumentWhereUniqueInput
    /**
     * In case the RiderDocument found by the `where` argument doesn't exist, create a new RiderDocument with this data.
     */
    create: XOR<RiderDocumentCreateInput, RiderDocumentUncheckedCreateInput>
    /**
     * In case the RiderDocument was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RiderDocumentUpdateInput, RiderDocumentUncheckedUpdateInput>
  }

  /**
   * RiderDocument delete
   */
  export type RiderDocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
    /**
     * Filter which RiderDocument to delete.
     */
    where: RiderDocumentWhereUniqueInput
  }

  /**
   * RiderDocument deleteMany
   */
  export type RiderDocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiderDocuments to delete
     */
    where?: RiderDocumentWhereInput
    /**
     * Limit how many RiderDocuments to delete.
     */
    limit?: number
  }

  /**
   * RiderDocument without action
   */
  export type RiderDocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderDocument
     */
    select?: RiderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderDocument
     */
    omit?: RiderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderDocumentInclude<ExtArgs> | null
  }


  /**
   * Model Driver
   */

  export type AggregateDriver = {
    _count: DriverCountAggregateOutputType | null
    _avg: DriverAvgAggregateOutputType | null
    _sum: DriverSumAggregateOutputType | null
    _min: DriverMinAggregateOutputType | null
    _max: DriverMaxAggregateOutputType | null
  }

  export type DriverAvgAggregateOutputType = {
    totalRides: number | null
    totalEarnings: Decimal | null
    rating: Decimal | null
    ratingCount: number | null
  }

  export type DriverSumAggregateOutputType = {
    totalRides: number | null
    totalEarnings: Decimal | null
    rating: Decimal | null
    ratingCount: number | null
  }

  export type DriverMinAggregateOutputType = {
    id: string | null
    userId: string | null
    riderApplicationId: string | null
    driverId: string | null
    isOnline: boolean | null
    status: $Enums.DriverStatus | null
    lastLocationUpdate: Date | null
    totalRides: number | null
    totalEarnings: Decimal | null
    rating: Decimal | null
    ratingCount: number | null
    isVerified: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    rideServiceId: string | null
    updatedBy: string | null
  }

  export type DriverMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    riderApplicationId: string | null
    driverId: string | null
    isOnline: boolean | null
    status: $Enums.DriverStatus | null
    lastLocationUpdate: Date | null
    totalRides: number | null
    totalEarnings: Decimal | null
    rating: Decimal | null
    ratingCount: number | null
    isVerified: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    rideServiceId: string | null
    updatedBy: string | null
  }

  export type DriverCountAggregateOutputType = {
    id: number
    userId: number
    riderApplicationId: number
    driverId: number
    isOnline: number
    status: number
    currentLocation: number
    lastLocationUpdate: number
    totalRides: number
    totalEarnings: number
    rating: number
    ratingCount: number
    vehicleInfo: number
    documents: number
    preferences: number
    isVerified: number
    isActive: number
    createdAt: number
    updatedAt: number
    rideServiceId: number
    updatedBy: number
    _all: number
  }


  export type DriverAvgAggregateInputType = {
    totalRides?: true
    totalEarnings?: true
    rating?: true
    ratingCount?: true
  }

  export type DriverSumAggregateInputType = {
    totalRides?: true
    totalEarnings?: true
    rating?: true
    ratingCount?: true
  }

  export type DriverMinAggregateInputType = {
    id?: true
    userId?: true
    riderApplicationId?: true
    driverId?: true
    isOnline?: true
    status?: true
    lastLocationUpdate?: true
    totalRides?: true
    totalEarnings?: true
    rating?: true
    ratingCount?: true
    isVerified?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    rideServiceId?: true
    updatedBy?: true
  }

  export type DriverMaxAggregateInputType = {
    id?: true
    userId?: true
    riderApplicationId?: true
    driverId?: true
    isOnline?: true
    status?: true
    lastLocationUpdate?: true
    totalRides?: true
    totalEarnings?: true
    rating?: true
    ratingCount?: true
    isVerified?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    rideServiceId?: true
    updatedBy?: true
  }

  export type DriverCountAggregateInputType = {
    id?: true
    userId?: true
    riderApplicationId?: true
    driverId?: true
    isOnline?: true
    status?: true
    currentLocation?: true
    lastLocationUpdate?: true
    totalRides?: true
    totalEarnings?: true
    rating?: true
    ratingCount?: true
    vehicleInfo?: true
    documents?: true
    preferences?: true
    isVerified?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    rideServiceId?: true
    updatedBy?: true
    _all?: true
  }

  export type DriverAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Driver to aggregate.
     */
    where?: DriverWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drivers to fetch.
     */
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DriverWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drivers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Drivers
    **/
    _count?: true | DriverCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DriverAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DriverSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DriverMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DriverMaxAggregateInputType
  }

  export type GetDriverAggregateType<T extends DriverAggregateArgs> = {
        [P in keyof T & keyof AggregateDriver]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDriver[P]>
      : GetScalarType<T[P], AggregateDriver[P]>
  }




  export type DriverGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DriverWhereInput
    orderBy?: DriverOrderByWithAggregationInput | DriverOrderByWithAggregationInput[]
    by: DriverScalarFieldEnum[] | DriverScalarFieldEnum
    having?: DriverScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DriverCountAggregateInputType | true
    _avg?: DriverAvgAggregateInputType
    _sum?: DriverSumAggregateInputType
    _min?: DriverMinAggregateInputType
    _max?: DriverMaxAggregateInputType
  }

  export type DriverGroupByOutputType = {
    id: string
    userId: string
    riderApplicationId: string
    driverId: string
    isOnline: boolean
    status: $Enums.DriverStatus
    currentLocation: JsonValue | null
    lastLocationUpdate: Date | null
    totalRides: number
    totalEarnings: Decimal
    rating: Decimal | null
    ratingCount: number
    vehicleInfo: JsonValue | null
    documents: JsonValue | null
    preferences: JsonValue | null
    isVerified: boolean
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    rideServiceId: string | null
    updatedBy: string | null
    _count: DriverCountAggregateOutputType | null
    _avg: DriverAvgAggregateOutputType | null
    _sum: DriverSumAggregateOutputType | null
    _min: DriverMinAggregateOutputType | null
    _max: DriverMaxAggregateOutputType | null
  }

  type GetDriverGroupByPayload<T extends DriverGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DriverGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DriverGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DriverGroupByOutputType[P]>
            : GetScalarType<T[P], DriverGroupByOutputType[P]>
        }
      >
    >


  export type DriverSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    riderApplicationId?: boolean
    driverId?: boolean
    isOnline?: boolean
    status?: boolean
    currentLocation?: boolean
    lastLocationUpdate?: boolean
    totalRides?: boolean
    totalEarnings?: boolean
    rating?: boolean
    ratingCount?: boolean
    vehicleInfo?: boolean
    documents?: boolean
    preferences?: boolean
    isVerified?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    updatedBy?: boolean
    earnings?: boolean | Driver$earningsArgs<ExtArgs>
    locationHistory?: boolean | Driver$locationHistoryArgs<ExtArgs>
    rideService?: boolean | Driver$rideServiceArgs<ExtArgs>
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    rideRequests?: boolean | Driver$rideRequestsArgs<ExtArgs>
    rides?: boolean | Driver$ridesArgs<ExtArgs>
    _count?: boolean | DriverCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driver"]>

  export type DriverSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    riderApplicationId?: boolean
    driverId?: boolean
    isOnline?: boolean
    status?: boolean
    currentLocation?: boolean
    lastLocationUpdate?: boolean
    totalRides?: boolean
    totalEarnings?: boolean
    rating?: boolean
    ratingCount?: boolean
    vehicleInfo?: boolean
    documents?: boolean
    preferences?: boolean
    isVerified?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    updatedBy?: boolean
    rideService?: boolean | Driver$rideServiceArgs<ExtArgs>
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driver"]>

  export type DriverSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    riderApplicationId?: boolean
    driverId?: boolean
    isOnline?: boolean
    status?: boolean
    currentLocation?: boolean
    lastLocationUpdate?: boolean
    totalRides?: boolean
    totalEarnings?: boolean
    rating?: boolean
    ratingCount?: boolean
    vehicleInfo?: boolean
    documents?: boolean
    preferences?: boolean
    isVerified?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    updatedBy?: boolean
    rideService?: boolean | Driver$rideServiceArgs<ExtArgs>
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driver"]>

  export type DriverSelectScalar = {
    id?: boolean
    userId?: boolean
    riderApplicationId?: boolean
    driverId?: boolean
    isOnline?: boolean
    status?: boolean
    currentLocation?: boolean
    lastLocationUpdate?: boolean
    totalRides?: boolean
    totalEarnings?: boolean
    rating?: boolean
    ratingCount?: boolean
    vehicleInfo?: boolean
    documents?: boolean
    preferences?: boolean
    isVerified?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    updatedBy?: boolean
  }

  export type DriverOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "riderApplicationId" | "driverId" | "isOnline" | "status" | "currentLocation" | "lastLocationUpdate" | "totalRides" | "totalEarnings" | "rating" | "ratingCount" | "vehicleInfo" | "documents" | "preferences" | "isVerified" | "isActive" | "createdAt" | "updatedAt" | "rideServiceId" | "updatedBy", ExtArgs["result"]["driver"]>
  export type DriverInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    earnings?: boolean | Driver$earningsArgs<ExtArgs>
    locationHistory?: boolean | Driver$locationHistoryArgs<ExtArgs>
    rideService?: boolean | Driver$rideServiceArgs<ExtArgs>
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    rideRequests?: boolean | Driver$rideRequestsArgs<ExtArgs>
    rides?: boolean | Driver$ridesArgs<ExtArgs>
    _count?: boolean | DriverCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DriverIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rideService?: boolean | Driver$rideServiceArgs<ExtArgs>
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DriverIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rideService?: boolean | Driver$rideServiceArgs<ExtArgs>
    riderApplication?: boolean | RiderApplicationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DriverPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Driver"
    objects: {
      earnings: Prisma.$DriverEarningPayload<ExtArgs>[]
      locationHistory: Prisma.$DriverLocationPayload<ExtArgs>[]
      rideService: Prisma.$RideServicePayload<ExtArgs> | null
      riderApplication: Prisma.$RiderApplicationPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      rideRequests: Prisma.$RideRequestPayload<ExtArgs>[]
      rides: Prisma.$RidePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      riderApplicationId: string
      driverId: string
      isOnline: boolean
      status: $Enums.DriverStatus
      currentLocation: Prisma.JsonValue | null
      lastLocationUpdate: Date | null
      totalRides: number
      totalEarnings: Prisma.Decimal
      rating: Prisma.Decimal | null
      ratingCount: number
      vehicleInfo: Prisma.JsonValue | null
      documents: Prisma.JsonValue | null
      preferences: Prisma.JsonValue | null
      isVerified: boolean
      isActive: boolean
      createdAt: Date
      updatedAt: Date
      rideServiceId: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["driver"]>
    composites: {}
  }

  type DriverGetPayload<S extends boolean | null | undefined | DriverDefaultArgs> = $Result.GetResult<Prisma.$DriverPayload, S>

  type DriverCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DriverFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DriverCountAggregateInputType | true
    }

  export interface DriverDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Driver'], meta: { name: 'Driver' } }
    /**
     * Find zero or one Driver that matches the filter.
     * @param {DriverFindUniqueArgs} args - Arguments to find a Driver
     * @example
     * // Get one Driver
     * const driver = await prisma.driver.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DriverFindUniqueArgs>(args: SelectSubset<T, DriverFindUniqueArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Driver that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DriverFindUniqueOrThrowArgs} args - Arguments to find a Driver
     * @example
     * // Get one Driver
     * const driver = await prisma.driver.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DriverFindUniqueOrThrowArgs>(args: SelectSubset<T, DriverFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Driver that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverFindFirstArgs} args - Arguments to find a Driver
     * @example
     * // Get one Driver
     * const driver = await prisma.driver.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DriverFindFirstArgs>(args?: SelectSubset<T, DriverFindFirstArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Driver that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverFindFirstOrThrowArgs} args - Arguments to find a Driver
     * @example
     * // Get one Driver
     * const driver = await prisma.driver.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DriverFindFirstOrThrowArgs>(args?: SelectSubset<T, DriverFindFirstOrThrowArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Drivers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Drivers
     * const drivers = await prisma.driver.findMany()
     * 
     * // Get first 10 Drivers
     * const drivers = await prisma.driver.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const driverWithIdOnly = await prisma.driver.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DriverFindManyArgs>(args?: SelectSubset<T, DriverFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Driver.
     * @param {DriverCreateArgs} args - Arguments to create a Driver.
     * @example
     * // Create one Driver
     * const Driver = await prisma.driver.create({
     *   data: {
     *     // ... data to create a Driver
     *   }
     * })
     * 
     */
    create<T extends DriverCreateArgs>(args: SelectSubset<T, DriverCreateArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Drivers.
     * @param {DriverCreateManyArgs} args - Arguments to create many Drivers.
     * @example
     * // Create many Drivers
     * const driver = await prisma.driver.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DriverCreateManyArgs>(args?: SelectSubset<T, DriverCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Drivers and returns the data saved in the database.
     * @param {DriverCreateManyAndReturnArgs} args - Arguments to create many Drivers.
     * @example
     * // Create many Drivers
     * const driver = await prisma.driver.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Drivers and only return the `id`
     * const driverWithIdOnly = await prisma.driver.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DriverCreateManyAndReturnArgs>(args?: SelectSubset<T, DriverCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Driver.
     * @param {DriverDeleteArgs} args - Arguments to delete one Driver.
     * @example
     * // Delete one Driver
     * const Driver = await prisma.driver.delete({
     *   where: {
     *     // ... filter to delete one Driver
     *   }
     * })
     * 
     */
    delete<T extends DriverDeleteArgs>(args: SelectSubset<T, DriverDeleteArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Driver.
     * @param {DriverUpdateArgs} args - Arguments to update one Driver.
     * @example
     * // Update one Driver
     * const driver = await prisma.driver.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DriverUpdateArgs>(args: SelectSubset<T, DriverUpdateArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Drivers.
     * @param {DriverDeleteManyArgs} args - Arguments to filter Drivers to delete.
     * @example
     * // Delete a few Drivers
     * const { count } = await prisma.driver.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DriverDeleteManyArgs>(args?: SelectSubset<T, DriverDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Drivers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Drivers
     * const driver = await prisma.driver.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DriverUpdateManyArgs>(args: SelectSubset<T, DriverUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Drivers and returns the data updated in the database.
     * @param {DriverUpdateManyAndReturnArgs} args - Arguments to update many Drivers.
     * @example
     * // Update many Drivers
     * const driver = await prisma.driver.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Drivers and only return the `id`
     * const driverWithIdOnly = await prisma.driver.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DriverUpdateManyAndReturnArgs>(args: SelectSubset<T, DriverUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Driver.
     * @param {DriverUpsertArgs} args - Arguments to update or create a Driver.
     * @example
     * // Update or create a Driver
     * const driver = await prisma.driver.upsert({
     *   create: {
     *     // ... data to create a Driver
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Driver we want to update
     *   }
     * })
     */
    upsert<T extends DriverUpsertArgs>(args: SelectSubset<T, DriverUpsertArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Drivers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverCountArgs} args - Arguments to filter Drivers to count.
     * @example
     * // Count the number of Drivers
     * const count = await prisma.driver.count({
     *   where: {
     *     // ... the filter for the Drivers we want to count
     *   }
     * })
    **/
    count<T extends DriverCountArgs>(
      args?: Subset<T, DriverCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DriverCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Driver.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DriverAggregateArgs>(args: Subset<T, DriverAggregateArgs>): Prisma.PrismaPromise<GetDriverAggregateType<T>>

    /**
     * Group by Driver.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DriverGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DriverGroupByArgs['orderBy'] }
        : { orderBy?: DriverGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DriverGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDriverGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Driver model
   */
  readonly fields: DriverFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Driver.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DriverClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    earnings<T extends Driver$earningsArgs<ExtArgs> = {}>(args?: Subset<T, Driver$earningsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    locationHistory<T extends Driver$locationHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Driver$locationHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rideService<T extends Driver$rideServiceArgs<ExtArgs> = {}>(args?: Subset<T, Driver$rideServiceArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    riderApplication<T extends RiderApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RiderApplicationDefaultArgs<ExtArgs>>): Prisma__RiderApplicationClient<$Result.GetResult<Prisma.$RiderApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rideRequests<T extends Driver$rideRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Driver$rideRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rides<T extends Driver$ridesArgs<ExtArgs> = {}>(args?: Subset<T, Driver$ridesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Driver model
   */
  interface DriverFieldRefs {
    readonly id: FieldRef<"Driver", 'String'>
    readonly userId: FieldRef<"Driver", 'String'>
    readonly riderApplicationId: FieldRef<"Driver", 'String'>
    readonly driverId: FieldRef<"Driver", 'String'>
    readonly isOnline: FieldRef<"Driver", 'Boolean'>
    readonly status: FieldRef<"Driver", 'DriverStatus'>
    readonly currentLocation: FieldRef<"Driver", 'Json'>
    readonly lastLocationUpdate: FieldRef<"Driver", 'DateTime'>
    readonly totalRides: FieldRef<"Driver", 'Int'>
    readonly totalEarnings: FieldRef<"Driver", 'Decimal'>
    readonly rating: FieldRef<"Driver", 'Decimal'>
    readonly ratingCount: FieldRef<"Driver", 'Int'>
    readonly vehicleInfo: FieldRef<"Driver", 'Json'>
    readonly documents: FieldRef<"Driver", 'Json'>
    readonly preferences: FieldRef<"Driver", 'Json'>
    readonly isVerified: FieldRef<"Driver", 'Boolean'>
    readonly isActive: FieldRef<"Driver", 'Boolean'>
    readonly createdAt: FieldRef<"Driver", 'DateTime'>
    readonly updatedAt: FieldRef<"Driver", 'DateTime'>
    readonly rideServiceId: FieldRef<"Driver", 'String'>
    readonly updatedBy: FieldRef<"Driver", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Driver findUnique
   */
  export type DriverFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Driver to fetch.
     */
    where: DriverWhereUniqueInput
  }

  /**
   * Driver findUniqueOrThrow
   */
  export type DriverFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Driver to fetch.
     */
    where: DriverWhereUniqueInput
  }

  /**
   * Driver findFirst
   */
  export type DriverFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Driver to fetch.
     */
    where?: DriverWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drivers to fetch.
     */
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Drivers.
     */
    cursor?: DriverWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drivers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Drivers.
     */
    distinct?: DriverScalarFieldEnum | DriverScalarFieldEnum[]
  }

  /**
   * Driver findFirstOrThrow
   */
  export type DriverFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Driver to fetch.
     */
    where?: DriverWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drivers to fetch.
     */
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Drivers.
     */
    cursor?: DriverWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drivers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Drivers.
     */
    distinct?: DriverScalarFieldEnum | DriverScalarFieldEnum[]
  }

  /**
   * Driver findMany
   */
  export type DriverFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Drivers to fetch.
     */
    where?: DriverWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drivers to fetch.
     */
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Drivers.
     */
    cursor?: DriverWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drivers.
     */
    skip?: number
    distinct?: DriverScalarFieldEnum | DriverScalarFieldEnum[]
  }

  /**
   * Driver create
   */
  export type DriverCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * The data needed to create a Driver.
     */
    data: XOR<DriverCreateInput, DriverUncheckedCreateInput>
  }

  /**
   * Driver createMany
   */
  export type DriverCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Drivers.
     */
    data: DriverCreateManyInput | DriverCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Driver createManyAndReturn
   */
  export type DriverCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * The data used to create many Drivers.
     */
    data: DriverCreateManyInput | DriverCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Driver update
   */
  export type DriverUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * The data needed to update a Driver.
     */
    data: XOR<DriverUpdateInput, DriverUncheckedUpdateInput>
    /**
     * Choose, which Driver to update.
     */
    where: DriverWhereUniqueInput
  }

  /**
   * Driver updateMany
   */
  export type DriverUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Drivers.
     */
    data: XOR<DriverUpdateManyMutationInput, DriverUncheckedUpdateManyInput>
    /**
     * Filter which Drivers to update
     */
    where?: DriverWhereInput
    /**
     * Limit how many Drivers to update.
     */
    limit?: number
  }

  /**
   * Driver updateManyAndReturn
   */
  export type DriverUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * The data used to update Drivers.
     */
    data: XOR<DriverUpdateManyMutationInput, DriverUncheckedUpdateManyInput>
    /**
     * Filter which Drivers to update
     */
    where?: DriverWhereInput
    /**
     * Limit how many Drivers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Driver upsert
   */
  export type DriverUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * The filter to search for the Driver to update in case it exists.
     */
    where: DriverWhereUniqueInput
    /**
     * In case the Driver found by the `where` argument doesn't exist, create a new Driver with this data.
     */
    create: XOR<DriverCreateInput, DriverUncheckedCreateInput>
    /**
     * In case the Driver was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DriverUpdateInput, DriverUncheckedUpdateInput>
  }

  /**
   * Driver delete
   */
  export type DriverDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter which Driver to delete.
     */
    where: DriverWhereUniqueInput
  }

  /**
   * Driver deleteMany
   */
  export type DriverDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Drivers to delete
     */
    where?: DriverWhereInput
    /**
     * Limit how many Drivers to delete.
     */
    limit?: number
  }

  /**
   * Driver.earnings
   */
  export type Driver$earningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    where?: DriverEarningWhereInput
    orderBy?: DriverEarningOrderByWithRelationInput | DriverEarningOrderByWithRelationInput[]
    cursor?: DriverEarningWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DriverEarningScalarFieldEnum | DriverEarningScalarFieldEnum[]
  }

  /**
   * Driver.locationHistory
   */
  export type Driver$locationHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    where?: DriverLocationWhereInput
    orderBy?: DriverLocationOrderByWithRelationInput | DriverLocationOrderByWithRelationInput[]
    cursor?: DriverLocationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DriverLocationScalarFieldEnum | DriverLocationScalarFieldEnum[]
  }

  /**
   * Driver.rideService
   */
  export type Driver$rideServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    where?: RideServiceWhereInput
  }

  /**
   * Driver.rideRequests
   */
  export type Driver$rideRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    where?: RideRequestWhereInput
    orderBy?: RideRequestOrderByWithRelationInput | RideRequestOrderByWithRelationInput[]
    cursor?: RideRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RideRequestScalarFieldEnum | RideRequestScalarFieldEnum[]
  }

  /**
   * Driver.rides
   */
  export type Driver$ridesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    where?: RideWhereInput
    orderBy?: RideOrderByWithRelationInput | RideOrderByWithRelationInput[]
    cursor?: RideWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RideScalarFieldEnum | RideScalarFieldEnum[]
  }

  /**
   * Driver without action
   */
  export type DriverDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
  }


  /**
   * Model DriverLocation
   */

  export type AggregateDriverLocation = {
    _count: DriverLocationCountAggregateOutputType | null
    _avg: DriverLocationAvgAggregateOutputType | null
    _sum: DriverLocationSumAggregateOutputType | null
    _min: DriverLocationMinAggregateOutputType | null
    _max: DriverLocationMaxAggregateOutputType | null
  }

  export type DriverLocationAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
    accuracy: number | null
    speed: number | null
    heading: number | null
  }

  export type DriverLocationSumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
    accuracy: number | null
    speed: number | null
    heading: number | null
  }

  export type DriverLocationMinAggregateOutputType = {
    id: string | null
    driverId: string | null
    latitude: number | null
    longitude: number | null
    address: string | null
    accuracy: number | null
    speed: number | null
    heading: number | null
    timestamp: Date | null
  }

  export type DriverLocationMaxAggregateOutputType = {
    id: string | null
    driverId: string | null
    latitude: number | null
    longitude: number | null
    address: string | null
    accuracy: number | null
    speed: number | null
    heading: number | null
    timestamp: Date | null
  }

  export type DriverLocationCountAggregateOutputType = {
    id: number
    driverId: number
    latitude: number
    longitude: number
    address: number
    accuracy: number
    speed: number
    heading: number
    timestamp: number
    _all: number
  }


  export type DriverLocationAvgAggregateInputType = {
    latitude?: true
    longitude?: true
    accuracy?: true
    speed?: true
    heading?: true
  }

  export type DriverLocationSumAggregateInputType = {
    latitude?: true
    longitude?: true
    accuracy?: true
    speed?: true
    heading?: true
  }

  export type DriverLocationMinAggregateInputType = {
    id?: true
    driverId?: true
    latitude?: true
    longitude?: true
    address?: true
    accuracy?: true
    speed?: true
    heading?: true
    timestamp?: true
  }

  export type DriverLocationMaxAggregateInputType = {
    id?: true
    driverId?: true
    latitude?: true
    longitude?: true
    address?: true
    accuracy?: true
    speed?: true
    heading?: true
    timestamp?: true
  }

  export type DriverLocationCountAggregateInputType = {
    id?: true
    driverId?: true
    latitude?: true
    longitude?: true
    address?: true
    accuracy?: true
    speed?: true
    heading?: true
    timestamp?: true
    _all?: true
  }

  export type DriverLocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DriverLocation to aggregate.
     */
    where?: DriverLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DriverLocations to fetch.
     */
    orderBy?: DriverLocationOrderByWithRelationInput | DriverLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DriverLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DriverLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DriverLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DriverLocations
    **/
    _count?: true | DriverLocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DriverLocationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DriverLocationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DriverLocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DriverLocationMaxAggregateInputType
  }

  export type GetDriverLocationAggregateType<T extends DriverLocationAggregateArgs> = {
        [P in keyof T & keyof AggregateDriverLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDriverLocation[P]>
      : GetScalarType<T[P], AggregateDriverLocation[P]>
  }




  export type DriverLocationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DriverLocationWhereInput
    orderBy?: DriverLocationOrderByWithAggregationInput | DriverLocationOrderByWithAggregationInput[]
    by: DriverLocationScalarFieldEnum[] | DriverLocationScalarFieldEnum
    having?: DriverLocationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DriverLocationCountAggregateInputType | true
    _avg?: DriverLocationAvgAggregateInputType
    _sum?: DriverLocationSumAggregateInputType
    _min?: DriverLocationMinAggregateInputType
    _max?: DriverLocationMaxAggregateInputType
  }

  export type DriverLocationGroupByOutputType = {
    id: string
    driverId: string
    latitude: number
    longitude: number
    address: string | null
    accuracy: number | null
    speed: number | null
    heading: number | null
    timestamp: Date
    _count: DriverLocationCountAggregateOutputType | null
    _avg: DriverLocationAvgAggregateOutputType | null
    _sum: DriverLocationSumAggregateOutputType | null
    _min: DriverLocationMinAggregateOutputType | null
    _max: DriverLocationMaxAggregateOutputType | null
  }

  type GetDriverLocationGroupByPayload<T extends DriverLocationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DriverLocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DriverLocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DriverLocationGroupByOutputType[P]>
            : GetScalarType<T[P], DriverLocationGroupByOutputType[P]>
        }
      >
    >


  export type DriverLocationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    driverId?: boolean
    latitude?: boolean
    longitude?: boolean
    address?: boolean
    accuracy?: boolean
    speed?: boolean
    heading?: boolean
    timestamp?: boolean
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driverLocation"]>

  export type DriverLocationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    driverId?: boolean
    latitude?: boolean
    longitude?: boolean
    address?: boolean
    accuracy?: boolean
    speed?: boolean
    heading?: boolean
    timestamp?: boolean
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driverLocation"]>

  export type DriverLocationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    driverId?: boolean
    latitude?: boolean
    longitude?: boolean
    address?: boolean
    accuracy?: boolean
    speed?: boolean
    heading?: boolean
    timestamp?: boolean
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driverLocation"]>

  export type DriverLocationSelectScalar = {
    id?: boolean
    driverId?: boolean
    latitude?: boolean
    longitude?: boolean
    address?: boolean
    accuracy?: boolean
    speed?: boolean
    heading?: boolean
    timestamp?: boolean
  }

  export type DriverLocationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "driverId" | "latitude" | "longitude" | "address" | "accuracy" | "speed" | "heading" | "timestamp", ExtArgs["result"]["driverLocation"]>
  export type DriverLocationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }
  export type DriverLocationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }
  export type DriverLocationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }

  export type $DriverLocationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DriverLocation"
    objects: {
      driver: Prisma.$DriverPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      driverId: string
      latitude: number
      longitude: number
      address: string | null
      accuracy: number | null
      speed: number | null
      heading: number | null
      timestamp: Date
    }, ExtArgs["result"]["driverLocation"]>
    composites: {}
  }

  type DriverLocationGetPayload<S extends boolean | null | undefined | DriverLocationDefaultArgs> = $Result.GetResult<Prisma.$DriverLocationPayload, S>

  type DriverLocationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DriverLocationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DriverLocationCountAggregateInputType | true
    }

  export interface DriverLocationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DriverLocation'], meta: { name: 'DriverLocation' } }
    /**
     * Find zero or one DriverLocation that matches the filter.
     * @param {DriverLocationFindUniqueArgs} args - Arguments to find a DriverLocation
     * @example
     * // Get one DriverLocation
     * const driverLocation = await prisma.driverLocation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DriverLocationFindUniqueArgs>(args: SelectSubset<T, DriverLocationFindUniqueArgs<ExtArgs>>): Prisma__DriverLocationClient<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DriverLocation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DriverLocationFindUniqueOrThrowArgs} args - Arguments to find a DriverLocation
     * @example
     * // Get one DriverLocation
     * const driverLocation = await prisma.driverLocation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DriverLocationFindUniqueOrThrowArgs>(args: SelectSubset<T, DriverLocationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DriverLocationClient<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DriverLocation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverLocationFindFirstArgs} args - Arguments to find a DriverLocation
     * @example
     * // Get one DriverLocation
     * const driverLocation = await prisma.driverLocation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DriverLocationFindFirstArgs>(args?: SelectSubset<T, DriverLocationFindFirstArgs<ExtArgs>>): Prisma__DriverLocationClient<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DriverLocation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverLocationFindFirstOrThrowArgs} args - Arguments to find a DriverLocation
     * @example
     * // Get one DriverLocation
     * const driverLocation = await prisma.driverLocation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DriverLocationFindFirstOrThrowArgs>(args?: SelectSubset<T, DriverLocationFindFirstOrThrowArgs<ExtArgs>>): Prisma__DriverLocationClient<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DriverLocations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverLocationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DriverLocations
     * const driverLocations = await prisma.driverLocation.findMany()
     * 
     * // Get first 10 DriverLocations
     * const driverLocations = await prisma.driverLocation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const driverLocationWithIdOnly = await prisma.driverLocation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DriverLocationFindManyArgs>(args?: SelectSubset<T, DriverLocationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DriverLocation.
     * @param {DriverLocationCreateArgs} args - Arguments to create a DriverLocation.
     * @example
     * // Create one DriverLocation
     * const DriverLocation = await prisma.driverLocation.create({
     *   data: {
     *     // ... data to create a DriverLocation
     *   }
     * })
     * 
     */
    create<T extends DriverLocationCreateArgs>(args: SelectSubset<T, DriverLocationCreateArgs<ExtArgs>>): Prisma__DriverLocationClient<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DriverLocations.
     * @param {DriverLocationCreateManyArgs} args - Arguments to create many DriverLocations.
     * @example
     * // Create many DriverLocations
     * const driverLocation = await prisma.driverLocation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DriverLocationCreateManyArgs>(args?: SelectSubset<T, DriverLocationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DriverLocations and returns the data saved in the database.
     * @param {DriverLocationCreateManyAndReturnArgs} args - Arguments to create many DriverLocations.
     * @example
     * // Create many DriverLocations
     * const driverLocation = await prisma.driverLocation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DriverLocations and only return the `id`
     * const driverLocationWithIdOnly = await prisma.driverLocation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DriverLocationCreateManyAndReturnArgs>(args?: SelectSubset<T, DriverLocationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DriverLocation.
     * @param {DriverLocationDeleteArgs} args - Arguments to delete one DriverLocation.
     * @example
     * // Delete one DriverLocation
     * const DriverLocation = await prisma.driverLocation.delete({
     *   where: {
     *     // ... filter to delete one DriverLocation
     *   }
     * })
     * 
     */
    delete<T extends DriverLocationDeleteArgs>(args: SelectSubset<T, DriverLocationDeleteArgs<ExtArgs>>): Prisma__DriverLocationClient<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DriverLocation.
     * @param {DriverLocationUpdateArgs} args - Arguments to update one DriverLocation.
     * @example
     * // Update one DriverLocation
     * const driverLocation = await prisma.driverLocation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DriverLocationUpdateArgs>(args: SelectSubset<T, DriverLocationUpdateArgs<ExtArgs>>): Prisma__DriverLocationClient<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DriverLocations.
     * @param {DriverLocationDeleteManyArgs} args - Arguments to filter DriverLocations to delete.
     * @example
     * // Delete a few DriverLocations
     * const { count } = await prisma.driverLocation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DriverLocationDeleteManyArgs>(args?: SelectSubset<T, DriverLocationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DriverLocations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverLocationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DriverLocations
     * const driverLocation = await prisma.driverLocation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DriverLocationUpdateManyArgs>(args: SelectSubset<T, DriverLocationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DriverLocations and returns the data updated in the database.
     * @param {DriverLocationUpdateManyAndReturnArgs} args - Arguments to update many DriverLocations.
     * @example
     * // Update many DriverLocations
     * const driverLocation = await prisma.driverLocation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DriverLocations and only return the `id`
     * const driverLocationWithIdOnly = await prisma.driverLocation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DriverLocationUpdateManyAndReturnArgs>(args: SelectSubset<T, DriverLocationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DriverLocation.
     * @param {DriverLocationUpsertArgs} args - Arguments to update or create a DriverLocation.
     * @example
     * // Update or create a DriverLocation
     * const driverLocation = await prisma.driverLocation.upsert({
     *   create: {
     *     // ... data to create a DriverLocation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DriverLocation we want to update
     *   }
     * })
     */
    upsert<T extends DriverLocationUpsertArgs>(args: SelectSubset<T, DriverLocationUpsertArgs<ExtArgs>>): Prisma__DriverLocationClient<$Result.GetResult<Prisma.$DriverLocationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DriverLocations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverLocationCountArgs} args - Arguments to filter DriverLocations to count.
     * @example
     * // Count the number of DriverLocations
     * const count = await prisma.driverLocation.count({
     *   where: {
     *     // ... the filter for the DriverLocations we want to count
     *   }
     * })
    **/
    count<T extends DriverLocationCountArgs>(
      args?: Subset<T, DriverLocationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DriverLocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DriverLocation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverLocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DriverLocationAggregateArgs>(args: Subset<T, DriverLocationAggregateArgs>): Prisma.PrismaPromise<GetDriverLocationAggregateType<T>>

    /**
     * Group by DriverLocation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverLocationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DriverLocationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DriverLocationGroupByArgs['orderBy'] }
        : { orderBy?: DriverLocationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DriverLocationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDriverLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DriverLocation model
   */
  readonly fields: DriverLocationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DriverLocation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DriverLocationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    driver<T extends DriverDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DriverDefaultArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DriverLocation model
   */
  interface DriverLocationFieldRefs {
    readonly id: FieldRef<"DriverLocation", 'String'>
    readonly driverId: FieldRef<"DriverLocation", 'String'>
    readonly latitude: FieldRef<"DriverLocation", 'Float'>
    readonly longitude: FieldRef<"DriverLocation", 'Float'>
    readonly address: FieldRef<"DriverLocation", 'String'>
    readonly accuracy: FieldRef<"DriverLocation", 'Float'>
    readonly speed: FieldRef<"DriverLocation", 'Float'>
    readonly heading: FieldRef<"DriverLocation", 'Float'>
    readonly timestamp: FieldRef<"DriverLocation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DriverLocation findUnique
   */
  export type DriverLocationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    /**
     * Filter, which DriverLocation to fetch.
     */
    where: DriverLocationWhereUniqueInput
  }

  /**
   * DriverLocation findUniqueOrThrow
   */
  export type DriverLocationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    /**
     * Filter, which DriverLocation to fetch.
     */
    where: DriverLocationWhereUniqueInput
  }

  /**
   * DriverLocation findFirst
   */
  export type DriverLocationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    /**
     * Filter, which DriverLocation to fetch.
     */
    where?: DriverLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DriverLocations to fetch.
     */
    orderBy?: DriverLocationOrderByWithRelationInput | DriverLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DriverLocations.
     */
    cursor?: DriverLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DriverLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DriverLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DriverLocations.
     */
    distinct?: DriverLocationScalarFieldEnum | DriverLocationScalarFieldEnum[]
  }

  /**
   * DriverLocation findFirstOrThrow
   */
  export type DriverLocationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    /**
     * Filter, which DriverLocation to fetch.
     */
    where?: DriverLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DriverLocations to fetch.
     */
    orderBy?: DriverLocationOrderByWithRelationInput | DriverLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DriverLocations.
     */
    cursor?: DriverLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DriverLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DriverLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DriverLocations.
     */
    distinct?: DriverLocationScalarFieldEnum | DriverLocationScalarFieldEnum[]
  }

  /**
   * DriverLocation findMany
   */
  export type DriverLocationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    /**
     * Filter, which DriverLocations to fetch.
     */
    where?: DriverLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DriverLocations to fetch.
     */
    orderBy?: DriverLocationOrderByWithRelationInput | DriverLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DriverLocations.
     */
    cursor?: DriverLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DriverLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DriverLocations.
     */
    skip?: number
    distinct?: DriverLocationScalarFieldEnum | DriverLocationScalarFieldEnum[]
  }

  /**
   * DriverLocation create
   */
  export type DriverLocationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    /**
     * The data needed to create a DriverLocation.
     */
    data: XOR<DriverLocationCreateInput, DriverLocationUncheckedCreateInput>
  }

  /**
   * DriverLocation createMany
   */
  export type DriverLocationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DriverLocations.
     */
    data: DriverLocationCreateManyInput | DriverLocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DriverLocation createManyAndReturn
   */
  export type DriverLocationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * The data used to create many DriverLocations.
     */
    data: DriverLocationCreateManyInput | DriverLocationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DriverLocation update
   */
  export type DriverLocationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    /**
     * The data needed to update a DriverLocation.
     */
    data: XOR<DriverLocationUpdateInput, DriverLocationUncheckedUpdateInput>
    /**
     * Choose, which DriverLocation to update.
     */
    where: DriverLocationWhereUniqueInput
  }

  /**
   * DriverLocation updateMany
   */
  export type DriverLocationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DriverLocations.
     */
    data: XOR<DriverLocationUpdateManyMutationInput, DriverLocationUncheckedUpdateManyInput>
    /**
     * Filter which DriverLocations to update
     */
    where?: DriverLocationWhereInput
    /**
     * Limit how many DriverLocations to update.
     */
    limit?: number
  }

  /**
   * DriverLocation updateManyAndReturn
   */
  export type DriverLocationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * The data used to update DriverLocations.
     */
    data: XOR<DriverLocationUpdateManyMutationInput, DriverLocationUncheckedUpdateManyInput>
    /**
     * Filter which DriverLocations to update
     */
    where?: DriverLocationWhereInput
    /**
     * Limit how many DriverLocations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DriverLocation upsert
   */
  export type DriverLocationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    /**
     * The filter to search for the DriverLocation to update in case it exists.
     */
    where: DriverLocationWhereUniqueInput
    /**
     * In case the DriverLocation found by the `where` argument doesn't exist, create a new DriverLocation with this data.
     */
    create: XOR<DriverLocationCreateInput, DriverLocationUncheckedCreateInput>
    /**
     * In case the DriverLocation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DriverLocationUpdateInput, DriverLocationUncheckedUpdateInput>
  }

  /**
   * DriverLocation delete
   */
  export type DriverLocationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
    /**
     * Filter which DriverLocation to delete.
     */
    where: DriverLocationWhereUniqueInput
  }

  /**
   * DriverLocation deleteMany
   */
  export type DriverLocationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DriverLocations to delete
     */
    where?: DriverLocationWhereInput
    /**
     * Limit how many DriverLocations to delete.
     */
    limit?: number
  }

  /**
   * DriverLocation without action
   */
  export type DriverLocationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverLocation
     */
    select?: DriverLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverLocation
     */
    omit?: DriverLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverLocationInclude<ExtArgs> | null
  }


  /**
   * Model RideRequest
   */

  export type AggregateRideRequest = {
    _count: RideRequestCountAggregateOutputType | null
    _avg: RideRequestAvgAggregateOutputType | null
    _sum: RideRequestSumAggregateOutputType | null
    _min: RideRequestMinAggregateOutputType | null
    _max: RideRequestMaxAggregateOutputType | null
  }

  export type RideRequestAvgAggregateOutputType = {
    estimatedDistance: number | null
    estimatedDuration: number | null
    estimatedPrice: Decimal | null
    actualPrice: Decimal | null
  }

  export type RideRequestSumAggregateOutputType = {
    estimatedDistance: number | null
    estimatedDuration: number | null
    estimatedPrice: Decimal | null
    actualPrice: Decimal | null
  }

  export type RideRequestMinAggregateOutputType = {
    id: string | null
    requestId: string | null
    customerId: string | null
    driverId: string | null
    rideType: $Enums.RideType | null
    estimatedDistance: number | null
    estimatedDuration: number | null
    estimatedPrice: Decimal | null
    actualPrice: Decimal | null
    status: $Enums.RideStatus | null
    paymentMethod: $Enums.RidePaymentMethod | null
    customerNotes: string | null
    driverNotes: string | null
    requestedAt: Date | null
    acceptedAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    cancelledBy: string | null
    cancellationReason: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    rideServiceId: string | null
    currency: string | null
    currencySymbol: string | null
  }

  export type RideRequestMaxAggregateOutputType = {
    id: string | null
    requestId: string | null
    customerId: string | null
    driverId: string | null
    rideType: $Enums.RideType | null
    estimatedDistance: number | null
    estimatedDuration: number | null
    estimatedPrice: Decimal | null
    actualPrice: Decimal | null
    status: $Enums.RideStatus | null
    paymentMethod: $Enums.RidePaymentMethod | null
    customerNotes: string | null
    driverNotes: string | null
    requestedAt: Date | null
    acceptedAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    cancelledBy: string | null
    cancellationReason: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    rideServiceId: string | null
    currency: string | null
    currencySymbol: string | null
  }

  export type RideRequestCountAggregateOutputType = {
    id: number
    requestId: number
    customerId: number
    driverId: number
    pickupLocation: number
    destinationLocation: number
    rideType: number
    estimatedDistance: number
    estimatedDuration: number
    estimatedPrice: number
    actualPrice: number
    status: number
    paymentMethod: number
    customerNotes: number
    driverNotes: number
    requestedAt: number
    acceptedAt: number
    startedAt: number
    completedAt: number
    cancelledAt: number
    cancelledBy: number
    cancellationReason: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    rideServiceId: number
    currency: number
    currencySymbol: number
    _all: number
  }


  export type RideRequestAvgAggregateInputType = {
    estimatedDistance?: true
    estimatedDuration?: true
    estimatedPrice?: true
    actualPrice?: true
  }

  export type RideRequestSumAggregateInputType = {
    estimatedDistance?: true
    estimatedDuration?: true
    estimatedPrice?: true
    actualPrice?: true
  }

  export type RideRequestMinAggregateInputType = {
    id?: true
    requestId?: true
    customerId?: true
    driverId?: true
    rideType?: true
    estimatedDistance?: true
    estimatedDuration?: true
    estimatedPrice?: true
    actualPrice?: true
    status?: true
    paymentMethod?: true
    customerNotes?: true
    driverNotes?: true
    requestedAt?: true
    acceptedAt?: true
    startedAt?: true
    completedAt?: true
    cancelledAt?: true
    cancelledBy?: true
    cancellationReason?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    rideServiceId?: true
    currency?: true
    currencySymbol?: true
  }

  export type RideRequestMaxAggregateInputType = {
    id?: true
    requestId?: true
    customerId?: true
    driverId?: true
    rideType?: true
    estimatedDistance?: true
    estimatedDuration?: true
    estimatedPrice?: true
    actualPrice?: true
    status?: true
    paymentMethod?: true
    customerNotes?: true
    driverNotes?: true
    requestedAt?: true
    acceptedAt?: true
    startedAt?: true
    completedAt?: true
    cancelledAt?: true
    cancelledBy?: true
    cancellationReason?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    rideServiceId?: true
    currency?: true
    currencySymbol?: true
  }

  export type RideRequestCountAggregateInputType = {
    id?: true
    requestId?: true
    customerId?: true
    driverId?: true
    pickupLocation?: true
    destinationLocation?: true
    rideType?: true
    estimatedDistance?: true
    estimatedDuration?: true
    estimatedPrice?: true
    actualPrice?: true
    status?: true
    paymentMethod?: true
    customerNotes?: true
    driverNotes?: true
    requestedAt?: true
    acceptedAt?: true
    startedAt?: true
    completedAt?: true
    cancelledAt?: true
    cancelledBy?: true
    cancellationReason?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    rideServiceId?: true
    currency?: true
    currencySymbol?: true
    _all?: true
  }

  export type RideRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RideRequest to aggregate.
     */
    where?: RideRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideRequests to fetch.
     */
    orderBy?: RideRequestOrderByWithRelationInput | RideRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RideRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RideRequests
    **/
    _count?: true | RideRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RideRequestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RideRequestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RideRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RideRequestMaxAggregateInputType
  }

  export type GetRideRequestAggregateType<T extends RideRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateRideRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRideRequest[P]>
      : GetScalarType<T[P], AggregateRideRequest[P]>
  }




  export type RideRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideRequestWhereInput
    orderBy?: RideRequestOrderByWithAggregationInput | RideRequestOrderByWithAggregationInput[]
    by: RideRequestScalarFieldEnum[] | RideRequestScalarFieldEnum
    having?: RideRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RideRequestCountAggregateInputType | true
    _avg?: RideRequestAvgAggregateInputType
    _sum?: RideRequestSumAggregateInputType
    _min?: RideRequestMinAggregateInputType
    _max?: RideRequestMaxAggregateInputType
  }

  export type RideRequestGroupByOutputType = {
    id: string
    requestId: string
    customerId: string
    driverId: string | null
    pickupLocation: JsonValue
    destinationLocation: JsonValue
    rideType: $Enums.RideType
    estimatedDistance: number | null
    estimatedDuration: number | null
    estimatedPrice: Decimal
    actualPrice: Decimal | null
    status: $Enums.RideStatus
    paymentMethod: $Enums.RidePaymentMethod
    customerNotes: string | null
    driverNotes: string | null
    requestedAt: Date
    acceptedAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    cancelledBy: string | null
    cancellationReason: string | null
    expiresAt: Date
    createdAt: Date
    updatedAt: Date
    rideServiceId: string | null
    currency: string
    currencySymbol: string
    _count: RideRequestCountAggregateOutputType | null
    _avg: RideRequestAvgAggregateOutputType | null
    _sum: RideRequestSumAggregateOutputType | null
    _min: RideRequestMinAggregateOutputType | null
    _max: RideRequestMaxAggregateOutputType | null
  }

  type GetRideRequestGroupByPayload<T extends RideRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RideRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RideRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RideRequestGroupByOutputType[P]>
            : GetScalarType<T[P], RideRequestGroupByOutputType[P]>
        }
      >
    >


  export type RideRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    requestId?: boolean
    customerId?: boolean
    driverId?: boolean
    pickupLocation?: boolean
    destinationLocation?: boolean
    rideType?: boolean
    estimatedDistance?: boolean
    estimatedDuration?: boolean
    estimatedPrice?: boolean
    actualPrice?: boolean
    status?: boolean
    paymentMethod?: boolean
    customerNotes?: boolean
    driverNotes?: boolean
    requestedAt?: boolean
    acceptedAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    currency?: boolean
    currencySymbol?: boolean
    externalTransactions?: boolean | RideRequest$externalTransactionsArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | RideRequest$driverArgs<ExtArgs>
    rideService?: boolean | RideRequest$rideServiceArgs<ExtArgs>
    ride?: boolean | RideRequest$rideArgs<ExtArgs>
    _count?: boolean | RideRequestCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rideRequest"]>

  export type RideRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    requestId?: boolean
    customerId?: boolean
    driverId?: boolean
    pickupLocation?: boolean
    destinationLocation?: boolean
    rideType?: boolean
    estimatedDistance?: boolean
    estimatedDuration?: boolean
    estimatedPrice?: boolean
    actualPrice?: boolean
    status?: boolean
    paymentMethod?: boolean
    customerNotes?: boolean
    driverNotes?: boolean
    requestedAt?: boolean
    acceptedAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    currency?: boolean
    currencySymbol?: boolean
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | RideRequest$driverArgs<ExtArgs>
    rideService?: boolean | RideRequest$rideServiceArgs<ExtArgs>
  }, ExtArgs["result"]["rideRequest"]>

  export type RideRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    requestId?: boolean
    customerId?: boolean
    driverId?: boolean
    pickupLocation?: boolean
    destinationLocation?: boolean
    rideType?: boolean
    estimatedDistance?: boolean
    estimatedDuration?: boolean
    estimatedPrice?: boolean
    actualPrice?: boolean
    status?: boolean
    paymentMethod?: boolean
    customerNotes?: boolean
    driverNotes?: boolean
    requestedAt?: boolean
    acceptedAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    currency?: boolean
    currencySymbol?: boolean
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | RideRequest$driverArgs<ExtArgs>
    rideService?: boolean | RideRequest$rideServiceArgs<ExtArgs>
  }, ExtArgs["result"]["rideRequest"]>

  export type RideRequestSelectScalar = {
    id?: boolean
    requestId?: boolean
    customerId?: boolean
    driverId?: boolean
    pickupLocation?: boolean
    destinationLocation?: boolean
    rideType?: boolean
    estimatedDistance?: boolean
    estimatedDuration?: boolean
    estimatedPrice?: boolean
    actualPrice?: boolean
    status?: boolean
    paymentMethod?: boolean
    customerNotes?: boolean
    driverNotes?: boolean
    requestedAt?: boolean
    acceptedAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    currency?: boolean
    currencySymbol?: boolean
  }

  export type RideRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "requestId" | "customerId" | "driverId" | "pickupLocation" | "destinationLocation" | "rideType" | "estimatedDistance" | "estimatedDuration" | "estimatedPrice" | "actualPrice" | "status" | "paymentMethod" | "customerNotes" | "driverNotes" | "requestedAt" | "acceptedAt" | "startedAt" | "completedAt" | "cancelledAt" | "cancelledBy" | "cancellationReason" | "expiresAt" | "createdAt" | "updatedAt" | "rideServiceId" | "currency" | "currencySymbol", ExtArgs["result"]["rideRequest"]>
  export type RideRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    externalTransactions?: boolean | RideRequest$externalTransactionsArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | RideRequest$driverArgs<ExtArgs>
    rideService?: boolean | RideRequest$rideServiceArgs<ExtArgs>
    ride?: boolean | RideRequest$rideArgs<ExtArgs>
    _count?: boolean | RideRequestCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RideRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | RideRequest$driverArgs<ExtArgs>
    rideService?: boolean | RideRequest$rideServiceArgs<ExtArgs>
  }
  export type RideRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | RideRequest$driverArgs<ExtArgs>
    rideService?: boolean | RideRequest$rideServiceArgs<ExtArgs>
  }

  export type $RideRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RideRequest"
    objects: {
      externalTransactions: Prisma.$ExternalTransactionPayload<ExtArgs>[]
      customer: Prisma.$UserPayload<ExtArgs>
      driver: Prisma.$DriverPayload<ExtArgs> | null
      rideService: Prisma.$RideServicePayload<ExtArgs> | null
      ride: Prisma.$RidePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      requestId: string
      customerId: string
      driverId: string | null
      pickupLocation: Prisma.JsonValue
      destinationLocation: Prisma.JsonValue
      rideType: $Enums.RideType
      estimatedDistance: number | null
      estimatedDuration: number | null
      estimatedPrice: Prisma.Decimal
      actualPrice: Prisma.Decimal | null
      status: $Enums.RideStatus
      paymentMethod: $Enums.RidePaymentMethod
      customerNotes: string | null
      driverNotes: string | null
      requestedAt: Date
      acceptedAt: Date | null
      startedAt: Date | null
      completedAt: Date | null
      cancelledAt: Date | null
      cancelledBy: string | null
      cancellationReason: string | null
      expiresAt: Date
      createdAt: Date
      updatedAt: Date
      rideServiceId: string | null
      currency: string
      currencySymbol: string
    }, ExtArgs["result"]["rideRequest"]>
    composites: {}
  }

  type RideRequestGetPayload<S extends boolean | null | undefined | RideRequestDefaultArgs> = $Result.GetResult<Prisma.$RideRequestPayload, S>

  type RideRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RideRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RideRequestCountAggregateInputType | true
    }

  export interface RideRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RideRequest'], meta: { name: 'RideRequest' } }
    /**
     * Find zero or one RideRequest that matches the filter.
     * @param {RideRequestFindUniqueArgs} args - Arguments to find a RideRequest
     * @example
     * // Get one RideRequest
     * const rideRequest = await prisma.rideRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RideRequestFindUniqueArgs>(args: SelectSubset<T, RideRequestFindUniqueArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RideRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RideRequestFindUniqueOrThrowArgs} args - Arguments to find a RideRequest
     * @example
     * // Get one RideRequest
     * const rideRequest = await prisma.rideRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RideRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, RideRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RideRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideRequestFindFirstArgs} args - Arguments to find a RideRequest
     * @example
     * // Get one RideRequest
     * const rideRequest = await prisma.rideRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RideRequestFindFirstArgs>(args?: SelectSubset<T, RideRequestFindFirstArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RideRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideRequestFindFirstOrThrowArgs} args - Arguments to find a RideRequest
     * @example
     * // Get one RideRequest
     * const rideRequest = await prisma.rideRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RideRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, RideRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RideRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RideRequests
     * const rideRequests = await prisma.rideRequest.findMany()
     * 
     * // Get first 10 RideRequests
     * const rideRequests = await prisma.rideRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rideRequestWithIdOnly = await prisma.rideRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RideRequestFindManyArgs>(args?: SelectSubset<T, RideRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RideRequest.
     * @param {RideRequestCreateArgs} args - Arguments to create a RideRequest.
     * @example
     * // Create one RideRequest
     * const RideRequest = await prisma.rideRequest.create({
     *   data: {
     *     // ... data to create a RideRequest
     *   }
     * })
     * 
     */
    create<T extends RideRequestCreateArgs>(args: SelectSubset<T, RideRequestCreateArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RideRequests.
     * @param {RideRequestCreateManyArgs} args - Arguments to create many RideRequests.
     * @example
     * // Create many RideRequests
     * const rideRequest = await prisma.rideRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RideRequestCreateManyArgs>(args?: SelectSubset<T, RideRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RideRequests and returns the data saved in the database.
     * @param {RideRequestCreateManyAndReturnArgs} args - Arguments to create many RideRequests.
     * @example
     * // Create many RideRequests
     * const rideRequest = await prisma.rideRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RideRequests and only return the `id`
     * const rideRequestWithIdOnly = await prisma.rideRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RideRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, RideRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RideRequest.
     * @param {RideRequestDeleteArgs} args - Arguments to delete one RideRequest.
     * @example
     * // Delete one RideRequest
     * const RideRequest = await prisma.rideRequest.delete({
     *   where: {
     *     // ... filter to delete one RideRequest
     *   }
     * })
     * 
     */
    delete<T extends RideRequestDeleteArgs>(args: SelectSubset<T, RideRequestDeleteArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RideRequest.
     * @param {RideRequestUpdateArgs} args - Arguments to update one RideRequest.
     * @example
     * // Update one RideRequest
     * const rideRequest = await prisma.rideRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RideRequestUpdateArgs>(args: SelectSubset<T, RideRequestUpdateArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RideRequests.
     * @param {RideRequestDeleteManyArgs} args - Arguments to filter RideRequests to delete.
     * @example
     * // Delete a few RideRequests
     * const { count } = await prisma.rideRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RideRequestDeleteManyArgs>(args?: SelectSubset<T, RideRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RideRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RideRequests
     * const rideRequest = await prisma.rideRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RideRequestUpdateManyArgs>(args: SelectSubset<T, RideRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RideRequests and returns the data updated in the database.
     * @param {RideRequestUpdateManyAndReturnArgs} args - Arguments to update many RideRequests.
     * @example
     * // Update many RideRequests
     * const rideRequest = await prisma.rideRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RideRequests and only return the `id`
     * const rideRequestWithIdOnly = await prisma.rideRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RideRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, RideRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RideRequest.
     * @param {RideRequestUpsertArgs} args - Arguments to update or create a RideRequest.
     * @example
     * // Update or create a RideRequest
     * const rideRequest = await prisma.rideRequest.upsert({
     *   create: {
     *     // ... data to create a RideRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RideRequest we want to update
     *   }
     * })
     */
    upsert<T extends RideRequestUpsertArgs>(args: SelectSubset<T, RideRequestUpsertArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RideRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideRequestCountArgs} args - Arguments to filter RideRequests to count.
     * @example
     * // Count the number of RideRequests
     * const count = await prisma.rideRequest.count({
     *   where: {
     *     // ... the filter for the RideRequests we want to count
     *   }
     * })
    **/
    count<T extends RideRequestCountArgs>(
      args?: Subset<T, RideRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RideRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RideRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RideRequestAggregateArgs>(args: Subset<T, RideRequestAggregateArgs>): Prisma.PrismaPromise<GetRideRequestAggregateType<T>>

    /**
     * Group by RideRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RideRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RideRequestGroupByArgs['orderBy'] }
        : { orderBy?: RideRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RideRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRideRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RideRequest model
   */
  readonly fields: RideRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RideRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RideRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    externalTransactions<T extends RideRequest$externalTransactionsArgs<ExtArgs> = {}>(args?: Subset<T, RideRequest$externalTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    driver<T extends RideRequest$driverArgs<ExtArgs> = {}>(args?: Subset<T, RideRequest$driverArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    rideService<T extends RideRequest$rideServiceArgs<ExtArgs> = {}>(args?: Subset<T, RideRequest$rideServiceArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ride<T extends RideRequest$rideArgs<ExtArgs> = {}>(args?: Subset<T, RideRequest$rideArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RideRequest model
   */
  interface RideRequestFieldRefs {
    readonly id: FieldRef<"RideRequest", 'String'>
    readonly requestId: FieldRef<"RideRequest", 'String'>
    readonly customerId: FieldRef<"RideRequest", 'String'>
    readonly driverId: FieldRef<"RideRequest", 'String'>
    readonly pickupLocation: FieldRef<"RideRequest", 'Json'>
    readonly destinationLocation: FieldRef<"RideRequest", 'Json'>
    readonly rideType: FieldRef<"RideRequest", 'RideType'>
    readonly estimatedDistance: FieldRef<"RideRequest", 'Float'>
    readonly estimatedDuration: FieldRef<"RideRequest", 'Int'>
    readonly estimatedPrice: FieldRef<"RideRequest", 'Decimal'>
    readonly actualPrice: FieldRef<"RideRequest", 'Decimal'>
    readonly status: FieldRef<"RideRequest", 'RideStatus'>
    readonly paymentMethod: FieldRef<"RideRequest", 'RidePaymentMethod'>
    readonly customerNotes: FieldRef<"RideRequest", 'String'>
    readonly driverNotes: FieldRef<"RideRequest", 'String'>
    readonly requestedAt: FieldRef<"RideRequest", 'DateTime'>
    readonly acceptedAt: FieldRef<"RideRequest", 'DateTime'>
    readonly startedAt: FieldRef<"RideRequest", 'DateTime'>
    readonly completedAt: FieldRef<"RideRequest", 'DateTime'>
    readonly cancelledAt: FieldRef<"RideRequest", 'DateTime'>
    readonly cancelledBy: FieldRef<"RideRequest", 'String'>
    readonly cancellationReason: FieldRef<"RideRequest", 'String'>
    readonly expiresAt: FieldRef<"RideRequest", 'DateTime'>
    readonly createdAt: FieldRef<"RideRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"RideRequest", 'DateTime'>
    readonly rideServiceId: FieldRef<"RideRequest", 'String'>
    readonly currency: FieldRef<"RideRequest", 'String'>
    readonly currencySymbol: FieldRef<"RideRequest", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RideRequest findUnique
   */
  export type RideRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    /**
     * Filter, which RideRequest to fetch.
     */
    where: RideRequestWhereUniqueInput
  }

  /**
   * RideRequest findUniqueOrThrow
   */
  export type RideRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    /**
     * Filter, which RideRequest to fetch.
     */
    where: RideRequestWhereUniqueInput
  }

  /**
   * RideRequest findFirst
   */
  export type RideRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    /**
     * Filter, which RideRequest to fetch.
     */
    where?: RideRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideRequests to fetch.
     */
    orderBy?: RideRequestOrderByWithRelationInput | RideRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RideRequests.
     */
    cursor?: RideRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RideRequests.
     */
    distinct?: RideRequestScalarFieldEnum | RideRequestScalarFieldEnum[]
  }

  /**
   * RideRequest findFirstOrThrow
   */
  export type RideRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    /**
     * Filter, which RideRequest to fetch.
     */
    where?: RideRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideRequests to fetch.
     */
    orderBy?: RideRequestOrderByWithRelationInput | RideRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RideRequests.
     */
    cursor?: RideRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RideRequests.
     */
    distinct?: RideRequestScalarFieldEnum | RideRequestScalarFieldEnum[]
  }

  /**
   * RideRequest findMany
   */
  export type RideRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    /**
     * Filter, which RideRequests to fetch.
     */
    where?: RideRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideRequests to fetch.
     */
    orderBy?: RideRequestOrderByWithRelationInput | RideRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RideRequests.
     */
    cursor?: RideRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideRequests.
     */
    skip?: number
    distinct?: RideRequestScalarFieldEnum | RideRequestScalarFieldEnum[]
  }

  /**
   * RideRequest create
   */
  export type RideRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a RideRequest.
     */
    data: XOR<RideRequestCreateInput, RideRequestUncheckedCreateInput>
  }

  /**
   * RideRequest createMany
   */
  export type RideRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RideRequests.
     */
    data: RideRequestCreateManyInput | RideRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RideRequest createManyAndReturn
   */
  export type RideRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * The data used to create many RideRequests.
     */
    data: RideRequestCreateManyInput | RideRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RideRequest update
   */
  export type RideRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a RideRequest.
     */
    data: XOR<RideRequestUpdateInput, RideRequestUncheckedUpdateInput>
    /**
     * Choose, which RideRequest to update.
     */
    where: RideRequestWhereUniqueInput
  }

  /**
   * RideRequest updateMany
   */
  export type RideRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RideRequests.
     */
    data: XOR<RideRequestUpdateManyMutationInput, RideRequestUncheckedUpdateManyInput>
    /**
     * Filter which RideRequests to update
     */
    where?: RideRequestWhereInput
    /**
     * Limit how many RideRequests to update.
     */
    limit?: number
  }

  /**
   * RideRequest updateManyAndReturn
   */
  export type RideRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * The data used to update RideRequests.
     */
    data: XOR<RideRequestUpdateManyMutationInput, RideRequestUncheckedUpdateManyInput>
    /**
     * Filter which RideRequests to update
     */
    where?: RideRequestWhereInput
    /**
     * Limit how many RideRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RideRequest upsert
   */
  export type RideRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the RideRequest to update in case it exists.
     */
    where: RideRequestWhereUniqueInput
    /**
     * In case the RideRequest found by the `where` argument doesn't exist, create a new RideRequest with this data.
     */
    create: XOR<RideRequestCreateInput, RideRequestUncheckedCreateInput>
    /**
     * In case the RideRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RideRequestUpdateInput, RideRequestUncheckedUpdateInput>
  }

  /**
   * RideRequest delete
   */
  export type RideRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    /**
     * Filter which RideRequest to delete.
     */
    where: RideRequestWhereUniqueInput
  }

  /**
   * RideRequest deleteMany
   */
  export type RideRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RideRequests to delete
     */
    where?: RideRequestWhereInput
    /**
     * Limit how many RideRequests to delete.
     */
    limit?: number
  }

  /**
   * RideRequest.externalTransactions
   */
  export type RideRequest$externalTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    where?: ExternalTransactionWhereInput
    orderBy?: ExternalTransactionOrderByWithRelationInput | ExternalTransactionOrderByWithRelationInput[]
    cursor?: ExternalTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExternalTransactionScalarFieldEnum | ExternalTransactionScalarFieldEnum[]
  }

  /**
   * RideRequest.driver
   */
  export type RideRequest$driverArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    where?: DriverWhereInput
  }

  /**
   * RideRequest.rideService
   */
  export type RideRequest$rideServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    where?: RideServiceWhereInput
  }

  /**
   * RideRequest.ride
   */
  export type RideRequest$rideArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    where?: RideWhereInput
  }

  /**
   * RideRequest without action
   */
  export type RideRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
  }


  /**
   * Model Ride
   */

  export type AggregateRide = {
    _count: RideCountAggregateOutputType | null
    _avg: RideAvgAggregateOutputType | null
    _sum: RideSumAggregateOutputType | null
    _min: RideMinAggregateOutputType | null
    _max: RideMaxAggregateOutputType | null
  }

  export type RideAvgAggregateOutputType = {
    distance: number | null
    duration: number | null
    baseFare: Decimal | null
    distanceFare: Decimal | null
    timeFare: Decimal | null
    surgeFare: Decimal | null
    totalFare: Decimal | null
    driverEarnings: Decimal | null
    platformFee: Decimal | null
    customerRating: number | null
    driverRating: number | null
  }

  export type RideSumAggregateOutputType = {
    distance: number | null
    duration: number | null
    baseFare: Decimal | null
    distanceFare: Decimal | null
    timeFare: Decimal | null
    surgeFare: Decimal | null
    totalFare: Decimal | null
    driverEarnings: Decimal | null
    platformFee: Decimal | null
    customerRating: number | null
    driverRating: number | null
  }

  export type RideMinAggregateOutputType = {
    id: string | null
    rideId: string | null
    rideRequestId: string | null
    driverId: string | null
    customerId: string | null
    rideType: $Enums.RideType | null
    distance: number | null
    duration: number | null
    baseFare: Decimal | null
    distanceFare: Decimal | null
    timeFare: Decimal | null
    surgeFare: Decimal | null
    totalFare: Decimal | null
    driverEarnings: Decimal | null
    platformFee: Decimal | null
    paymentMethod: $Enums.RidePaymentMethod | null
    paymentStatus: $Enums.PaymentStatus | null
    status: $Enums.RideStatus | null
    customerRating: number | null
    driverRating: number | null
    customerReview: string | null
    driverReview: string | null
    startedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    cancelledBy: string | null
    cancellationReason: string | null
    createdAt: Date | null
    updatedAt: Date | null
    rideServiceId: string | null
    settlementStatus: $Enums.PaymentStatus | null
  }

  export type RideMaxAggregateOutputType = {
    id: string | null
    rideId: string | null
    rideRequestId: string | null
    driverId: string | null
    customerId: string | null
    rideType: $Enums.RideType | null
    distance: number | null
    duration: number | null
    baseFare: Decimal | null
    distanceFare: Decimal | null
    timeFare: Decimal | null
    surgeFare: Decimal | null
    totalFare: Decimal | null
    driverEarnings: Decimal | null
    platformFee: Decimal | null
    paymentMethod: $Enums.RidePaymentMethod | null
    paymentStatus: $Enums.PaymentStatus | null
    status: $Enums.RideStatus | null
    customerRating: number | null
    driverRating: number | null
    customerReview: string | null
    driverReview: string | null
    startedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    cancelledBy: string | null
    cancellationReason: string | null
    createdAt: Date | null
    updatedAt: Date | null
    rideServiceId: string | null
    settlementStatus: $Enums.PaymentStatus | null
  }

  export type RideCountAggregateOutputType = {
    id: number
    rideId: number
    rideRequestId: number
    driverId: number
    customerId: number
    pickupLocation: number
    destinationLocation: number
    actualPickupLocation: number
    actualDropoffLocation: number
    rideType: number
    distance: number
    duration: number
    baseFare: number
    distanceFare: number
    timeFare: number
    surgeFare: number
    totalFare: number
    driverEarnings: number
    platformFee: number
    paymentMethod: number
    paymentStatus: number
    status: number
    customerRating: number
    driverRating: number
    customerReview: number
    driverReview: number
    startedAt: number
    completedAt: number
    cancelledAt: number
    cancelledBy: number
    cancellationReason: number
    route: number
    createdAt: number
    updatedAt: number
    rideServiceId: number
    settlementStatus: number
    _all: number
  }


  export type RideAvgAggregateInputType = {
    distance?: true
    duration?: true
    baseFare?: true
    distanceFare?: true
    timeFare?: true
    surgeFare?: true
    totalFare?: true
    driverEarnings?: true
    platformFee?: true
    customerRating?: true
    driverRating?: true
  }

  export type RideSumAggregateInputType = {
    distance?: true
    duration?: true
    baseFare?: true
    distanceFare?: true
    timeFare?: true
    surgeFare?: true
    totalFare?: true
    driverEarnings?: true
    platformFee?: true
    customerRating?: true
    driverRating?: true
  }

  export type RideMinAggregateInputType = {
    id?: true
    rideId?: true
    rideRequestId?: true
    driverId?: true
    customerId?: true
    rideType?: true
    distance?: true
    duration?: true
    baseFare?: true
    distanceFare?: true
    timeFare?: true
    surgeFare?: true
    totalFare?: true
    driverEarnings?: true
    platformFee?: true
    paymentMethod?: true
    paymentStatus?: true
    status?: true
    customerRating?: true
    driverRating?: true
    customerReview?: true
    driverReview?: true
    startedAt?: true
    completedAt?: true
    cancelledAt?: true
    cancelledBy?: true
    cancellationReason?: true
    createdAt?: true
    updatedAt?: true
    rideServiceId?: true
    settlementStatus?: true
  }

  export type RideMaxAggregateInputType = {
    id?: true
    rideId?: true
    rideRequestId?: true
    driverId?: true
    customerId?: true
    rideType?: true
    distance?: true
    duration?: true
    baseFare?: true
    distanceFare?: true
    timeFare?: true
    surgeFare?: true
    totalFare?: true
    driverEarnings?: true
    platformFee?: true
    paymentMethod?: true
    paymentStatus?: true
    status?: true
    customerRating?: true
    driverRating?: true
    customerReview?: true
    driverReview?: true
    startedAt?: true
    completedAt?: true
    cancelledAt?: true
    cancelledBy?: true
    cancellationReason?: true
    createdAt?: true
    updatedAt?: true
    rideServiceId?: true
    settlementStatus?: true
  }

  export type RideCountAggregateInputType = {
    id?: true
    rideId?: true
    rideRequestId?: true
    driverId?: true
    customerId?: true
    pickupLocation?: true
    destinationLocation?: true
    actualPickupLocation?: true
    actualDropoffLocation?: true
    rideType?: true
    distance?: true
    duration?: true
    baseFare?: true
    distanceFare?: true
    timeFare?: true
    surgeFare?: true
    totalFare?: true
    driverEarnings?: true
    platformFee?: true
    paymentMethod?: true
    paymentStatus?: true
    status?: true
    customerRating?: true
    driverRating?: true
    customerReview?: true
    driverReview?: true
    startedAt?: true
    completedAt?: true
    cancelledAt?: true
    cancelledBy?: true
    cancellationReason?: true
    route?: true
    createdAt?: true
    updatedAt?: true
    rideServiceId?: true
    settlementStatus?: true
    _all?: true
  }

  export type RideAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ride to aggregate.
     */
    where?: RideWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rides to fetch.
     */
    orderBy?: RideOrderByWithRelationInput | RideOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RideWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rides.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Rides
    **/
    _count?: true | RideCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RideAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RideSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RideMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RideMaxAggregateInputType
  }

  export type GetRideAggregateType<T extends RideAggregateArgs> = {
        [P in keyof T & keyof AggregateRide]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRide[P]>
      : GetScalarType<T[P], AggregateRide[P]>
  }




  export type RideGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideWhereInput
    orderBy?: RideOrderByWithAggregationInput | RideOrderByWithAggregationInput[]
    by: RideScalarFieldEnum[] | RideScalarFieldEnum
    having?: RideScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RideCountAggregateInputType | true
    _avg?: RideAvgAggregateInputType
    _sum?: RideSumAggregateInputType
    _min?: RideMinAggregateInputType
    _max?: RideMaxAggregateInputType
  }

  export type RideGroupByOutputType = {
    id: string
    rideId: string
    rideRequestId: string
    driverId: string
    customerId: string
    pickupLocation: JsonValue
    destinationLocation: JsonValue
    actualPickupLocation: JsonValue | null
    actualDropoffLocation: JsonValue | null
    rideType: $Enums.RideType
    distance: number | null
    duration: number | null
    baseFare: Decimal
    distanceFare: Decimal
    timeFare: Decimal
    surgeFare: Decimal
    totalFare: Decimal
    driverEarnings: Decimal
    platformFee: Decimal
    paymentMethod: $Enums.RidePaymentMethod
    paymentStatus: $Enums.PaymentStatus
    status: $Enums.RideStatus
    customerRating: number | null
    driverRating: number | null
    customerReview: string | null
    driverReview: string | null
    startedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    cancelledBy: string | null
    cancellationReason: string | null
    route: JsonValue | null
    createdAt: Date
    updatedAt: Date
    rideServiceId: string | null
    settlementStatus: $Enums.PaymentStatus
    _count: RideCountAggregateOutputType | null
    _avg: RideAvgAggregateOutputType | null
    _sum: RideSumAggregateOutputType | null
    _min: RideMinAggregateOutputType | null
    _max: RideMaxAggregateOutputType | null
  }

  type GetRideGroupByPayload<T extends RideGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RideGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RideGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RideGroupByOutputType[P]>
            : GetScalarType<T[P], RideGroupByOutputType[P]>
        }
      >
    >


  export type RideSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rideId?: boolean
    rideRequestId?: boolean
    driverId?: boolean
    customerId?: boolean
    pickupLocation?: boolean
    destinationLocation?: boolean
    actualPickupLocation?: boolean
    actualDropoffLocation?: boolean
    rideType?: boolean
    distance?: boolean
    duration?: boolean
    baseFare?: boolean
    distanceFare?: boolean
    timeFare?: boolean
    surgeFare?: boolean
    totalFare?: boolean
    driverEarnings?: boolean
    platformFee?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    status?: boolean
    customerRating?: boolean
    driverRating?: boolean
    customerReview?: boolean
    driverReview?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    route?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    settlementStatus?: boolean
    locationUpdates?: boolean | Ride$locationUpdatesArgs<ExtArgs>
    rideToken?: boolean | Ride$rideTokenArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | DriverDefaultArgs<ExtArgs>
    rideRequest?: boolean | RideRequestDefaultArgs<ExtArgs>
    rideService?: boolean | Ride$rideServiceArgs<ExtArgs>
    _count?: boolean | RideCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ride"]>

  export type RideSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rideId?: boolean
    rideRequestId?: boolean
    driverId?: boolean
    customerId?: boolean
    pickupLocation?: boolean
    destinationLocation?: boolean
    actualPickupLocation?: boolean
    actualDropoffLocation?: boolean
    rideType?: boolean
    distance?: boolean
    duration?: boolean
    baseFare?: boolean
    distanceFare?: boolean
    timeFare?: boolean
    surgeFare?: boolean
    totalFare?: boolean
    driverEarnings?: boolean
    platformFee?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    status?: boolean
    customerRating?: boolean
    driverRating?: boolean
    customerReview?: boolean
    driverReview?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    route?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    settlementStatus?: boolean
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | DriverDefaultArgs<ExtArgs>
    rideRequest?: boolean | RideRequestDefaultArgs<ExtArgs>
    rideService?: boolean | Ride$rideServiceArgs<ExtArgs>
  }, ExtArgs["result"]["ride"]>

  export type RideSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rideId?: boolean
    rideRequestId?: boolean
    driverId?: boolean
    customerId?: boolean
    pickupLocation?: boolean
    destinationLocation?: boolean
    actualPickupLocation?: boolean
    actualDropoffLocation?: boolean
    rideType?: boolean
    distance?: boolean
    duration?: boolean
    baseFare?: boolean
    distanceFare?: boolean
    timeFare?: boolean
    surgeFare?: boolean
    totalFare?: boolean
    driverEarnings?: boolean
    platformFee?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    status?: boolean
    customerRating?: boolean
    driverRating?: boolean
    customerReview?: boolean
    driverReview?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    route?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    settlementStatus?: boolean
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | DriverDefaultArgs<ExtArgs>
    rideRequest?: boolean | RideRequestDefaultArgs<ExtArgs>
    rideService?: boolean | Ride$rideServiceArgs<ExtArgs>
  }, ExtArgs["result"]["ride"]>

  export type RideSelectScalar = {
    id?: boolean
    rideId?: boolean
    rideRequestId?: boolean
    driverId?: boolean
    customerId?: boolean
    pickupLocation?: boolean
    destinationLocation?: boolean
    actualPickupLocation?: boolean
    actualDropoffLocation?: boolean
    rideType?: boolean
    distance?: boolean
    duration?: boolean
    baseFare?: boolean
    distanceFare?: boolean
    timeFare?: boolean
    surgeFare?: boolean
    totalFare?: boolean
    driverEarnings?: boolean
    platformFee?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    status?: boolean
    customerRating?: boolean
    driverRating?: boolean
    customerReview?: boolean
    driverReview?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    route?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rideServiceId?: boolean
    settlementStatus?: boolean
  }

  export type RideOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "rideId" | "rideRequestId" | "driverId" | "customerId" | "pickupLocation" | "destinationLocation" | "actualPickupLocation" | "actualDropoffLocation" | "rideType" | "distance" | "duration" | "baseFare" | "distanceFare" | "timeFare" | "surgeFare" | "totalFare" | "driverEarnings" | "platformFee" | "paymentMethod" | "paymentStatus" | "status" | "customerRating" | "driverRating" | "customerReview" | "driverReview" | "startedAt" | "completedAt" | "cancelledAt" | "cancelledBy" | "cancellationReason" | "route" | "createdAt" | "updatedAt" | "rideServiceId" | "settlementStatus", ExtArgs["result"]["ride"]>
  export type RideInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    locationUpdates?: boolean | Ride$locationUpdatesArgs<ExtArgs>
    rideToken?: boolean | Ride$rideTokenArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | DriverDefaultArgs<ExtArgs>
    rideRequest?: boolean | RideRequestDefaultArgs<ExtArgs>
    rideService?: boolean | Ride$rideServiceArgs<ExtArgs>
    _count?: boolean | RideCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RideIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | DriverDefaultArgs<ExtArgs>
    rideRequest?: boolean | RideRequestDefaultArgs<ExtArgs>
    rideService?: boolean | Ride$rideServiceArgs<ExtArgs>
  }
  export type RideIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | UserDefaultArgs<ExtArgs>
    driver?: boolean | DriverDefaultArgs<ExtArgs>
    rideRequest?: boolean | RideRequestDefaultArgs<ExtArgs>
    rideService?: boolean | Ride$rideServiceArgs<ExtArgs>
  }

  export type $RidePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ride"
    objects: {
      locationUpdates: Prisma.$RideLocationPayload<ExtArgs>[]
      rideToken: Prisma.$RideTokenPayload<ExtArgs> | null
      customer: Prisma.$UserPayload<ExtArgs>
      driver: Prisma.$DriverPayload<ExtArgs>
      rideRequest: Prisma.$RideRequestPayload<ExtArgs>
      rideService: Prisma.$RideServicePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      rideId: string
      rideRequestId: string
      driverId: string
      customerId: string
      pickupLocation: Prisma.JsonValue
      destinationLocation: Prisma.JsonValue
      actualPickupLocation: Prisma.JsonValue | null
      actualDropoffLocation: Prisma.JsonValue | null
      rideType: $Enums.RideType
      distance: number | null
      duration: number | null
      baseFare: Prisma.Decimal
      distanceFare: Prisma.Decimal
      timeFare: Prisma.Decimal
      surgeFare: Prisma.Decimal
      totalFare: Prisma.Decimal
      driverEarnings: Prisma.Decimal
      platformFee: Prisma.Decimal
      paymentMethod: $Enums.RidePaymentMethod
      paymentStatus: $Enums.PaymentStatus
      status: $Enums.RideStatus
      customerRating: number | null
      driverRating: number | null
      customerReview: string | null
      driverReview: string | null
      startedAt: Date | null
      completedAt: Date | null
      cancelledAt: Date | null
      cancelledBy: string | null
      cancellationReason: string | null
      route: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      rideServiceId: string | null
      settlementStatus: $Enums.PaymentStatus
    }, ExtArgs["result"]["ride"]>
    composites: {}
  }

  type RideGetPayload<S extends boolean | null | undefined | RideDefaultArgs> = $Result.GetResult<Prisma.$RidePayload, S>

  type RideCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RideFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RideCountAggregateInputType | true
    }

  export interface RideDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ride'], meta: { name: 'Ride' } }
    /**
     * Find zero or one Ride that matches the filter.
     * @param {RideFindUniqueArgs} args - Arguments to find a Ride
     * @example
     * // Get one Ride
     * const ride = await prisma.ride.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RideFindUniqueArgs>(args: SelectSubset<T, RideFindUniqueArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ride that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RideFindUniqueOrThrowArgs} args - Arguments to find a Ride
     * @example
     * // Get one Ride
     * const ride = await prisma.ride.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RideFindUniqueOrThrowArgs>(args: SelectSubset<T, RideFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ride that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideFindFirstArgs} args - Arguments to find a Ride
     * @example
     * // Get one Ride
     * const ride = await prisma.ride.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RideFindFirstArgs>(args?: SelectSubset<T, RideFindFirstArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ride that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideFindFirstOrThrowArgs} args - Arguments to find a Ride
     * @example
     * // Get one Ride
     * const ride = await prisma.ride.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RideFindFirstOrThrowArgs>(args?: SelectSubset<T, RideFindFirstOrThrowArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rides that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rides
     * const rides = await prisma.ride.findMany()
     * 
     * // Get first 10 Rides
     * const rides = await prisma.ride.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rideWithIdOnly = await prisma.ride.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RideFindManyArgs>(args?: SelectSubset<T, RideFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ride.
     * @param {RideCreateArgs} args - Arguments to create a Ride.
     * @example
     * // Create one Ride
     * const Ride = await prisma.ride.create({
     *   data: {
     *     // ... data to create a Ride
     *   }
     * })
     * 
     */
    create<T extends RideCreateArgs>(args: SelectSubset<T, RideCreateArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rides.
     * @param {RideCreateManyArgs} args - Arguments to create many Rides.
     * @example
     * // Create many Rides
     * const ride = await prisma.ride.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RideCreateManyArgs>(args?: SelectSubset<T, RideCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rides and returns the data saved in the database.
     * @param {RideCreateManyAndReturnArgs} args - Arguments to create many Rides.
     * @example
     * // Create many Rides
     * const ride = await prisma.ride.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rides and only return the `id`
     * const rideWithIdOnly = await prisma.ride.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RideCreateManyAndReturnArgs>(args?: SelectSubset<T, RideCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ride.
     * @param {RideDeleteArgs} args - Arguments to delete one Ride.
     * @example
     * // Delete one Ride
     * const Ride = await prisma.ride.delete({
     *   where: {
     *     // ... filter to delete one Ride
     *   }
     * })
     * 
     */
    delete<T extends RideDeleteArgs>(args: SelectSubset<T, RideDeleteArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ride.
     * @param {RideUpdateArgs} args - Arguments to update one Ride.
     * @example
     * // Update one Ride
     * const ride = await prisma.ride.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RideUpdateArgs>(args: SelectSubset<T, RideUpdateArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rides.
     * @param {RideDeleteManyArgs} args - Arguments to filter Rides to delete.
     * @example
     * // Delete a few Rides
     * const { count } = await prisma.ride.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RideDeleteManyArgs>(args?: SelectSubset<T, RideDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rides.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rides
     * const ride = await prisma.ride.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RideUpdateManyArgs>(args: SelectSubset<T, RideUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rides and returns the data updated in the database.
     * @param {RideUpdateManyAndReturnArgs} args - Arguments to update many Rides.
     * @example
     * // Update many Rides
     * const ride = await prisma.ride.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Rides and only return the `id`
     * const rideWithIdOnly = await prisma.ride.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RideUpdateManyAndReturnArgs>(args: SelectSubset<T, RideUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ride.
     * @param {RideUpsertArgs} args - Arguments to update or create a Ride.
     * @example
     * // Update or create a Ride
     * const ride = await prisma.ride.upsert({
     *   create: {
     *     // ... data to create a Ride
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ride we want to update
     *   }
     * })
     */
    upsert<T extends RideUpsertArgs>(args: SelectSubset<T, RideUpsertArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rides.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideCountArgs} args - Arguments to filter Rides to count.
     * @example
     * // Count the number of Rides
     * const count = await prisma.ride.count({
     *   where: {
     *     // ... the filter for the Rides we want to count
     *   }
     * })
    **/
    count<T extends RideCountArgs>(
      args?: Subset<T, RideCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RideCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ride.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RideAggregateArgs>(args: Subset<T, RideAggregateArgs>): Prisma.PrismaPromise<GetRideAggregateType<T>>

    /**
     * Group by Ride.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RideGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RideGroupByArgs['orderBy'] }
        : { orderBy?: RideGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RideGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRideGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ride model
   */
  readonly fields: RideFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ride.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RideClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    locationUpdates<T extends Ride$locationUpdatesArgs<ExtArgs> = {}>(args?: Subset<T, Ride$locationUpdatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rideToken<T extends Ride$rideTokenArgs<ExtArgs> = {}>(args?: Subset<T, Ride$rideTokenArgs<ExtArgs>>): Prisma__RideTokenClient<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    customer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    driver<T extends DriverDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DriverDefaultArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rideRequest<T extends RideRequestDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RideRequestDefaultArgs<ExtArgs>>): Prisma__RideRequestClient<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rideService<T extends Ride$rideServiceArgs<ExtArgs> = {}>(args?: Subset<T, Ride$rideServiceArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ride model
   */
  interface RideFieldRefs {
    readonly id: FieldRef<"Ride", 'String'>
    readonly rideId: FieldRef<"Ride", 'String'>
    readonly rideRequestId: FieldRef<"Ride", 'String'>
    readonly driverId: FieldRef<"Ride", 'String'>
    readonly customerId: FieldRef<"Ride", 'String'>
    readonly pickupLocation: FieldRef<"Ride", 'Json'>
    readonly destinationLocation: FieldRef<"Ride", 'Json'>
    readonly actualPickupLocation: FieldRef<"Ride", 'Json'>
    readonly actualDropoffLocation: FieldRef<"Ride", 'Json'>
    readonly rideType: FieldRef<"Ride", 'RideType'>
    readonly distance: FieldRef<"Ride", 'Float'>
    readonly duration: FieldRef<"Ride", 'Int'>
    readonly baseFare: FieldRef<"Ride", 'Decimal'>
    readonly distanceFare: FieldRef<"Ride", 'Decimal'>
    readonly timeFare: FieldRef<"Ride", 'Decimal'>
    readonly surgeFare: FieldRef<"Ride", 'Decimal'>
    readonly totalFare: FieldRef<"Ride", 'Decimal'>
    readonly driverEarnings: FieldRef<"Ride", 'Decimal'>
    readonly platformFee: FieldRef<"Ride", 'Decimal'>
    readonly paymentMethod: FieldRef<"Ride", 'RidePaymentMethod'>
    readonly paymentStatus: FieldRef<"Ride", 'PaymentStatus'>
    readonly status: FieldRef<"Ride", 'RideStatus'>
    readonly customerRating: FieldRef<"Ride", 'Int'>
    readonly driverRating: FieldRef<"Ride", 'Int'>
    readonly customerReview: FieldRef<"Ride", 'String'>
    readonly driverReview: FieldRef<"Ride", 'String'>
    readonly startedAt: FieldRef<"Ride", 'DateTime'>
    readonly completedAt: FieldRef<"Ride", 'DateTime'>
    readonly cancelledAt: FieldRef<"Ride", 'DateTime'>
    readonly cancelledBy: FieldRef<"Ride", 'String'>
    readonly cancellationReason: FieldRef<"Ride", 'String'>
    readonly route: FieldRef<"Ride", 'Json'>
    readonly createdAt: FieldRef<"Ride", 'DateTime'>
    readonly updatedAt: FieldRef<"Ride", 'DateTime'>
    readonly rideServiceId: FieldRef<"Ride", 'String'>
    readonly settlementStatus: FieldRef<"Ride", 'PaymentStatus'>
  }
    

  // Custom InputTypes
  /**
   * Ride findUnique
   */
  export type RideFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    /**
     * Filter, which Ride to fetch.
     */
    where: RideWhereUniqueInput
  }

  /**
   * Ride findUniqueOrThrow
   */
  export type RideFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    /**
     * Filter, which Ride to fetch.
     */
    where: RideWhereUniqueInput
  }

  /**
   * Ride findFirst
   */
  export type RideFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    /**
     * Filter, which Ride to fetch.
     */
    where?: RideWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rides to fetch.
     */
    orderBy?: RideOrderByWithRelationInput | RideOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rides.
     */
    cursor?: RideWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rides.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rides.
     */
    distinct?: RideScalarFieldEnum | RideScalarFieldEnum[]
  }

  /**
   * Ride findFirstOrThrow
   */
  export type RideFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    /**
     * Filter, which Ride to fetch.
     */
    where?: RideWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rides to fetch.
     */
    orderBy?: RideOrderByWithRelationInput | RideOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rides.
     */
    cursor?: RideWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rides.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rides.
     */
    distinct?: RideScalarFieldEnum | RideScalarFieldEnum[]
  }

  /**
   * Ride findMany
   */
  export type RideFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    /**
     * Filter, which Rides to fetch.
     */
    where?: RideWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rides to fetch.
     */
    orderBy?: RideOrderByWithRelationInput | RideOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Rides.
     */
    cursor?: RideWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rides.
     */
    skip?: number
    distinct?: RideScalarFieldEnum | RideScalarFieldEnum[]
  }

  /**
   * Ride create
   */
  export type RideCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    /**
     * The data needed to create a Ride.
     */
    data: XOR<RideCreateInput, RideUncheckedCreateInput>
  }

  /**
   * Ride createMany
   */
  export type RideCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Rides.
     */
    data: RideCreateManyInput | RideCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ride createManyAndReturn
   */
  export type RideCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * The data used to create many Rides.
     */
    data: RideCreateManyInput | RideCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ride update
   */
  export type RideUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    /**
     * The data needed to update a Ride.
     */
    data: XOR<RideUpdateInput, RideUncheckedUpdateInput>
    /**
     * Choose, which Ride to update.
     */
    where: RideWhereUniqueInput
  }

  /**
   * Ride updateMany
   */
  export type RideUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Rides.
     */
    data: XOR<RideUpdateManyMutationInput, RideUncheckedUpdateManyInput>
    /**
     * Filter which Rides to update
     */
    where?: RideWhereInput
    /**
     * Limit how many Rides to update.
     */
    limit?: number
  }

  /**
   * Ride updateManyAndReturn
   */
  export type RideUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * The data used to update Rides.
     */
    data: XOR<RideUpdateManyMutationInput, RideUncheckedUpdateManyInput>
    /**
     * Filter which Rides to update
     */
    where?: RideWhereInput
    /**
     * Limit how many Rides to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ride upsert
   */
  export type RideUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    /**
     * The filter to search for the Ride to update in case it exists.
     */
    where: RideWhereUniqueInput
    /**
     * In case the Ride found by the `where` argument doesn't exist, create a new Ride with this data.
     */
    create: XOR<RideCreateInput, RideUncheckedCreateInput>
    /**
     * In case the Ride was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RideUpdateInput, RideUncheckedUpdateInput>
  }

  /**
   * Ride delete
   */
  export type RideDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    /**
     * Filter which Ride to delete.
     */
    where: RideWhereUniqueInput
  }

  /**
   * Ride deleteMany
   */
  export type RideDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rides to delete
     */
    where?: RideWhereInput
    /**
     * Limit how many Rides to delete.
     */
    limit?: number
  }

  /**
   * Ride.locationUpdates
   */
  export type Ride$locationUpdatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    where?: RideLocationWhereInput
    orderBy?: RideLocationOrderByWithRelationInput | RideLocationOrderByWithRelationInput[]
    cursor?: RideLocationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RideLocationScalarFieldEnum | RideLocationScalarFieldEnum[]
  }

  /**
   * Ride.rideToken
   */
  export type Ride$rideTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    where?: RideTokenWhereInput
  }

  /**
   * Ride.rideService
   */
  export type Ride$rideServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    where?: RideServiceWhereInput
  }

  /**
   * Ride without action
   */
  export type RideDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
  }


  /**
   * Model RideToken
   */

  export type AggregateRideToken = {
    _count: RideTokenCountAggregateOutputType | null
    _min: RideTokenMinAggregateOutputType | null
    _max: RideTokenMaxAggregateOutputType | null
  }

  export type RideTokenMinAggregateOutputType = {
    id: string | null
    rideId: string | null
    token: string | null
    isUsed: boolean | null
    usedAt: Date | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RideTokenMaxAggregateOutputType = {
    id: string | null
    rideId: string | null
    token: string | null
    isUsed: boolean | null
    usedAt: Date | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RideTokenCountAggregateOutputType = {
    id: number
    rideId: number
    token: number
    isUsed: number
    usedAt: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RideTokenMinAggregateInputType = {
    id?: true
    rideId?: true
    token?: true
    isUsed?: true
    usedAt?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RideTokenMaxAggregateInputType = {
    id?: true
    rideId?: true
    token?: true
    isUsed?: true
    usedAt?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RideTokenCountAggregateInputType = {
    id?: true
    rideId?: true
    token?: true
    isUsed?: true
    usedAt?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RideTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RideToken to aggregate.
     */
    where?: RideTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideTokens to fetch.
     */
    orderBy?: RideTokenOrderByWithRelationInput | RideTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RideTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RideTokens
    **/
    _count?: true | RideTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RideTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RideTokenMaxAggregateInputType
  }

  export type GetRideTokenAggregateType<T extends RideTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRideToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRideToken[P]>
      : GetScalarType<T[P], AggregateRideToken[P]>
  }




  export type RideTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideTokenWhereInput
    orderBy?: RideTokenOrderByWithAggregationInput | RideTokenOrderByWithAggregationInput[]
    by: RideTokenScalarFieldEnum[] | RideTokenScalarFieldEnum
    having?: RideTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RideTokenCountAggregateInputType | true
    _min?: RideTokenMinAggregateInputType
    _max?: RideTokenMaxAggregateInputType
  }

  export type RideTokenGroupByOutputType = {
    id: string
    rideId: string
    token: string
    isUsed: boolean
    usedAt: Date | null
    expiresAt: Date
    createdAt: Date
    updatedAt: Date
    _count: RideTokenCountAggregateOutputType | null
    _min: RideTokenMinAggregateOutputType | null
    _max: RideTokenMaxAggregateOutputType | null
  }

  type GetRideTokenGroupByPayload<T extends RideTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RideTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RideTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RideTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RideTokenGroupByOutputType[P]>
        }
      >
    >


  export type RideTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rideId?: boolean
    token?: boolean
    isUsed?: boolean
    usedAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rideToken"]>

  export type RideTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rideId?: boolean
    token?: boolean
    isUsed?: boolean
    usedAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rideToken"]>

  export type RideTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rideId?: boolean
    token?: boolean
    isUsed?: boolean
    usedAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rideToken"]>

  export type RideTokenSelectScalar = {
    id?: boolean
    rideId?: boolean
    token?: boolean
    isUsed?: boolean
    usedAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RideTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "rideId" | "token" | "isUsed" | "usedAt" | "expiresAt" | "createdAt" | "updatedAt", ExtArgs["result"]["rideToken"]>
  export type RideTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }
  export type RideTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }
  export type RideTokenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }

  export type $RideTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RideToken"
    objects: {
      ride: Prisma.$RidePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      rideId: string
      token: string
      isUsed: boolean
      usedAt: Date | null
      expiresAt: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["rideToken"]>
    composites: {}
  }

  type RideTokenGetPayload<S extends boolean | null | undefined | RideTokenDefaultArgs> = $Result.GetResult<Prisma.$RideTokenPayload, S>

  type RideTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RideTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RideTokenCountAggregateInputType | true
    }

  export interface RideTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RideToken'], meta: { name: 'RideToken' } }
    /**
     * Find zero or one RideToken that matches the filter.
     * @param {RideTokenFindUniqueArgs} args - Arguments to find a RideToken
     * @example
     * // Get one RideToken
     * const rideToken = await prisma.rideToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RideTokenFindUniqueArgs>(args: SelectSubset<T, RideTokenFindUniqueArgs<ExtArgs>>): Prisma__RideTokenClient<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RideToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RideTokenFindUniqueOrThrowArgs} args - Arguments to find a RideToken
     * @example
     * // Get one RideToken
     * const rideToken = await prisma.rideToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RideTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RideTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RideTokenClient<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RideToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideTokenFindFirstArgs} args - Arguments to find a RideToken
     * @example
     * // Get one RideToken
     * const rideToken = await prisma.rideToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RideTokenFindFirstArgs>(args?: SelectSubset<T, RideTokenFindFirstArgs<ExtArgs>>): Prisma__RideTokenClient<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RideToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideTokenFindFirstOrThrowArgs} args - Arguments to find a RideToken
     * @example
     * // Get one RideToken
     * const rideToken = await prisma.rideToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RideTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RideTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RideTokenClient<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RideTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RideTokens
     * const rideTokens = await prisma.rideToken.findMany()
     * 
     * // Get first 10 RideTokens
     * const rideTokens = await prisma.rideToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rideTokenWithIdOnly = await prisma.rideToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RideTokenFindManyArgs>(args?: SelectSubset<T, RideTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RideToken.
     * @param {RideTokenCreateArgs} args - Arguments to create a RideToken.
     * @example
     * // Create one RideToken
     * const RideToken = await prisma.rideToken.create({
     *   data: {
     *     // ... data to create a RideToken
     *   }
     * })
     * 
     */
    create<T extends RideTokenCreateArgs>(args: SelectSubset<T, RideTokenCreateArgs<ExtArgs>>): Prisma__RideTokenClient<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RideTokens.
     * @param {RideTokenCreateManyArgs} args - Arguments to create many RideTokens.
     * @example
     * // Create many RideTokens
     * const rideToken = await prisma.rideToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RideTokenCreateManyArgs>(args?: SelectSubset<T, RideTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RideTokens and returns the data saved in the database.
     * @param {RideTokenCreateManyAndReturnArgs} args - Arguments to create many RideTokens.
     * @example
     * // Create many RideTokens
     * const rideToken = await prisma.rideToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RideTokens and only return the `id`
     * const rideTokenWithIdOnly = await prisma.rideToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RideTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, RideTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RideToken.
     * @param {RideTokenDeleteArgs} args - Arguments to delete one RideToken.
     * @example
     * // Delete one RideToken
     * const RideToken = await prisma.rideToken.delete({
     *   where: {
     *     // ... filter to delete one RideToken
     *   }
     * })
     * 
     */
    delete<T extends RideTokenDeleteArgs>(args: SelectSubset<T, RideTokenDeleteArgs<ExtArgs>>): Prisma__RideTokenClient<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RideToken.
     * @param {RideTokenUpdateArgs} args - Arguments to update one RideToken.
     * @example
     * // Update one RideToken
     * const rideToken = await prisma.rideToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RideTokenUpdateArgs>(args: SelectSubset<T, RideTokenUpdateArgs<ExtArgs>>): Prisma__RideTokenClient<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RideTokens.
     * @param {RideTokenDeleteManyArgs} args - Arguments to filter RideTokens to delete.
     * @example
     * // Delete a few RideTokens
     * const { count } = await prisma.rideToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RideTokenDeleteManyArgs>(args?: SelectSubset<T, RideTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RideTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RideTokens
     * const rideToken = await prisma.rideToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RideTokenUpdateManyArgs>(args: SelectSubset<T, RideTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RideTokens and returns the data updated in the database.
     * @param {RideTokenUpdateManyAndReturnArgs} args - Arguments to update many RideTokens.
     * @example
     * // Update many RideTokens
     * const rideToken = await prisma.rideToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RideTokens and only return the `id`
     * const rideTokenWithIdOnly = await prisma.rideToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RideTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, RideTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RideToken.
     * @param {RideTokenUpsertArgs} args - Arguments to update or create a RideToken.
     * @example
     * // Update or create a RideToken
     * const rideToken = await prisma.rideToken.upsert({
     *   create: {
     *     // ... data to create a RideToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RideToken we want to update
     *   }
     * })
     */
    upsert<T extends RideTokenUpsertArgs>(args: SelectSubset<T, RideTokenUpsertArgs<ExtArgs>>): Prisma__RideTokenClient<$Result.GetResult<Prisma.$RideTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RideTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideTokenCountArgs} args - Arguments to filter RideTokens to count.
     * @example
     * // Count the number of RideTokens
     * const count = await prisma.rideToken.count({
     *   where: {
     *     // ... the filter for the RideTokens we want to count
     *   }
     * })
    **/
    count<T extends RideTokenCountArgs>(
      args?: Subset<T, RideTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RideTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RideToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RideTokenAggregateArgs>(args: Subset<T, RideTokenAggregateArgs>): Prisma.PrismaPromise<GetRideTokenAggregateType<T>>

    /**
     * Group by RideToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RideTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RideTokenGroupByArgs['orderBy'] }
        : { orderBy?: RideTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RideTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRideTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RideToken model
   */
  readonly fields: RideTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RideToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RideTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ride<T extends RideDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RideDefaultArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RideToken model
   */
  interface RideTokenFieldRefs {
    readonly id: FieldRef<"RideToken", 'String'>
    readonly rideId: FieldRef<"RideToken", 'String'>
    readonly token: FieldRef<"RideToken", 'String'>
    readonly isUsed: FieldRef<"RideToken", 'Boolean'>
    readonly usedAt: FieldRef<"RideToken", 'DateTime'>
    readonly expiresAt: FieldRef<"RideToken", 'DateTime'>
    readonly createdAt: FieldRef<"RideToken", 'DateTime'>
    readonly updatedAt: FieldRef<"RideToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RideToken findUnique
   */
  export type RideTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    /**
     * Filter, which RideToken to fetch.
     */
    where: RideTokenWhereUniqueInput
  }

  /**
   * RideToken findUniqueOrThrow
   */
  export type RideTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    /**
     * Filter, which RideToken to fetch.
     */
    where: RideTokenWhereUniqueInput
  }

  /**
   * RideToken findFirst
   */
  export type RideTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    /**
     * Filter, which RideToken to fetch.
     */
    where?: RideTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideTokens to fetch.
     */
    orderBy?: RideTokenOrderByWithRelationInput | RideTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RideTokens.
     */
    cursor?: RideTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RideTokens.
     */
    distinct?: RideTokenScalarFieldEnum | RideTokenScalarFieldEnum[]
  }

  /**
   * RideToken findFirstOrThrow
   */
  export type RideTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    /**
     * Filter, which RideToken to fetch.
     */
    where?: RideTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideTokens to fetch.
     */
    orderBy?: RideTokenOrderByWithRelationInput | RideTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RideTokens.
     */
    cursor?: RideTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RideTokens.
     */
    distinct?: RideTokenScalarFieldEnum | RideTokenScalarFieldEnum[]
  }

  /**
   * RideToken findMany
   */
  export type RideTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    /**
     * Filter, which RideTokens to fetch.
     */
    where?: RideTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideTokens to fetch.
     */
    orderBy?: RideTokenOrderByWithRelationInput | RideTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RideTokens.
     */
    cursor?: RideTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideTokens.
     */
    skip?: number
    distinct?: RideTokenScalarFieldEnum | RideTokenScalarFieldEnum[]
  }

  /**
   * RideToken create
   */
  export type RideTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RideToken.
     */
    data: XOR<RideTokenCreateInput, RideTokenUncheckedCreateInput>
  }

  /**
   * RideToken createMany
   */
  export type RideTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RideTokens.
     */
    data: RideTokenCreateManyInput | RideTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RideToken createManyAndReturn
   */
  export type RideTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * The data used to create many RideTokens.
     */
    data: RideTokenCreateManyInput | RideTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RideToken update
   */
  export type RideTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RideToken.
     */
    data: XOR<RideTokenUpdateInput, RideTokenUncheckedUpdateInput>
    /**
     * Choose, which RideToken to update.
     */
    where: RideTokenWhereUniqueInput
  }

  /**
   * RideToken updateMany
   */
  export type RideTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RideTokens.
     */
    data: XOR<RideTokenUpdateManyMutationInput, RideTokenUncheckedUpdateManyInput>
    /**
     * Filter which RideTokens to update
     */
    where?: RideTokenWhereInput
    /**
     * Limit how many RideTokens to update.
     */
    limit?: number
  }

  /**
   * RideToken updateManyAndReturn
   */
  export type RideTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * The data used to update RideTokens.
     */
    data: XOR<RideTokenUpdateManyMutationInput, RideTokenUncheckedUpdateManyInput>
    /**
     * Filter which RideTokens to update
     */
    where?: RideTokenWhereInput
    /**
     * Limit how many RideTokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RideToken upsert
   */
  export type RideTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RideToken to update in case it exists.
     */
    where: RideTokenWhereUniqueInput
    /**
     * In case the RideToken found by the `where` argument doesn't exist, create a new RideToken with this data.
     */
    create: XOR<RideTokenCreateInput, RideTokenUncheckedCreateInput>
    /**
     * In case the RideToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RideTokenUpdateInput, RideTokenUncheckedUpdateInput>
  }

  /**
   * RideToken delete
   */
  export type RideTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
    /**
     * Filter which RideToken to delete.
     */
    where: RideTokenWhereUniqueInput
  }

  /**
   * RideToken deleteMany
   */
  export type RideTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RideTokens to delete
     */
    where?: RideTokenWhereInput
    /**
     * Limit how many RideTokens to delete.
     */
    limit?: number
  }

  /**
   * RideToken without action
   */
  export type RideTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideToken
     */
    select?: RideTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideToken
     */
    omit?: RideTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideTokenInclude<ExtArgs> | null
  }


  /**
   * Model RideLocation
   */

  export type AggregateRideLocation = {
    _count: RideLocationCountAggregateOutputType | null
    _avg: RideLocationAvgAggregateOutputType | null
    _sum: RideLocationSumAggregateOutputType | null
    _min: RideLocationMinAggregateOutputType | null
    _max: RideLocationMaxAggregateOutputType | null
  }

  export type RideLocationAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
    accuracy: number | null
    speed: number | null
    heading: number | null
  }

  export type RideLocationSumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
    accuracy: number | null
    speed: number | null
    heading: number | null
  }

  export type RideLocationMinAggregateOutputType = {
    id: string | null
    rideId: string | null
    latitude: number | null
    longitude: number | null
    accuracy: number | null
    speed: number | null
    heading: number | null
    timestamp: Date | null
  }

  export type RideLocationMaxAggregateOutputType = {
    id: string | null
    rideId: string | null
    latitude: number | null
    longitude: number | null
    accuracy: number | null
    speed: number | null
    heading: number | null
    timestamp: Date | null
  }

  export type RideLocationCountAggregateOutputType = {
    id: number
    rideId: number
    latitude: number
    longitude: number
    accuracy: number
    speed: number
    heading: number
    timestamp: number
    _all: number
  }


  export type RideLocationAvgAggregateInputType = {
    latitude?: true
    longitude?: true
    accuracy?: true
    speed?: true
    heading?: true
  }

  export type RideLocationSumAggregateInputType = {
    latitude?: true
    longitude?: true
    accuracy?: true
    speed?: true
    heading?: true
  }

  export type RideLocationMinAggregateInputType = {
    id?: true
    rideId?: true
    latitude?: true
    longitude?: true
    accuracy?: true
    speed?: true
    heading?: true
    timestamp?: true
  }

  export type RideLocationMaxAggregateInputType = {
    id?: true
    rideId?: true
    latitude?: true
    longitude?: true
    accuracy?: true
    speed?: true
    heading?: true
    timestamp?: true
  }

  export type RideLocationCountAggregateInputType = {
    id?: true
    rideId?: true
    latitude?: true
    longitude?: true
    accuracy?: true
    speed?: true
    heading?: true
    timestamp?: true
    _all?: true
  }

  export type RideLocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RideLocation to aggregate.
     */
    where?: RideLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideLocations to fetch.
     */
    orderBy?: RideLocationOrderByWithRelationInput | RideLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RideLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RideLocations
    **/
    _count?: true | RideLocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RideLocationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RideLocationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RideLocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RideLocationMaxAggregateInputType
  }

  export type GetRideLocationAggregateType<T extends RideLocationAggregateArgs> = {
        [P in keyof T & keyof AggregateRideLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRideLocation[P]>
      : GetScalarType<T[P], AggregateRideLocation[P]>
  }




  export type RideLocationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideLocationWhereInput
    orderBy?: RideLocationOrderByWithAggregationInput | RideLocationOrderByWithAggregationInput[]
    by: RideLocationScalarFieldEnum[] | RideLocationScalarFieldEnum
    having?: RideLocationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RideLocationCountAggregateInputType | true
    _avg?: RideLocationAvgAggregateInputType
    _sum?: RideLocationSumAggregateInputType
    _min?: RideLocationMinAggregateInputType
    _max?: RideLocationMaxAggregateInputType
  }

  export type RideLocationGroupByOutputType = {
    id: string
    rideId: string
    latitude: number
    longitude: number
    accuracy: number | null
    speed: number | null
    heading: number | null
    timestamp: Date
    _count: RideLocationCountAggregateOutputType | null
    _avg: RideLocationAvgAggregateOutputType | null
    _sum: RideLocationSumAggregateOutputType | null
    _min: RideLocationMinAggregateOutputType | null
    _max: RideLocationMaxAggregateOutputType | null
  }

  type GetRideLocationGroupByPayload<T extends RideLocationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RideLocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RideLocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RideLocationGroupByOutputType[P]>
            : GetScalarType<T[P], RideLocationGroupByOutputType[P]>
        }
      >
    >


  export type RideLocationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rideId?: boolean
    latitude?: boolean
    longitude?: boolean
    accuracy?: boolean
    speed?: boolean
    heading?: boolean
    timestamp?: boolean
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rideLocation"]>

  export type RideLocationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rideId?: boolean
    latitude?: boolean
    longitude?: boolean
    accuracy?: boolean
    speed?: boolean
    heading?: boolean
    timestamp?: boolean
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rideLocation"]>

  export type RideLocationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rideId?: boolean
    latitude?: boolean
    longitude?: boolean
    accuracy?: boolean
    speed?: boolean
    heading?: boolean
    timestamp?: boolean
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rideLocation"]>

  export type RideLocationSelectScalar = {
    id?: boolean
    rideId?: boolean
    latitude?: boolean
    longitude?: boolean
    accuracy?: boolean
    speed?: boolean
    heading?: boolean
    timestamp?: boolean
  }

  export type RideLocationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "rideId" | "latitude" | "longitude" | "accuracy" | "speed" | "heading" | "timestamp", ExtArgs["result"]["rideLocation"]>
  export type RideLocationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }
  export type RideLocationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }
  export type RideLocationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ride?: boolean | RideDefaultArgs<ExtArgs>
  }

  export type $RideLocationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RideLocation"
    objects: {
      ride: Prisma.$RidePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      rideId: string
      latitude: number
      longitude: number
      accuracy: number | null
      speed: number | null
      heading: number | null
      timestamp: Date
    }, ExtArgs["result"]["rideLocation"]>
    composites: {}
  }

  type RideLocationGetPayload<S extends boolean | null | undefined | RideLocationDefaultArgs> = $Result.GetResult<Prisma.$RideLocationPayload, S>

  type RideLocationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RideLocationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RideLocationCountAggregateInputType | true
    }

  export interface RideLocationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RideLocation'], meta: { name: 'RideLocation' } }
    /**
     * Find zero or one RideLocation that matches the filter.
     * @param {RideLocationFindUniqueArgs} args - Arguments to find a RideLocation
     * @example
     * // Get one RideLocation
     * const rideLocation = await prisma.rideLocation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RideLocationFindUniqueArgs>(args: SelectSubset<T, RideLocationFindUniqueArgs<ExtArgs>>): Prisma__RideLocationClient<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RideLocation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RideLocationFindUniqueOrThrowArgs} args - Arguments to find a RideLocation
     * @example
     * // Get one RideLocation
     * const rideLocation = await prisma.rideLocation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RideLocationFindUniqueOrThrowArgs>(args: SelectSubset<T, RideLocationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RideLocationClient<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RideLocation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideLocationFindFirstArgs} args - Arguments to find a RideLocation
     * @example
     * // Get one RideLocation
     * const rideLocation = await prisma.rideLocation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RideLocationFindFirstArgs>(args?: SelectSubset<T, RideLocationFindFirstArgs<ExtArgs>>): Prisma__RideLocationClient<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RideLocation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideLocationFindFirstOrThrowArgs} args - Arguments to find a RideLocation
     * @example
     * // Get one RideLocation
     * const rideLocation = await prisma.rideLocation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RideLocationFindFirstOrThrowArgs>(args?: SelectSubset<T, RideLocationFindFirstOrThrowArgs<ExtArgs>>): Prisma__RideLocationClient<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RideLocations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideLocationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RideLocations
     * const rideLocations = await prisma.rideLocation.findMany()
     * 
     * // Get first 10 RideLocations
     * const rideLocations = await prisma.rideLocation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rideLocationWithIdOnly = await prisma.rideLocation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RideLocationFindManyArgs>(args?: SelectSubset<T, RideLocationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RideLocation.
     * @param {RideLocationCreateArgs} args - Arguments to create a RideLocation.
     * @example
     * // Create one RideLocation
     * const RideLocation = await prisma.rideLocation.create({
     *   data: {
     *     // ... data to create a RideLocation
     *   }
     * })
     * 
     */
    create<T extends RideLocationCreateArgs>(args: SelectSubset<T, RideLocationCreateArgs<ExtArgs>>): Prisma__RideLocationClient<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RideLocations.
     * @param {RideLocationCreateManyArgs} args - Arguments to create many RideLocations.
     * @example
     * // Create many RideLocations
     * const rideLocation = await prisma.rideLocation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RideLocationCreateManyArgs>(args?: SelectSubset<T, RideLocationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RideLocations and returns the data saved in the database.
     * @param {RideLocationCreateManyAndReturnArgs} args - Arguments to create many RideLocations.
     * @example
     * // Create many RideLocations
     * const rideLocation = await prisma.rideLocation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RideLocations and only return the `id`
     * const rideLocationWithIdOnly = await prisma.rideLocation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RideLocationCreateManyAndReturnArgs>(args?: SelectSubset<T, RideLocationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RideLocation.
     * @param {RideLocationDeleteArgs} args - Arguments to delete one RideLocation.
     * @example
     * // Delete one RideLocation
     * const RideLocation = await prisma.rideLocation.delete({
     *   where: {
     *     // ... filter to delete one RideLocation
     *   }
     * })
     * 
     */
    delete<T extends RideLocationDeleteArgs>(args: SelectSubset<T, RideLocationDeleteArgs<ExtArgs>>): Prisma__RideLocationClient<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RideLocation.
     * @param {RideLocationUpdateArgs} args - Arguments to update one RideLocation.
     * @example
     * // Update one RideLocation
     * const rideLocation = await prisma.rideLocation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RideLocationUpdateArgs>(args: SelectSubset<T, RideLocationUpdateArgs<ExtArgs>>): Prisma__RideLocationClient<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RideLocations.
     * @param {RideLocationDeleteManyArgs} args - Arguments to filter RideLocations to delete.
     * @example
     * // Delete a few RideLocations
     * const { count } = await prisma.rideLocation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RideLocationDeleteManyArgs>(args?: SelectSubset<T, RideLocationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RideLocations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideLocationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RideLocations
     * const rideLocation = await prisma.rideLocation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RideLocationUpdateManyArgs>(args: SelectSubset<T, RideLocationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RideLocations and returns the data updated in the database.
     * @param {RideLocationUpdateManyAndReturnArgs} args - Arguments to update many RideLocations.
     * @example
     * // Update many RideLocations
     * const rideLocation = await prisma.rideLocation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RideLocations and only return the `id`
     * const rideLocationWithIdOnly = await prisma.rideLocation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RideLocationUpdateManyAndReturnArgs>(args: SelectSubset<T, RideLocationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RideLocation.
     * @param {RideLocationUpsertArgs} args - Arguments to update or create a RideLocation.
     * @example
     * // Update or create a RideLocation
     * const rideLocation = await prisma.rideLocation.upsert({
     *   create: {
     *     // ... data to create a RideLocation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RideLocation we want to update
     *   }
     * })
     */
    upsert<T extends RideLocationUpsertArgs>(args: SelectSubset<T, RideLocationUpsertArgs<ExtArgs>>): Prisma__RideLocationClient<$Result.GetResult<Prisma.$RideLocationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RideLocations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideLocationCountArgs} args - Arguments to filter RideLocations to count.
     * @example
     * // Count the number of RideLocations
     * const count = await prisma.rideLocation.count({
     *   where: {
     *     // ... the filter for the RideLocations we want to count
     *   }
     * })
    **/
    count<T extends RideLocationCountArgs>(
      args?: Subset<T, RideLocationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RideLocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RideLocation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideLocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RideLocationAggregateArgs>(args: Subset<T, RideLocationAggregateArgs>): Prisma.PrismaPromise<GetRideLocationAggregateType<T>>

    /**
     * Group by RideLocation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideLocationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RideLocationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RideLocationGroupByArgs['orderBy'] }
        : { orderBy?: RideLocationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RideLocationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRideLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RideLocation model
   */
  readonly fields: RideLocationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RideLocation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RideLocationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ride<T extends RideDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RideDefaultArgs<ExtArgs>>): Prisma__RideClient<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RideLocation model
   */
  interface RideLocationFieldRefs {
    readonly id: FieldRef<"RideLocation", 'String'>
    readonly rideId: FieldRef<"RideLocation", 'String'>
    readonly latitude: FieldRef<"RideLocation", 'Float'>
    readonly longitude: FieldRef<"RideLocation", 'Float'>
    readonly accuracy: FieldRef<"RideLocation", 'Float'>
    readonly speed: FieldRef<"RideLocation", 'Float'>
    readonly heading: FieldRef<"RideLocation", 'Float'>
    readonly timestamp: FieldRef<"RideLocation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RideLocation findUnique
   */
  export type RideLocationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    /**
     * Filter, which RideLocation to fetch.
     */
    where: RideLocationWhereUniqueInput
  }

  /**
   * RideLocation findUniqueOrThrow
   */
  export type RideLocationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    /**
     * Filter, which RideLocation to fetch.
     */
    where: RideLocationWhereUniqueInput
  }

  /**
   * RideLocation findFirst
   */
  export type RideLocationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    /**
     * Filter, which RideLocation to fetch.
     */
    where?: RideLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideLocations to fetch.
     */
    orderBy?: RideLocationOrderByWithRelationInput | RideLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RideLocations.
     */
    cursor?: RideLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RideLocations.
     */
    distinct?: RideLocationScalarFieldEnum | RideLocationScalarFieldEnum[]
  }

  /**
   * RideLocation findFirstOrThrow
   */
  export type RideLocationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    /**
     * Filter, which RideLocation to fetch.
     */
    where?: RideLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideLocations to fetch.
     */
    orderBy?: RideLocationOrderByWithRelationInput | RideLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RideLocations.
     */
    cursor?: RideLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RideLocations.
     */
    distinct?: RideLocationScalarFieldEnum | RideLocationScalarFieldEnum[]
  }

  /**
   * RideLocation findMany
   */
  export type RideLocationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    /**
     * Filter, which RideLocations to fetch.
     */
    where?: RideLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideLocations to fetch.
     */
    orderBy?: RideLocationOrderByWithRelationInput | RideLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RideLocations.
     */
    cursor?: RideLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideLocations.
     */
    skip?: number
    distinct?: RideLocationScalarFieldEnum | RideLocationScalarFieldEnum[]
  }

  /**
   * RideLocation create
   */
  export type RideLocationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    /**
     * The data needed to create a RideLocation.
     */
    data: XOR<RideLocationCreateInput, RideLocationUncheckedCreateInput>
  }

  /**
   * RideLocation createMany
   */
  export type RideLocationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RideLocations.
     */
    data: RideLocationCreateManyInput | RideLocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RideLocation createManyAndReturn
   */
  export type RideLocationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * The data used to create many RideLocations.
     */
    data: RideLocationCreateManyInput | RideLocationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RideLocation update
   */
  export type RideLocationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    /**
     * The data needed to update a RideLocation.
     */
    data: XOR<RideLocationUpdateInput, RideLocationUncheckedUpdateInput>
    /**
     * Choose, which RideLocation to update.
     */
    where: RideLocationWhereUniqueInput
  }

  /**
   * RideLocation updateMany
   */
  export type RideLocationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RideLocations.
     */
    data: XOR<RideLocationUpdateManyMutationInput, RideLocationUncheckedUpdateManyInput>
    /**
     * Filter which RideLocations to update
     */
    where?: RideLocationWhereInput
    /**
     * Limit how many RideLocations to update.
     */
    limit?: number
  }

  /**
   * RideLocation updateManyAndReturn
   */
  export type RideLocationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * The data used to update RideLocations.
     */
    data: XOR<RideLocationUpdateManyMutationInput, RideLocationUncheckedUpdateManyInput>
    /**
     * Filter which RideLocations to update
     */
    where?: RideLocationWhereInput
    /**
     * Limit how many RideLocations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RideLocation upsert
   */
  export type RideLocationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    /**
     * The filter to search for the RideLocation to update in case it exists.
     */
    where: RideLocationWhereUniqueInput
    /**
     * In case the RideLocation found by the `where` argument doesn't exist, create a new RideLocation with this data.
     */
    create: XOR<RideLocationCreateInput, RideLocationUncheckedCreateInput>
    /**
     * In case the RideLocation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RideLocationUpdateInput, RideLocationUncheckedUpdateInput>
  }

  /**
   * RideLocation delete
   */
  export type RideLocationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
    /**
     * Filter which RideLocation to delete.
     */
    where: RideLocationWhereUniqueInput
  }

  /**
   * RideLocation deleteMany
   */
  export type RideLocationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RideLocations to delete
     */
    where?: RideLocationWhereInput
    /**
     * Limit how many RideLocations to delete.
     */
    limit?: number
  }

  /**
   * RideLocation without action
   */
  export type RideLocationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideLocation
     */
    select?: RideLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideLocation
     */
    omit?: RideLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideLocationInclude<ExtArgs> | null
  }


  /**
   * Model DriverEarning
   */

  export type AggregateDriverEarning = {
    _count: DriverEarningCountAggregateOutputType | null
    _avg: DriverEarningAvgAggregateOutputType | null
    _sum: DriverEarningSumAggregateOutputType | null
    _min: DriverEarningMinAggregateOutputType | null
    _max: DriverEarningMaxAggregateOutputType | null
  }

  export type DriverEarningAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type DriverEarningSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type DriverEarningMinAggregateOutputType = {
    id: string | null
    driverId: string | null
    rideId: string | null
    amount: Decimal | null
    type: string | null
    description: string | null
    processedAt: Date | null
    createdAt: Date | null
  }

  export type DriverEarningMaxAggregateOutputType = {
    id: string | null
    driverId: string | null
    rideId: string | null
    amount: Decimal | null
    type: string | null
    description: string | null
    processedAt: Date | null
    createdAt: Date | null
  }

  export type DriverEarningCountAggregateOutputType = {
    id: number
    driverId: number
    rideId: number
    amount: number
    type: number
    description: number
    processedAt: number
    createdAt: number
    _all: number
  }


  export type DriverEarningAvgAggregateInputType = {
    amount?: true
  }

  export type DriverEarningSumAggregateInputType = {
    amount?: true
  }

  export type DriverEarningMinAggregateInputType = {
    id?: true
    driverId?: true
    rideId?: true
    amount?: true
    type?: true
    description?: true
    processedAt?: true
    createdAt?: true
  }

  export type DriverEarningMaxAggregateInputType = {
    id?: true
    driverId?: true
    rideId?: true
    amount?: true
    type?: true
    description?: true
    processedAt?: true
    createdAt?: true
  }

  export type DriverEarningCountAggregateInputType = {
    id?: true
    driverId?: true
    rideId?: true
    amount?: true
    type?: true
    description?: true
    processedAt?: true
    createdAt?: true
    _all?: true
  }

  export type DriverEarningAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DriverEarning to aggregate.
     */
    where?: DriverEarningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DriverEarnings to fetch.
     */
    orderBy?: DriverEarningOrderByWithRelationInput | DriverEarningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DriverEarningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DriverEarnings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DriverEarnings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DriverEarnings
    **/
    _count?: true | DriverEarningCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DriverEarningAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DriverEarningSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DriverEarningMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DriverEarningMaxAggregateInputType
  }

  export type GetDriverEarningAggregateType<T extends DriverEarningAggregateArgs> = {
        [P in keyof T & keyof AggregateDriverEarning]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDriverEarning[P]>
      : GetScalarType<T[P], AggregateDriverEarning[P]>
  }




  export type DriverEarningGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DriverEarningWhereInput
    orderBy?: DriverEarningOrderByWithAggregationInput | DriverEarningOrderByWithAggregationInput[]
    by: DriverEarningScalarFieldEnum[] | DriverEarningScalarFieldEnum
    having?: DriverEarningScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DriverEarningCountAggregateInputType | true
    _avg?: DriverEarningAvgAggregateInputType
    _sum?: DriverEarningSumAggregateInputType
    _min?: DriverEarningMinAggregateInputType
    _max?: DriverEarningMaxAggregateInputType
  }

  export type DriverEarningGroupByOutputType = {
    id: string
    driverId: string
    rideId: string
    amount: Decimal
    type: string
    description: string | null
    processedAt: Date | null
    createdAt: Date
    _count: DriverEarningCountAggregateOutputType | null
    _avg: DriverEarningAvgAggregateOutputType | null
    _sum: DriverEarningSumAggregateOutputType | null
    _min: DriverEarningMinAggregateOutputType | null
    _max: DriverEarningMaxAggregateOutputType | null
  }

  type GetDriverEarningGroupByPayload<T extends DriverEarningGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DriverEarningGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DriverEarningGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DriverEarningGroupByOutputType[P]>
            : GetScalarType<T[P], DriverEarningGroupByOutputType[P]>
        }
      >
    >


  export type DriverEarningSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    driverId?: boolean
    rideId?: boolean
    amount?: boolean
    type?: boolean
    description?: boolean
    processedAt?: boolean
    createdAt?: boolean
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driverEarning"]>

  export type DriverEarningSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    driverId?: boolean
    rideId?: boolean
    amount?: boolean
    type?: boolean
    description?: boolean
    processedAt?: boolean
    createdAt?: boolean
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driverEarning"]>

  export type DriverEarningSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    driverId?: boolean
    rideId?: boolean
    amount?: boolean
    type?: boolean
    description?: boolean
    processedAt?: boolean
    createdAt?: boolean
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driverEarning"]>

  export type DriverEarningSelectScalar = {
    id?: boolean
    driverId?: boolean
    rideId?: boolean
    amount?: boolean
    type?: boolean
    description?: boolean
    processedAt?: boolean
    createdAt?: boolean
  }

  export type DriverEarningOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "driverId" | "rideId" | "amount" | "type" | "description" | "processedAt" | "createdAt", ExtArgs["result"]["driverEarning"]>
  export type DriverEarningInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }
  export type DriverEarningIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }
  export type DriverEarningIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    driver?: boolean | DriverDefaultArgs<ExtArgs>
  }

  export type $DriverEarningPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DriverEarning"
    objects: {
      driver: Prisma.$DriverPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      driverId: string
      rideId: string
      amount: Prisma.Decimal
      type: string
      description: string | null
      processedAt: Date | null
      createdAt: Date
    }, ExtArgs["result"]["driverEarning"]>
    composites: {}
  }

  type DriverEarningGetPayload<S extends boolean | null | undefined | DriverEarningDefaultArgs> = $Result.GetResult<Prisma.$DriverEarningPayload, S>

  type DriverEarningCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DriverEarningFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DriverEarningCountAggregateInputType | true
    }

  export interface DriverEarningDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DriverEarning'], meta: { name: 'DriverEarning' } }
    /**
     * Find zero or one DriverEarning that matches the filter.
     * @param {DriverEarningFindUniqueArgs} args - Arguments to find a DriverEarning
     * @example
     * // Get one DriverEarning
     * const driverEarning = await prisma.driverEarning.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DriverEarningFindUniqueArgs>(args: SelectSubset<T, DriverEarningFindUniqueArgs<ExtArgs>>): Prisma__DriverEarningClient<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DriverEarning that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DriverEarningFindUniqueOrThrowArgs} args - Arguments to find a DriverEarning
     * @example
     * // Get one DriverEarning
     * const driverEarning = await prisma.driverEarning.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DriverEarningFindUniqueOrThrowArgs>(args: SelectSubset<T, DriverEarningFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DriverEarningClient<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DriverEarning that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverEarningFindFirstArgs} args - Arguments to find a DriverEarning
     * @example
     * // Get one DriverEarning
     * const driverEarning = await prisma.driverEarning.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DriverEarningFindFirstArgs>(args?: SelectSubset<T, DriverEarningFindFirstArgs<ExtArgs>>): Prisma__DriverEarningClient<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DriverEarning that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverEarningFindFirstOrThrowArgs} args - Arguments to find a DriverEarning
     * @example
     * // Get one DriverEarning
     * const driverEarning = await prisma.driverEarning.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DriverEarningFindFirstOrThrowArgs>(args?: SelectSubset<T, DriverEarningFindFirstOrThrowArgs<ExtArgs>>): Prisma__DriverEarningClient<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DriverEarnings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverEarningFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DriverEarnings
     * const driverEarnings = await prisma.driverEarning.findMany()
     * 
     * // Get first 10 DriverEarnings
     * const driverEarnings = await prisma.driverEarning.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const driverEarningWithIdOnly = await prisma.driverEarning.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DriverEarningFindManyArgs>(args?: SelectSubset<T, DriverEarningFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DriverEarning.
     * @param {DriverEarningCreateArgs} args - Arguments to create a DriverEarning.
     * @example
     * // Create one DriverEarning
     * const DriverEarning = await prisma.driverEarning.create({
     *   data: {
     *     // ... data to create a DriverEarning
     *   }
     * })
     * 
     */
    create<T extends DriverEarningCreateArgs>(args: SelectSubset<T, DriverEarningCreateArgs<ExtArgs>>): Prisma__DriverEarningClient<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DriverEarnings.
     * @param {DriverEarningCreateManyArgs} args - Arguments to create many DriverEarnings.
     * @example
     * // Create many DriverEarnings
     * const driverEarning = await prisma.driverEarning.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DriverEarningCreateManyArgs>(args?: SelectSubset<T, DriverEarningCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DriverEarnings and returns the data saved in the database.
     * @param {DriverEarningCreateManyAndReturnArgs} args - Arguments to create many DriverEarnings.
     * @example
     * // Create many DriverEarnings
     * const driverEarning = await prisma.driverEarning.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DriverEarnings and only return the `id`
     * const driverEarningWithIdOnly = await prisma.driverEarning.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DriverEarningCreateManyAndReturnArgs>(args?: SelectSubset<T, DriverEarningCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DriverEarning.
     * @param {DriverEarningDeleteArgs} args - Arguments to delete one DriverEarning.
     * @example
     * // Delete one DriverEarning
     * const DriverEarning = await prisma.driverEarning.delete({
     *   where: {
     *     // ... filter to delete one DriverEarning
     *   }
     * })
     * 
     */
    delete<T extends DriverEarningDeleteArgs>(args: SelectSubset<T, DriverEarningDeleteArgs<ExtArgs>>): Prisma__DriverEarningClient<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DriverEarning.
     * @param {DriverEarningUpdateArgs} args - Arguments to update one DriverEarning.
     * @example
     * // Update one DriverEarning
     * const driverEarning = await prisma.driverEarning.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DriverEarningUpdateArgs>(args: SelectSubset<T, DriverEarningUpdateArgs<ExtArgs>>): Prisma__DriverEarningClient<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DriverEarnings.
     * @param {DriverEarningDeleteManyArgs} args - Arguments to filter DriverEarnings to delete.
     * @example
     * // Delete a few DriverEarnings
     * const { count } = await prisma.driverEarning.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DriverEarningDeleteManyArgs>(args?: SelectSubset<T, DriverEarningDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DriverEarnings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverEarningUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DriverEarnings
     * const driverEarning = await prisma.driverEarning.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DriverEarningUpdateManyArgs>(args: SelectSubset<T, DriverEarningUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DriverEarnings and returns the data updated in the database.
     * @param {DriverEarningUpdateManyAndReturnArgs} args - Arguments to update many DriverEarnings.
     * @example
     * // Update many DriverEarnings
     * const driverEarning = await prisma.driverEarning.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DriverEarnings and only return the `id`
     * const driverEarningWithIdOnly = await prisma.driverEarning.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DriverEarningUpdateManyAndReturnArgs>(args: SelectSubset<T, DriverEarningUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DriverEarning.
     * @param {DriverEarningUpsertArgs} args - Arguments to update or create a DriverEarning.
     * @example
     * // Update or create a DriverEarning
     * const driverEarning = await prisma.driverEarning.upsert({
     *   create: {
     *     // ... data to create a DriverEarning
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DriverEarning we want to update
     *   }
     * })
     */
    upsert<T extends DriverEarningUpsertArgs>(args: SelectSubset<T, DriverEarningUpsertArgs<ExtArgs>>): Prisma__DriverEarningClient<$Result.GetResult<Prisma.$DriverEarningPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DriverEarnings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverEarningCountArgs} args - Arguments to filter DriverEarnings to count.
     * @example
     * // Count the number of DriverEarnings
     * const count = await prisma.driverEarning.count({
     *   where: {
     *     // ... the filter for the DriverEarnings we want to count
     *   }
     * })
    **/
    count<T extends DriverEarningCountArgs>(
      args?: Subset<T, DriverEarningCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DriverEarningCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DriverEarning.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverEarningAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DriverEarningAggregateArgs>(args: Subset<T, DriverEarningAggregateArgs>): Prisma.PrismaPromise<GetDriverEarningAggregateType<T>>

    /**
     * Group by DriverEarning.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverEarningGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DriverEarningGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DriverEarningGroupByArgs['orderBy'] }
        : { orderBy?: DriverEarningGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DriverEarningGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDriverEarningGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DriverEarning model
   */
  readonly fields: DriverEarningFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DriverEarning.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DriverEarningClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    driver<T extends DriverDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DriverDefaultArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DriverEarning model
   */
  interface DriverEarningFieldRefs {
    readonly id: FieldRef<"DriverEarning", 'String'>
    readonly driverId: FieldRef<"DriverEarning", 'String'>
    readonly rideId: FieldRef<"DriverEarning", 'String'>
    readonly amount: FieldRef<"DriverEarning", 'Decimal'>
    readonly type: FieldRef<"DriverEarning", 'String'>
    readonly description: FieldRef<"DriverEarning", 'String'>
    readonly processedAt: FieldRef<"DriverEarning", 'DateTime'>
    readonly createdAt: FieldRef<"DriverEarning", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DriverEarning findUnique
   */
  export type DriverEarningFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    /**
     * Filter, which DriverEarning to fetch.
     */
    where: DriverEarningWhereUniqueInput
  }

  /**
   * DriverEarning findUniqueOrThrow
   */
  export type DriverEarningFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    /**
     * Filter, which DriverEarning to fetch.
     */
    where: DriverEarningWhereUniqueInput
  }

  /**
   * DriverEarning findFirst
   */
  export type DriverEarningFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    /**
     * Filter, which DriverEarning to fetch.
     */
    where?: DriverEarningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DriverEarnings to fetch.
     */
    orderBy?: DriverEarningOrderByWithRelationInput | DriverEarningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DriverEarnings.
     */
    cursor?: DriverEarningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DriverEarnings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DriverEarnings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DriverEarnings.
     */
    distinct?: DriverEarningScalarFieldEnum | DriverEarningScalarFieldEnum[]
  }

  /**
   * DriverEarning findFirstOrThrow
   */
  export type DriverEarningFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    /**
     * Filter, which DriverEarning to fetch.
     */
    where?: DriverEarningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DriverEarnings to fetch.
     */
    orderBy?: DriverEarningOrderByWithRelationInput | DriverEarningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DriverEarnings.
     */
    cursor?: DriverEarningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DriverEarnings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DriverEarnings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DriverEarnings.
     */
    distinct?: DriverEarningScalarFieldEnum | DriverEarningScalarFieldEnum[]
  }

  /**
   * DriverEarning findMany
   */
  export type DriverEarningFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    /**
     * Filter, which DriverEarnings to fetch.
     */
    where?: DriverEarningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DriverEarnings to fetch.
     */
    orderBy?: DriverEarningOrderByWithRelationInput | DriverEarningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DriverEarnings.
     */
    cursor?: DriverEarningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DriverEarnings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DriverEarnings.
     */
    skip?: number
    distinct?: DriverEarningScalarFieldEnum | DriverEarningScalarFieldEnum[]
  }

  /**
   * DriverEarning create
   */
  export type DriverEarningCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    /**
     * The data needed to create a DriverEarning.
     */
    data: XOR<DriverEarningCreateInput, DriverEarningUncheckedCreateInput>
  }

  /**
   * DriverEarning createMany
   */
  export type DriverEarningCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DriverEarnings.
     */
    data: DriverEarningCreateManyInput | DriverEarningCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DriverEarning createManyAndReturn
   */
  export type DriverEarningCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * The data used to create many DriverEarnings.
     */
    data: DriverEarningCreateManyInput | DriverEarningCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DriverEarning update
   */
  export type DriverEarningUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    /**
     * The data needed to update a DriverEarning.
     */
    data: XOR<DriverEarningUpdateInput, DriverEarningUncheckedUpdateInput>
    /**
     * Choose, which DriverEarning to update.
     */
    where: DriverEarningWhereUniqueInput
  }

  /**
   * DriverEarning updateMany
   */
  export type DriverEarningUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DriverEarnings.
     */
    data: XOR<DriverEarningUpdateManyMutationInput, DriverEarningUncheckedUpdateManyInput>
    /**
     * Filter which DriverEarnings to update
     */
    where?: DriverEarningWhereInput
    /**
     * Limit how many DriverEarnings to update.
     */
    limit?: number
  }

  /**
   * DriverEarning updateManyAndReturn
   */
  export type DriverEarningUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * The data used to update DriverEarnings.
     */
    data: XOR<DriverEarningUpdateManyMutationInput, DriverEarningUncheckedUpdateManyInput>
    /**
     * Filter which DriverEarnings to update
     */
    where?: DriverEarningWhereInput
    /**
     * Limit how many DriverEarnings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DriverEarning upsert
   */
  export type DriverEarningUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    /**
     * The filter to search for the DriverEarning to update in case it exists.
     */
    where: DriverEarningWhereUniqueInput
    /**
     * In case the DriverEarning found by the `where` argument doesn't exist, create a new DriverEarning with this data.
     */
    create: XOR<DriverEarningCreateInput, DriverEarningUncheckedCreateInput>
    /**
     * In case the DriverEarning was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DriverEarningUpdateInput, DriverEarningUncheckedUpdateInput>
  }

  /**
   * DriverEarning delete
   */
  export type DriverEarningDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
    /**
     * Filter which DriverEarning to delete.
     */
    where: DriverEarningWhereUniqueInput
  }

  /**
   * DriverEarning deleteMany
   */
  export type DriverEarningDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DriverEarnings to delete
     */
    where?: DriverEarningWhereInput
    /**
     * Limit how many DriverEarnings to delete.
     */
    limit?: number
  }

  /**
   * DriverEarning without action
   */
  export type DriverEarningDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverEarning
     */
    select?: DriverEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DriverEarning
     */
    omit?: DriverEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverEarningInclude<ExtArgs> | null
  }


  /**
   * Model RideService
   */

  export type AggregateRideService = {
    _count: RideServiceCountAggregateOutputType | null
    _avg: RideServiceAvgAggregateOutputType | null
    _sum: RideServiceSumAggregateOutputType | null
    _min: RideServiceMinAggregateOutputType | null
    _max: RideServiceMaxAggregateOutputType | null
  }

  export type RideServiceAvgAggregateOutputType = {
    baseDistance: number | null
    maxDistance: number | null
    baseFare: Decimal | null
    perKmRate: Decimal | null
    perMinuteRate: Decimal | null
    minimumFare: Decimal | null
    maximumFare: Decimal | null
    surgeMultiplier: Decimal | null
    maxSurgeMultiplier: Decimal | null
    platformFeePercentage: Decimal | null
    driverEarningsPercentage: Decimal | null
    nightFareMultiplier: Decimal | null
    weekendFareMultiplier: Decimal | null
    cancellationFee: Decimal | null
    cancellationTimeLimit: number | null
    estimatedPickupTime: number | null
    maxWaitTime: number | null
  }

  export type RideServiceSumAggregateOutputType = {
    baseDistance: number | null
    maxDistance: number | null
    baseFare: Decimal | null
    perKmRate: Decimal | null
    perMinuteRate: Decimal | null
    minimumFare: Decimal | null
    maximumFare: Decimal | null
    surgeMultiplier: Decimal | null
    maxSurgeMultiplier: Decimal | null
    platformFeePercentage: Decimal | null
    driverEarningsPercentage: Decimal | null
    nightFareMultiplier: Decimal | null
    weekendFareMultiplier: Decimal | null
    cancellationFee: Decimal | null
    cancellationTimeLimit: number | null
    estimatedPickupTime: number | null
    maxWaitTime: number | null
  }

  export type RideServiceMinAggregateOutputType = {
    id: string | null
    serviceId: string | null
    name: string | null
    description: string | null
    vehicleType: $Enums.RiderVehicleType | null
    isActive: boolean | null
    isDefault: boolean | null
    distanceUnit: $Enums.DistanceUnit | null
    baseDistance: number | null
    maxDistance: number | null
    baseFare: Decimal | null
    perKmRate: Decimal | null
    perMinuteRate: Decimal | null
    minimumFare: Decimal | null
    maximumFare: Decimal | null
    currency: string | null
    currencySymbol: string | null
    surgeMultiplier: Decimal | null
    maxSurgeMultiplier: Decimal | null
    platformFeePercentage: Decimal | null
    driverEarningsPercentage: Decimal | null
    nightFareMultiplier: Decimal | null
    weekendFareMultiplier: Decimal | null
    cancellationFee: Decimal | null
    cancellationTimeLimit: number | null
    estimatedPickupTime: number | null
    maxWaitTime: number | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type RideServiceMaxAggregateOutputType = {
    id: string | null
    serviceId: string | null
    name: string | null
    description: string | null
    vehicleType: $Enums.RiderVehicleType | null
    isActive: boolean | null
    isDefault: boolean | null
    distanceUnit: $Enums.DistanceUnit | null
    baseDistance: number | null
    maxDistance: number | null
    baseFare: Decimal | null
    perKmRate: Decimal | null
    perMinuteRate: Decimal | null
    minimumFare: Decimal | null
    maximumFare: Decimal | null
    currency: string | null
    currencySymbol: string | null
    surgeMultiplier: Decimal | null
    maxSurgeMultiplier: Decimal | null
    platformFeePercentage: Decimal | null
    driverEarningsPercentage: Decimal | null
    nightFareMultiplier: Decimal | null
    weekendFareMultiplier: Decimal | null
    cancellationFee: Decimal | null
    cancellationTimeLimit: number | null
    estimatedPickupTime: number | null
    maxWaitTime: number | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type RideServiceCountAggregateOutputType = {
    id: number
    serviceId: number
    name: number
    description: number
    vehicleType: number
    isActive: number
    isDefault: number
    distanceUnit: number
    baseDistance: number
    maxDistance: number
    baseFare: number
    perKmRate: number
    perMinuteRate: number
    minimumFare: number
    maximumFare: number
    currency: number
    currencySymbol: number
    surgeMultiplier: number
    maxSurgeMultiplier: number
    platformFeePercentage: number
    driverEarningsPercentage: number
    nightFareMultiplier: number
    weekendFareMultiplier: number
    cancellationFee: number
    cancellationTimeLimit: number
    features: number
    restrictions: number
    estimatedPickupTime: number
    maxWaitTime: number
    createdAt: number
    updatedAt: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type RideServiceAvgAggregateInputType = {
    baseDistance?: true
    maxDistance?: true
    baseFare?: true
    perKmRate?: true
    perMinuteRate?: true
    minimumFare?: true
    maximumFare?: true
    surgeMultiplier?: true
    maxSurgeMultiplier?: true
    platformFeePercentage?: true
    driverEarningsPercentage?: true
    nightFareMultiplier?: true
    weekendFareMultiplier?: true
    cancellationFee?: true
    cancellationTimeLimit?: true
    estimatedPickupTime?: true
    maxWaitTime?: true
  }

  export type RideServiceSumAggregateInputType = {
    baseDistance?: true
    maxDistance?: true
    baseFare?: true
    perKmRate?: true
    perMinuteRate?: true
    minimumFare?: true
    maximumFare?: true
    surgeMultiplier?: true
    maxSurgeMultiplier?: true
    platformFeePercentage?: true
    driverEarningsPercentage?: true
    nightFareMultiplier?: true
    weekendFareMultiplier?: true
    cancellationFee?: true
    cancellationTimeLimit?: true
    estimatedPickupTime?: true
    maxWaitTime?: true
  }

  export type RideServiceMinAggregateInputType = {
    id?: true
    serviceId?: true
    name?: true
    description?: true
    vehicleType?: true
    isActive?: true
    isDefault?: true
    distanceUnit?: true
    baseDistance?: true
    maxDistance?: true
    baseFare?: true
    perKmRate?: true
    perMinuteRate?: true
    minimumFare?: true
    maximumFare?: true
    currency?: true
    currencySymbol?: true
    surgeMultiplier?: true
    maxSurgeMultiplier?: true
    platformFeePercentage?: true
    driverEarningsPercentage?: true
    nightFareMultiplier?: true
    weekendFareMultiplier?: true
    cancellationFee?: true
    cancellationTimeLimit?: true
    estimatedPickupTime?: true
    maxWaitTime?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type RideServiceMaxAggregateInputType = {
    id?: true
    serviceId?: true
    name?: true
    description?: true
    vehicleType?: true
    isActive?: true
    isDefault?: true
    distanceUnit?: true
    baseDistance?: true
    maxDistance?: true
    baseFare?: true
    perKmRate?: true
    perMinuteRate?: true
    minimumFare?: true
    maximumFare?: true
    currency?: true
    currencySymbol?: true
    surgeMultiplier?: true
    maxSurgeMultiplier?: true
    platformFeePercentage?: true
    driverEarningsPercentage?: true
    nightFareMultiplier?: true
    weekendFareMultiplier?: true
    cancellationFee?: true
    cancellationTimeLimit?: true
    estimatedPickupTime?: true
    maxWaitTime?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type RideServiceCountAggregateInputType = {
    id?: true
    serviceId?: true
    name?: true
    description?: true
    vehicleType?: true
    isActive?: true
    isDefault?: true
    distanceUnit?: true
    baseDistance?: true
    maxDistance?: true
    baseFare?: true
    perKmRate?: true
    perMinuteRate?: true
    minimumFare?: true
    maximumFare?: true
    currency?: true
    currencySymbol?: true
    surgeMultiplier?: true
    maxSurgeMultiplier?: true
    platformFeePercentage?: true
    driverEarningsPercentage?: true
    nightFareMultiplier?: true
    weekendFareMultiplier?: true
    cancellationFee?: true
    cancellationTimeLimit?: true
    features?: true
    restrictions?: true
    estimatedPickupTime?: true
    maxWaitTime?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type RideServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RideService to aggregate.
     */
    where?: RideServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideServices to fetch.
     */
    orderBy?: RideServiceOrderByWithRelationInput | RideServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RideServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RideServices
    **/
    _count?: true | RideServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RideServiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RideServiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RideServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RideServiceMaxAggregateInputType
  }

  export type GetRideServiceAggregateType<T extends RideServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateRideService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRideService[P]>
      : GetScalarType<T[P], AggregateRideService[P]>
  }




  export type RideServiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RideServiceWhereInput
    orderBy?: RideServiceOrderByWithAggregationInput | RideServiceOrderByWithAggregationInput[]
    by: RideServiceScalarFieldEnum[] | RideServiceScalarFieldEnum
    having?: RideServiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RideServiceCountAggregateInputType | true
    _avg?: RideServiceAvgAggregateInputType
    _sum?: RideServiceSumAggregateInputType
    _min?: RideServiceMinAggregateInputType
    _max?: RideServiceMaxAggregateInputType
  }

  export type RideServiceGroupByOutputType = {
    id: string
    serviceId: string
    name: string
    description: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive: boolean
    isDefault: boolean
    distanceUnit: $Enums.DistanceUnit
    baseDistance: number
    maxDistance: number | null
    baseFare: Decimal
    perKmRate: Decimal
    perMinuteRate: Decimal
    minimumFare: Decimal
    maximumFare: Decimal | null
    currency: string
    currencySymbol: string
    surgeMultiplier: Decimal
    maxSurgeMultiplier: Decimal
    platformFeePercentage: Decimal
    driverEarningsPercentage: Decimal
    nightFareMultiplier: Decimal
    weekendFareMultiplier: Decimal
    cancellationFee: Decimal
    cancellationTimeLimit: number
    features: JsonValue | null
    restrictions: JsonValue | null
    estimatedPickupTime: number
    maxWaitTime: number
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    updatedBy: string | null
    _count: RideServiceCountAggregateOutputType | null
    _avg: RideServiceAvgAggregateOutputType | null
    _sum: RideServiceSumAggregateOutputType | null
    _min: RideServiceMinAggregateOutputType | null
    _max: RideServiceMaxAggregateOutputType | null
  }

  type GetRideServiceGroupByPayload<T extends RideServiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RideServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RideServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RideServiceGroupByOutputType[P]>
            : GetScalarType<T[P], RideServiceGroupByOutputType[P]>
        }
      >
    >


  export type RideServiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceId?: boolean
    name?: boolean
    description?: boolean
    vehicleType?: boolean
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: boolean
    baseDistance?: boolean
    maxDistance?: boolean
    baseFare?: boolean
    perKmRate?: boolean
    perMinuteRate?: boolean
    minimumFare?: boolean
    maximumFare?: boolean
    currency?: boolean
    currencySymbol?: boolean
    surgeMultiplier?: boolean
    maxSurgeMultiplier?: boolean
    platformFeePercentage?: boolean
    driverEarningsPercentage?: boolean
    nightFareMultiplier?: boolean
    weekendFareMultiplier?: boolean
    cancellationFee?: boolean
    cancellationTimeLimit?: boolean
    features?: boolean
    restrictions?: boolean
    estimatedPickupTime?: boolean
    maxWaitTime?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    drivers?: boolean | RideService$driversArgs<ExtArgs>
    rideRequests?: boolean | RideService$rideRequestsArgs<ExtArgs>
    rides?: boolean | RideService$ridesArgs<ExtArgs>
    _count?: boolean | RideServiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rideService"]>

  export type RideServiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceId?: boolean
    name?: boolean
    description?: boolean
    vehicleType?: boolean
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: boolean
    baseDistance?: boolean
    maxDistance?: boolean
    baseFare?: boolean
    perKmRate?: boolean
    perMinuteRate?: boolean
    minimumFare?: boolean
    maximumFare?: boolean
    currency?: boolean
    currencySymbol?: boolean
    surgeMultiplier?: boolean
    maxSurgeMultiplier?: boolean
    platformFeePercentage?: boolean
    driverEarningsPercentage?: boolean
    nightFareMultiplier?: boolean
    weekendFareMultiplier?: boolean
    cancellationFee?: boolean
    cancellationTimeLimit?: boolean
    features?: boolean
    restrictions?: boolean
    estimatedPickupTime?: boolean
    maxWaitTime?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }, ExtArgs["result"]["rideService"]>

  export type RideServiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceId?: boolean
    name?: boolean
    description?: boolean
    vehicleType?: boolean
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: boolean
    baseDistance?: boolean
    maxDistance?: boolean
    baseFare?: boolean
    perKmRate?: boolean
    perMinuteRate?: boolean
    minimumFare?: boolean
    maximumFare?: boolean
    currency?: boolean
    currencySymbol?: boolean
    surgeMultiplier?: boolean
    maxSurgeMultiplier?: boolean
    platformFeePercentage?: boolean
    driverEarningsPercentage?: boolean
    nightFareMultiplier?: boolean
    weekendFareMultiplier?: boolean
    cancellationFee?: boolean
    cancellationTimeLimit?: boolean
    features?: boolean
    restrictions?: boolean
    estimatedPickupTime?: boolean
    maxWaitTime?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }, ExtArgs["result"]["rideService"]>

  export type RideServiceSelectScalar = {
    id?: boolean
    serviceId?: boolean
    name?: boolean
    description?: boolean
    vehicleType?: boolean
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: boolean
    baseDistance?: boolean
    maxDistance?: boolean
    baseFare?: boolean
    perKmRate?: boolean
    perMinuteRate?: boolean
    minimumFare?: boolean
    maximumFare?: boolean
    currency?: boolean
    currencySymbol?: boolean
    surgeMultiplier?: boolean
    maxSurgeMultiplier?: boolean
    platformFeePercentage?: boolean
    driverEarningsPercentage?: boolean
    nightFareMultiplier?: boolean
    weekendFareMultiplier?: boolean
    cancellationFee?: boolean
    cancellationTimeLimit?: boolean
    features?: boolean
    restrictions?: boolean
    estimatedPickupTime?: boolean
    maxWaitTime?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type RideServiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "serviceId" | "name" | "description" | "vehicleType" | "isActive" | "isDefault" | "distanceUnit" | "baseDistance" | "maxDistance" | "baseFare" | "perKmRate" | "perMinuteRate" | "minimumFare" | "maximumFare" | "currency" | "currencySymbol" | "surgeMultiplier" | "maxSurgeMultiplier" | "platformFeePercentage" | "driverEarningsPercentage" | "nightFareMultiplier" | "weekendFareMultiplier" | "cancellationFee" | "cancellationTimeLimit" | "features" | "restrictions" | "estimatedPickupTime" | "maxWaitTime" | "createdAt" | "updatedAt" | "createdBy" | "updatedBy", ExtArgs["result"]["rideService"]>
  export type RideServiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | RideService$driversArgs<ExtArgs>
    rideRequests?: boolean | RideService$rideRequestsArgs<ExtArgs>
    rides?: boolean | RideService$ridesArgs<ExtArgs>
    _count?: boolean | RideServiceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RideServiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RideServiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RideServicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RideService"
    objects: {
      drivers: Prisma.$DriverPayload<ExtArgs>[]
      rideRequests: Prisma.$RideRequestPayload<ExtArgs>[]
      rides: Prisma.$RidePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      serviceId: string
      name: string
      description: string | null
      vehicleType: $Enums.RiderVehicleType
      isActive: boolean
      isDefault: boolean
      distanceUnit: $Enums.DistanceUnit
      baseDistance: number
      maxDistance: number | null
      baseFare: Prisma.Decimal
      perKmRate: Prisma.Decimal
      perMinuteRate: Prisma.Decimal
      minimumFare: Prisma.Decimal
      maximumFare: Prisma.Decimal | null
      currency: string
      currencySymbol: string
      surgeMultiplier: Prisma.Decimal
      maxSurgeMultiplier: Prisma.Decimal
      platformFeePercentage: Prisma.Decimal
      driverEarningsPercentage: Prisma.Decimal
      nightFareMultiplier: Prisma.Decimal
      weekendFareMultiplier: Prisma.Decimal
      cancellationFee: Prisma.Decimal
      cancellationTimeLimit: number
      features: Prisma.JsonValue | null
      restrictions: Prisma.JsonValue | null
      estimatedPickupTime: number
      maxWaitTime: number
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["rideService"]>
    composites: {}
  }

  type RideServiceGetPayload<S extends boolean | null | undefined | RideServiceDefaultArgs> = $Result.GetResult<Prisma.$RideServicePayload, S>

  type RideServiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RideServiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RideServiceCountAggregateInputType | true
    }

  export interface RideServiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RideService'], meta: { name: 'RideService' } }
    /**
     * Find zero or one RideService that matches the filter.
     * @param {RideServiceFindUniqueArgs} args - Arguments to find a RideService
     * @example
     * // Get one RideService
     * const rideService = await prisma.rideService.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RideServiceFindUniqueArgs>(args: SelectSubset<T, RideServiceFindUniqueArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RideService that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RideServiceFindUniqueOrThrowArgs} args - Arguments to find a RideService
     * @example
     * // Get one RideService
     * const rideService = await prisma.rideService.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RideServiceFindUniqueOrThrowArgs>(args: SelectSubset<T, RideServiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RideService that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideServiceFindFirstArgs} args - Arguments to find a RideService
     * @example
     * // Get one RideService
     * const rideService = await prisma.rideService.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RideServiceFindFirstArgs>(args?: SelectSubset<T, RideServiceFindFirstArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RideService that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideServiceFindFirstOrThrowArgs} args - Arguments to find a RideService
     * @example
     * // Get one RideService
     * const rideService = await prisma.rideService.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RideServiceFindFirstOrThrowArgs>(args?: SelectSubset<T, RideServiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RideServices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideServiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RideServices
     * const rideServices = await prisma.rideService.findMany()
     * 
     * // Get first 10 RideServices
     * const rideServices = await prisma.rideService.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rideServiceWithIdOnly = await prisma.rideService.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RideServiceFindManyArgs>(args?: SelectSubset<T, RideServiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RideService.
     * @param {RideServiceCreateArgs} args - Arguments to create a RideService.
     * @example
     * // Create one RideService
     * const RideService = await prisma.rideService.create({
     *   data: {
     *     // ... data to create a RideService
     *   }
     * })
     * 
     */
    create<T extends RideServiceCreateArgs>(args: SelectSubset<T, RideServiceCreateArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RideServices.
     * @param {RideServiceCreateManyArgs} args - Arguments to create many RideServices.
     * @example
     * // Create many RideServices
     * const rideService = await prisma.rideService.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RideServiceCreateManyArgs>(args?: SelectSubset<T, RideServiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RideServices and returns the data saved in the database.
     * @param {RideServiceCreateManyAndReturnArgs} args - Arguments to create many RideServices.
     * @example
     * // Create many RideServices
     * const rideService = await prisma.rideService.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RideServices and only return the `id`
     * const rideServiceWithIdOnly = await prisma.rideService.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RideServiceCreateManyAndReturnArgs>(args?: SelectSubset<T, RideServiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RideService.
     * @param {RideServiceDeleteArgs} args - Arguments to delete one RideService.
     * @example
     * // Delete one RideService
     * const RideService = await prisma.rideService.delete({
     *   where: {
     *     // ... filter to delete one RideService
     *   }
     * })
     * 
     */
    delete<T extends RideServiceDeleteArgs>(args: SelectSubset<T, RideServiceDeleteArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RideService.
     * @param {RideServiceUpdateArgs} args - Arguments to update one RideService.
     * @example
     * // Update one RideService
     * const rideService = await prisma.rideService.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RideServiceUpdateArgs>(args: SelectSubset<T, RideServiceUpdateArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RideServices.
     * @param {RideServiceDeleteManyArgs} args - Arguments to filter RideServices to delete.
     * @example
     * // Delete a few RideServices
     * const { count } = await prisma.rideService.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RideServiceDeleteManyArgs>(args?: SelectSubset<T, RideServiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RideServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideServiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RideServices
     * const rideService = await prisma.rideService.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RideServiceUpdateManyArgs>(args: SelectSubset<T, RideServiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RideServices and returns the data updated in the database.
     * @param {RideServiceUpdateManyAndReturnArgs} args - Arguments to update many RideServices.
     * @example
     * // Update many RideServices
     * const rideService = await prisma.rideService.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RideServices and only return the `id`
     * const rideServiceWithIdOnly = await prisma.rideService.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RideServiceUpdateManyAndReturnArgs>(args: SelectSubset<T, RideServiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RideService.
     * @param {RideServiceUpsertArgs} args - Arguments to update or create a RideService.
     * @example
     * // Update or create a RideService
     * const rideService = await prisma.rideService.upsert({
     *   create: {
     *     // ... data to create a RideService
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RideService we want to update
     *   }
     * })
     */
    upsert<T extends RideServiceUpsertArgs>(args: SelectSubset<T, RideServiceUpsertArgs<ExtArgs>>): Prisma__RideServiceClient<$Result.GetResult<Prisma.$RideServicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RideServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideServiceCountArgs} args - Arguments to filter RideServices to count.
     * @example
     * // Count the number of RideServices
     * const count = await prisma.rideService.count({
     *   where: {
     *     // ... the filter for the RideServices we want to count
     *   }
     * })
    **/
    count<T extends RideServiceCountArgs>(
      args?: Subset<T, RideServiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RideServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RideService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RideServiceAggregateArgs>(args: Subset<T, RideServiceAggregateArgs>): Prisma.PrismaPromise<GetRideServiceAggregateType<T>>

    /**
     * Group by RideService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RideServiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RideServiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RideServiceGroupByArgs['orderBy'] }
        : { orderBy?: RideServiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RideServiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRideServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RideService model
   */
  readonly fields: RideServiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RideService.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RideServiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    drivers<T extends RideService$driversArgs<ExtArgs> = {}>(args?: Subset<T, RideService$driversArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rideRequests<T extends RideService$rideRequestsArgs<ExtArgs> = {}>(args?: Subset<T, RideService$rideRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rides<T extends RideService$ridesArgs<ExtArgs> = {}>(args?: Subset<T, RideService$ridesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RideService model
   */
  interface RideServiceFieldRefs {
    readonly id: FieldRef<"RideService", 'String'>
    readonly serviceId: FieldRef<"RideService", 'String'>
    readonly name: FieldRef<"RideService", 'String'>
    readonly description: FieldRef<"RideService", 'String'>
    readonly vehicleType: FieldRef<"RideService", 'RiderVehicleType'>
    readonly isActive: FieldRef<"RideService", 'Boolean'>
    readonly isDefault: FieldRef<"RideService", 'Boolean'>
    readonly distanceUnit: FieldRef<"RideService", 'DistanceUnit'>
    readonly baseDistance: FieldRef<"RideService", 'Float'>
    readonly maxDistance: FieldRef<"RideService", 'Float'>
    readonly baseFare: FieldRef<"RideService", 'Decimal'>
    readonly perKmRate: FieldRef<"RideService", 'Decimal'>
    readonly perMinuteRate: FieldRef<"RideService", 'Decimal'>
    readonly minimumFare: FieldRef<"RideService", 'Decimal'>
    readonly maximumFare: FieldRef<"RideService", 'Decimal'>
    readonly currency: FieldRef<"RideService", 'String'>
    readonly currencySymbol: FieldRef<"RideService", 'String'>
    readonly surgeMultiplier: FieldRef<"RideService", 'Decimal'>
    readonly maxSurgeMultiplier: FieldRef<"RideService", 'Decimal'>
    readonly platformFeePercentage: FieldRef<"RideService", 'Decimal'>
    readonly driverEarningsPercentage: FieldRef<"RideService", 'Decimal'>
    readonly nightFareMultiplier: FieldRef<"RideService", 'Decimal'>
    readonly weekendFareMultiplier: FieldRef<"RideService", 'Decimal'>
    readonly cancellationFee: FieldRef<"RideService", 'Decimal'>
    readonly cancellationTimeLimit: FieldRef<"RideService", 'Int'>
    readonly features: FieldRef<"RideService", 'Json'>
    readonly restrictions: FieldRef<"RideService", 'Json'>
    readonly estimatedPickupTime: FieldRef<"RideService", 'Int'>
    readonly maxWaitTime: FieldRef<"RideService", 'Int'>
    readonly createdAt: FieldRef<"RideService", 'DateTime'>
    readonly updatedAt: FieldRef<"RideService", 'DateTime'>
    readonly createdBy: FieldRef<"RideService", 'String'>
    readonly updatedBy: FieldRef<"RideService", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RideService findUnique
   */
  export type RideServiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    /**
     * Filter, which RideService to fetch.
     */
    where: RideServiceWhereUniqueInput
  }

  /**
   * RideService findUniqueOrThrow
   */
  export type RideServiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    /**
     * Filter, which RideService to fetch.
     */
    where: RideServiceWhereUniqueInput
  }

  /**
   * RideService findFirst
   */
  export type RideServiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    /**
     * Filter, which RideService to fetch.
     */
    where?: RideServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideServices to fetch.
     */
    orderBy?: RideServiceOrderByWithRelationInput | RideServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RideServices.
     */
    cursor?: RideServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RideServices.
     */
    distinct?: RideServiceScalarFieldEnum | RideServiceScalarFieldEnum[]
  }

  /**
   * RideService findFirstOrThrow
   */
  export type RideServiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    /**
     * Filter, which RideService to fetch.
     */
    where?: RideServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideServices to fetch.
     */
    orderBy?: RideServiceOrderByWithRelationInput | RideServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RideServices.
     */
    cursor?: RideServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RideServices.
     */
    distinct?: RideServiceScalarFieldEnum | RideServiceScalarFieldEnum[]
  }

  /**
   * RideService findMany
   */
  export type RideServiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    /**
     * Filter, which RideServices to fetch.
     */
    where?: RideServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RideServices to fetch.
     */
    orderBy?: RideServiceOrderByWithRelationInput | RideServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RideServices.
     */
    cursor?: RideServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RideServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RideServices.
     */
    skip?: number
    distinct?: RideServiceScalarFieldEnum | RideServiceScalarFieldEnum[]
  }

  /**
   * RideService create
   */
  export type RideServiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    /**
     * The data needed to create a RideService.
     */
    data: XOR<RideServiceCreateInput, RideServiceUncheckedCreateInput>
  }

  /**
   * RideService createMany
   */
  export type RideServiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RideServices.
     */
    data: RideServiceCreateManyInput | RideServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RideService createManyAndReturn
   */
  export type RideServiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * The data used to create many RideServices.
     */
    data: RideServiceCreateManyInput | RideServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RideService update
   */
  export type RideServiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    /**
     * The data needed to update a RideService.
     */
    data: XOR<RideServiceUpdateInput, RideServiceUncheckedUpdateInput>
    /**
     * Choose, which RideService to update.
     */
    where: RideServiceWhereUniqueInput
  }

  /**
   * RideService updateMany
   */
  export type RideServiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RideServices.
     */
    data: XOR<RideServiceUpdateManyMutationInput, RideServiceUncheckedUpdateManyInput>
    /**
     * Filter which RideServices to update
     */
    where?: RideServiceWhereInput
    /**
     * Limit how many RideServices to update.
     */
    limit?: number
  }

  /**
   * RideService updateManyAndReturn
   */
  export type RideServiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * The data used to update RideServices.
     */
    data: XOR<RideServiceUpdateManyMutationInput, RideServiceUncheckedUpdateManyInput>
    /**
     * Filter which RideServices to update
     */
    where?: RideServiceWhereInput
    /**
     * Limit how many RideServices to update.
     */
    limit?: number
  }

  /**
   * RideService upsert
   */
  export type RideServiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    /**
     * The filter to search for the RideService to update in case it exists.
     */
    where: RideServiceWhereUniqueInput
    /**
     * In case the RideService found by the `where` argument doesn't exist, create a new RideService with this data.
     */
    create: XOR<RideServiceCreateInput, RideServiceUncheckedCreateInput>
    /**
     * In case the RideService was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RideServiceUpdateInput, RideServiceUncheckedUpdateInput>
  }

  /**
   * RideService delete
   */
  export type RideServiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
    /**
     * Filter which RideService to delete.
     */
    where: RideServiceWhereUniqueInput
  }

  /**
   * RideService deleteMany
   */
  export type RideServiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RideServices to delete
     */
    where?: RideServiceWhereInput
    /**
     * Limit how many RideServices to delete.
     */
    limit?: number
  }

  /**
   * RideService.drivers
   */
  export type RideService$driversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Driver
     */
    omit?: DriverOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    where?: DriverWhereInput
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    cursor?: DriverWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DriverScalarFieldEnum | DriverScalarFieldEnum[]
  }

  /**
   * RideService.rideRequests
   */
  export type RideService$rideRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideRequest
     */
    select?: RideRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideRequest
     */
    omit?: RideRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideRequestInclude<ExtArgs> | null
    where?: RideRequestWhereInput
    orderBy?: RideRequestOrderByWithRelationInput | RideRequestOrderByWithRelationInput[]
    cursor?: RideRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RideRequestScalarFieldEnum | RideRequestScalarFieldEnum[]
  }

  /**
   * RideService.rides
   */
  export type RideService$ridesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ride
     */
    select?: RideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ride
     */
    omit?: RideOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideInclude<ExtArgs> | null
    where?: RideWhereInput
    orderBy?: RideOrderByWithRelationInput | RideOrderByWithRelationInput[]
    cursor?: RideWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RideScalarFieldEnum | RideScalarFieldEnum[]
  }

  /**
   * RideService without action
   */
  export type RideServiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RideService
     */
    select?: RideServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RideService
     */
    omit?: RideServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RideServiceInclude<ExtArgs> | null
  }


  /**
   * Model orders
   */

  export type AggregateOrders = {
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  export type OrdersAvgAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingAmount: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
  }

  export type OrdersSumAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingAmount: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
  }

  export type OrdersMinAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    userId: string | null
    sellerId: string | null
    status: $Enums.OrderStatus | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingAmount: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    currencyCode: string | null
    customerName: string | null
    customerEmail: string | null
    customerPhone: string | null
    shippingAddress: string | null
    billingAddress: string | null
    paymentMethod: string | null
    paymentStatus: $Enums.PaymentStatus | null
    paymentReference: string | null
    paidAt: Date | null
    shippingMethod: string | null
    trackingNumber: string | null
    shippedAt: Date | null
    deliveredAt: Date | null
    notes: string | null
    sellerNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    cancelledAt: Date | null
    deliveryCurrency: string | null
  }

  export type OrdersMaxAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    userId: string | null
    sellerId: string | null
    status: $Enums.OrderStatus | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingAmount: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    currencyCode: string | null
    customerName: string | null
    customerEmail: string | null
    customerPhone: string | null
    shippingAddress: string | null
    billingAddress: string | null
    paymentMethod: string | null
    paymentStatus: $Enums.PaymentStatus | null
    paymentReference: string | null
    paidAt: Date | null
    shippingMethod: string | null
    trackingNumber: string | null
    shippedAt: Date | null
    deliveredAt: Date | null
    notes: string | null
    sellerNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    cancelledAt: Date | null
    deliveryCurrency: string | null
  }

  export type OrdersCountAggregateOutputType = {
    id: number
    orderNumber: number
    userId: number
    sellerId: number
    status: number
    subtotal: number
    taxAmount: number
    shippingAmount: number
    discountAmount: number
    totalAmount: number
    currencyCode: number
    customerName: number
    customerEmail: number
    customerPhone: number
    shippingAddress: number
    billingAddress: number
    paymentMethod: number
    paymentStatus: number
    paymentReference: number
    paidAt: number
    shippingMethod: number
    trackingNumber: number
    shippedAt: number
    deliveredAt: number
    notes: number
    sellerNotes: number
    metadata: number
    createdAt: number
    updatedAt: number
    cancelledAt: number
    deliveryCurrency: number
    _all: number
  }


  export type OrdersAvgAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    shippingAmount?: true
    discountAmount?: true
    totalAmount?: true
  }

  export type OrdersSumAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    shippingAmount?: true
    discountAmount?: true
    totalAmount?: true
  }

  export type OrdersMinAggregateInputType = {
    id?: true
    orderNumber?: true
    userId?: true
    sellerId?: true
    status?: true
    subtotal?: true
    taxAmount?: true
    shippingAmount?: true
    discountAmount?: true
    totalAmount?: true
    currencyCode?: true
    customerName?: true
    customerEmail?: true
    customerPhone?: true
    shippingAddress?: true
    billingAddress?: true
    paymentMethod?: true
    paymentStatus?: true
    paymentReference?: true
    paidAt?: true
    shippingMethod?: true
    trackingNumber?: true
    shippedAt?: true
    deliveredAt?: true
    notes?: true
    sellerNotes?: true
    createdAt?: true
    updatedAt?: true
    cancelledAt?: true
    deliveryCurrency?: true
  }

  export type OrdersMaxAggregateInputType = {
    id?: true
    orderNumber?: true
    userId?: true
    sellerId?: true
    status?: true
    subtotal?: true
    taxAmount?: true
    shippingAmount?: true
    discountAmount?: true
    totalAmount?: true
    currencyCode?: true
    customerName?: true
    customerEmail?: true
    customerPhone?: true
    shippingAddress?: true
    billingAddress?: true
    paymentMethod?: true
    paymentStatus?: true
    paymentReference?: true
    paidAt?: true
    shippingMethod?: true
    trackingNumber?: true
    shippedAt?: true
    deliveredAt?: true
    notes?: true
    sellerNotes?: true
    createdAt?: true
    updatedAt?: true
    cancelledAt?: true
    deliveryCurrency?: true
  }

  export type OrdersCountAggregateInputType = {
    id?: true
    orderNumber?: true
    userId?: true
    sellerId?: true
    status?: true
    subtotal?: true
    taxAmount?: true
    shippingAmount?: true
    discountAmount?: true
    totalAmount?: true
    currencyCode?: true
    customerName?: true
    customerEmail?: true
    customerPhone?: true
    shippingAddress?: true
    billingAddress?: true
    paymentMethod?: true
    paymentStatus?: true
    paymentReference?: true
    paidAt?: true
    shippingMethod?: true
    trackingNumber?: true
    shippedAt?: true
    deliveredAt?: true
    notes?: true
    sellerNotes?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    cancelledAt?: true
    deliveryCurrency?: true
    _all?: true
  }

  export type OrdersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to aggregate.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned orders
    **/
    _count?: true | OrdersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdersMaxAggregateInputType
  }

  export type GetOrdersAggregateType<T extends OrdersAggregateArgs> = {
        [P in keyof T & keyof AggregateOrders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrders[P]>
      : GetScalarType<T[P], AggregateOrders[P]>
  }




  export type ordersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithAggregationInput | ordersOrderByWithAggregationInput[]
    by: OrdersScalarFieldEnum[] | OrdersScalarFieldEnum
    having?: ordersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdersCountAggregateInputType | true
    _avg?: OrdersAvgAggregateInputType
    _sum?: OrdersSumAggregateInputType
    _min?: OrdersMinAggregateInputType
    _max?: OrdersMaxAggregateInputType
  }

  export type OrdersGroupByOutputType = {
    id: string
    orderNumber: string
    userId: string
    sellerId: string
    status: $Enums.OrderStatus
    subtotal: Decimal
    taxAmount: Decimal
    shippingAmount: Decimal
    discountAmount: Decimal
    totalAmount: Decimal
    currencyCode: string
    customerName: string
    customerEmail: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress: string | null
    paymentMethod: string | null
    paymentStatus: $Enums.PaymentStatus
    paymentReference: string | null
    paidAt: Date | null
    shippingMethod: string | null
    trackingNumber: string | null
    shippedAt: Date | null
    deliveredAt: Date | null
    notes: string | null
    sellerNotes: string | null
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    cancelledAt: Date | null
    deliveryCurrency: string | null
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  type GetOrdersGroupByPayload<T extends ordersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdersGroupByOutputType[P]>
            : GetScalarType<T[P], OrdersGroupByOutputType[P]>
        }
      >
    >


  export type ordersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    userId?: boolean
    sellerId?: boolean
    status?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingAmount?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currencyCode?: boolean
    customerName?: boolean
    customerEmail?: boolean
    customerPhone?: boolean
    shippingAddress?: boolean
    billingAddress?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    paymentReference?: boolean
    paidAt?: boolean
    shippingMethod?: boolean
    trackingNumber?: boolean
    shippedAt?: boolean
    deliveredAt?: boolean
    notes?: boolean
    sellerNotes?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cancelledAt?: boolean
    deliveryCurrency?: boolean
    externalTransactions?: boolean | orders$externalTransactionsArgs<ExtArgs>
    items?: boolean | orders$itemsArgs<ExtArgs>
    User_orders_sellerIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_orders_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    userId?: boolean
    sellerId?: boolean
    status?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingAmount?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currencyCode?: boolean
    customerName?: boolean
    customerEmail?: boolean
    customerPhone?: boolean
    shippingAddress?: boolean
    billingAddress?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    paymentReference?: boolean
    paidAt?: boolean
    shippingMethod?: boolean
    trackingNumber?: boolean
    shippedAt?: boolean
    deliveredAt?: boolean
    notes?: boolean
    sellerNotes?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cancelledAt?: boolean
    deliveryCurrency?: boolean
    User_orders_sellerIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_orders_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    userId?: boolean
    sellerId?: boolean
    status?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingAmount?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currencyCode?: boolean
    customerName?: boolean
    customerEmail?: boolean
    customerPhone?: boolean
    shippingAddress?: boolean
    billingAddress?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    paymentReference?: boolean
    paidAt?: boolean
    shippingMethod?: boolean
    trackingNumber?: boolean
    shippedAt?: boolean
    deliveredAt?: boolean
    notes?: boolean
    sellerNotes?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cancelledAt?: boolean
    deliveryCurrency?: boolean
    User_orders_sellerIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_orders_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectScalar = {
    id?: boolean
    orderNumber?: boolean
    userId?: boolean
    sellerId?: boolean
    status?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingAmount?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currencyCode?: boolean
    customerName?: boolean
    customerEmail?: boolean
    customerPhone?: boolean
    shippingAddress?: boolean
    billingAddress?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    paymentReference?: boolean
    paidAt?: boolean
    shippingMethod?: boolean
    trackingNumber?: boolean
    shippedAt?: boolean
    deliveredAt?: boolean
    notes?: boolean
    sellerNotes?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cancelledAt?: boolean
    deliveryCurrency?: boolean
  }

  export type ordersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderNumber" | "userId" | "sellerId" | "status" | "subtotal" | "taxAmount" | "shippingAmount" | "discountAmount" | "totalAmount" | "currencyCode" | "customerName" | "customerEmail" | "customerPhone" | "shippingAddress" | "billingAddress" | "paymentMethod" | "paymentStatus" | "paymentReference" | "paidAt" | "shippingMethod" | "trackingNumber" | "shippedAt" | "deliveredAt" | "notes" | "sellerNotes" | "metadata" | "createdAt" | "updatedAt" | "cancelledAt" | "deliveryCurrency", ExtArgs["result"]["orders"]>
  export type ordersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    externalTransactions?: boolean | orders$externalTransactionsArgs<ExtArgs>
    items?: boolean | orders$itemsArgs<ExtArgs>
    User_orders_sellerIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_orders_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ordersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_orders_sellerIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_orders_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ordersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_orders_sellerIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_orders_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ordersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "orders"
    objects: {
      externalTransactions: Prisma.$ExternalTransactionPayload<ExtArgs>[]
      items: Prisma.$OrderItemPayload<ExtArgs>[]
      User_orders_sellerIdToUser: Prisma.$UserPayload<ExtArgs>
      User_orders_userIdToUser: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderNumber: string
      userId: string
      sellerId: string
      status: $Enums.OrderStatus
      subtotal: Prisma.Decimal
      taxAmount: Prisma.Decimal
      shippingAmount: Prisma.Decimal
      discountAmount: Prisma.Decimal
      totalAmount: Prisma.Decimal
      currencyCode: string
      customerName: string
      customerEmail: string | null
      customerPhone: string
      shippingAddress: string
      billingAddress: string | null
      paymentMethod: string | null
      paymentStatus: $Enums.PaymentStatus
      paymentReference: string | null
      paidAt: Date | null
      shippingMethod: string | null
      trackingNumber: string | null
      shippedAt: Date | null
      deliveredAt: Date | null
      notes: string | null
      sellerNotes: string | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      cancelledAt: Date | null
      deliveryCurrency: string | null
    }, ExtArgs["result"]["orders"]>
    composites: {}
  }

  type ordersGetPayload<S extends boolean | null | undefined | ordersDefaultArgs> = $Result.GetResult<Prisma.$ordersPayload, S>

  type ordersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ordersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdersCountAggregateInputType | true
    }

  export interface ordersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['orders'], meta: { name: 'orders' } }
    /**
     * Find zero or one Orders that matches the filter.
     * @param {ordersFindUniqueArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ordersFindUniqueArgs>(args: SelectSubset<T, ordersFindUniqueArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Orders that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ordersFindUniqueOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ordersFindUniqueOrThrowArgs>(args: SelectSubset<T, ordersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ordersFindFirstArgs>(args?: SelectSubset<T, ordersFindFirstArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ordersFindFirstOrThrowArgs>(args?: SelectSubset<T, ordersFindFirstOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.orders.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.orders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordersWithIdOnly = await prisma.orders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ordersFindManyArgs>(args?: SelectSubset<T, ordersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Orders.
     * @param {ordersCreateArgs} args - Arguments to create a Orders.
     * @example
     * // Create one Orders
     * const Orders = await prisma.orders.create({
     *   data: {
     *     // ... data to create a Orders
     *   }
     * })
     * 
     */
    create<T extends ordersCreateArgs>(args: SelectSubset<T, ordersCreateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {ordersCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ordersCreateManyArgs>(args?: SelectSubset<T, ordersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {ordersCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ordersCreateManyAndReturnArgs>(args?: SelectSubset<T, ordersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Orders.
     * @param {ordersDeleteArgs} args - Arguments to delete one Orders.
     * @example
     * // Delete one Orders
     * const Orders = await prisma.orders.delete({
     *   where: {
     *     // ... filter to delete one Orders
     *   }
     * })
     * 
     */
    delete<T extends ordersDeleteArgs>(args: SelectSubset<T, ordersDeleteArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Orders.
     * @param {ordersUpdateArgs} args - Arguments to update one Orders.
     * @example
     * // Update one Orders
     * const orders = await prisma.orders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ordersUpdateArgs>(args: SelectSubset<T, ordersUpdateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {ordersDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.orders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ordersDeleteManyArgs>(args?: SelectSubset<T, ordersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ordersUpdateManyArgs>(args: SelectSubset<T, ordersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {ordersUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ordersUpdateManyAndReturnArgs>(args: SelectSubset<T, ordersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Orders.
     * @param {ordersUpsertArgs} args - Arguments to update or create a Orders.
     * @example
     * // Update or create a Orders
     * const orders = await prisma.orders.upsert({
     *   create: {
     *     // ... data to create a Orders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Orders we want to update
     *   }
     * })
     */
    upsert<T extends ordersUpsertArgs>(args: SelectSubset<T, ordersUpsertArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.orders.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends ordersCountArgs>(
      args?: Subset<T, ordersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdersAggregateArgs>(args: Subset<T, OrdersAggregateArgs>): Prisma.PrismaPromise<GetOrdersAggregateType<T>>

    /**
     * Group by Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ordersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ordersGroupByArgs['orderBy'] }
        : { orderBy?: ordersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ordersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the orders model
   */
  readonly fields: ordersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for orders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ordersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    externalTransactions<T extends orders$externalTransactionsArgs<ExtArgs> = {}>(args?: Subset<T, orders$externalTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    items<T extends orders$itemsArgs<ExtArgs> = {}>(args?: Subset<T, orders$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_orders_sellerIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_orders_userIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the orders model
   */
  interface ordersFieldRefs {
    readonly id: FieldRef<"orders", 'String'>
    readonly orderNumber: FieldRef<"orders", 'String'>
    readonly userId: FieldRef<"orders", 'String'>
    readonly sellerId: FieldRef<"orders", 'String'>
    readonly status: FieldRef<"orders", 'OrderStatus'>
    readonly subtotal: FieldRef<"orders", 'Decimal'>
    readonly taxAmount: FieldRef<"orders", 'Decimal'>
    readonly shippingAmount: FieldRef<"orders", 'Decimal'>
    readonly discountAmount: FieldRef<"orders", 'Decimal'>
    readonly totalAmount: FieldRef<"orders", 'Decimal'>
    readonly currencyCode: FieldRef<"orders", 'String'>
    readonly customerName: FieldRef<"orders", 'String'>
    readonly customerEmail: FieldRef<"orders", 'String'>
    readonly customerPhone: FieldRef<"orders", 'String'>
    readonly shippingAddress: FieldRef<"orders", 'String'>
    readonly billingAddress: FieldRef<"orders", 'String'>
    readonly paymentMethod: FieldRef<"orders", 'String'>
    readonly paymentStatus: FieldRef<"orders", 'PaymentStatus'>
    readonly paymentReference: FieldRef<"orders", 'String'>
    readonly paidAt: FieldRef<"orders", 'DateTime'>
    readonly shippingMethod: FieldRef<"orders", 'String'>
    readonly trackingNumber: FieldRef<"orders", 'String'>
    readonly shippedAt: FieldRef<"orders", 'DateTime'>
    readonly deliveredAt: FieldRef<"orders", 'DateTime'>
    readonly notes: FieldRef<"orders", 'String'>
    readonly sellerNotes: FieldRef<"orders", 'String'>
    readonly metadata: FieldRef<"orders", 'Json'>
    readonly createdAt: FieldRef<"orders", 'DateTime'>
    readonly updatedAt: FieldRef<"orders", 'DateTime'>
    readonly cancelledAt: FieldRef<"orders", 'DateTime'>
    readonly deliveryCurrency: FieldRef<"orders", 'String'>
  }
    

  // Custom InputTypes
  /**
   * orders findUnique
   */
  export type ordersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findUniqueOrThrow
   */
  export type ordersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findFirst
   */
  export type ordersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findFirstOrThrow
   */
  export type ordersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findMany
   */
  export type ordersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders create
   */
  export type ordersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to create a orders.
     */
    data: XOR<ordersCreateInput, ordersUncheckedCreateInput>
  }

  /**
   * orders createMany
   */
  export type ordersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * orders createManyAndReturn
   */
  export type ordersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * orders update
   */
  export type ordersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to update a orders.
     */
    data: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
    /**
     * Choose, which orders to update.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders updateMany
   */
  export type ordersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
  }

  /**
   * orders updateManyAndReturn
   */
  export type ordersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * orders upsert
   */
  export type ordersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The filter to search for the orders to update in case it exists.
     */
    where: ordersWhereUniqueInput
    /**
     * In case the orders found by the `where` argument doesn't exist, create a new orders with this data.
     */
    create: XOR<ordersCreateInput, ordersUncheckedCreateInput>
    /**
     * In case the orders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
  }

  /**
   * orders delete
   */
  export type ordersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter which orders to delete.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders deleteMany
   */
  export type ordersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to delete
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to delete.
     */
    limit?: number
  }

  /**
   * orders.externalTransactions
   */
  export type orders$externalTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalTransaction
     */
    select?: ExternalTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalTransaction
     */
    omit?: ExternalTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalTransactionInclude<ExtArgs> | null
    where?: ExternalTransactionWhereInput
    orderBy?: ExternalTransactionOrderByWithRelationInput | ExternalTransactionOrderByWithRelationInput[]
    cursor?: ExternalTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExternalTransactionScalarFieldEnum | ExternalTransactionScalarFieldEnum[]
  }

  /**
   * orders.items
   */
  export type orders$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * orders without action
   */
  export type ordersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AdminScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    name: 'name',
    username: 'username',
    isActive: 'isActive',
    lastLogin: 'lastLogin',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    operatorEntityId: 'operatorEntityId',
    createdBy: 'createdBy'
  };

  export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const RolePermissionScalarFieldEnum: {
    id: 'id',
    roleId: 'roleId',
    entityType: 'entityType',
    permission: 'permission',
    isGranted: 'isGranted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RolePermissionScalarFieldEnum = (typeof RolePermissionScalarFieldEnum)[keyof typeof RolePermissionScalarFieldEnum]


  export const OperatorEntityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    roleId: 'roleId',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type OperatorEntityScalarFieldEnum = (typeof OperatorEntityScalarFieldEnum)[keyof typeof OperatorEntityScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    firstName: 'firstName',
    middleName: 'middleName',
    lastName: 'lastName',
    phoneNumber: 'phoneNumber',
    pin: 'pin',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const DeliveryAddressScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    address: 'address',
    city: 'city',
    state: 'state',
    postalCode: 'postalCode',
    country: 'country',
    isDefault: 'isDefault',
    label: 'label',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isDeleted: 'isDeleted'
  };

  export type DeliveryAddressScalarFieldEnum = (typeof DeliveryAddressScalarFieldEnum)[keyof typeof DeliveryAddressScalarFieldEnum]


  export const PaymentGatewayServiceProviderScalarFieldEnum: {
    id: 'id',
    name: 'name',
    type: 'type',
    countryCode: 'countryCode',
    currencyCode: 'currencyCode',
    isActive: 'isActive',
    logoUrl: 'logoUrl',
    description: 'description',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type PaymentGatewayServiceProviderScalarFieldEnum = (typeof PaymentGatewayServiceProviderScalarFieldEnum)[keyof typeof PaymentGatewayServiceProviderScalarFieldEnum]


  export const DeviceScalarFieldEnum: {
    id: 'id',
    deviceId: 'deviceId',
    deviceName: 'deviceName',
    deviceType: 'deviceType',
    isVerified: 'isVerified',
    lastLoginAt: 'lastLoginAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId',
    brand: 'brand',
    modelName: 'modelName',
    osVersion: 'osVersion',
    phoneNumber: 'phoneNumber',
    lastLogoutAt: 'lastLogoutAt'
  };

  export type DeviceScalarFieldEnum = (typeof DeviceScalarFieldEnum)[keyof typeof DeviceScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    token: 'token',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId',
    deviceId: 'deviceId'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const OTPScalarFieldEnum: {
    id: 'id',
    phoneNumber: 'phoneNumber',
    code: 'code',
    type: 'type',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    isUsed: 'isUsed',
    attempts: 'attempts',
    originalCode: 'originalCode'
  };

  export type OTPScalarFieldEnum = (typeof OTPScalarFieldEnum)[keyof typeof OTPScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    sellerId: 'sellerId',
    title: 'title',
    description: 'description',
    price: 'price',
    currencyCode: 'currencyCode',
    quantity: 'quantity',
    categoryId: 'categoryId',
    condition: 'condition',
    locationId: 'locationId',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    views: 'views',
    favorites: 'favorites',
    rating: 'rating',
    ratingCount: 'ratingCount',
    isFeatured: 'isFeatured',
    featuredUntil: 'featuredUntil',
    metadata: 'metadata'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const ProductImageScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    imageUrl: 'imageUrl',
    isPrimary: 'isPrimary',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    width: 'width',
    height: 'height',
    size: 'size',
    format: 'format',
    altText: 'altText'
  };

  export type ProductImageScalarFieldEnum = (typeof ProductImageScalarFieldEnum)[keyof typeof ProductImageScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    parentId: 'parentId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    slug: 'slug',
    description: 'description',
    imageUrl: 'imageUrl',
    order: 'order',
    isActive: 'isActive',
    metadata: 'metadata',
    createdBy: 'createdBy'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const LocationScalarFieldEnum: {
    id: 'id',
    countryCode: 'countryCode',
    region: 'region',
    city: 'city',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    latitude: 'latitude',
    longitude: 'longitude',
    timezone: 'timezone',
    isActive: 'isActive'
  };

  export type LocationScalarFieldEnum = (typeof LocationScalarFieldEnum)[keyof typeof LocationScalarFieldEnum]


  export const ProductAttributeScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    key: 'key',
    value: 'value',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    unit: 'unit',
    isFilterable: 'isFilterable',
    order: 'order'
  };

  export type ProductAttributeScalarFieldEnum = (typeof ProductAttributeScalarFieldEnum)[keyof typeof ProductAttributeScalarFieldEnum]


  export const ProductTranslationScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    locale: 'locale',
    title: 'title',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductTranslationScalarFieldEnum = (typeof ProductTranslationScalarFieldEnum)[keyof typeof ProductTranslationScalarFieldEnum]


  export const ProductDeliveryOptionScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    deliveryType: 'deliveryType',
    name: 'name',
    description: 'description',
    price: 'price',
    currencyCode: 'currencyCode',
    estimatedDays: 'estimatedDays',
    isDefault: 'isDefault',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductDeliveryOptionScalarFieldEnum = (typeof ProductDeliveryOptionScalarFieldEnum)[keyof typeof ProductDeliveryOptionScalarFieldEnum]


  export const CategoryTranslationScalarFieldEnum: {
    id: 'id',
    categoryId: 'categoryId',
    locale: 'locale',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CategoryTranslationScalarFieldEnum = (typeof CategoryTranslationScalarFieldEnum)[keyof typeof CategoryTranslationScalarFieldEnum]


  export const SellerKycScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    businessName: 'businessName',
    businessType: 'businessType',
    registrationNumber: 'registrationNumber',
    taxId: 'taxId',
    address: 'address',
    city: 'city',
    state: 'state',
    postalCode: 'postalCode',
    documentType: 'documentType',
    documentNumber: 'documentNumber',
    documentUrl: 'documentUrl',
    status: 'status',
    rejectionReason: 'rejectionReason',
    verifiedAt: 'verifiedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    country: 'country',
    documentExpiryDate: 'documentExpiryDate',
    statusChangedBy: 'statusChangedBy',
    statusChangedAt: 'statusChangedAt'
  };

  export type SellerKycScalarFieldEnum = (typeof SellerKycScalarFieldEnum)[keyof typeof SellerKycScalarFieldEnum]


  export const BankAccountScalarFieldEnum: {
    id: 'id',
    sellerKycId: 'sellerKycId',
    accountName: 'accountName',
    accountNumber: 'accountNumber',
    bankName: 'bankName',
    bankCode: 'bankCode',
    branchCode: 'branchCode',
    swiftCode: 'swiftCode',
    iban: 'iban',
    currency: 'currency',
    isDefault: 'isDefault',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BankAccountScalarFieldEnum = (typeof BankAccountScalarFieldEnum)[keyof typeof BankAccountScalarFieldEnum]


  export const WalletScalarFieldEnum: {
    id: 'id',
    sellerKycId: 'sellerKycId',
    walletType: 'walletType',
    walletAddress: 'walletAddress',
    currency: 'currency',
    isDefault: 'isDefault',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    account: 'account'
  };

  export type WalletScalarFieldEnum = (typeof WalletScalarFieldEnum)[keyof typeof WalletScalarFieldEnum]


  export const PaymentMethodScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    accountId: 'accountId',
    accountName: 'accountName',
    isDefault: 'isDefault',
    status: 'status',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PaymentMethodScalarFieldEnum = (typeof PaymentMethodScalarFieldEnum)[keyof typeof PaymentMethodScalarFieldEnum]


  export const SettlementScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    amount: 'amount',
    currency: 'currency',
    status: 'status',
    type: 'type',
    reference: 'reference',
    bankAccountId: 'bankAccountId',
    walletId: 'walletId',
    metadata: 'metadata',
    processedAt: 'processedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    includedOrderIds: 'includedOrderIds',
    netAmountBeforeFees: 'netAmountBeforeFees',
    serviceFeesDeducted: 'serviceFeesDeducted',
    totalOrdersCount: 'totalOrdersCount',
    channel: 'channel',
    includedRideIds: 'includedRideIds',
    totalRidesCount: 'totalRidesCount'
  };

  export type SettlementScalarFieldEnum = (typeof SettlementScalarFieldEnum)[keyof typeof SettlementScalarFieldEnum]


  export const ProductViewScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    userId: 'userId',
    deviceId: 'deviceId',
    ipAddress: 'ipAddress',
    viewedAt: 'viewedAt'
  };

  export type ProductViewScalarFieldEnum = (typeof ProductViewScalarFieldEnum)[keyof typeof ProductViewScalarFieldEnum]


  export const ProductOrderInterestScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    userId: 'userId',
    quantity: 'quantity',
    originalPrice: 'originalPrice',
    discountPrice: 'discountPrice',
    currencyCode: 'currencyCode',
    totalAmount: 'totalAmount',
    status: 'status',
    notes: 'notes',
    preferredDeliveryDate: 'preferredDeliveryDate',
    deliveryAddress: 'deliveryAddress',
    contactPhone: 'contactPhone',
    paymentMethod: 'paymentMethod',
    paymentStatus: 'paymentStatus',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    expiresAt: 'expiresAt'
  };

  export type ProductOrderInterestScalarFieldEnum = (typeof ProductOrderInterestScalarFieldEnum)[keyof typeof ProductOrderInterestScalarFieldEnum]


  export const OrderItemScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    productId: 'productId',
    productSnapshot: 'productSnapshot',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderItemScalarFieldEnum = (typeof OrderItemScalarFieldEnum)[keyof typeof OrderItemScalarFieldEnum]


  export const ExternalTransactionScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    customerId: 'customerId',
    sellerId: 'sellerId',
    paymentMethodId: 'paymentMethodId',
    gatewayProvider: 'gatewayProvider',
    gatewayTransactionId: 'gatewayTransactionId',
    paymentReference: 'paymentReference',
    amount: 'amount',
    currencyCode: 'currencyCode',
    gatewayChargeFees: 'gatewayChargeFees',
    paidThroughGateway: 'paidThroughGateway',
    gatewayResponse: 'gatewayResponse',
    gatewayRequest: 'gatewayRequest',
    status: 'status',
    failureReason: 'failureReason',
    processedAt: 'processedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    appTransactionId: 'appTransactionId',
    processedAmount: 'processedAmount',
    transactionType: 'transactionType',
    appService: 'appService',
    rideRequestId: 'rideRequestId'
  };

  export type ExternalTransactionScalarFieldEnum = (typeof ExternalTransactionScalarFieldEnum)[keyof typeof ExternalTransactionScalarFieldEnum]


  export const UCPScalarFieldEnum: {
    id: 'id',
    name: 'name',
    value: 'value',
    description: 'description',
    serviceType: 'serviceType',
    isActive: 'isActive',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type UCPScalarFieldEnum = (typeof UCPScalarFieldEnum)[keyof typeof UCPScalarFieldEnum]


  export const RiderApplicationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    vehicleType: 'vehicleType',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    phoneNumber: 'phoneNumber',
    dateOfBirth: 'dateOfBirth',
    address: 'address',
    city: 'city',
    licenseNumber: 'licenseNumber',
    licenseExpiry: 'licenseExpiry',
    vehicleModel: 'vehicleModel',
    vehiclePlate: 'vehiclePlate',
    insuranceNumber: 'insuranceNumber',
    insuranceExpiry: 'insuranceExpiry',
    emergencyContact: 'emergencyContact',
    emergencyPhone: 'emergencyPhone',
    experience: 'experience',
    availability: 'availability',
    status: 'status',
    rejectionReason: 'rejectionReason',
    reviewedBy: 'reviewedBy',
    reviewedAt: 'reviewedAt',
    approvedAt: 'approvedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RiderApplicationScalarFieldEnum = (typeof RiderApplicationScalarFieldEnum)[keyof typeof RiderApplicationScalarFieldEnum]


  export const RiderDocumentScalarFieldEnum: {
    id: 'id',
    riderApplicationId: 'riderApplicationId',
    documentType: 'documentType',
    fileName: 'fileName',
    fileUrl: 'fileUrl',
    fileSize: 'fileSize',
    mimeType: 'mimeType',
    uploadedAt: 'uploadedAt'
  };

  export type RiderDocumentScalarFieldEnum = (typeof RiderDocumentScalarFieldEnum)[keyof typeof RiderDocumentScalarFieldEnum]


  export const DriverScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    riderApplicationId: 'riderApplicationId',
    driverId: 'driverId',
    isOnline: 'isOnline',
    status: 'status',
    currentLocation: 'currentLocation',
    lastLocationUpdate: 'lastLocationUpdate',
    totalRides: 'totalRides',
    totalEarnings: 'totalEarnings',
    rating: 'rating',
    ratingCount: 'ratingCount',
    vehicleInfo: 'vehicleInfo',
    documents: 'documents',
    preferences: 'preferences',
    isVerified: 'isVerified',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    rideServiceId: 'rideServiceId',
    updatedBy: 'updatedBy'
  };

  export type DriverScalarFieldEnum = (typeof DriverScalarFieldEnum)[keyof typeof DriverScalarFieldEnum]


  export const DriverLocationScalarFieldEnum: {
    id: 'id',
    driverId: 'driverId',
    latitude: 'latitude',
    longitude: 'longitude',
    address: 'address',
    accuracy: 'accuracy',
    speed: 'speed',
    heading: 'heading',
    timestamp: 'timestamp'
  };

  export type DriverLocationScalarFieldEnum = (typeof DriverLocationScalarFieldEnum)[keyof typeof DriverLocationScalarFieldEnum]


  export const RideRequestScalarFieldEnum: {
    id: 'id',
    requestId: 'requestId',
    customerId: 'customerId',
    driverId: 'driverId',
    pickupLocation: 'pickupLocation',
    destinationLocation: 'destinationLocation',
    rideType: 'rideType',
    estimatedDistance: 'estimatedDistance',
    estimatedDuration: 'estimatedDuration',
    estimatedPrice: 'estimatedPrice',
    actualPrice: 'actualPrice',
    status: 'status',
    paymentMethod: 'paymentMethod',
    customerNotes: 'customerNotes',
    driverNotes: 'driverNotes',
    requestedAt: 'requestedAt',
    acceptedAt: 'acceptedAt',
    startedAt: 'startedAt',
    completedAt: 'completedAt',
    cancelledAt: 'cancelledAt',
    cancelledBy: 'cancelledBy',
    cancellationReason: 'cancellationReason',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    rideServiceId: 'rideServiceId',
    currency: 'currency',
    currencySymbol: 'currencySymbol'
  };

  export type RideRequestScalarFieldEnum = (typeof RideRequestScalarFieldEnum)[keyof typeof RideRequestScalarFieldEnum]


  export const RideScalarFieldEnum: {
    id: 'id',
    rideId: 'rideId',
    rideRequestId: 'rideRequestId',
    driverId: 'driverId',
    customerId: 'customerId',
    pickupLocation: 'pickupLocation',
    destinationLocation: 'destinationLocation',
    actualPickupLocation: 'actualPickupLocation',
    actualDropoffLocation: 'actualDropoffLocation',
    rideType: 'rideType',
    distance: 'distance',
    duration: 'duration',
    baseFare: 'baseFare',
    distanceFare: 'distanceFare',
    timeFare: 'timeFare',
    surgeFare: 'surgeFare',
    totalFare: 'totalFare',
    driverEarnings: 'driverEarnings',
    platformFee: 'platformFee',
    paymentMethod: 'paymentMethod',
    paymentStatus: 'paymentStatus',
    status: 'status',
    customerRating: 'customerRating',
    driverRating: 'driverRating',
    customerReview: 'customerReview',
    driverReview: 'driverReview',
    startedAt: 'startedAt',
    completedAt: 'completedAt',
    cancelledAt: 'cancelledAt',
    cancelledBy: 'cancelledBy',
    cancellationReason: 'cancellationReason',
    route: 'route',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    rideServiceId: 'rideServiceId',
    settlementStatus: 'settlementStatus'
  };

  export type RideScalarFieldEnum = (typeof RideScalarFieldEnum)[keyof typeof RideScalarFieldEnum]


  export const RideTokenScalarFieldEnum: {
    id: 'id',
    rideId: 'rideId',
    token: 'token',
    isUsed: 'isUsed',
    usedAt: 'usedAt',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RideTokenScalarFieldEnum = (typeof RideTokenScalarFieldEnum)[keyof typeof RideTokenScalarFieldEnum]


  export const RideLocationScalarFieldEnum: {
    id: 'id',
    rideId: 'rideId',
    latitude: 'latitude',
    longitude: 'longitude',
    accuracy: 'accuracy',
    speed: 'speed',
    heading: 'heading',
    timestamp: 'timestamp'
  };

  export type RideLocationScalarFieldEnum = (typeof RideLocationScalarFieldEnum)[keyof typeof RideLocationScalarFieldEnum]


  export const DriverEarningScalarFieldEnum: {
    id: 'id',
    driverId: 'driverId',
    rideId: 'rideId',
    amount: 'amount',
    type: 'type',
    description: 'description',
    processedAt: 'processedAt',
    createdAt: 'createdAt'
  };

  export type DriverEarningScalarFieldEnum = (typeof DriverEarningScalarFieldEnum)[keyof typeof DriverEarningScalarFieldEnum]


  export const RideServiceScalarFieldEnum: {
    id: 'id',
    serviceId: 'serviceId',
    name: 'name',
    description: 'description',
    vehicleType: 'vehicleType',
    isActive: 'isActive',
    isDefault: 'isDefault',
    distanceUnit: 'distanceUnit',
    baseDistance: 'baseDistance',
    maxDistance: 'maxDistance',
    baseFare: 'baseFare',
    perKmRate: 'perKmRate',
    perMinuteRate: 'perMinuteRate',
    minimumFare: 'minimumFare',
    maximumFare: 'maximumFare',
    currency: 'currency',
    currencySymbol: 'currencySymbol',
    surgeMultiplier: 'surgeMultiplier',
    maxSurgeMultiplier: 'maxSurgeMultiplier',
    platformFeePercentage: 'platformFeePercentage',
    driverEarningsPercentage: 'driverEarningsPercentage',
    nightFareMultiplier: 'nightFareMultiplier',
    weekendFareMultiplier: 'weekendFareMultiplier',
    cancellationFee: 'cancellationFee',
    cancellationTimeLimit: 'cancellationTimeLimit',
    features: 'features',
    restrictions: 'restrictions',
    estimatedPickupTime: 'estimatedPickupTime',
    maxWaitTime: 'maxWaitTime',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type RideServiceScalarFieldEnum = (typeof RideServiceScalarFieldEnum)[keyof typeof RideServiceScalarFieldEnum]


  export const OrdersScalarFieldEnum: {
    id: 'id',
    orderNumber: 'orderNumber',
    userId: 'userId',
    sellerId: 'sellerId',
    status: 'status',
    subtotal: 'subtotal',
    taxAmount: 'taxAmount',
    shippingAmount: 'shippingAmount',
    discountAmount: 'discountAmount',
    totalAmount: 'totalAmount',
    currencyCode: 'currencyCode',
    customerName: 'customerName',
    customerEmail: 'customerEmail',
    customerPhone: 'customerPhone',
    shippingAddress: 'shippingAddress',
    billingAddress: 'billingAddress',
    paymentMethod: 'paymentMethod',
    paymentStatus: 'paymentStatus',
    paymentReference: 'paymentReference',
    paidAt: 'paidAt',
    shippingMethod: 'shippingMethod',
    trackingNumber: 'trackingNumber',
    shippedAt: 'shippedAt',
    deliveredAt: 'deliveredAt',
    notes: 'notes',
    sellerNotes: 'sellerNotes',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    cancelledAt: 'cancelledAt',
    deliveryCurrency: 'deliveryCurrency'
  };

  export type OrdersScalarFieldEnum = (typeof OrdersScalarFieldEnum)[keyof typeof OrdersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'EntityType'
   */
  export type EnumEntityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EntityType'>
    


  /**
   * Reference to a field of type 'EntityType[]'
   */
  export type ListEnumEntityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EntityType[]'>
    


  /**
   * Reference to a field of type 'Permission'
   */
  export type EnumPermissionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Permission'>
    


  /**
   * Reference to a field of type 'Permission[]'
   */
  export type ListEnumPermissionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Permission[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'ProductCondition'
   */
  export type EnumProductConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductCondition'>
    


  /**
   * Reference to a field of type 'ProductCondition[]'
   */
  export type ListEnumProductConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductCondition[]'>
    


  /**
   * Reference to a field of type 'ProductStatus'
   */
  export type EnumProductStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductStatus'>
    


  /**
   * Reference to a field of type 'ProductStatus[]'
   */
  export type ListEnumProductStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'DeliveryType'
   */
  export type EnumDeliveryTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryType'>
    


  /**
   * Reference to a field of type 'DeliveryType[]'
   */
  export type ListEnumDeliveryTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryType[]'>
    


  /**
   * Reference to a field of type 'BusinessType'
   */
  export type EnumBusinessTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BusinessType'>
    


  /**
   * Reference to a field of type 'BusinessType[]'
   */
  export type ListEnumBusinessTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BusinessType[]'>
    


  /**
   * Reference to a field of type 'DocumentType'
   */
  export type EnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType'>
    


  /**
   * Reference to a field of type 'DocumentType[]'
   */
  export type ListEnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType[]'>
    


  /**
   * Reference to a field of type 'KycStatus'
   */
  export type EnumKycStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'KycStatus'>
    


  /**
   * Reference to a field of type 'KycStatus[]'
   */
  export type ListEnumKycStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'KycStatus[]'>
    


  /**
   * Reference to a field of type 'AccountStatus'
   */
  export type EnumAccountStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AccountStatus'>
    


  /**
   * Reference to a field of type 'AccountStatus[]'
   */
  export type ListEnumAccountStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AccountStatus[]'>
    


  /**
   * Reference to a field of type 'WalletType'
   */
  export type EnumWalletTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WalletType'>
    


  /**
   * Reference to a field of type 'WalletType[]'
   */
  export type ListEnumWalletTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WalletType[]'>
    


  /**
   * Reference to a field of type 'PaymentType'
   */
  export type EnumPaymentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentType'>
    


  /**
   * Reference to a field of type 'PaymentType[]'
   */
  export type ListEnumPaymentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentType[]'>
    


  /**
   * Reference to a field of type 'SettlementStatus'
   */
  export type EnumSettlementStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SettlementStatus'>
    


  /**
   * Reference to a field of type 'SettlementStatus[]'
   */
  export type ListEnumSettlementStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SettlementStatus[]'>
    


  /**
   * Reference to a field of type 'SettlementType'
   */
  export type EnumSettlementTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SettlementType'>
    


  /**
   * Reference to a field of type 'SettlementType[]'
   */
  export type ListEnumSettlementTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SettlementType[]'>
    


  /**
   * Reference to a field of type 'SettlementChannel'
   */
  export type EnumSettlementChannelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SettlementChannel'>
    


  /**
   * Reference to a field of type 'SettlementChannel[]'
   */
  export type ListEnumSettlementChannelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SettlementChannel[]'>
    


  /**
   * Reference to a field of type 'OrderInterestStatus'
   */
  export type EnumOrderInterestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderInterestStatus'>
    


  /**
   * Reference to a field of type 'OrderInterestStatus[]'
   */
  export type ListEnumOrderInterestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderInterestStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'OrderItemStatus'
   */
  export type EnumOrderItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderItemStatus'>
    


  /**
   * Reference to a field of type 'OrderItemStatus[]'
   */
  export type ListEnumOrderItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderItemStatus[]'>
    


  /**
   * Reference to a field of type 'TransactionStatus'
   */
  export type EnumTransactionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionStatus'>
    


  /**
   * Reference to a field of type 'TransactionStatus[]'
   */
  export type ListEnumTransactionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionStatus[]'>
    


  /**
   * Reference to a field of type 'TransactionType'
   */
  export type EnumTransactionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionType'>
    


  /**
   * Reference to a field of type 'TransactionType[]'
   */
  export type ListEnumTransactionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionType[]'>
    


  /**
   * Reference to a field of type 'AppService'
   */
  export type EnumAppServiceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AppService'>
    


  /**
   * Reference to a field of type 'AppService[]'
   */
  export type ListEnumAppServiceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AppService[]'>
    


  /**
   * Reference to a field of type 'RiderVehicleType'
   */
  export type EnumRiderVehicleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RiderVehicleType'>
    


  /**
   * Reference to a field of type 'RiderVehicleType[]'
   */
  export type ListEnumRiderVehicleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RiderVehicleType[]'>
    


  /**
   * Reference to a field of type 'RiderApplicationStatus'
   */
  export type EnumRiderApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RiderApplicationStatus'>
    


  /**
   * Reference to a field of type 'RiderApplicationStatus[]'
   */
  export type ListEnumRiderApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RiderApplicationStatus[]'>
    


  /**
   * Reference to a field of type 'DriverStatus'
   */
  export type EnumDriverStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DriverStatus'>
    


  /**
   * Reference to a field of type 'DriverStatus[]'
   */
  export type ListEnumDriverStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DriverStatus[]'>
    


  /**
   * Reference to a field of type 'RideType'
   */
  export type EnumRideTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RideType'>
    


  /**
   * Reference to a field of type 'RideType[]'
   */
  export type ListEnumRideTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RideType[]'>
    


  /**
   * Reference to a field of type 'RideStatus'
   */
  export type EnumRideStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RideStatus'>
    


  /**
   * Reference to a field of type 'RideStatus[]'
   */
  export type ListEnumRideStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RideStatus[]'>
    


  /**
   * Reference to a field of type 'RidePaymentMethod'
   */
  export type EnumRidePaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RidePaymentMethod'>
    


  /**
   * Reference to a field of type 'RidePaymentMethod[]'
   */
  export type ListEnumRidePaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RidePaymentMethod[]'>
    


  /**
   * Reference to a field of type 'DistanceUnit'
   */
  export type EnumDistanceUnitFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DistanceUnit'>
    


  /**
   * Reference to a field of type 'DistanceUnit[]'
   */
  export type ListEnumDistanceUnitFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DistanceUnit[]'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus[]'
   */
  export type ListEnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus[]'>
    
  /**
   * Deep Input Types
   */


  export type AdminWhereInput = {
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    id?: StringFilter<"Admin"> | string
    email?: StringFilter<"Admin"> | string
    password?: StringFilter<"Admin"> | string
    name?: StringFilter<"Admin"> | string
    username?: StringFilter<"Admin"> | string
    isActive?: BoolFilter<"Admin"> | boolean
    lastLogin?: DateTimeNullableFilter<"Admin"> | Date | string | null
    createdAt?: DateTimeFilter<"Admin"> | Date | string
    updatedAt?: DateTimeFilter<"Admin"> | Date | string
    operatorEntityId?: StringFilter<"Admin"> | string
    createdBy?: StringNullableFilter<"Admin"> | string | null
    operatorEntity?: XOR<OperatorEntityScalarRelationFilter, OperatorEntityWhereInput>
  }

  export type AdminOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    username?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    operatorEntityId?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    operatorEntity?: OperatorEntityOrderByWithRelationInput
  }

  export type AdminWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    username?: string
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    password?: StringFilter<"Admin"> | string
    name?: StringFilter<"Admin"> | string
    isActive?: BoolFilter<"Admin"> | boolean
    lastLogin?: DateTimeNullableFilter<"Admin"> | Date | string | null
    createdAt?: DateTimeFilter<"Admin"> | Date | string
    updatedAt?: DateTimeFilter<"Admin"> | Date | string
    operatorEntityId?: StringFilter<"Admin"> | string
    createdBy?: StringNullableFilter<"Admin"> | string | null
    operatorEntity?: XOR<OperatorEntityScalarRelationFilter, OperatorEntityWhereInput>
  }, "id" | "email" | "username">

  export type AdminOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    username?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    operatorEntityId?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: AdminCountOrderByAggregateInput
    _max?: AdminMaxOrderByAggregateInput
    _min?: AdminMinOrderByAggregateInput
  }

  export type AdminScalarWhereWithAggregatesInput = {
    AND?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    OR?: AdminScalarWhereWithAggregatesInput[]
    NOT?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Admin"> | string
    email?: StringWithAggregatesFilter<"Admin"> | string
    password?: StringWithAggregatesFilter<"Admin"> | string
    name?: StringWithAggregatesFilter<"Admin"> | string
    username?: StringWithAggregatesFilter<"Admin"> | string
    isActive?: BoolWithAggregatesFilter<"Admin"> | boolean
    lastLogin?: DateTimeNullableWithAggregatesFilter<"Admin"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Admin"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Admin"> | Date | string
    operatorEntityId?: StringWithAggregatesFilter<"Admin"> | string
    createdBy?: StringNullableWithAggregatesFilter<"Admin"> | string | null
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: StringFilter<"Role"> | string
    name?: StringFilter<"Role"> | string
    description?: StringNullableFilter<"Role"> | string | null
    isActive?: BoolFilter<"Role"> | boolean
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    createdBy?: StringNullableFilter<"Role"> | string | null
    operatorEntities?: OperatorEntityListRelationFilter
    permissions?: RolePermissionListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    operatorEntities?: OperatorEntityOrderByRelationAggregateInput
    permissions?: RolePermissionOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    description?: StringNullableFilter<"Role"> | string | null
    isActive?: BoolFilter<"Role"> | boolean
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    createdBy?: StringNullableFilter<"Role"> | string | null
    operatorEntities?: OperatorEntityListRelationFilter
    permissions?: RolePermissionListRelationFilter
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: RoleCountOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Role"> | string
    name?: StringWithAggregatesFilter<"Role"> | string
    description?: StringNullableWithAggregatesFilter<"Role"> | string | null
    isActive?: BoolWithAggregatesFilter<"Role"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Role"> | string | null
  }

  export type RolePermissionWhereInput = {
    AND?: RolePermissionWhereInput | RolePermissionWhereInput[]
    OR?: RolePermissionWhereInput[]
    NOT?: RolePermissionWhereInput | RolePermissionWhereInput[]
    id?: StringFilter<"RolePermission"> | string
    roleId?: StringFilter<"RolePermission"> | string
    entityType?: EnumEntityTypeFilter<"RolePermission"> | $Enums.EntityType
    permission?: EnumPermissionFilter<"RolePermission"> | $Enums.Permission
    isGranted?: BoolFilter<"RolePermission"> | boolean
    createdAt?: DateTimeFilter<"RolePermission"> | Date | string
    updatedAt?: DateTimeFilter<"RolePermission"> | Date | string
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }

  export type RolePermissionOrderByWithRelationInput = {
    id?: SortOrder
    roleId?: SortOrder
    entityType?: SortOrder
    permission?: SortOrder
    isGranted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: RoleOrderByWithRelationInput
  }

  export type RolePermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    roleId_entityType_permission?: RolePermissionRoleIdEntityTypePermissionCompoundUniqueInput
    AND?: RolePermissionWhereInput | RolePermissionWhereInput[]
    OR?: RolePermissionWhereInput[]
    NOT?: RolePermissionWhereInput | RolePermissionWhereInput[]
    roleId?: StringFilter<"RolePermission"> | string
    entityType?: EnumEntityTypeFilter<"RolePermission"> | $Enums.EntityType
    permission?: EnumPermissionFilter<"RolePermission"> | $Enums.Permission
    isGranted?: BoolFilter<"RolePermission"> | boolean
    createdAt?: DateTimeFilter<"RolePermission"> | Date | string
    updatedAt?: DateTimeFilter<"RolePermission"> | Date | string
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }, "id" | "roleId_entityType_permission">

  export type RolePermissionOrderByWithAggregationInput = {
    id?: SortOrder
    roleId?: SortOrder
    entityType?: SortOrder
    permission?: SortOrder
    isGranted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RolePermissionCountOrderByAggregateInput
    _max?: RolePermissionMaxOrderByAggregateInput
    _min?: RolePermissionMinOrderByAggregateInput
  }

  export type RolePermissionScalarWhereWithAggregatesInput = {
    AND?: RolePermissionScalarWhereWithAggregatesInput | RolePermissionScalarWhereWithAggregatesInput[]
    OR?: RolePermissionScalarWhereWithAggregatesInput[]
    NOT?: RolePermissionScalarWhereWithAggregatesInput | RolePermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RolePermission"> | string
    roleId?: StringWithAggregatesFilter<"RolePermission"> | string
    entityType?: EnumEntityTypeWithAggregatesFilter<"RolePermission"> | $Enums.EntityType
    permission?: EnumPermissionWithAggregatesFilter<"RolePermission"> | $Enums.Permission
    isGranted?: BoolWithAggregatesFilter<"RolePermission"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RolePermission"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RolePermission"> | Date | string
  }

  export type OperatorEntityWhereInput = {
    AND?: OperatorEntityWhereInput | OperatorEntityWhereInput[]
    OR?: OperatorEntityWhereInput[]
    NOT?: OperatorEntityWhereInput | OperatorEntityWhereInput[]
    id?: StringFilter<"OperatorEntity"> | string
    name?: StringFilter<"OperatorEntity"> | string
    description?: StringNullableFilter<"OperatorEntity"> | string | null
    roleId?: StringFilter<"OperatorEntity"> | string
    isActive?: BoolFilter<"OperatorEntity"> | boolean
    createdAt?: DateTimeFilter<"OperatorEntity"> | Date | string
    updatedAt?: DateTimeFilter<"OperatorEntity"> | Date | string
    createdBy?: StringNullableFilter<"OperatorEntity"> | string | null
    admins?: AdminListRelationFilter
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }

  export type OperatorEntityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    roleId?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    admins?: AdminOrderByRelationAggregateInput
    role?: RoleOrderByWithRelationInput
  }

  export type OperatorEntityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OperatorEntityWhereInput | OperatorEntityWhereInput[]
    OR?: OperatorEntityWhereInput[]
    NOT?: OperatorEntityWhereInput | OperatorEntityWhereInput[]
    name?: StringFilter<"OperatorEntity"> | string
    description?: StringNullableFilter<"OperatorEntity"> | string | null
    roleId?: StringFilter<"OperatorEntity"> | string
    isActive?: BoolFilter<"OperatorEntity"> | boolean
    createdAt?: DateTimeFilter<"OperatorEntity"> | Date | string
    updatedAt?: DateTimeFilter<"OperatorEntity"> | Date | string
    createdBy?: StringNullableFilter<"OperatorEntity"> | string | null
    admins?: AdminListRelationFilter
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }, "id">

  export type OperatorEntityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    roleId?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: OperatorEntityCountOrderByAggregateInput
    _max?: OperatorEntityMaxOrderByAggregateInput
    _min?: OperatorEntityMinOrderByAggregateInput
  }

  export type OperatorEntityScalarWhereWithAggregatesInput = {
    AND?: OperatorEntityScalarWhereWithAggregatesInput | OperatorEntityScalarWhereWithAggregatesInput[]
    OR?: OperatorEntityScalarWhereWithAggregatesInput[]
    NOT?: OperatorEntityScalarWhereWithAggregatesInput | OperatorEntityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OperatorEntity"> | string
    name?: StringWithAggregatesFilter<"OperatorEntity"> | string
    description?: StringNullableWithAggregatesFilter<"OperatorEntity"> | string | null
    roleId?: StringWithAggregatesFilter<"OperatorEntity"> | string
    isActive?: BoolWithAggregatesFilter<"OperatorEntity"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"OperatorEntity"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OperatorEntity"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"OperatorEntity"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    middleName?: StringNullableFilter<"User"> | string | null
    lastName?: StringFilter<"User"> | string
    phoneNumber?: StringFilter<"User"> | string
    pin?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    deliveryAddresses?: DeliveryAddressListRelationFilter
    devices?: DeviceListRelationFilter
    customerTransactions?: ExternalTransactionListRelationFilter
    sellerTransactions?: ExternalTransactionListRelationFilter
    paymentMethods?: PaymentMethodListRelationFilter
    products?: ProductListRelationFilter
    sellerKyc?: XOR<SellerKycNullableScalarRelationFilter, SellerKycWhereInput> | null
    sessions?: SessionListRelationFilter
    settlements?: SettlementListRelationFilter
    driver?: XOR<DriverNullableScalarRelationFilter, DriverWhereInput> | null
    orders_orders_sellerIdToUser?: OrdersListRelationFilter
    orders_orders_userIdToUser?: OrdersListRelationFilter
    productOrderInterests?: ProductOrderInterestListRelationFilter
    productViews?: ProductViewListRelationFilter
    customerRideRequests?: RideRequestListRelationFilter
    riderApplications?: RiderApplicationListRelationFilter
    customerRides?: RideListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    firstName?: SortOrder
    middleName?: SortOrderInput | SortOrder
    lastName?: SortOrder
    phoneNumber?: SortOrder
    pin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deliveryAddresses?: DeliveryAddressOrderByRelationAggregateInput
    devices?: DeviceOrderByRelationAggregateInput
    customerTransactions?: ExternalTransactionOrderByRelationAggregateInput
    sellerTransactions?: ExternalTransactionOrderByRelationAggregateInput
    paymentMethods?: PaymentMethodOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
    sellerKyc?: SellerKycOrderByWithRelationInput
    sessions?: SessionOrderByRelationAggregateInput
    settlements?: SettlementOrderByRelationAggregateInput
    driver?: DriverOrderByWithRelationInput
    orders_orders_sellerIdToUser?: ordersOrderByRelationAggregateInput
    orders_orders_userIdToUser?: ordersOrderByRelationAggregateInput
    productOrderInterests?: ProductOrderInterestOrderByRelationAggregateInput
    productViews?: ProductViewOrderByRelationAggregateInput
    customerRideRequests?: RideRequestOrderByRelationAggregateInput
    riderApplications?: RiderApplicationOrderByRelationAggregateInput
    customerRides?: RideOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    phoneNumber?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    firstName?: StringFilter<"User"> | string
    middleName?: StringNullableFilter<"User"> | string | null
    lastName?: StringFilter<"User"> | string
    pin?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    deliveryAddresses?: DeliveryAddressListRelationFilter
    devices?: DeviceListRelationFilter
    customerTransactions?: ExternalTransactionListRelationFilter
    sellerTransactions?: ExternalTransactionListRelationFilter
    paymentMethods?: PaymentMethodListRelationFilter
    products?: ProductListRelationFilter
    sellerKyc?: XOR<SellerKycNullableScalarRelationFilter, SellerKycWhereInput> | null
    sessions?: SessionListRelationFilter
    settlements?: SettlementListRelationFilter
    driver?: XOR<DriverNullableScalarRelationFilter, DriverWhereInput> | null
    orders_orders_sellerIdToUser?: OrdersListRelationFilter
    orders_orders_userIdToUser?: OrdersListRelationFilter
    productOrderInterests?: ProductOrderInterestListRelationFilter
    productViews?: ProductViewListRelationFilter
    customerRideRequests?: RideRequestListRelationFilter
    riderApplications?: RiderApplicationListRelationFilter
    customerRides?: RideListRelationFilter
  }, "id" | "phoneNumber">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    firstName?: SortOrder
    middleName?: SortOrderInput | SortOrder
    lastName?: SortOrder
    phoneNumber?: SortOrder
    pin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    middleName?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastName?: StringWithAggregatesFilter<"User"> | string
    phoneNumber?: StringWithAggregatesFilter<"User"> | string
    pin?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type DeliveryAddressWhereInput = {
    AND?: DeliveryAddressWhereInput | DeliveryAddressWhereInput[]
    OR?: DeliveryAddressWhereInput[]
    NOT?: DeliveryAddressWhereInput | DeliveryAddressWhereInput[]
    id?: StringFilter<"DeliveryAddress"> | string
    userId?: StringFilter<"DeliveryAddress"> | string
    address?: StringFilter<"DeliveryAddress"> | string
    city?: StringFilter<"DeliveryAddress"> | string
    state?: StringFilter<"DeliveryAddress"> | string
    postalCode?: StringNullableFilter<"DeliveryAddress"> | string | null
    country?: StringFilter<"DeliveryAddress"> | string
    isDefault?: BoolFilter<"DeliveryAddress"> | boolean
    label?: StringNullableFilter<"DeliveryAddress"> | string | null
    createdAt?: DateTimeFilter<"DeliveryAddress"> | Date | string
    updatedAt?: DateTimeFilter<"DeliveryAddress"> | Date | string
    isDeleted?: BoolFilter<"DeliveryAddress"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type DeliveryAddressOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrderInput | SortOrder
    country?: SortOrder
    isDefault?: SortOrder
    label?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isDeleted?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type DeliveryAddressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DeliveryAddressWhereInput | DeliveryAddressWhereInput[]
    OR?: DeliveryAddressWhereInput[]
    NOT?: DeliveryAddressWhereInput | DeliveryAddressWhereInput[]
    userId?: StringFilter<"DeliveryAddress"> | string
    address?: StringFilter<"DeliveryAddress"> | string
    city?: StringFilter<"DeliveryAddress"> | string
    state?: StringFilter<"DeliveryAddress"> | string
    postalCode?: StringNullableFilter<"DeliveryAddress"> | string | null
    country?: StringFilter<"DeliveryAddress"> | string
    isDefault?: BoolFilter<"DeliveryAddress"> | boolean
    label?: StringNullableFilter<"DeliveryAddress"> | string | null
    createdAt?: DateTimeFilter<"DeliveryAddress"> | Date | string
    updatedAt?: DateTimeFilter<"DeliveryAddress"> | Date | string
    isDeleted?: BoolFilter<"DeliveryAddress"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type DeliveryAddressOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrderInput | SortOrder
    country?: SortOrder
    isDefault?: SortOrder
    label?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isDeleted?: SortOrder
    _count?: DeliveryAddressCountOrderByAggregateInput
    _max?: DeliveryAddressMaxOrderByAggregateInput
    _min?: DeliveryAddressMinOrderByAggregateInput
  }

  export type DeliveryAddressScalarWhereWithAggregatesInput = {
    AND?: DeliveryAddressScalarWhereWithAggregatesInput | DeliveryAddressScalarWhereWithAggregatesInput[]
    OR?: DeliveryAddressScalarWhereWithAggregatesInput[]
    NOT?: DeliveryAddressScalarWhereWithAggregatesInput | DeliveryAddressScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DeliveryAddress"> | string
    userId?: StringWithAggregatesFilter<"DeliveryAddress"> | string
    address?: StringWithAggregatesFilter<"DeliveryAddress"> | string
    city?: StringWithAggregatesFilter<"DeliveryAddress"> | string
    state?: StringWithAggregatesFilter<"DeliveryAddress"> | string
    postalCode?: StringNullableWithAggregatesFilter<"DeliveryAddress"> | string | null
    country?: StringWithAggregatesFilter<"DeliveryAddress"> | string
    isDefault?: BoolWithAggregatesFilter<"DeliveryAddress"> | boolean
    label?: StringNullableWithAggregatesFilter<"DeliveryAddress"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"DeliveryAddress"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DeliveryAddress"> | Date | string
    isDeleted?: BoolWithAggregatesFilter<"DeliveryAddress"> | boolean
  }

  export type PaymentGatewayServiceProviderWhereInput = {
    AND?: PaymentGatewayServiceProviderWhereInput | PaymentGatewayServiceProviderWhereInput[]
    OR?: PaymentGatewayServiceProviderWhereInput[]
    NOT?: PaymentGatewayServiceProviderWhereInput | PaymentGatewayServiceProviderWhereInput[]
    id?: StringFilter<"PaymentGatewayServiceProvider"> | string
    name?: StringFilter<"PaymentGatewayServiceProvider"> | string
    type?: StringFilter<"PaymentGatewayServiceProvider"> | string
    countryCode?: StringFilter<"PaymentGatewayServiceProvider"> | string
    currencyCode?: StringFilter<"PaymentGatewayServiceProvider"> | string
    isActive?: BoolFilter<"PaymentGatewayServiceProvider"> | boolean
    logoUrl?: StringNullableFilter<"PaymentGatewayServiceProvider"> | string | null
    description?: StringNullableFilter<"PaymentGatewayServiceProvider"> | string | null
    metadata?: JsonNullableFilter<"PaymentGatewayServiceProvider">
    createdAt?: DateTimeFilter<"PaymentGatewayServiceProvider"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentGatewayServiceProvider"> | Date | string
    createdBy?: StringNullableFilter<"PaymentGatewayServiceProvider"> | string | null
  }

  export type PaymentGatewayServiceProviderOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    countryCode?: SortOrder
    currencyCode?: SortOrder
    isActive?: SortOrder
    logoUrl?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
  }

  export type PaymentGatewayServiceProviderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name_countryCode?: PaymentGatewayServiceProviderNameCountryCodeCompoundUniqueInput
    AND?: PaymentGatewayServiceProviderWhereInput | PaymentGatewayServiceProviderWhereInput[]
    OR?: PaymentGatewayServiceProviderWhereInput[]
    NOT?: PaymentGatewayServiceProviderWhereInput | PaymentGatewayServiceProviderWhereInput[]
    name?: StringFilter<"PaymentGatewayServiceProvider"> | string
    type?: StringFilter<"PaymentGatewayServiceProvider"> | string
    countryCode?: StringFilter<"PaymentGatewayServiceProvider"> | string
    currencyCode?: StringFilter<"PaymentGatewayServiceProvider"> | string
    isActive?: BoolFilter<"PaymentGatewayServiceProvider"> | boolean
    logoUrl?: StringNullableFilter<"PaymentGatewayServiceProvider"> | string | null
    description?: StringNullableFilter<"PaymentGatewayServiceProvider"> | string | null
    metadata?: JsonNullableFilter<"PaymentGatewayServiceProvider">
    createdAt?: DateTimeFilter<"PaymentGatewayServiceProvider"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentGatewayServiceProvider"> | Date | string
    createdBy?: StringNullableFilter<"PaymentGatewayServiceProvider"> | string | null
  }, "id" | "name_countryCode">

  export type PaymentGatewayServiceProviderOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    countryCode?: SortOrder
    currencyCode?: SortOrder
    isActive?: SortOrder
    logoUrl?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: PaymentGatewayServiceProviderCountOrderByAggregateInput
    _max?: PaymentGatewayServiceProviderMaxOrderByAggregateInput
    _min?: PaymentGatewayServiceProviderMinOrderByAggregateInput
  }

  export type PaymentGatewayServiceProviderScalarWhereWithAggregatesInput = {
    AND?: PaymentGatewayServiceProviderScalarWhereWithAggregatesInput | PaymentGatewayServiceProviderScalarWhereWithAggregatesInput[]
    OR?: PaymentGatewayServiceProviderScalarWhereWithAggregatesInput[]
    NOT?: PaymentGatewayServiceProviderScalarWhereWithAggregatesInput | PaymentGatewayServiceProviderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentGatewayServiceProvider"> | string
    name?: StringWithAggregatesFilter<"PaymentGatewayServiceProvider"> | string
    type?: StringWithAggregatesFilter<"PaymentGatewayServiceProvider"> | string
    countryCode?: StringWithAggregatesFilter<"PaymentGatewayServiceProvider"> | string
    currencyCode?: StringWithAggregatesFilter<"PaymentGatewayServiceProvider"> | string
    isActive?: BoolWithAggregatesFilter<"PaymentGatewayServiceProvider"> | boolean
    logoUrl?: StringNullableWithAggregatesFilter<"PaymentGatewayServiceProvider"> | string | null
    description?: StringNullableWithAggregatesFilter<"PaymentGatewayServiceProvider"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"PaymentGatewayServiceProvider">
    createdAt?: DateTimeWithAggregatesFilter<"PaymentGatewayServiceProvider"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PaymentGatewayServiceProvider"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"PaymentGatewayServiceProvider"> | string | null
  }

  export type DeviceWhereInput = {
    AND?: DeviceWhereInput | DeviceWhereInput[]
    OR?: DeviceWhereInput[]
    NOT?: DeviceWhereInput | DeviceWhereInput[]
    id?: StringFilter<"Device"> | string
    deviceId?: StringFilter<"Device"> | string
    deviceName?: StringFilter<"Device"> | string
    deviceType?: StringFilter<"Device"> | string
    isVerified?: BoolFilter<"Device"> | boolean
    lastLoginAt?: DateTimeFilter<"Device"> | Date | string
    createdAt?: DateTimeFilter<"Device"> | Date | string
    updatedAt?: DateTimeFilter<"Device"> | Date | string
    userId?: StringFilter<"Device"> | string
    brand?: StringFilter<"Device"> | string
    modelName?: StringFilter<"Device"> | string
    osVersion?: StringFilter<"Device"> | string
    phoneNumber?: StringFilter<"Device"> | string
    lastLogoutAt?: DateTimeNullableFilter<"Device"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    sessions?: SessionListRelationFilter
  }

  export type DeviceOrderByWithRelationInput = {
    id?: SortOrder
    deviceId?: SortOrder
    deviceName?: SortOrder
    deviceType?: SortOrder
    isVerified?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    brand?: SortOrder
    modelName?: SortOrder
    osVersion?: SortOrder
    phoneNumber?: SortOrder
    lastLogoutAt?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    sessions?: SessionOrderByRelationAggregateInput
  }

  export type DeviceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_deviceId?: DeviceUserIdDeviceIdCompoundUniqueInput
    AND?: DeviceWhereInput | DeviceWhereInput[]
    OR?: DeviceWhereInput[]
    NOT?: DeviceWhereInput | DeviceWhereInput[]
    deviceId?: StringFilter<"Device"> | string
    deviceName?: StringFilter<"Device"> | string
    deviceType?: StringFilter<"Device"> | string
    isVerified?: BoolFilter<"Device"> | boolean
    lastLoginAt?: DateTimeFilter<"Device"> | Date | string
    createdAt?: DateTimeFilter<"Device"> | Date | string
    updatedAt?: DateTimeFilter<"Device"> | Date | string
    userId?: StringFilter<"Device"> | string
    brand?: StringFilter<"Device"> | string
    modelName?: StringFilter<"Device"> | string
    osVersion?: StringFilter<"Device"> | string
    phoneNumber?: StringFilter<"Device"> | string
    lastLogoutAt?: DateTimeNullableFilter<"Device"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    sessions?: SessionListRelationFilter
  }, "id" | "userId_deviceId">

  export type DeviceOrderByWithAggregationInput = {
    id?: SortOrder
    deviceId?: SortOrder
    deviceName?: SortOrder
    deviceType?: SortOrder
    isVerified?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    brand?: SortOrder
    modelName?: SortOrder
    osVersion?: SortOrder
    phoneNumber?: SortOrder
    lastLogoutAt?: SortOrderInput | SortOrder
    _count?: DeviceCountOrderByAggregateInput
    _max?: DeviceMaxOrderByAggregateInput
    _min?: DeviceMinOrderByAggregateInput
  }

  export type DeviceScalarWhereWithAggregatesInput = {
    AND?: DeviceScalarWhereWithAggregatesInput | DeviceScalarWhereWithAggregatesInput[]
    OR?: DeviceScalarWhereWithAggregatesInput[]
    NOT?: DeviceScalarWhereWithAggregatesInput | DeviceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Device"> | string
    deviceId?: StringWithAggregatesFilter<"Device"> | string
    deviceName?: StringWithAggregatesFilter<"Device"> | string
    deviceType?: StringWithAggregatesFilter<"Device"> | string
    isVerified?: BoolWithAggregatesFilter<"Device"> | boolean
    lastLoginAt?: DateTimeWithAggregatesFilter<"Device"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Device"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Device"> | Date | string
    userId?: StringWithAggregatesFilter<"Device"> | string
    brand?: StringWithAggregatesFilter<"Device"> | string
    modelName?: StringWithAggregatesFilter<"Device"> | string
    osVersion?: StringWithAggregatesFilter<"Device"> | string
    phoneNumber?: StringWithAggregatesFilter<"Device"> | string
    lastLogoutAt?: DateTimeNullableWithAggregatesFilter<"Device"> | Date | string | null
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    token?: StringFilter<"Session"> | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    userId?: StringFilter<"Session"> | string
    deviceId?: StringFilter<"Session"> | string
    device?: XOR<DeviceScalarRelationFilter, DeviceWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    device?: DeviceOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    userId?: StringFilter<"Session"> | string
    deviceId?: StringFilter<"Session"> | string
    device?: XOR<DeviceScalarRelationFilter, DeviceWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    token?: StringWithAggregatesFilter<"Session"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    userId?: StringWithAggregatesFilter<"Session"> | string
    deviceId?: StringWithAggregatesFilter<"Session"> | string
  }

  export type OTPWhereInput = {
    AND?: OTPWhereInput | OTPWhereInput[]
    OR?: OTPWhereInput[]
    NOT?: OTPWhereInput | OTPWhereInput[]
    id?: StringFilter<"OTP"> | string
    phoneNumber?: StringFilter<"OTP"> | string
    code?: StringFilter<"OTP"> | string
    type?: StringFilter<"OTP"> | string
    expiresAt?: DateTimeFilter<"OTP"> | Date | string
    createdAt?: DateTimeFilter<"OTP"> | Date | string
    isUsed?: BoolFilter<"OTP"> | boolean
    attempts?: IntFilter<"OTP"> | number
    originalCode?: StringNullableFilter<"OTP"> | string | null
  }

  export type OTPOrderByWithRelationInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isUsed?: SortOrder
    attempts?: SortOrder
    originalCode?: SortOrderInput | SortOrder
  }

  export type OTPWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OTPWhereInput | OTPWhereInput[]
    OR?: OTPWhereInput[]
    NOT?: OTPWhereInput | OTPWhereInput[]
    phoneNumber?: StringFilter<"OTP"> | string
    code?: StringFilter<"OTP"> | string
    type?: StringFilter<"OTP"> | string
    expiresAt?: DateTimeFilter<"OTP"> | Date | string
    createdAt?: DateTimeFilter<"OTP"> | Date | string
    isUsed?: BoolFilter<"OTP"> | boolean
    attempts?: IntFilter<"OTP"> | number
    originalCode?: StringNullableFilter<"OTP"> | string | null
  }, "id">

  export type OTPOrderByWithAggregationInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isUsed?: SortOrder
    attempts?: SortOrder
    originalCode?: SortOrderInput | SortOrder
    _count?: OTPCountOrderByAggregateInput
    _avg?: OTPAvgOrderByAggregateInput
    _max?: OTPMaxOrderByAggregateInput
    _min?: OTPMinOrderByAggregateInput
    _sum?: OTPSumOrderByAggregateInput
  }

  export type OTPScalarWhereWithAggregatesInput = {
    AND?: OTPScalarWhereWithAggregatesInput | OTPScalarWhereWithAggregatesInput[]
    OR?: OTPScalarWhereWithAggregatesInput[]
    NOT?: OTPScalarWhereWithAggregatesInput | OTPScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OTP"> | string
    phoneNumber?: StringWithAggregatesFilter<"OTP"> | string
    code?: StringWithAggregatesFilter<"OTP"> | string
    type?: StringWithAggregatesFilter<"OTP"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"OTP"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"OTP"> | Date | string
    isUsed?: BoolWithAggregatesFilter<"OTP"> | boolean
    attempts?: IntWithAggregatesFilter<"OTP"> | number
    originalCode?: StringNullableWithAggregatesFilter<"OTP"> | string | null
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    sellerId?: StringFilter<"Product"> | string
    title?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    price?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"Product"> | string
    quantity?: IntFilter<"Product"> | number
    categoryId?: StringNullableFilter<"Product"> | string | null
    condition?: EnumProductConditionFilter<"Product"> | $Enums.ProductCondition
    locationId?: StringFilter<"Product"> | string
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    views?: IntFilter<"Product"> | number
    favorites?: IntFilter<"Product"> | number
    rating?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFilter<"Product"> | number
    isFeatured?: BoolFilter<"Product"> | boolean
    featuredUntil?: DateTimeNullableFilter<"Product"> | Date | string | null
    metadata?: JsonNullableFilter<"Product">
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    location?: XOR<LocationScalarRelationFilter, LocationWhereInput>
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
    attributes?: ProductAttributeListRelationFilter
    deliveryOptions?: ProductDeliveryOptionListRelationFilter
    images?: ProductImageListRelationFilter
    translations?: ProductTranslationListRelationFilter
    orderItems?: OrderItemListRelationFilter
    productOrderInterests?: ProductOrderInterestListRelationFilter
    productViews?: ProductViewListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    sellerId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    quantity?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    condition?: SortOrder
    locationId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    views?: SortOrder
    favorites?: SortOrder
    rating?: SortOrderInput | SortOrder
    ratingCount?: SortOrder
    isFeatured?: SortOrder
    featuredUntil?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    category?: CategoryOrderByWithRelationInput
    location?: LocationOrderByWithRelationInput
    seller?: UserOrderByWithRelationInput
    attributes?: ProductAttributeOrderByRelationAggregateInput
    deliveryOptions?: ProductDeliveryOptionOrderByRelationAggregateInput
    images?: ProductImageOrderByRelationAggregateInput
    translations?: ProductTranslationOrderByRelationAggregateInput
    orderItems?: OrderItemOrderByRelationAggregateInput
    productOrderInterests?: ProductOrderInterestOrderByRelationAggregateInput
    productViews?: ProductViewOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    sellerId?: StringFilter<"Product"> | string
    title?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    price?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"Product"> | string
    quantity?: IntFilter<"Product"> | number
    categoryId?: StringNullableFilter<"Product"> | string | null
    condition?: EnumProductConditionFilter<"Product"> | $Enums.ProductCondition
    locationId?: StringFilter<"Product"> | string
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    views?: IntFilter<"Product"> | number
    favorites?: IntFilter<"Product"> | number
    rating?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFilter<"Product"> | number
    isFeatured?: BoolFilter<"Product"> | boolean
    featuredUntil?: DateTimeNullableFilter<"Product"> | Date | string | null
    metadata?: JsonNullableFilter<"Product">
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    location?: XOR<LocationScalarRelationFilter, LocationWhereInput>
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
    attributes?: ProductAttributeListRelationFilter
    deliveryOptions?: ProductDeliveryOptionListRelationFilter
    images?: ProductImageListRelationFilter
    translations?: ProductTranslationListRelationFilter
    orderItems?: OrderItemListRelationFilter
    productOrderInterests?: ProductOrderInterestListRelationFilter
    productViews?: ProductViewListRelationFilter
  }, "id">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    sellerId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    quantity?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    condition?: SortOrder
    locationId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    views?: SortOrder
    favorites?: SortOrder
    rating?: SortOrderInput | SortOrder
    ratingCount?: SortOrder
    isFeatured?: SortOrder
    featuredUntil?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    sellerId?: StringWithAggregatesFilter<"Product"> | string
    title?: StringWithAggregatesFilter<"Product"> | string
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    price?: DecimalWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringWithAggregatesFilter<"Product"> | string
    quantity?: IntWithAggregatesFilter<"Product"> | number
    categoryId?: StringNullableWithAggregatesFilter<"Product"> | string | null
    condition?: EnumProductConditionWithAggregatesFilter<"Product"> | $Enums.ProductCondition
    locationId?: StringWithAggregatesFilter<"Product"> | string
    status?: EnumProductStatusWithAggregatesFilter<"Product"> | $Enums.ProductStatus
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    views?: IntWithAggregatesFilter<"Product"> | number
    favorites?: IntWithAggregatesFilter<"Product"> | number
    rating?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntWithAggregatesFilter<"Product"> | number
    isFeatured?: BoolWithAggregatesFilter<"Product"> | boolean
    featuredUntil?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    metadata?: JsonNullableWithAggregatesFilter<"Product">
  }

  export type ProductImageWhereInput = {
    AND?: ProductImageWhereInput | ProductImageWhereInput[]
    OR?: ProductImageWhereInput[]
    NOT?: ProductImageWhereInput | ProductImageWhereInput[]
    id?: StringFilter<"ProductImage"> | string
    productId?: StringFilter<"ProductImage"> | string
    imageUrl?: StringFilter<"ProductImage"> | string
    isPrimary?: BoolFilter<"ProductImage"> | boolean
    createdAt?: DateTimeFilter<"ProductImage"> | Date | string
    updatedAt?: DateTimeFilter<"ProductImage"> | Date | string
    width?: IntNullableFilter<"ProductImage"> | number | null
    height?: IntNullableFilter<"ProductImage"> | number | null
    size?: IntNullableFilter<"ProductImage"> | number | null
    format?: StringNullableFilter<"ProductImage"> | string | null
    altText?: StringNullableFilter<"ProductImage"> | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductImageOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    imageUrl?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    width?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    format?: SortOrderInput | SortOrder
    altText?: SortOrderInput | SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ProductImageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductImageWhereInput | ProductImageWhereInput[]
    OR?: ProductImageWhereInput[]
    NOT?: ProductImageWhereInput | ProductImageWhereInput[]
    productId?: StringFilter<"ProductImage"> | string
    imageUrl?: StringFilter<"ProductImage"> | string
    isPrimary?: BoolFilter<"ProductImage"> | boolean
    createdAt?: DateTimeFilter<"ProductImage"> | Date | string
    updatedAt?: DateTimeFilter<"ProductImage"> | Date | string
    width?: IntNullableFilter<"ProductImage"> | number | null
    height?: IntNullableFilter<"ProductImage"> | number | null
    size?: IntNullableFilter<"ProductImage"> | number | null
    format?: StringNullableFilter<"ProductImage"> | string | null
    altText?: StringNullableFilter<"ProductImage"> | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type ProductImageOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    imageUrl?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    width?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    format?: SortOrderInput | SortOrder
    altText?: SortOrderInput | SortOrder
    _count?: ProductImageCountOrderByAggregateInput
    _avg?: ProductImageAvgOrderByAggregateInput
    _max?: ProductImageMaxOrderByAggregateInput
    _min?: ProductImageMinOrderByAggregateInput
    _sum?: ProductImageSumOrderByAggregateInput
  }

  export type ProductImageScalarWhereWithAggregatesInput = {
    AND?: ProductImageScalarWhereWithAggregatesInput | ProductImageScalarWhereWithAggregatesInput[]
    OR?: ProductImageScalarWhereWithAggregatesInput[]
    NOT?: ProductImageScalarWhereWithAggregatesInput | ProductImageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductImage"> | string
    productId?: StringWithAggregatesFilter<"ProductImage"> | string
    imageUrl?: StringWithAggregatesFilter<"ProductImage"> | string
    isPrimary?: BoolWithAggregatesFilter<"ProductImage"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProductImage"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductImage"> | Date | string
    width?: IntNullableWithAggregatesFilter<"ProductImage"> | number | null
    height?: IntNullableWithAggregatesFilter<"ProductImage"> | number | null
    size?: IntNullableWithAggregatesFilter<"ProductImage"> | number | null
    format?: StringNullableWithAggregatesFilter<"ProductImage"> | string | null
    altText?: StringNullableWithAggregatesFilter<"ProductImage"> | string | null
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    parentId?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    slug?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    imageUrl?: StringNullableFilter<"Category"> | string | null
    order?: IntFilter<"Category"> | number
    isActive?: BoolFilter<"Category"> | boolean
    metadata?: JsonNullableFilter<"Category">
    createdBy?: StringNullableFilter<"Category"> | string | null
    parent?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    translations?: CategoryTranslationListRelationFilter
    products?: ProductListRelationFilter
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    parentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    order?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    parent?: CategoryOrderByWithRelationInput
    children?: CategoryOrderByRelationAggregateInput
    translations?: CategoryTranslationOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    name?: StringFilter<"Category"> | string
    parentId?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    description?: StringNullableFilter<"Category"> | string | null
    imageUrl?: StringNullableFilter<"Category"> | string | null
    order?: IntFilter<"Category"> | number
    isActive?: BoolFilter<"Category"> | boolean
    metadata?: JsonNullableFilter<"Category">
    createdBy?: StringNullableFilter<"Category"> | string | null
    parent?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    translations?: CategoryTranslationListRelationFilter
    products?: ProductListRelationFilter
  }, "id" | "slug">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    parentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    order?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _avg?: CategoryAvgOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
    _sum?: CategorySumOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Category"> | string
    name?: StringWithAggregatesFilter<"Category"> | string
    parentId?: StringNullableWithAggregatesFilter<"Category"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    slug?: StringWithAggregatesFilter<"Category"> | string
    description?: StringNullableWithAggregatesFilter<"Category"> | string | null
    imageUrl?: StringNullableWithAggregatesFilter<"Category"> | string | null
    order?: IntWithAggregatesFilter<"Category"> | number
    isActive?: BoolWithAggregatesFilter<"Category"> | boolean
    metadata?: JsonNullableWithAggregatesFilter<"Category">
    createdBy?: StringNullableWithAggregatesFilter<"Category"> | string | null
  }

  export type LocationWhereInput = {
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    id?: StringFilter<"Location"> | string
    countryCode?: StringFilter<"Location"> | string
    region?: StringFilter<"Location"> | string
    city?: StringFilter<"Location"> | string
    createdAt?: DateTimeFilter<"Location"> | Date | string
    updatedAt?: DateTimeFilter<"Location"> | Date | string
    latitude?: FloatNullableFilter<"Location"> | number | null
    longitude?: FloatNullableFilter<"Location"> | number | null
    timezone?: StringNullableFilter<"Location"> | string | null
    isActive?: BoolFilter<"Location"> | boolean
    products?: ProductListRelationFilter
  }

  export type LocationOrderByWithRelationInput = {
    id?: SortOrder
    countryCode?: SortOrder
    region?: SortOrder
    city?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    isActive?: SortOrder
    products?: ProductOrderByRelationAggregateInput
  }

  export type LocationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    countryCode?: StringFilter<"Location"> | string
    region?: StringFilter<"Location"> | string
    city?: StringFilter<"Location"> | string
    createdAt?: DateTimeFilter<"Location"> | Date | string
    updatedAt?: DateTimeFilter<"Location"> | Date | string
    latitude?: FloatNullableFilter<"Location"> | number | null
    longitude?: FloatNullableFilter<"Location"> | number | null
    timezone?: StringNullableFilter<"Location"> | string | null
    isActive?: BoolFilter<"Location"> | boolean
    products?: ProductListRelationFilter
  }, "id">

  export type LocationOrderByWithAggregationInput = {
    id?: SortOrder
    countryCode?: SortOrder
    region?: SortOrder
    city?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    isActive?: SortOrder
    _count?: LocationCountOrderByAggregateInput
    _avg?: LocationAvgOrderByAggregateInput
    _max?: LocationMaxOrderByAggregateInput
    _min?: LocationMinOrderByAggregateInput
    _sum?: LocationSumOrderByAggregateInput
  }

  export type LocationScalarWhereWithAggregatesInput = {
    AND?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    OR?: LocationScalarWhereWithAggregatesInput[]
    NOT?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Location"> | string
    countryCode?: StringWithAggregatesFilter<"Location"> | string
    region?: StringWithAggregatesFilter<"Location"> | string
    city?: StringWithAggregatesFilter<"Location"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Location"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Location"> | Date | string
    latitude?: FloatNullableWithAggregatesFilter<"Location"> | number | null
    longitude?: FloatNullableWithAggregatesFilter<"Location"> | number | null
    timezone?: StringNullableWithAggregatesFilter<"Location"> | string | null
    isActive?: BoolWithAggregatesFilter<"Location"> | boolean
  }

  export type ProductAttributeWhereInput = {
    AND?: ProductAttributeWhereInput | ProductAttributeWhereInput[]
    OR?: ProductAttributeWhereInput[]
    NOT?: ProductAttributeWhereInput | ProductAttributeWhereInput[]
    id?: StringFilter<"ProductAttribute"> | string
    productId?: StringFilter<"ProductAttribute"> | string
    key?: StringFilter<"ProductAttribute"> | string
    value?: StringFilter<"ProductAttribute"> | string
    createdAt?: DateTimeFilter<"ProductAttribute"> | Date | string
    updatedAt?: DateTimeFilter<"ProductAttribute"> | Date | string
    unit?: StringNullableFilter<"ProductAttribute"> | string | null
    isFilterable?: BoolFilter<"ProductAttribute"> | boolean
    order?: IntFilter<"ProductAttribute"> | number
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductAttributeOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    unit?: SortOrderInput | SortOrder
    isFilterable?: SortOrder
    order?: SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ProductAttributeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductAttributeWhereInput | ProductAttributeWhereInput[]
    OR?: ProductAttributeWhereInput[]
    NOT?: ProductAttributeWhereInput | ProductAttributeWhereInput[]
    productId?: StringFilter<"ProductAttribute"> | string
    key?: StringFilter<"ProductAttribute"> | string
    value?: StringFilter<"ProductAttribute"> | string
    createdAt?: DateTimeFilter<"ProductAttribute"> | Date | string
    updatedAt?: DateTimeFilter<"ProductAttribute"> | Date | string
    unit?: StringNullableFilter<"ProductAttribute"> | string | null
    isFilterable?: BoolFilter<"ProductAttribute"> | boolean
    order?: IntFilter<"ProductAttribute"> | number
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type ProductAttributeOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    unit?: SortOrderInput | SortOrder
    isFilterable?: SortOrder
    order?: SortOrder
    _count?: ProductAttributeCountOrderByAggregateInput
    _avg?: ProductAttributeAvgOrderByAggregateInput
    _max?: ProductAttributeMaxOrderByAggregateInput
    _min?: ProductAttributeMinOrderByAggregateInput
    _sum?: ProductAttributeSumOrderByAggregateInput
  }

  export type ProductAttributeScalarWhereWithAggregatesInput = {
    AND?: ProductAttributeScalarWhereWithAggregatesInput | ProductAttributeScalarWhereWithAggregatesInput[]
    OR?: ProductAttributeScalarWhereWithAggregatesInput[]
    NOT?: ProductAttributeScalarWhereWithAggregatesInput | ProductAttributeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductAttribute"> | string
    productId?: StringWithAggregatesFilter<"ProductAttribute"> | string
    key?: StringWithAggregatesFilter<"ProductAttribute"> | string
    value?: StringWithAggregatesFilter<"ProductAttribute"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ProductAttribute"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductAttribute"> | Date | string
    unit?: StringNullableWithAggregatesFilter<"ProductAttribute"> | string | null
    isFilterable?: BoolWithAggregatesFilter<"ProductAttribute"> | boolean
    order?: IntWithAggregatesFilter<"ProductAttribute"> | number
  }

  export type ProductTranslationWhereInput = {
    AND?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    OR?: ProductTranslationWhereInput[]
    NOT?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    id?: StringFilter<"ProductTranslation"> | string
    productId?: StringFilter<"ProductTranslation"> | string
    locale?: StringFilter<"ProductTranslation"> | string
    title?: StringFilter<"ProductTranslation"> | string
    description?: StringFilter<"ProductTranslation"> | string
    createdAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductTranslationOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ProductTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    productId_locale?: ProductTranslationProductIdLocaleCompoundUniqueInput
    AND?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    OR?: ProductTranslationWhereInput[]
    NOT?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    productId?: StringFilter<"ProductTranslation"> | string
    locale?: StringFilter<"ProductTranslation"> | string
    title?: StringFilter<"ProductTranslation"> | string
    description?: StringFilter<"ProductTranslation"> | string
    createdAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id" | "productId_locale">

  export type ProductTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductTranslationCountOrderByAggregateInput
    _max?: ProductTranslationMaxOrderByAggregateInput
    _min?: ProductTranslationMinOrderByAggregateInput
  }

  export type ProductTranslationScalarWhereWithAggregatesInput = {
    AND?: ProductTranslationScalarWhereWithAggregatesInput | ProductTranslationScalarWhereWithAggregatesInput[]
    OR?: ProductTranslationScalarWhereWithAggregatesInput[]
    NOT?: ProductTranslationScalarWhereWithAggregatesInput | ProductTranslationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductTranslation"> | string
    productId?: StringWithAggregatesFilter<"ProductTranslation"> | string
    locale?: StringWithAggregatesFilter<"ProductTranslation"> | string
    title?: StringWithAggregatesFilter<"ProductTranslation"> | string
    description?: StringWithAggregatesFilter<"ProductTranslation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ProductTranslation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductTranslation"> | Date | string
  }

  export type ProductDeliveryOptionWhereInput = {
    AND?: ProductDeliveryOptionWhereInput | ProductDeliveryOptionWhereInput[]
    OR?: ProductDeliveryOptionWhereInput[]
    NOT?: ProductDeliveryOptionWhereInput | ProductDeliveryOptionWhereInput[]
    id?: StringFilter<"ProductDeliveryOption"> | string
    productId?: StringFilter<"ProductDeliveryOption"> | string
    deliveryType?: EnumDeliveryTypeFilter<"ProductDeliveryOption"> | $Enums.DeliveryType
    name?: StringFilter<"ProductDeliveryOption"> | string
    description?: StringNullableFilter<"ProductDeliveryOption"> | string | null
    price?: DecimalFilter<"ProductDeliveryOption"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"ProductDeliveryOption"> | string
    estimatedDays?: IntFilter<"ProductDeliveryOption"> | number
    isDefault?: BoolFilter<"ProductDeliveryOption"> | boolean
    isActive?: BoolFilter<"ProductDeliveryOption"> | boolean
    createdAt?: DateTimeFilter<"ProductDeliveryOption"> | Date | string
    updatedAt?: DateTimeFilter<"ProductDeliveryOption"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductDeliveryOptionOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    deliveryType?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    estimatedDays?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ProductDeliveryOptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductDeliveryOptionWhereInput | ProductDeliveryOptionWhereInput[]
    OR?: ProductDeliveryOptionWhereInput[]
    NOT?: ProductDeliveryOptionWhereInput | ProductDeliveryOptionWhereInput[]
    productId?: StringFilter<"ProductDeliveryOption"> | string
    deliveryType?: EnumDeliveryTypeFilter<"ProductDeliveryOption"> | $Enums.DeliveryType
    name?: StringFilter<"ProductDeliveryOption"> | string
    description?: StringNullableFilter<"ProductDeliveryOption"> | string | null
    price?: DecimalFilter<"ProductDeliveryOption"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"ProductDeliveryOption"> | string
    estimatedDays?: IntFilter<"ProductDeliveryOption"> | number
    isDefault?: BoolFilter<"ProductDeliveryOption"> | boolean
    isActive?: BoolFilter<"ProductDeliveryOption"> | boolean
    createdAt?: DateTimeFilter<"ProductDeliveryOption"> | Date | string
    updatedAt?: DateTimeFilter<"ProductDeliveryOption"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type ProductDeliveryOptionOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    deliveryType?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    estimatedDays?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductDeliveryOptionCountOrderByAggregateInput
    _avg?: ProductDeliveryOptionAvgOrderByAggregateInput
    _max?: ProductDeliveryOptionMaxOrderByAggregateInput
    _min?: ProductDeliveryOptionMinOrderByAggregateInput
    _sum?: ProductDeliveryOptionSumOrderByAggregateInput
  }

  export type ProductDeliveryOptionScalarWhereWithAggregatesInput = {
    AND?: ProductDeliveryOptionScalarWhereWithAggregatesInput | ProductDeliveryOptionScalarWhereWithAggregatesInput[]
    OR?: ProductDeliveryOptionScalarWhereWithAggregatesInput[]
    NOT?: ProductDeliveryOptionScalarWhereWithAggregatesInput | ProductDeliveryOptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductDeliveryOption"> | string
    productId?: StringWithAggregatesFilter<"ProductDeliveryOption"> | string
    deliveryType?: EnumDeliveryTypeWithAggregatesFilter<"ProductDeliveryOption"> | $Enums.DeliveryType
    name?: StringWithAggregatesFilter<"ProductDeliveryOption"> | string
    description?: StringNullableWithAggregatesFilter<"ProductDeliveryOption"> | string | null
    price?: DecimalWithAggregatesFilter<"ProductDeliveryOption"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringWithAggregatesFilter<"ProductDeliveryOption"> | string
    estimatedDays?: IntWithAggregatesFilter<"ProductDeliveryOption"> | number
    isDefault?: BoolWithAggregatesFilter<"ProductDeliveryOption"> | boolean
    isActive?: BoolWithAggregatesFilter<"ProductDeliveryOption"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProductDeliveryOption"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductDeliveryOption"> | Date | string
  }

  export type CategoryTranslationWhereInput = {
    AND?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    OR?: CategoryTranslationWhereInput[]
    NOT?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    id?: StringFilter<"CategoryTranslation"> | string
    categoryId?: StringFilter<"CategoryTranslation"> | string
    locale?: StringFilter<"CategoryTranslation"> | string
    name?: StringFilter<"CategoryTranslation"> | string
    description?: StringNullableFilter<"CategoryTranslation"> | string | null
    createdAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
  }

  export type CategoryTranslationOrderByWithRelationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    locale?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: CategoryOrderByWithRelationInput
  }

  export type CategoryTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    categoryId_locale?: CategoryTranslationCategoryIdLocaleCompoundUniqueInput
    AND?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    OR?: CategoryTranslationWhereInput[]
    NOT?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    categoryId?: StringFilter<"CategoryTranslation"> | string
    locale?: StringFilter<"CategoryTranslation"> | string
    name?: StringFilter<"CategoryTranslation"> | string
    description?: StringNullableFilter<"CategoryTranslation"> | string | null
    createdAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
  }, "id" | "categoryId_locale">

  export type CategoryTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    locale?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CategoryTranslationCountOrderByAggregateInput
    _max?: CategoryTranslationMaxOrderByAggregateInput
    _min?: CategoryTranslationMinOrderByAggregateInput
  }

  export type CategoryTranslationScalarWhereWithAggregatesInput = {
    AND?: CategoryTranslationScalarWhereWithAggregatesInput | CategoryTranslationScalarWhereWithAggregatesInput[]
    OR?: CategoryTranslationScalarWhereWithAggregatesInput[]
    NOT?: CategoryTranslationScalarWhereWithAggregatesInput | CategoryTranslationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    categoryId?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    locale?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    name?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    description?: StringNullableWithAggregatesFilter<"CategoryTranslation"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CategoryTranslation"> | Date | string
  }

  export type SellerKycWhereInput = {
    AND?: SellerKycWhereInput | SellerKycWhereInput[]
    OR?: SellerKycWhereInput[]
    NOT?: SellerKycWhereInput | SellerKycWhereInput[]
    id?: StringFilter<"SellerKyc"> | string
    userId?: StringFilter<"SellerKyc"> | string
    businessName?: StringFilter<"SellerKyc"> | string
    businessType?: EnumBusinessTypeFilter<"SellerKyc"> | $Enums.BusinessType
    registrationNumber?: StringNullableFilter<"SellerKyc"> | string | null
    taxId?: StringNullableFilter<"SellerKyc"> | string | null
    address?: StringFilter<"SellerKyc"> | string
    city?: StringFilter<"SellerKyc"> | string
    state?: StringFilter<"SellerKyc"> | string
    postalCode?: StringFilter<"SellerKyc"> | string
    documentType?: EnumDocumentTypeFilter<"SellerKyc"> | $Enums.DocumentType
    documentNumber?: StringFilter<"SellerKyc"> | string
    documentUrl?: StringFilter<"SellerKyc"> | string
    status?: EnumKycStatusFilter<"SellerKyc"> | $Enums.KycStatus
    rejectionReason?: StringNullableFilter<"SellerKyc"> | string | null
    verifiedAt?: DateTimeNullableFilter<"SellerKyc"> | Date | string | null
    createdAt?: DateTimeFilter<"SellerKyc"> | Date | string
    updatedAt?: DateTimeFilter<"SellerKyc"> | Date | string
    country?: StringNullableListFilter<"SellerKyc">
    documentExpiryDate?: DateTimeNullableFilter<"SellerKyc"> | Date | string | null
    statusChangedBy?: StringNullableFilter<"SellerKyc"> | string | null
    statusChangedAt?: DateTimeNullableFilter<"SellerKyc"> | Date | string | null
    bankAccounts?: BankAccountListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    wallets?: WalletListRelationFilter
  }

  export type SellerKycOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    businessName?: SortOrder
    businessType?: SortOrder
    registrationNumber?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentUrl?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    country?: SortOrder
    documentExpiryDate?: SortOrderInput | SortOrder
    statusChangedBy?: SortOrderInput | SortOrder
    statusChangedAt?: SortOrderInput | SortOrder
    bankAccounts?: BankAccountOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
    wallets?: WalletOrderByRelationAggregateInput
  }

  export type SellerKycWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: SellerKycWhereInput | SellerKycWhereInput[]
    OR?: SellerKycWhereInput[]
    NOT?: SellerKycWhereInput | SellerKycWhereInput[]
    businessName?: StringFilter<"SellerKyc"> | string
    businessType?: EnumBusinessTypeFilter<"SellerKyc"> | $Enums.BusinessType
    registrationNumber?: StringNullableFilter<"SellerKyc"> | string | null
    taxId?: StringNullableFilter<"SellerKyc"> | string | null
    address?: StringFilter<"SellerKyc"> | string
    city?: StringFilter<"SellerKyc"> | string
    state?: StringFilter<"SellerKyc"> | string
    postalCode?: StringFilter<"SellerKyc"> | string
    documentType?: EnumDocumentTypeFilter<"SellerKyc"> | $Enums.DocumentType
    documentNumber?: StringFilter<"SellerKyc"> | string
    documentUrl?: StringFilter<"SellerKyc"> | string
    status?: EnumKycStatusFilter<"SellerKyc"> | $Enums.KycStatus
    rejectionReason?: StringNullableFilter<"SellerKyc"> | string | null
    verifiedAt?: DateTimeNullableFilter<"SellerKyc"> | Date | string | null
    createdAt?: DateTimeFilter<"SellerKyc"> | Date | string
    updatedAt?: DateTimeFilter<"SellerKyc"> | Date | string
    country?: StringNullableListFilter<"SellerKyc">
    documentExpiryDate?: DateTimeNullableFilter<"SellerKyc"> | Date | string | null
    statusChangedBy?: StringNullableFilter<"SellerKyc"> | string | null
    statusChangedAt?: DateTimeNullableFilter<"SellerKyc"> | Date | string | null
    bankAccounts?: BankAccountListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    wallets?: WalletListRelationFilter
  }, "id" | "userId">

  export type SellerKycOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    businessName?: SortOrder
    businessType?: SortOrder
    registrationNumber?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentUrl?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    country?: SortOrder
    documentExpiryDate?: SortOrderInput | SortOrder
    statusChangedBy?: SortOrderInput | SortOrder
    statusChangedAt?: SortOrderInput | SortOrder
    _count?: SellerKycCountOrderByAggregateInput
    _max?: SellerKycMaxOrderByAggregateInput
    _min?: SellerKycMinOrderByAggregateInput
  }

  export type SellerKycScalarWhereWithAggregatesInput = {
    AND?: SellerKycScalarWhereWithAggregatesInput | SellerKycScalarWhereWithAggregatesInput[]
    OR?: SellerKycScalarWhereWithAggregatesInput[]
    NOT?: SellerKycScalarWhereWithAggregatesInput | SellerKycScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SellerKyc"> | string
    userId?: StringWithAggregatesFilter<"SellerKyc"> | string
    businessName?: StringWithAggregatesFilter<"SellerKyc"> | string
    businessType?: EnumBusinessTypeWithAggregatesFilter<"SellerKyc"> | $Enums.BusinessType
    registrationNumber?: StringNullableWithAggregatesFilter<"SellerKyc"> | string | null
    taxId?: StringNullableWithAggregatesFilter<"SellerKyc"> | string | null
    address?: StringWithAggregatesFilter<"SellerKyc"> | string
    city?: StringWithAggregatesFilter<"SellerKyc"> | string
    state?: StringWithAggregatesFilter<"SellerKyc"> | string
    postalCode?: StringWithAggregatesFilter<"SellerKyc"> | string
    documentType?: EnumDocumentTypeWithAggregatesFilter<"SellerKyc"> | $Enums.DocumentType
    documentNumber?: StringWithAggregatesFilter<"SellerKyc"> | string
    documentUrl?: StringWithAggregatesFilter<"SellerKyc"> | string
    status?: EnumKycStatusWithAggregatesFilter<"SellerKyc"> | $Enums.KycStatus
    rejectionReason?: StringNullableWithAggregatesFilter<"SellerKyc"> | string | null
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"SellerKyc"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SellerKyc"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SellerKyc"> | Date | string
    country?: StringNullableListFilter<"SellerKyc">
    documentExpiryDate?: DateTimeNullableWithAggregatesFilter<"SellerKyc"> | Date | string | null
    statusChangedBy?: StringNullableWithAggregatesFilter<"SellerKyc"> | string | null
    statusChangedAt?: DateTimeNullableWithAggregatesFilter<"SellerKyc"> | Date | string | null
  }

  export type BankAccountWhereInput = {
    AND?: BankAccountWhereInput | BankAccountWhereInput[]
    OR?: BankAccountWhereInput[]
    NOT?: BankAccountWhereInput | BankAccountWhereInput[]
    id?: StringFilter<"BankAccount"> | string
    sellerKycId?: StringFilter<"BankAccount"> | string
    accountName?: StringFilter<"BankAccount"> | string
    accountNumber?: StringFilter<"BankAccount"> | string
    bankName?: StringFilter<"BankAccount"> | string
    bankCode?: StringFilter<"BankAccount"> | string
    branchCode?: StringNullableFilter<"BankAccount"> | string | null
    swiftCode?: StringNullableFilter<"BankAccount"> | string | null
    iban?: StringNullableFilter<"BankAccount"> | string | null
    currency?: StringFilter<"BankAccount"> | string
    isDefault?: BoolFilter<"BankAccount"> | boolean
    status?: EnumAccountStatusFilter<"BankAccount"> | $Enums.AccountStatus
    createdAt?: DateTimeFilter<"BankAccount"> | Date | string
    updatedAt?: DateTimeFilter<"BankAccount"> | Date | string
    sellerKyc?: XOR<SellerKycScalarRelationFilter, SellerKycWhereInput>
    settlements?: SettlementListRelationFilter
  }

  export type BankAccountOrderByWithRelationInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankCode?: SortOrder
    branchCode?: SortOrderInput | SortOrder
    swiftCode?: SortOrderInput | SortOrder
    iban?: SortOrderInput | SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sellerKyc?: SellerKycOrderByWithRelationInput
    settlements?: SettlementOrderByRelationAggregateInput
  }

  export type BankAccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BankAccountWhereInput | BankAccountWhereInput[]
    OR?: BankAccountWhereInput[]
    NOT?: BankAccountWhereInput | BankAccountWhereInput[]
    sellerKycId?: StringFilter<"BankAccount"> | string
    accountName?: StringFilter<"BankAccount"> | string
    accountNumber?: StringFilter<"BankAccount"> | string
    bankName?: StringFilter<"BankAccount"> | string
    bankCode?: StringFilter<"BankAccount"> | string
    branchCode?: StringNullableFilter<"BankAccount"> | string | null
    swiftCode?: StringNullableFilter<"BankAccount"> | string | null
    iban?: StringNullableFilter<"BankAccount"> | string | null
    currency?: StringFilter<"BankAccount"> | string
    isDefault?: BoolFilter<"BankAccount"> | boolean
    status?: EnumAccountStatusFilter<"BankAccount"> | $Enums.AccountStatus
    createdAt?: DateTimeFilter<"BankAccount"> | Date | string
    updatedAt?: DateTimeFilter<"BankAccount"> | Date | string
    sellerKyc?: XOR<SellerKycScalarRelationFilter, SellerKycWhereInput>
    settlements?: SettlementListRelationFilter
  }, "id">

  export type BankAccountOrderByWithAggregationInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankCode?: SortOrder
    branchCode?: SortOrderInput | SortOrder
    swiftCode?: SortOrderInput | SortOrder
    iban?: SortOrderInput | SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BankAccountCountOrderByAggregateInput
    _max?: BankAccountMaxOrderByAggregateInput
    _min?: BankAccountMinOrderByAggregateInput
  }

  export type BankAccountScalarWhereWithAggregatesInput = {
    AND?: BankAccountScalarWhereWithAggregatesInput | BankAccountScalarWhereWithAggregatesInput[]
    OR?: BankAccountScalarWhereWithAggregatesInput[]
    NOT?: BankAccountScalarWhereWithAggregatesInput | BankAccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BankAccount"> | string
    sellerKycId?: StringWithAggregatesFilter<"BankAccount"> | string
    accountName?: StringWithAggregatesFilter<"BankAccount"> | string
    accountNumber?: StringWithAggregatesFilter<"BankAccount"> | string
    bankName?: StringWithAggregatesFilter<"BankAccount"> | string
    bankCode?: StringWithAggregatesFilter<"BankAccount"> | string
    branchCode?: StringNullableWithAggregatesFilter<"BankAccount"> | string | null
    swiftCode?: StringNullableWithAggregatesFilter<"BankAccount"> | string | null
    iban?: StringNullableWithAggregatesFilter<"BankAccount"> | string | null
    currency?: StringWithAggregatesFilter<"BankAccount"> | string
    isDefault?: BoolWithAggregatesFilter<"BankAccount"> | boolean
    status?: EnumAccountStatusWithAggregatesFilter<"BankAccount"> | $Enums.AccountStatus
    createdAt?: DateTimeWithAggregatesFilter<"BankAccount"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BankAccount"> | Date | string
  }

  export type WalletWhereInput = {
    AND?: WalletWhereInput | WalletWhereInput[]
    OR?: WalletWhereInput[]
    NOT?: WalletWhereInput | WalletWhereInput[]
    id?: StringFilter<"Wallet"> | string
    sellerKycId?: StringFilter<"Wallet"> | string
    walletType?: EnumWalletTypeFilter<"Wallet"> | $Enums.WalletType
    walletAddress?: StringFilter<"Wallet"> | string
    currency?: StringFilter<"Wallet"> | string
    isDefault?: BoolFilter<"Wallet"> | boolean
    status?: EnumAccountStatusFilter<"Wallet"> | $Enums.AccountStatus
    createdAt?: DateTimeFilter<"Wallet"> | Date | string
    updatedAt?: DateTimeFilter<"Wallet"> | Date | string
    account?: StringFilter<"Wallet"> | string
    settlements?: SettlementListRelationFilter
    sellerKyc?: XOR<SellerKycScalarRelationFilter, SellerKycWhereInput>
  }

  export type WalletOrderByWithRelationInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    walletType?: SortOrder
    walletAddress?: SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    account?: SortOrder
    settlements?: SettlementOrderByRelationAggregateInput
    sellerKyc?: SellerKycOrderByWithRelationInput
  }

  export type WalletWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: WalletWhereInput | WalletWhereInput[]
    OR?: WalletWhereInput[]
    NOT?: WalletWhereInput | WalletWhereInput[]
    sellerKycId?: StringFilter<"Wallet"> | string
    walletType?: EnumWalletTypeFilter<"Wallet"> | $Enums.WalletType
    walletAddress?: StringFilter<"Wallet"> | string
    currency?: StringFilter<"Wallet"> | string
    isDefault?: BoolFilter<"Wallet"> | boolean
    status?: EnumAccountStatusFilter<"Wallet"> | $Enums.AccountStatus
    createdAt?: DateTimeFilter<"Wallet"> | Date | string
    updatedAt?: DateTimeFilter<"Wallet"> | Date | string
    account?: StringFilter<"Wallet"> | string
    settlements?: SettlementListRelationFilter
    sellerKyc?: XOR<SellerKycScalarRelationFilter, SellerKycWhereInput>
  }, "id">

  export type WalletOrderByWithAggregationInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    walletType?: SortOrder
    walletAddress?: SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    account?: SortOrder
    _count?: WalletCountOrderByAggregateInput
    _max?: WalletMaxOrderByAggregateInput
    _min?: WalletMinOrderByAggregateInput
  }

  export type WalletScalarWhereWithAggregatesInput = {
    AND?: WalletScalarWhereWithAggregatesInput | WalletScalarWhereWithAggregatesInput[]
    OR?: WalletScalarWhereWithAggregatesInput[]
    NOT?: WalletScalarWhereWithAggregatesInput | WalletScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Wallet"> | string
    sellerKycId?: StringWithAggregatesFilter<"Wallet"> | string
    walletType?: EnumWalletTypeWithAggregatesFilter<"Wallet"> | $Enums.WalletType
    walletAddress?: StringWithAggregatesFilter<"Wallet"> | string
    currency?: StringWithAggregatesFilter<"Wallet"> | string
    isDefault?: BoolWithAggregatesFilter<"Wallet"> | boolean
    status?: EnumAccountStatusWithAggregatesFilter<"Wallet"> | $Enums.AccountStatus
    createdAt?: DateTimeWithAggregatesFilter<"Wallet"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Wallet"> | Date | string
    account?: StringWithAggregatesFilter<"Wallet"> | string
  }

  export type PaymentMethodWhereInput = {
    AND?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    OR?: PaymentMethodWhereInput[]
    NOT?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    id?: StringFilter<"PaymentMethod"> | string
    userId?: StringFilter<"PaymentMethod"> | string
    type?: EnumPaymentTypeFilter<"PaymentMethod"> | $Enums.PaymentType
    provider?: StringFilter<"PaymentMethod"> | string
    accountId?: StringFilter<"PaymentMethod"> | string
    accountName?: StringFilter<"PaymentMethod"> | string
    isDefault?: BoolFilter<"PaymentMethod"> | boolean
    status?: EnumAccountStatusFilter<"PaymentMethod"> | $Enums.AccountStatus
    metadata?: JsonNullableFilter<"PaymentMethod">
    createdAt?: DateTimeFilter<"PaymentMethod"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentMethod"> | Date | string
    externalTransactions?: ExternalTransactionListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type PaymentMethodOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    accountId?: SortOrder
    accountName?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    externalTransactions?: ExternalTransactionOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
  }

  export type PaymentMethodWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    OR?: PaymentMethodWhereInput[]
    NOT?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    userId?: StringFilter<"PaymentMethod"> | string
    type?: EnumPaymentTypeFilter<"PaymentMethod"> | $Enums.PaymentType
    provider?: StringFilter<"PaymentMethod"> | string
    accountId?: StringFilter<"PaymentMethod"> | string
    accountName?: StringFilter<"PaymentMethod"> | string
    isDefault?: BoolFilter<"PaymentMethod"> | boolean
    status?: EnumAccountStatusFilter<"PaymentMethod"> | $Enums.AccountStatus
    metadata?: JsonNullableFilter<"PaymentMethod">
    createdAt?: DateTimeFilter<"PaymentMethod"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentMethod"> | Date | string
    externalTransactions?: ExternalTransactionListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type PaymentMethodOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    accountId?: SortOrder
    accountName?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PaymentMethodCountOrderByAggregateInput
    _max?: PaymentMethodMaxOrderByAggregateInput
    _min?: PaymentMethodMinOrderByAggregateInput
  }

  export type PaymentMethodScalarWhereWithAggregatesInput = {
    AND?: PaymentMethodScalarWhereWithAggregatesInput | PaymentMethodScalarWhereWithAggregatesInput[]
    OR?: PaymentMethodScalarWhereWithAggregatesInput[]
    NOT?: PaymentMethodScalarWhereWithAggregatesInput | PaymentMethodScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentMethod"> | string
    userId?: StringWithAggregatesFilter<"PaymentMethod"> | string
    type?: EnumPaymentTypeWithAggregatesFilter<"PaymentMethod"> | $Enums.PaymentType
    provider?: StringWithAggregatesFilter<"PaymentMethod"> | string
    accountId?: StringWithAggregatesFilter<"PaymentMethod"> | string
    accountName?: StringWithAggregatesFilter<"PaymentMethod"> | string
    isDefault?: BoolWithAggregatesFilter<"PaymentMethod"> | boolean
    status?: EnumAccountStatusWithAggregatesFilter<"PaymentMethod"> | $Enums.AccountStatus
    metadata?: JsonNullableWithAggregatesFilter<"PaymentMethod">
    createdAt?: DateTimeWithAggregatesFilter<"PaymentMethod"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PaymentMethod"> | Date | string
  }

  export type SettlementWhereInput = {
    AND?: SettlementWhereInput | SettlementWhereInput[]
    OR?: SettlementWhereInput[]
    NOT?: SettlementWhereInput | SettlementWhereInput[]
    id?: StringFilter<"Settlement"> | string
    userId?: StringFilter<"Settlement"> | string
    amount?: DecimalFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Settlement"> | string
    status?: EnumSettlementStatusFilter<"Settlement"> | $Enums.SettlementStatus
    type?: EnumSettlementTypeFilter<"Settlement"> | $Enums.SettlementType
    reference?: StringFilter<"Settlement"> | string
    bankAccountId?: StringNullableFilter<"Settlement"> | string | null
    walletId?: StringNullableFilter<"Settlement"> | string | null
    metadata?: JsonNullableFilter<"Settlement">
    processedAt?: DateTimeNullableFilter<"Settlement"> | Date | string | null
    createdAt?: DateTimeFilter<"Settlement"> | Date | string
    updatedAt?: DateTimeFilter<"Settlement"> | Date | string
    includedOrderIds?: JsonNullableFilter<"Settlement">
    netAmountBeforeFees?: DecimalFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFilter<"Settlement"> | number
    channel?: EnumSettlementChannelFilter<"Settlement"> | $Enums.SettlementChannel
    includedRideIds?: JsonNullableFilter<"Settlement">
    totalRidesCount?: IntFilter<"Settlement"> | number
    bankAccount?: XOR<BankAccountNullableScalarRelationFilter, BankAccountWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    wallet?: XOR<WalletNullableScalarRelationFilter, WalletWhereInput> | null
  }

  export type SettlementOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    bankAccountId?: SortOrderInput | SortOrder
    walletId?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    includedOrderIds?: SortOrderInput | SortOrder
    netAmountBeforeFees?: SortOrder
    serviceFeesDeducted?: SortOrder
    totalOrdersCount?: SortOrder
    channel?: SortOrder
    includedRideIds?: SortOrderInput | SortOrder
    totalRidesCount?: SortOrder
    bankAccount?: BankAccountOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    wallet?: WalletOrderByWithRelationInput
  }

  export type SettlementWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    reference?: string
    AND?: SettlementWhereInput | SettlementWhereInput[]
    OR?: SettlementWhereInput[]
    NOT?: SettlementWhereInput | SettlementWhereInput[]
    userId?: StringFilter<"Settlement"> | string
    amount?: DecimalFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Settlement"> | string
    status?: EnumSettlementStatusFilter<"Settlement"> | $Enums.SettlementStatus
    type?: EnumSettlementTypeFilter<"Settlement"> | $Enums.SettlementType
    bankAccountId?: StringNullableFilter<"Settlement"> | string | null
    walletId?: StringNullableFilter<"Settlement"> | string | null
    metadata?: JsonNullableFilter<"Settlement">
    processedAt?: DateTimeNullableFilter<"Settlement"> | Date | string | null
    createdAt?: DateTimeFilter<"Settlement"> | Date | string
    updatedAt?: DateTimeFilter<"Settlement"> | Date | string
    includedOrderIds?: JsonNullableFilter<"Settlement">
    netAmountBeforeFees?: DecimalFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFilter<"Settlement"> | number
    channel?: EnumSettlementChannelFilter<"Settlement"> | $Enums.SettlementChannel
    includedRideIds?: JsonNullableFilter<"Settlement">
    totalRidesCount?: IntFilter<"Settlement"> | number
    bankAccount?: XOR<BankAccountNullableScalarRelationFilter, BankAccountWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    wallet?: XOR<WalletNullableScalarRelationFilter, WalletWhereInput> | null
  }, "id" | "reference">

  export type SettlementOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    bankAccountId?: SortOrderInput | SortOrder
    walletId?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    includedOrderIds?: SortOrderInput | SortOrder
    netAmountBeforeFees?: SortOrder
    serviceFeesDeducted?: SortOrder
    totalOrdersCount?: SortOrder
    channel?: SortOrder
    includedRideIds?: SortOrderInput | SortOrder
    totalRidesCount?: SortOrder
    _count?: SettlementCountOrderByAggregateInput
    _avg?: SettlementAvgOrderByAggregateInput
    _max?: SettlementMaxOrderByAggregateInput
    _min?: SettlementMinOrderByAggregateInput
    _sum?: SettlementSumOrderByAggregateInput
  }

  export type SettlementScalarWhereWithAggregatesInput = {
    AND?: SettlementScalarWhereWithAggregatesInput | SettlementScalarWhereWithAggregatesInput[]
    OR?: SettlementScalarWhereWithAggregatesInput[]
    NOT?: SettlementScalarWhereWithAggregatesInput | SettlementScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Settlement"> | string
    userId?: StringWithAggregatesFilter<"Settlement"> | string
    amount?: DecimalWithAggregatesFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"Settlement"> | string
    status?: EnumSettlementStatusWithAggregatesFilter<"Settlement"> | $Enums.SettlementStatus
    type?: EnumSettlementTypeWithAggregatesFilter<"Settlement"> | $Enums.SettlementType
    reference?: StringWithAggregatesFilter<"Settlement"> | string
    bankAccountId?: StringNullableWithAggregatesFilter<"Settlement"> | string | null
    walletId?: StringNullableWithAggregatesFilter<"Settlement"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"Settlement">
    processedAt?: DateTimeNullableWithAggregatesFilter<"Settlement"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Settlement"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Settlement"> | Date | string
    includedOrderIds?: JsonNullableWithAggregatesFilter<"Settlement">
    netAmountBeforeFees?: DecimalWithAggregatesFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalWithAggregatesFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntWithAggregatesFilter<"Settlement"> | number
    channel?: EnumSettlementChannelWithAggregatesFilter<"Settlement"> | $Enums.SettlementChannel
    includedRideIds?: JsonNullableWithAggregatesFilter<"Settlement">
    totalRidesCount?: IntWithAggregatesFilter<"Settlement"> | number
  }

  export type ProductViewWhereInput = {
    AND?: ProductViewWhereInput | ProductViewWhereInput[]
    OR?: ProductViewWhereInput[]
    NOT?: ProductViewWhereInput | ProductViewWhereInput[]
    id?: StringFilter<"ProductView"> | string
    productId?: StringFilter<"ProductView"> | string
    userId?: StringFilter<"ProductView"> | string
    deviceId?: StringNullableFilter<"ProductView"> | string | null
    ipAddress?: StringNullableFilter<"ProductView"> | string | null
    viewedAt?: DateTimeFilter<"ProductView"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ProductViewOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    viewedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type ProductViewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    productId_userId_deviceId?: ProductViewProductIdUserIdDeviceIdCompoundUniqueInput
    AND?: ProductViewWhereInput | ProductViewWhereInput[]
    OR?: ProductViewWhereInput[]
    NOT?: ProductViewWhereInput | ProductViewWhereInput[]
    productId?: StringFilter<"ProductView"> | string
    userId?: StringFilter<"ProductView"> | string
    deviceId?: StringNullableFilter<"ProductView"> | string | null
    ipAddress?: StringNullableFilter<"ProductView"> | string | null
    viewedAt?: DateTimeFilter<"ProductView"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "productId_userId_deviceId">

  export type ProductViewOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    viewedAt?: SortOrder
    _count?: ProductViewCountOrderByAggregateInput
    _max?: ProductViewMaxOrderByAggregateInput
    _min?: ProductViewMinOrderByAggregateInput
  }

  export type ProductViewScalarWhereWithAggregatesInput = {
    AND?: ProductViewScalarWhereWithAggregatesInput | ProductViewScalarWhereWithAggregatesInput[]
    OR?: ProductViewScalarWhereWithAggregatesInput[]
    NOT?: ProductViewScalarWhereWithAggregatesInput | ProductViewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductView"> | string
    productId?: StringWithAggregatesFilter<"ProductView"> | string
    userId?: StringWithAggregatesFilter<"ProductView"> | string
    deviceId?: StringNullableWithAggregatesFilter<"ProductView"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"ProductView"> | string | null
    viewedAt?: DateTimeWithAggregatesFilter<"ProductView"> | Date | string
  }

  export type ProductOrderInterestWhereInput = {
    AND?: ProductOrderInterestWhereInput | ProductOrderInterestWhereInput[]
    OR?: ProductOrderInterestWhereInput[]
    NOT?: ProductOrderInterestWhereInput | ProductOrderInterestWhereInput[]
    id?: StringFilter<"ProductOrderInterest"> | string
    productId?: StringFilter<"ProductOrderInterest"> | string
    userId?: StringFilter<"ProductOrderInterest"> | string
    quantity?: IntFilter<"ProductOrderInterest"> | number
    originalPrice?: DecimalFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string
    discountPrice?: DecimalNullableFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFilter<"ProductOrderInterest"> | string
    totalAmount?: DecimalFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFilter<"ProductOrderInterest"> | $Enums.OrderInterestStatus
    notes?: StringNullableFilter<"ProductOrderInterest"> | string | null
    preferredDeliveryDate?: DateTimeNullableFilter<"ProductOrderInterest"> | Date | string | null
    deliveryAddress?: StringNullableFilter<"ProductOrderInterest"> | string | null
    contactPhone?: StringNullableFilter<"ProductOrderInterest"> | string | null
    paymentMethod?: StringNullableFilter<"ProductOrderInterest"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"ProductOrderInterest"> | $Enums.PaymentStatus
    createdAt?: DateTimeFilter<"ProductOrderInterest"> | Date | string
    updatedAt?: DateTimeFilter<"ProductOrderInterest"> | Date | string
    expiresAt?: DateTimeNullableFilter<"ProductOrderInterest"> | Date | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ProductOrderInterestOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    quantity?: SortOrder
    originalPrice?: SortOrder
    discountPrice?: SortOrderInput | SortOrder
    currencyCode?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    preferredDeliveryDate?: SortOrderInput | SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    product?: ProductOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type ProductOrderInterestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductOrderInterestWhereInput | ProductOrderInterestWhereInput[]
    OR?: ProductOrderInterestWhereInput[]
    NOT?: ProductOrderInterestWhereInput | ProductOrderInterestWhereInput[]
    productId?: StringFilter<"ProductOrderInterest"> | string
    userId?: StringFilter<"ProductOrderInterest"> | string
    quantity?: IntFilter<"ProductOrderInterest"> | number
    originalPrice?: DecimalFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string
    discountPrice?: DecimalNullableFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFilter<"ProductOrderInterest"> | string
    totalAmount?: DecimalFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFilter<"ProductOrderInterest"> | $Enums.OrderInterestStatus
    notes?: StringNullableFilter<"ProductOrderInterest"> | string | null
    preferredDeliveryDate?: DateTimeNullableFilter<"ProductOrderInterest"> | Date | string | null
    deliveryAddress?: StringNullableFilter<"ProductOrderInterest"> | string | null
    contactPhone?: StringNullableFilter<"ProductOrderInterest"> | string | null
    paymentMethod?: StringNullableFilter<"ProductOrderInterest"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"ProductOrderInterest"> | $Enums.PaymentStatus
    createdAt?: DateTimeFilter<"ProductOrderInterest"> | Date | string
    updatedAt?: DateTimeFilter<"ProductOrderInterest"> | Date | string
    expiresAt?: DateTimeNullableFilter<"ProductOrderInterest"> | Date | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ProductOrderInterestOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    quantity?: SortOrder
    originalPrice?: SortOrder
    discountPrice?: SortOrderInput | SortOrder
    currencyCode?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    preferredDeliveryDate?: SortOrderInput | SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    _count?: ProductOrderInterestCountOrderByAggregateInput
    _avg?: ProductOrderInterestAvgOrderByAggregateInput
    _max?: ProductOrderInterestMaxOrderByAggregateInput
    _min?: ProductOrderInterestMinOrderByAggregateInput
    _sum?: ProductOrderInterestSumOrderByAggregateInput
  }

  export type ProductOrderInterestScalarWhereWithAggregatesInput = {
    AND?: ProductOrderInterestScalarWhereWithAggregatesInput | ProductOrderInterestScalarWhereWithAggregatesInput[]
    OR?: ProductOrderInterestScalarWhereWithAggregatesInput[]
    NOT?: ProductOrderInterestScalarWhereWithAggregatesInput | ProductOrderInterestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductOrderInterest"> | string
    productId?: StringWithAggregatesFilter<"ProductOrderInterest"> | string
    userId?: StringWithAggregatesFilter<"ProductOrderInterest"> | string
    quantity?: IntWithAggregatesFilter<"ProductOrderInterest"> | number
    originalPrice?: DecimalWithAggregatesFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string
    discountPrice?: DecimalNullableWithAggregatesFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringWithAggregatesFilter<"ProductOrderInterest"> | string
    totalAmount?: DecimalWithAggregatesFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusWithAggregatesFilter<"ProductOrderInterest"> | $Enums.OrderInterestStatus
    notes?: StringNullableWithAggregatesFilter<"ProductOrderInterest"> | string | null
    preferredDeliveryDate?: DateTimeNullableWithAggregatesFilter<"ProductOrderInterest"> | Date | string | null
    deliveryAddress?: StringNullableWithAggregatesFilter<"ProductOrderInterest"> | string | null
    contactPhone?: StringNullableWithAggregatesFilter<"ProductOrderInterest"> | string | null
    paymentMethod?: StringNullableWithAggregatesFilter<"ProductOrderInterest"> | string | null
    paymentStatus?: EnumPaymentStatusWithAggregatesFilter<"ProductOrderInterest"> | $Enums.PaymentStatus
    createdAt?: DateTimeWithAggregatesFilter<"ProductOrderInterest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductOrderInterest"> | Date | string
    expiresAt?: DateTimeNullableWithAggregatesFilter<"ProductOrderInterest"> | Date | string | null
  }

  export type OrderItemWhereInput = {
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    productSnapshot?: JsonFilter<"OrderItem">
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFilter<"OrderItem"> | $Enums.OrderItemStatus
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"OrderItem"> | Date | string
    order?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type OrderItemOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    productSnapshot?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    order?: ordersOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type OrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    productSnapshot?: JsonFilter<"OrderItem">
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFilter<"OrderItem"> | $Enums.OrderItemStatus
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"OrderItem"> | Date | string
    order?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type OrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    productSnapshot?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderItemCountOrderByAggregateInput
    _avg?: OrderItemAvgOrderByAggregateInput
    _max?: OrderItemMaxOrderByAggregateInput
    _min?: OrderItemMinOrderByAggregateInput
    _sum?: OrderItemSumOrderByAggregateInput
  }

  export type OrderItemScalarWhereWithAggregatesInput = {
    AND?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    OR?: OrderItemScalarWhereWithAggregatesInput[]
    NOT?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderItem"> | string
    orderId?: StringWithAggregatesFilter<"OrderItem"> | string
    productId?: StringWithAggregatesFilter<"OrderItem"> | string
    productSnapshot?: JsonWithAggregatesFilter<"OrderItem">
    quantity?: IntWithAggregatesFilter<"OrderItem"> | number
    unitPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusWithAggregatesFilter<"OrderItem"> | $Enums.OrderItemStatus
    createdAt?: DateTimeWithAggregatesFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OrderItem"> | Date | string
  }

  export type ExternalTransactionWhereInput = {
    AND?: ExternalTransactionWhereInput | ExternalTransactionWhereInput[]
    OR?: ExternalTransactionWhereInput[]
    NOT?: ExternalTransactionWhereInput | ExternalTransactionWhereInput[]
    id?: StringFilter<"ExternalTransaction"> | string
    orderId?: StringNullableFilter<"ExternalTransaction"> | string | null
    customerId?: StringFilter<"ExternalTransaction"> | string
    sellerId?: StringFilter<"ExternalTransaction"> | string
    paymentMethodId?: StringNullableFilter<"ExternalTransaction"> | string | null
    gatewayProvider?: StringFilter<"ExternalTransaction"> | string
    gatewayTransactionId?: StringNullableFilter<"ExternalTransaction"> | string | null
    paymentReference?: StringNullableFilter<"ExternalTransaction"> | string | null
    amount?: DecimalFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"ExternalTransaction"> | string
    gatewayChargeFees?: DecimalNullableFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFilter<"ExternalTransaction"> | boolean
    gatewayResponse?: JsonNullableFilter<"ExternalTransaction">
    gatewayRequest?: JsonNullableFilter<"ExternalTransaction">
    status?: EnumTransactionStatusFilter<"ExternalTransaction"> | $Enums.TransactionStatus
    failureReason?: StringNullableFilter<"ExternalTransaction"> | string | null
    processedAt?: DateTimeNullableFilter<"ExternalTransaction"> | Date | string | null
    createdAt?: DateTimeFilter<"ExternalTransaction"> | Date | string
    updatedAt?: DateTimeFilter<"ExternalTransaction"> | Date | string
    appTransactionId?: StringFilter<"ExternalTransaction"> | string
    processedAmount?: DecimalNullableFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFilter<"ExternalTransaction"> | $Enums.TransactionType
    appService?: EnumAppServiceFilter<"ExternalTransaction"> | $Enums.AppService
    rideRequestId?: StringNullableFilter<"ExternalTransaction"> | string | null
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    order?: XOR<OrdersNullableScalarRelationFilter, ordersWhereInput> | null
    paymentMethod?: XOR<PaymentMethodNullableScalarRelationFilter, PaymentMethodWhereInput> | null
    rideRequest?: XOR<RideRequestNullableScalarRelationFilter, RideRequestWhereInput> | null
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ExternalTransactionOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    customerId?: SortOrder
    sellerId?: SortOrder
    paymentMethodId?: SortOrderInput | SortOrder
    gatewayProvider?: SortOrder
    gatewayTransactionId?: SortOrderInput | SortOrder
    paymentReference?: SortOrderInput | SortOrder
    amount?: SortOrder
    currencyCode?: SortOrder
    gatewayChargeFees?: SortOrderInput | SortOrder
    paidThroughGateway?: SortOrder
    gatewayResponse?: SortOrderInput | SortOrder
    gatewayRequest?: SortOrderInput | SortOrder
    status?: SortOrder
    failureReason?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    appTransactionId?: SortOrder
    processedAmount?: SortOrderInput | SortOrder
    transactionType?: SortOrder
    appService?: SortOrder
    rideRequestId?: SortOrderInput | SortOrder
    customer?: UserOrderByWithRelationInput
    order?: ordersOrderByWithRelationInput
    paymentMethod?: PaymentMethodOrderByWithRelationInput
    rideRequest?: RideRequestOrderByWithRelationInput
    seller?: UserOrderByWithRelationInput
  }

  export type ExternalTransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ExternalTransactionWhereInput | ExternalTransactionWhereInput[]
    OR?: ExternalTransactionWhereInput[]
    NOT?: ExternalTransactionWhereInput | ExternalTransactionWhereInput[]
    orderId?: StringNullableFilter<"ExternalTransaction"> | string | null
    customerId?: StringFilter<"ExternalTransaction"> | string
    sellerId?: StringFilter<"ExternalTransaction"> | string
    paymentMethodId?: StringNullableFilter<"ExternalTransaction"> | string | null
    gatewayProvider?: StringFilter<"ExternalTransaction"> | string
    gatewayTransactionId?: StringNullableFilter<"ExternalTransaction"> | string | null
    paymentReference?: StringNullableFilter<"ExternalTransaction"> | string | null
    amount?: DecimalFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"ExternalTransaction"> | string
    gatewayChargeFees?: DecimalNullableFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFilter<"ExternalTransaction"> | boolean
    gatewayResponse?: JsonNullableFilter<"ExternalTransaction">
    gatewayRequest?: JsonNullableFilter<"ExternalTransaction">
    status?: EnumTransactionStatusFilter<"ExternalTransaction"> | $Enums.TransactionStatus
    failureReason?: StringNullableFilter<"ExternalTransaction"> | string | null
    processedAt?: DateTimeNullableFilter<"ExternalTransaction"> | Date | string | null
    createdAt?: DateTimeFilter<"ExternalTransaction"> | Date | string
    updatedAt?: DateTimeFilter<"ExternalTransaction"> | Date | string
    appTransactionId?: StringFilter<"ExternalTransaction"> | string
    processedAmount?: DecimalNullableFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFilter<"ExternalTransaction"> | $Enums.TransactionType
    appService?: EnumAppServiceFilter<"ExternalTransaction"> | $Enums.AppService
    rideRequestId?: StringNullableFilter<"ExternalTransaction"> | string | null
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    order?: XOR<OrdersNullableScalarRelationFilter, ordersWhereInput> | null
    paymentMethod?: XOR<PaymentMethodNullableScalarRelationFilter, PaymentMethodWhereInput> | null
    rideRequest?: XOR<RideRequestNullableScalarRelationFilter, RideRequestWhereInput> | null
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ExternalTransactionOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    customerId?: SortOrder
    sellerId?: SortOrder
    paymentMethodId?: SortOrderInput | SortOrder
    gatewayProvider?: SortOrder
    gatewayTransactionId?: SortOrderInput | SortOrder
    paymentReference?: SortOrderInput | SortOrder
    amount?: SortOrder
    currencyCode?: SortOrder
    gatewayChargeFees?: SortOrderInput | SortOrder
    paidThroughGateway?: SortOrder
    gatewayResponse?: SortOrderInput | SortOrder
    gatewayRequest?: SortOrderInput | SortOrder
    status?: SortOrder
    failureReason?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    appTransactionId?: SortOrder
    processedAmount?: SortOrderInput | SortOrder
    transactionType?: SortOrder
    appService?: SortOrder
    rideRequestId?: SortOrderInput | SortOrder
    _count?: ExternalTransactionCountOrderByAggregateInput
    _avg?: ExternalTransactionAvgOrderByAggregateInput
    _max?: ExternalTransactionMaxOrderByAggregateInput
    _min?: ExternalTransactionMinOrderByAggregateInput
    _sum?: ExternalTransactionSumOrderByAggregateInput
  }

  export type ExternalTransactionScalarWhereWithAggregatesInput = {
    AND?: ExternalTransactionScalarWhereWithAggregatesInput | ExternalTransactionScalarWhereWithAggregatesInput[]
    OR?: ExternalTransactionScalarWhereWithAggregatesInput[]
    NOT?: ExternalTransactionScalarWhereWithAggregatesInput | ExternalTransactionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ExternalTransaction"> | string
    orderId?: StringNullableWithAggregatesFilter<"ExternalTransaction"> | string | null
    customerId?: StringWithAggregatesFilter<"ExternalTransaction"> | string
    sellerId?: StringWithAggregatesFilter<"ExternalTransaction"> | string
    paymentMethodId?: StringNullableWithAggregatesFilter<"ExternalTransaction"> | string | null
    gatewayProvider?: StringWithAggregatesFilter<"ExternalTransaction"> | string
    gatewayTransactionId?: StringNullableWithAggregatesFilter<"ExternalTransaction"> | string | null
    paymentReference?: StringNullableWithAggregatesFilter<"ExternalTransaction"> | string | null
    amount?: DecimalWithAggregatesFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringWithAggregatesFilter<"ExternalTransaction"> | string
    gatewayChargeFees?: DecimalNullableWithAggregatesFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolWithAggregatesFilter<"ExternalTransaction"> | boolean
    gatewayResponse?: JsonNullableWithAggregatesFilter<"ExternalTransaction">
    gatewayRequest?: JsonNullableWithAggregatesFilter<"ExternalTransaction">
    status?: EnumTransactionStatusWithAggregatesFilter<"ExternalTransaction"> | $Enums.TransactionStatus
    failureReason?: StringNullableWithAggregatesFilter<"ExternalTransaction"> | string | null
    processedAt?: DateTimeNullableWithAggregatesFilter<"ExternalTransaction"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ExternalTransaction"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ExternalTransaction"> | Date | string
    appTransactionId?: StringWithAggregatesFilter<"ExternalTransaction"> | string
    processedAmount?: DecimalNullableWithAggregatesFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeWithAggregatesFilter<"ExternalTransaction"> | $Enums.TransactionType
    appService?: EnumAppServiceWithAggregatesFilter<"ExternalTransaction"> | $Enums.AppService
    rideRequestId?: StringNullableWithAggregatesFilter<"ExternalTransaction"> | string | null
  }

  export type UCPWhereInput = {
    AND?: UCPWhereInput | UCPWhereInput[]
    OR?: UCPWhereInput[]
    NOT?: UCPWhereInput | UCPWhereInput[]
    id?: StringFilter<"UCP"> | string
    name?: StringFilter<"UCP"> | string
    value?: DecimalFilter<"UCP"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"UCP"> | string | null
    serviceType?: StringNullableFilter<"UCP"> | string | null
    isActive?: BoolFilter<"UCP"> | boolean
    metadata?: JsonNullableFilter<"UCP">
    createdAt?: DateTimeFilter<"UCP"> | Date | string
    updatedAt?: DateTimeFilter<"UCP"> | Date | string
    createdBy?: StringNullableFilter<"UCP"> | string | null
  }

  export type UCPOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    description?: SortOrderInput | SortOrder
    serviceType?: SortOrderInput | SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
  }

  export type UCPWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: UCPWhereInput | UCPWhereInput[]
    OR?: UCPWhereInput[]
    NOT?: UCPWhereInput | UCPWhereInput[]
    value?: DecimalFilter<"UCP"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"UCP"> | string | null
    serviceType?: StringNullableFilter<"UCP"> | string | null
    isActive?: BoolFilter<"UCP"> | boolean
    metadata?: JsonNullableFilter<"UCP">
    createdAt?: DateTimeFilter<"UCP"> | Date | string
    updatedAt?: DateTimeFilter<"UCP"> | Date | string
    createdBy?: StringNullableFilter<"UCP"> | string | null
  }, "id" | "name">

  export type UCPOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    description?: SortOrderInput | SortOrder
    serviceType?: SortOrderInput | SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: UCPCountOrderByAggregateInput
    _avg?: UCPAvgOrderByAggregateInput
    _max?: UCPMaxOrderByAggregateInput
    _min?: UCPMinOrderByAggregateInput
    _sum?: UCPSumOrderByAggregateInput
  }

  export type UCPScalarWhereWithAggregatesInput = {
    AND?: UCPScalarWhereWithAggregatesInput | UCPScalarWhereWithAggregatesInput[]
    OR?: UCPScalarWhereWithAggregatesInput[]
    NOT?: UCPScalarWhereWithAggregatesInput | UCPScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UCP"> | string
    name?: StringWithAggregatesFilter<"UCP"> | string
    value?: DecimalWithAggregatesFilter<"UCP"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableWithAggregatesFilter<"UCP"> | string | null
    serviceType?: StringNullableWithAggregatesFilter<"UCP"> | string | null
    isActive?: BoolWithAggregatesFilter<"UCP"> | boolean
    metadata?: JsonNullableWithAggregatesFilter<"UCP">
    createdAt?: DateTimeWithAggregatesFilter<"UCP"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UCP"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"UCP"> | string | null
  }

  export type RiderApplicationWhereInput = {
    AND?: RiderApplicationWhereInput | RiderApplicationWhereInput[]
    OR?: RiderApplicationWhereInput[]
    NOT?: RiderApplicationWhereInput | RiderApplicationWhereInput[]
    id?: StringFilter<"RiderApplication"> | string
    userId?: StringFilter<"RiderApplication"> | string
    vehicleType?: EnumRiderVehicleTypeFilter<"RiderApplication"> | $Enums.RiderVehicleType
    firstName?: StringFilter<"RiderApplication"> | string
    lastName?: StringFilter<"RiderApplication"> | string
    email?: StringNullableFilter<"RiderApplication"> | string | null
    phoneNumber?: StringFilter<"RiderApplication"> | string
    dateOfBirth?: StringNullableFilter<"RiderApplication"> | string | null
    address?: StringFilter<"RiderApplication"> | string
    city?: StringFilter<"RiderApplication"> | string
    licenseNumber?: StringFilter<"RiderApplication"> | string
    licenseExpiry?: StringFilter<"RiderApplication"> | string
    vehicleModel?: StringFilter<"RiderApplication"> | string
    vehiclePlate?: StringFilter<"RiderApplication"> | string
    insuranceNumber?: StringNullableFilter<"RiderApplication"> | string | null
    insuranceExpiry?: StringNullableFilter<"RiderApplication"> | string | null
    emergencyContact?: StringNullableFilter<"RiderApplication"> | string | null
    emergencyPhone?: StringNullableFilter<"RiderApplication"> | string | null
    experience?: StringNullableFilter<"RiderApplication"> | string | null
    availability?: StringNullableFilter<"RiderApplication"> | string | null
    status?: EnumRiderApplicationStatusFilter<"RiderApplication"> | $Enums.RiderApplicationStatus
    rejectionReason?: StringNullableFilter<"RiderApplication"> | string | null
    reviewedBy?: StringNullableFilter<"RiderApplication"> | string | null
    reviewedAt?: DateTimeNullableFilter<"RiderApplication"> | Date | string | null
    approvedAt?: DateTimeNullableFilter<"RiderApplication"> | Date | string | null
    createdAt?: DateTimeFilter<"RiderApplication"> | Date | string
    updatedAt?: DateTimeFilter<"RiderApplication"> | Date | string
    driver?: XOR<DriverNullableScalarRelationFilter, DriverWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    documents?: RiderDocumentListRelationFilter
  }

  export type RiderApplicationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    vehicleType?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrderInput | SortOrder
    phoneNumber?: SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrder
    licenseNumber?: SortOrder
    licenseExpiry?: SortOrder
    vehicleModel?: SortOrder
    vehiclePlate?: SortOrder
    insuranceNumber?: SortOrderInput | SortOrder
    insuranceExpiry?: SortOrderInput | SortOrder
    emergencyContact?: SortOrderInput | SortOrder
    emergencyPhone?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    status?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driver?: DriverOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    documents?: RiderDocumentOrderByRelationAggregateInput
  }

  export type RiderApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RiderApplicationWhereInput | RiderApplicationWhereInput[]
    OR?: RiderApplicationWhereInput[]
    NOT?: RiderApplicationWhereInput | RiderApplicationWhereInput[]
    userId?: StringFilter<"RiderApplication"> | string
    vehicleType?: EnumRiderVehicleTypeFilter<"RiderApplication"> | $Enums.RiderVehicleType
    firstName?: StringFilter<"RiderApplication"> | string
    lastName?: StringFilter<"RiderApplication"> | string
    email?: StringNullableFilter<"RiderApplication"> | string | null
    phoneNumber?: StringFilter<"RiderApplication"> | string
    dateOfBirth?: StringNullableFilter<"RiderApplication"> | string | null
    address?: StringFilter<"RiderApplication"> | string
    city?: StringFilter<"RiderApplication"> | string
    licenseNumber?: StringFilter<"RiderApplication"> | string
    licenseExpiry?: StringFilter<"RiderApplication"> | string
    vehicleModel?: StringFilter<"RiderApplication"> | string
    vehiclePlate?: StringFilter<"RiderApplication"> | string
    insuranceNumber?: StringNullableFilter<"RiderApplication"> | string | null
    insuranceExpiry?: StringNullableFilter<"RiderApplication"> | string | null
    emergencyContact?: StringNullableFilter<"RiderApplication"> | string | null
    emergencyPhone?: StringNullableFilter<"RiderApplication"> | string | null
    experience?: StringNullableFilter<"RiderApplication"> | string | null
    availability?: StringNullableFilter<"RiderApplication"> | string | null
    status?: EnumRiderApplicationStatusFilter<"RiderApplication"> | $Enums.RiderApplicationStatus
    rejectionReason?: StringNullableFilter<"RiderApplication"> | string | null
    reviewedBy?: StringNullableFilter<"RiderApplication"> | string | null
    reviewedAt?: DateTimeNullableFilter<"RiderApplication"> | Date | string | null
    approvedAt?: DateTimeNullableFilter<"RiderApplication"> | Date | string | null
    createdAt?: DateTimeFilter<"RiderApplication"> | Date | string
    updatedAt?: DateTimeFilter<"RiderApplication"> | Date | string
    driver?: XOR<DriverNullableScalarRelationFilter, DriverWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    documents?: RiderDocumentListRelationFilter
  }, "id">

  export type RiderApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    vehicleType?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrderInput | SortOrder
    phoneNumber?: SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrder
    licenseNumber?: SortOrder
    licenseExpiry?: SortOrder
    vehicleModel?: SortOrder
    vehiclePlate?: SortOrder
    insuranceNumber?: SortOrderInput | SortOrder
    insuranceExpiry?: SortOrderInput | SortOrder
    emergencyContact?: SortOrderInput | SortOrder
    emergencyPhone?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    status?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RiderApplicationCountOrderByAggregateInput
    _max?: RiderApplicationMaxOrderByAggregateInput
    _min?: RiderApplicationMinOrderByAggregateInput
  }

  export type RiderApplicationScalarWhereWithAggregatesInput = {
    AND?: RiderApplicationScalarWhereWithAggregatesInput | RiderApplicationScalarWhereWithAggregatesInput[]
    OR?: RiderApplicationScalarWhereWithAggregatesInput[]
    NOT?: RiderApplicationScalarWhereWithAggregatesInput | RiderApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RiderApplication"> | string
    userId?: StringWithAggregatesFilter<"RiderApplication"> | string
    vehicleType?: EnumRiderVehicleTypeWithAggregatesFilter<"RiderApplication"> | $Enums.RiderVehicleType
    firstName?: StringWithAggregatesFilter<"RiderApplication"> | string
    lastName?: StringWithAggregatesFilter<"RiderApplication"> | string
    email?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    phoneNumber?: StringWithAggregatesFilter<"RiderApplication"> | string
    dateOfBirth?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    address?: StringWithAggregatesFilter<"RiderApplication"> | string
    city?: StringWithAggregatesFilter<"RiderApplication"> | string
    licenseNumber?: StringWithAggregatesFilter<"RiderApplication"> | string
    licenseExpiry?: StringWithAggregatesFilter<"RiderApplication"> | string
    vehicleModel?: StringWithAggregatesFilter<"RiderApplication"> | string
    vehiclePlate?: StringWithAggregatesFilter<"RiderApplication"> | string
    insuranceNumber?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    insuranceExpiry?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    emergencyContact?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    emergencyPhone?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    experience?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    availability?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    status?: EnumRiderApplicationStatusWithAggregatesFilter<"RiderApplication"> | $Enums.RiderApplicationStatus
    rejectionReason?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    reviewedBy?: StringNullableWithAggregatesFilter<"RiderApplication"> | string | null
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"RiderApplication"> | Date | string | null
    approvedAt?: DateTimeNullableWithAggregatesFilter<"RiderApplication"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RiderApplication"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RiderApplication"> | Date | string
  }

  export type RiderDocumentWhereInput = {
    AND?: RiderDocumentWhereInput | RiderDocumentWhereInput[]
    OR?: RiderDocumentWhereInput[]
    NOT?: RiderDocumentWhereInput | RiderDocumentWhereInput[]
    id?: StringFilter<"RiderDocument"> | string
    riderApplicationId?: StringFilter<"RiderDocument"> | string
    documentType?: StringFilter<"RiderDocument"> | string
    fileName?: StringFilter<"RiderDocument"> | string
    fileUrl?: StringFilter<"RiderDocument"> | string
    fileSize?: IntNullableFilter<"RiderDocument"> | number | null
    mimeType?: StringNullableFilter<"RiderDocument"> | string | null
    uploadedAt?: DateTimeFilter<"RiderDocument"> | Date | string
    riderApplication?: XOR<RiderApplicationScalarRelationFilter, RiderApplicationWhereInput>
  }

  export type RiderDocumentOrderByWithRelationInput = {
    id?: SortOrder
    riderApplicationId?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    uploadedAt?: SortOrder
    riderApplication?: RiderApplicationOrderByWithRelationInput
  }

  export type RiderDocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RiderDocumentWhereInput | RiderDocumentWhereInput[]
    OR?: RiderDocumentWhereInput[]
    NOT?: RiderDocumentWhereInput | RiderDocumentWhereInput[]
    riderApplicationId?: StringFilter<"RiderDocument"> | string
    documentType?: StringFilter<"RiderDocument"> | string
    fileName?: StringFilter<"RiderDocument"> | string
    fileUrl?: StringFilter<"RiderDocument"> | string
    fileSize?: IntNullableFilter<"RiderDocument"> | number | null
    mimeType?: StringNullableFilter<"RiderDocument"> | string | null
    uploadedAt?: DateTimeFilter<"RiderDocument"> | Date | string
    riderApplication?: XOR<RiderApplicationScalarRelationFilter, RiderApplicationWhereInput>
  }, "id">

  export type RiderDocumentOrderByWithAggregationInput = {
    id?: SortOrder
    riderApplicationId?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    uploadedAt?: SortOrder
    _count?: RiderDocumentCountOrderByAggregateInput
    _avg?: RiderDocumentAvgOrderByAggregateInput
    _max?: RiderDocumentMaxOrderByAggregateInput
    _min?: RiderDocumentMinOrderByAggregateInput
    _sum?: RiderDocumentSumOrderByAggregateInput
  }

  export type RiderDocumentScalarWhereWithAggregatesInput = {
    AND?: RiderDocumentScalarWhereWithAggregatesInput | RiderDocumentScalarWhereWithAggregatesInput[]
    OR?: RiderDocumentScalarWhereWithAggregatesInput[]
    NOT?: RiderDocumentScalarWhereWithAggregatesInput | RiderDocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RiderDocument"> | string
    riderApplicationId?: StringWithAggregatesFilter<"RiderDocument"> | string
    documentType?: StringWithAggregatesFilter<"RiderDocument"> | string
    fileName?: StringWithAggregatesFilter<"RiderDocument"> | string
    fileUrl?: StringWithAggregatesFilter<"RiderDocument"> | string
    fileSize?: IntNullableWithAggregatesFilter<"RiderDocument"> | number | null
    mimeType?: StringNullableWithAggregatesFilter<"RiderDocument"> | string | null
    uploadedAt?: DateTimeWithAggregatesFilter<"RiderDocument"> | Date | string
  }

  export type DriverWhereInput = {
    AND?: DriverWhereInput | DriverWhereInput[]
    OR?: DriverWhereInput[]
    NOT?: DriverWhereInput | DriverWhereInput[]
    id?: StringFilter<"Driver"> | string
    userId?: StringFilter<"Driver"> | string
    riderApplicationId?: StringFilter<"Driver"> | string
    driverId?: StringFilter<"Driver"> | string
    isOnline?: BoolFilter<"Driver"> | boolean
    status?: EnumDriverStatusFilter<"Driver"> | $Enums.DriverStatus
    currentLocation?: JsonNullableFilter<"Driver">
    lastLocationUpdate?: DateTimeNullableFilter<"Driver"> | Date | string | null
    totalRides?: IntFilter<"Driver"> | number
    totalEarnings?: DecimalFilter<"Driver"> | Decimal | DecimalJsLike | number | string
    rating?: DecimalNullableFilter<"Driver"> | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFilter<"Driver"> | number
    vehicleInfo?: JsonNullableFilter<"Driver">
    documents?: JsonNullableFilter<"Driver">
    preferences?: JsonNullableFilter<"Driver">
    isVerified?: BoolFilter<"Driver"> | boolean
    isActive?: BoolFilter<"Driver"> | boolean
    createdAt?: DateTimeFilter<"Driver"> | Date | string
    updatedAt?: DateTimeFilter<"Driver"> | Date | string
    rideServiceId?: StringNullableFilter<"Driver"> | string | null
    updatedBy?: StringNullableFilter<"Driver"> | string | null
    earnings?: DriverEarningListRelationFilter
    locationHistory?: DriverLocationListRelationFilter
    rideService?: XOR<RideServiceNullableScalarRelationFilter, RideServiceWhereInput> | null
    riderApplication?: XOR<RiderApplicationScalarRelationFilter, RiderApplicationWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    rideRequests?: RideRequestListRelationFilter
    rides?: RideListRelationFilter
  }

  export type DriverOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    riderApplicationId?: SortOrder
    driverId?: SortOrder
    isOnline?: SortOrder
    status?: SortOrder
    currentLocation?: SortOrderInput | SortOrder
    lastLocationUpdate?: SortOrderInput | SortOrder
    totalRides?: SortOrder
    totalEarnings?: SortOrder
    rating?: SortOrderInput | SortOrder
    ratingCount?: SortOrder
    vehicleInfo?: SortOrderInput | SortOrder
    documents?: SortOrderInput | SortOrder
    preferences?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    earnings?: DriverEarningOrderByRelationAggregateInput
    locationHistory?: DriverLocationOrderByRelationAggregateInput
    rideService?: RideServiceOrderByWithRelationInput
    riderApplication?: RiderApplicationOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    rideRequests?: RideRequestOrderByRelationAggregateInput
    rides?: RideOrderByRelationAggregateInput
  }

  export type DriverWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    riderApplicationId?: string
    driverId?: string
    AND?: DriverWhereInput | DriverWhereInput[]
    OR?: DriverWhereInput[]
    NOT?: DriverWhereInput | DriverWhereInput[]
    isOnline?: BoolFilter<"Driver"> | boolean
    status?: EnumDriverStatusFilter<"Driver"> | $Enums.DriverStatus
    currentLocation?: JsonNullableFilter<"Driver">
    lastLocationUpdate?: DateTimeNullableFilter<"Driver"> | Date | string | null
    totalRides?: IntFilter<"Driver"> | number
    totalEarnings?: DecimalFilter<"Driver"> | Decimal | DecimalJsLike | number | string
    rating?: DecimalNullableFilter<"Driver"> | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFilter<"Driver"> | number
    vehicleInfo?: JsonNullableFilter<"Driver">
    documents?: JsonNullableFilter<"Driver">
    preferences?: JsonNullableFilter<"Driver">
    isVerified?: BoolFilter<"Driver"> | boolean
    isActive?: BoolFilter<"Driver"> | boolean
    createdAt?: DateTimeFilter<"Driver"> | Date | string
    updatedAt?: DateTimeFilter<"Driver"> | Date | string
    rideServiceId?: StringNullableFilter<"Driver"> | string | null
    updatedBy?: StringNullableFilter<"Driver"> | string | null
    earnings?: DriverEarningListRelationFilter
    locationHistory?: DriverLocationListRelationFilter
    rideService?: XOR<RideServiceNullableScalarRelationFilter, RideServiceWhereInput> | null
    riderApplication?: XOR<RiderApplicationScalarRelationFilter, RiderApplicationWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    rideRequests?: RideRequestListRelationFilter
    rides?: RideListRelationFilter
  }, "id" | "userId" | "riderApplicationId" | "driverId">

  export type DriverOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    riderApplicationId?: SortOrder
    driverId?: SortOrder
    isOnline?: SortOrder
    status?: SortOrder
    currentLocation?: SortOrderInput | SortOrder
    lastLocationUpdate?: SortOrderInput | SortOrder
    totalRides?: SortOrder
    totalEarnings?: SortOrder
    rating?: SortOrderInput | SortOrder
    ratingCount?: SortOrder
    vehicleInfo?: SortOrderInput | SortOrder
    documents?: SortOrderInput | SortOrder
    preferences?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: DriverCountOrderByAggregateInput
    _avg?: DriverAvgOrderByAggregateInput
    _max?: DriverMaxOrderByAggregateInput
    _min?: DriverMinOrderByAggregateInput
    _sum?: DriverSumOrderByAggregateInput
  }

  export type DriverScalarWhereWithAggregatesInput = {
    AND?: DriverScalarWhereWithAggregatesInput | DriverScalarWhereWithAggregatesInput[]
    OR?: DriverScalarWhereWithAggregatesInput[]
    NOT?: DriverScalarWhereWithAggregatesInput | DriverScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Driver"> | string
    userId?: StringWithAggregatesFilter<"Driver"> | string
    riderApplicationId?: StringWithAggregatesFilter<"Driver"> | string
    driverId?: StringWithAggregatesFilter<"Driver"> | string
    isOnline?: BoolWithAggregatesFilter<"Driver"> | boolean
    status?: EnumDriverStatusWithAggregatesFilter<"Driver"> | $Enums.DriverStatus
    currentLocation?: JsonNullableWithAggregatesFilter<"Driver">
    lastLocationUpdate?: DateTimeNullableWithAggregatesFilter<"Driver"> | Date | string | null
    totalRides?: IntWithAggregatesFilter<"Driver"> | number
    totalEarnings?: DecimalWithAggregatesFilter<"Driver"> | Decimal | DecimalJsLike | number | string
    rating?: DecimalNullableWithAggregatesFilter<"Driver"> | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntWithAggregatesFilter<"Driver"> | number
    vehicleInfo?: JsonNullableWithAggregatesFilter<"Driver">
    documents?: JsonNullableWithAggregatesFilter<"Driver">
    preferences?: JsonNullableWithAggregatesFilter<"Driver">
    isVerified?: BoolWithAggregatesFilter<"Driver"> | boolean
    isActive?: BoolWithAggregatesFilter<"Driver"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Driver"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Driver"> | Date | string
    rideServiceId?: StringNullableWithAggregatesFilter<"Driver"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Driver"> | string | null
  }

  export type DriverLocationWhereInput = {
    AND?: DriverLocationWhereInput | DriverLocationWhereInput[]
    OR?: DriverLocationWhereInput[]
    NOT?: DriverLocationWhereInput | DriverLocationWhereInput[]
    id?: StringFilter<"DriverLocation"> | string
    driverId?: StringFilter<"DriverLocation"> | string
    latitude?: FloatFilter<"DriverLocation"> | number
    longitude?: FloatFilter<"DriverLocation"> | number
    address?: StringNullableFilter<"DriverLocation"> | string | null
    accuracy?: FloatNullableFilter<"DriverLocation"> | number | null
    speed?: FloatNullableFilter<"DriverLocation"> | number | null
    heading?: FloatNullableFilter<"DriverLocation"> | number | null
    timestamp?: DateTimeFilter<"DriverLocation"> | Date | string
    driver?: XOR<DriverScalarRelationFilter, DriverWhereInput>
  }

  export type DriverLocationOrderByWithRelationInput = {
    id?: SortOrder
    driverId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    address?: SortOrderInput | SortOrder
    accuracy?: SortOrderInput | SortOrder
    speed?: SortOrderInput | SortOrder
    heading?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    driver?: DriverOrderByWithRelationInput
  }

  export type DriverLocationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DriverLocationWhereInput | DriverLocationWhereInput[]
    OR?: DriverLocationWhereInput[]
    NOT?: DriverLocationWhereInput | DriverLocationWhereInput[]
    driverId?: StringFilter<"DriverLocation"> | string
    latitude?: FloatFilter<"DriverLocation"> | number
    longitude?: FloatFilter<"DriverLocation"> | number
    address?: StringNullableFilter<"DriverLocation"> | string | null
    accuracy?: FloatNullableFilter<"DriverLocation"> | number | null
    speed?: FloatNullableFilter<"DriverLocation"> | number | null
    heading?: FloatNullableFilter<"DriverLocation"> | number | null
    timestamp?: DateTimeFilter<"DriverLocation"> | Date | string
    driver?: XOR<DriverScalarRelationFilter, DriverWhereInput>
  }, "id">

  export type DriverLocationOrderByWithAggregationInput = {
    id?: SortOrder
    driverId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    address?: SortOrderInput | SortOrder
    accuracy?: SortOrderInput | SortOrder
    speed?: SortOrderInput | SortOrder
    heading?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: DriverLocationCountOrderByAggregateInput
    _avg?: DriverLocationAvgOrderByAggregateInput
    _max?: DriverLocationMaxOrderByAggregateInput
    _min?: DriverLocationMinOrderByAggregateInput
    _sum?: DriverLocationSumOrderByAggregateInput
  }

  export type DriverLocationScalarWhereWithAggregatesInput = {
    AND?: DriverLocationScalarWhereWithAggregatesInput | DriverLocationScalarWhereWithAggregatesInput[]
    OR?: DriverLocationScalarWhereWithAggregatesInput[]
    NOT?: DriverLocationScalarWhereWithAggregatesInput | DriverLocationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DriverLocation"> | string
    driverId?: StringWithAggregatesFilter<"DriverLocation"> | string
    latitude?: FloatWithAggregatesFilter<"DriverLocation"> | number
    longitude?: FloatWithAggregatesFilter<"DriverLocation"> | number
    address?: StringNullableWithAggregatesFilter<"DriverLocation"> | string | null
    accuracy?: FloatNullableWithAggregatesFilter<"DriverLocation"> | number | null
    speed?: FloatNullableWithAggregatesFilter<"DriverLocation"> | number | null
    heading?: FloatNullableWithAggregatesFilter<"DriverLocation"> | number | null
    timestamp?: DateTimeWithAggregatesFilter<"DriverLocation"> | Date | string
  }

  export type RideRequestWhereInput = {
    AND?: RideRequestWhereInput | RideRequestWhereInput[]
    OR?: RideRequestWhereInput[]
    NOT?: RideRequestWhereInput | RideRequestWhereInput[]
    id?: StringFilter<"RideRequest"> | string
    requestId?: StringFilter<"RideRequest"> | string
    customerId?: StringFilter<"RideRequest"> | string
    driverId?: StringNullableFilter<"RideRequest"> | string | null
    pickupLocation?: JsonFilter<"RideRequest">
    destinationLocation?: JsonFilter<"RideRequest">
    rideType?: EnumRideTypeFilter<"RideRequest"> | $Enums.RideType
    estimatedDistance?: FloatNullableFilter<"RideRequest"> | number | null
    estimatedDuration?: IntNullableFilter<"RideRequest"> | number | null
    estimatedPrice?: DecimalFilter<"RideRequest"> | Decimal | DecimalJsLike | number | string
    actualPrice?: DecimalNullableFilter<"RideRequest"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFilter<"RideRequest"> | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFilter<"RideRequest"> | $Enums.RidePaymentMethod
    customerNotes?: StringNullableFilter<"RideRequest"> | string | null
    driverNotes?: StringNullableFilter<"RideRequest"> | string | null
    requestedAt?: DateTimeFilter<"RideRequest"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    startedAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    cancelledBy?: StringNullableFilter<"RideRequest"> | string | null
    cancellationReason?: StringNullableFilter<"RideRequest"> | string | null
    expiresAt?: DateTimeFilter<"RideRequest"> | Date | string
    createdAt?: DateTimeFilter<"RideRequest"> | Date | string
    updatedAt?: DateTimeFilter<"RideRequest"> | Date | string
    rideServiceId?: StringNullableFilter<"RideRequest"> | string | null
    currency?: StringFilter<"RideRequest"> | string
    currencySymbol?: StringFilter<"RideRequest"> | string
    externalTransactions?: ExternalTransactionListRelationFilter
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    driver?: XOR<DriverNullableScalarRelationFilter, DriverWhereInput> | null
    rideService?: XOR<RideServiceNullableScalarRelationFilter, RideServiceWhereInput> | null
    ride?: XOR<RideNullableScalarRelationFilter, RideWhereInput> | null
  }

  export type RideRequestOrderByWithRelationInput = {
    id?: SortOrder
    requestId?: SortOrder
    customerId?: SortOrder
    driverId?: SortOrderInput | SortOrder
    pickupLocation?: SortOrder
    destinationLocation?: SortOrder
    rideType?: SortOrder
    estimatedDistance?: SortOrderInput | SortOrder
    estimatedDuration?: SortOrderInput | SortOrder
    estimatedPrice?: SortOrder
    actualPrice?: SortOrderInput | SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    customerNotes?: SortOrderInput | SortOrder
    driverNotes?: SortOrderInput | SortOrder
    requestedAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    cancelledBy?: SortOrderInput | SortOrder
    cancellationReason?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrderInput | SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    externalTransactions?: ExternalTransactionOrderByRelationAggregateInput
    customer?: UserOrderByWithRelationInput
    driver?: DriverOrderByWithRelationInput
    rideService?: RideServiceOrderByWithRelationInput
    ride?: RideOrderByWithRelationInput
  }

  export type RideRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    requestId?: string
    AND?: RideRequestWhereInput | RideRequestWhereInput[]
    OR?: RideRequestWhereInput[]
    NOT?: RideRequestWhereInput | RideRequestWhereInput[]
    customerId?: StringFilter<"RideRequest"> | string
    driverId?: StringNullableFilter<"RideRequest"> | string | null
    pickupLocation?: JsonFilter<"RideRequest">
    destinationLocation?: JsonFilter<"RideRequest">
    rideType?: EnumRideTypeFilter<"RideRequest"> | $Enums.RideType
    estimatedDistance?: FloatNullableFilter<"RideRequest"> | number | null
    estimatedDuration?: IntNullableFilter<"RideRequest"> | number | null
    estimatedPrice?: DecimalFilter<"RideRequest"> | Decimal | DecimalJsLike | number | string
    actualPrice?: DecimalNullableFilter<"RideRequest"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFilter<"RideRequest"> | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFilter<"RideRequest"> | $Enums.RidePaymentMethod
    customerNotes?: StringNullableFilter<"RideRequest"> | string | null
    driverNotes?: StringNullableFilter<"RideRequest"> | string | null
    requestedAt?: DateTimeFilter<"RideRequest"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    startedAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    cancelledBy?: StringNullableFilter<"RideRequest"> | string | null
    cancellationReason?: StringNullableFilter<"RideRequest"> | string | null
    expiresAt?: DateTimeFilter<"RideRequest"> | Date | string
    createdAt?: DateTimeFilter<"RideRequest"> | Date | string
    updatedAt?: DateTimeFilter<"RideRequest"> | Date | string
    rideServiceId?: StringNullableFilter<"RideRequest"> | string | null
    currency?: StringFilter<"RideRequest"> | string
    currencySymbol?: StringFilter<"RideRequest"> | string
    externalTransactions?: ExternalTransactionListRelationFilter
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    driver?: XOR<DriverNullableScalarRelationFilter, DriverWhereInput> | null
    rideService?: XOR<RideServiceNullableScalarRelationFilter, RideServiceWhereInput> | null
    ride?: XOR<RideNullableScalarRelationFilter, RideWhereInput> | null
  }, "id" | "requestId">

  export type RideRequestOrderByWithAggregationInput = {
    id?: SortOrder
    requestId?: SortOrder
    customerId?: SortOrder
    driverId?: SortOrderInput | SortOrder
    pickupLocation?: SortOrder
    destinationLocation?: SortOrder
    rideType?: SortOrder
    estimatedDistance?: SortOrderInput | SortOrder
    estimatedDuration?: SortOrderInput | SortOrder
    estimatedPrice?: SortOrder
    actualPrice?: SortOrderInput | SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    customerNotes?: SortOrderInput | SortOrder
    driverNotes?: SortOrderInput | SortOrder
    requestedAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    cancelledBy?: SortOrderInput | SortOrder
    cancellationReason?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrderInput | SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    _count?: RideRequestCountOrderByAggregateInput
    _avg?: RideRequestAvgOrderByAggregateInput
    _max?: RideRequestMaxOrderByAggregateInput
    _min?: RideRequestMinOrderByAggregateInput
    _sum?: RideRequestSumOrderByAggregateInput
  }

  export type RideRequestScalarWhereWithAggregatesInput = {
    AND?: RideRequestScalarWhereWithAggregatesInput | RideRequestScalarWhereWithAggregatesInput[]
    OR?: RideRequestScalarWhereWithAggregatesInput[]
    NOT?: RideRequestScalarWhereWithAggregatesInput | RideRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RideRequest"> | string
    requestId?: StringWithAggregatesFilter<"RideRequest"> | string
    customerId?: StringWithAggregatesFilter<"RideRequest"> | string
    driverId?: StringNullableWithAggregatesFilter<"RideRequest"> | string | null
    pickupLocation?: JsonWithAggregatesFilter<"RideRequest">
    destinationLocation?: JsonWithAggregatesFilter<"RideRequest">
    rideType?: EnumRideTypeWithAggregatesFilter<"RideRequest"> | $Enums.RideType
    estimatedDistance?: FloatNullableWithAggregatesFilter<"RideRequest"> | number | null
    estimatedDuration?: IntNullableWithAggregatesFilter<"RideRequest"> | number | null
    estimatedPrice?: DecimalWithAggregatesFilter<"RideRequest"> | Decimal | DecimalJsLike | number | string
    actualPrice?: DecimalNullableWithAggregatesFilter<"RideRequest"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusWithAggregatesFilter<"RideRequest"> | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodWithAggregatesFilter<"RideRequest"> | $Enums.RidePaymentMethod
    customerNotes?: StringNullableWithAggregatesFilter<"RideRequest"> | string | null
    driverNotes?: StringNullableWithAggregatesFilter<"RideRequest"> | string | null
    requestedAt?: DateTimeWithAggregatesFilter<"RideRequest"> | Date | string
    acceptedAt?: DateTimeNullableWithAggregatesFilter<"RideRequest"> | Date | string | null
    startedAt?: DateTimeNullableWithAggregatesFilter<"RideRequest"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"RideRequest"> | Date | string | null
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"RideRequest"> | Date | string | null
    cancelledBy?: StringNullableWithAggregatesFilter<"RideRequest"> | string | null
    cancellationReason?: StringNullableWithAggregatesFilter<"RideRequest"> | string | null
    expiresAt?: DateTimeWithAggregatesFilter<"RideRequest"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RideRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RideRequest"> | Date | string
    rideServiceId?: StringNullableWithAggregatesFilter<"RideRequest"> | string | null
    currency?: StringWithAggregatesFilter<"RideRequest"> | string
    currencySymbol?: StringWithAggregatesFilter<"RideRequest"> | string
  }

  export type RideWhereInput = {
    AND?: RideWhereInput | RideWhereInput[]
    OR?: RideWhereInput[]
    NOT?: RideWhereInput | RideWhereInput[]
    id?: StringFilter<"Ride"> | string
    rideId?: StringFilter<"Ride"> | string
    rideRequestId?: StringFilter<"Ride"> | string
    driverId?: StringFilter<"Ride"> | string
    customerId?: StringFilter<"Ride"> | string
    pickupLocation?: JsonFilter<"Ride">
    destinationLocation?: JsonFilter<"Ride">
    actualPickupLocation?: JsonNullableFilter<"Ride">
    actualDropoffLocation?: JsonNullableFilter<"Ride">
    rideType?: EnumRideTypeFilter<"Ride"> | $Enums.RideType
    distance?: FloatNullableFilter<"Ride"> | number | null
    duration?: IntNullableFilter<"Ride"> | number | null
    baseFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFilter<"Ride"> | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFilter<"Ride"> | $Enums.PaymentStatus
    status?: EnumRideStatusFilter<"Ride"> | $Enums.RideStatus
    customerRating?: IntNullableFilter<"Ride"> | number | null
    driverRating?: IntNullableFilter<"Ride"> | number | null
    customerReview?: StringNullableFilter<"Ride"> | string | null
    driverReview?: StringNullableFilter<"Ride"> | string | null
    startedAt?: DateTimeNullableFilter<"Ride"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Ride"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"Ride"> | Date | string | null
    cancelledBy?: StringNullableFilter<"Ride"> | string | null
    cancellationReason?: StringNullableFilter<"Ride"> | string | null
    route?: JsonNullableFilter<"Ride">
    createdAt?: DateTimeFilter<"Ride"> | Date | string
    updatedAt?: DateTimeFilter<"Ride"> | Date | string
    rideServiceId?: StringNullableFilter<"Ride"> | string | null
    settlementStatus?: EnumPaymentStatusFilter<"Ride"> | $Enums.PaymentStatus
    locationUpdates?: RideLocationListRelationFilter
    rideToken?: XOR<RideTokenNullableScalarRelationFilter, RideTokenWhereInput> | null
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    driver?: XOR<DriverScalarRelationFilter, DriverWhereInput>
    rideRequest?: XOR<RideRequestScalarRelationFilter, RideRequestWhereInput>
    rideService?: XOR<RideServiceNullableScalarRelationFilter, RideServiceWhereInput> | null
  }

  export type RideOrderByWithRelationInput = {
    id?: SortOrder
    rideId?: SortOrder
    rideRequestId?: SortOrder
    driverId?: SortOrder
    customerId?: SortOrder
    pickupLocation?: SortOrder
    destinationLocation?: SortOrder
    actualPickupLocation?: SortOrderInput | SortOrder
    actualDropoffLocation?: SortOrderInput | SortOrder
    rideType?: SortOrder
    distance?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    baseFare?: SortOrder
    distanceFare?: SortOrder
    timeFare?: SortOrder
    surgeFare?: SortOrder
    totalFare?: SortOrder
    driverEarnings?: SortOrder
    platformFee?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    status?: SortOrder
    customerRating?: SortOrderInput | SortOrder
    driverRating?: SortOrderInput | SortOrder
    customerReview?: SortOrderInput | SortOrder
    driverReview?: SortOrderInput | SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    cancelledBy?: SortOrderInput | SortOrder
    cancellationReason?: SortOrderInput | SortOrder
    route?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrderInput | SortOrder
    settlementStatus?: SortOrder
    locationUpdates?: RideLocationOrderByRelationAggregateInput
    rideToken?: RideTokenOrderByWithRelationInput
    customer?: UserOrderByWithRelationInput
    driver?: DriverOrderByWithRelationInput
    rideRequest?: RideRequestOrderByWithRelationInput
    rideService?: RideServiceOrderByWithRelationInput
  }

  export type RideWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    rideId?: string
    rideRequestId?: string
    AND?: RideWhereInput | RideWhereInput[]
    OR?: RideWhereInput[]
    NOT?: RideWhereInput | RideWhereInput[]
    driverId?: StringFilter<"Ride"> | string
    customerId?: StringFilter<"Ride"> | string
    pickupLocation?: JsonFilter<"Ride">
    destinationLocation?: JsonFilter<"Ride">
    actualPickupLocation?: JsonNullableFilter<"Ride">
    actualDropoffLocation?: JsonNullableFilter<"Ride">
    rideType?: EnumRideTypeFilter<"Ride"> | $Enums.RideType
    distance?: FloatNullableFilter<"Ride"> | number | null
    duration?: IntNullableFilter<"Ride"> | number | null
    baseFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFilter<"Ride"> | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFilter<"Ride"> | $Enums.PaymentStatus
    status?: EnumRideStatusFilter<"Ride"> | $Enums.RideStatus
    customerRating?: IntNullableFilter<"Ride"> | number | null
    driverRating?: IntNullableFilter<"Ride"> | number | null
    customerReview?: StringNullableFilter<"Ride"> | string | null
    driverReview?: StringNullableFilter<"Ride"> | string | null
    startedAt?: DateTimeNullableFilter<"Ride"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Ride"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"Ride"> | Date | string | null
    cancelledBy?: StringNullableFilter<"Ride"> | string | null
    cancellationReason?: StringNullableFilter<"Ride"> | string | null
    route?: JsonNullableFilter<"Ride">
    createdAt?: DateTimeFilter<"Ride"> | Date | string
    updatedAt?: DateTimeFilter<"Ride"> | Date | string
    rideServiceId?: StringNullableFilter<"Ride"> | string | null
    settlementStatus?: EnumPaymentStatusFilter<"Ride"> | $Enums.PaymentStatus
    locationUpdates?: RideLocationListRelationFilter
    rideToken?: XOR<RideTokenNullableScalarRelationFilter, RideTokenWhereInput> | null
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    driver?: XOR<DriverScalarRelationFilter, DriverWhereInput>
    rideRequest?: XOR<RideRequestScalarRelationFilter, RideRequestWhereInput>
    rideService?: XOR<RideServiceNullableScalarRelationFilter, RideServiceWhereInput> | null
  }, "id" | "rideId" | "rideRequestId">

  export type RideOrderByWithAggregationInput = {
    id?: SortOrder
    rideId?: SortOrder
    rideRequestId?: SortOrder
    driverId?: SortOrder
    customerId?: SortOrder
    pickupLocation?: SortOrder
    destinationLocation?: SortOrder
    actualPickupLocation?: SortOrderInput | SortOrder
    actualDropoffLocation?: SortOrderInput | SortOrder
    rideType?: SortOrder
    distance?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    baseFare?: SortOrder
    distanceFare?: SortOrder
    timeFare?: SortOrder
    surgeFare?: SortOrder
    totalFare?: SortOrder
    driverEarnings?: SortOrder
    platformFee?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    status?: SortOrder
    customerRating?: SortOrderInput | SortOrder
    driverRating?: SortOrderInput | SortOrder
    customerReview?: SortOrderInput | SortOrder
    driverReview?: SortOrderInput | SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    cancelledBy?: SortOrderInput | SortOrder
    cancellationReason?: SortOrderInput | SortOrder
    route?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrderInput | SortOrder
    settlementStatus?: SortOrder
    _count?: RideCountOrderByAggregateInput
    _avg?: RideAvgOrderByAggregateInput
    _max?: RideMaxOrderByAggregateInput
    _min?: RideMinOrderByAggregateInput
    _sum?: RideSumOrderByAggregateInput
  }

  export type RideScalarWhereWithAggregatesInput = {
    AND?: RideScalarWhereWithAggregatesInput | RideScalarWhereWithAggregatesInput[]
    OR?: RideScalarWhereWithAggregatesInput[]
    NOT?: RideScalarWhereWithAggregatesInput | RideScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Ride"> | string
    rideId?: StringWithAggregatesFilter<"Ride"> | string
    rideRequestId?: StringWithAggregatesFilter<"Ride"> | string
    driverId?: StringWithAggregatesFilter<"Ride"> | string
    customerId?: StringWithAggregatesFilter<"Ride"> | string
    pickupLocation?: JsonWithAggregatesFilter<"Ride">
    destinationLocation?: JsonWithAggregatesFilter<"Ride">
    actualPickupLocation?: JsonNullableWithAggregatesFilter<"Ride">
    actualDropoffLocation?: JsonNullableWithAggregatesFilter<"Ride">
    rideType?: EnumRideTypeWithAggregatesFilter<"Ride"> | $Enums.RideType
    distance?: FloatNullableWithAggregatesFilter<"Ride"> | number | null
    duration?: IntNullableWithAggregatesFilter<"Ride"> | number | null
    baseFare?: DecimalWithAggregatesFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalWithAggregatesFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalWithAggregatesFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalWithAggregatesFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalWithAggregatesFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalWithAggregatesFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalWithAggregatesFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodWithAggregatesFilter<"Ride"> | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusWithAggregatesFilter<"Ride"> | $Enums.PaymentStatus
    status?: EnumRideStatusWithAggregatesFilter<"Ride"> | $Enums.RideStatus
    customerRating?: IntNullableWithAggregatesFilter<"Ride"> | number | null
    driverRating?: IntNullableWithAggregatesFilter<"Ride"> | number | null
    customerReview?: StringNullableWithAggregatesFilter<"Ride"> | string | null
    driverReview?: StringNullableWithAggregatesFilter<"Ride"> | string | null
    startedAt?: DateTimeNullableWithAggregatesFilter<"Ride"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"Ride"> | Date | string | null
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"Ride"> | Date | string | null
    cancelledBy?: StringNullableWithAggregatesFilter<"Ride"> | string | null
    cancellationReason?: StringNullableWithAggregatesFilter<"Ride"> | string | null
    route?: JsonNullableWithAggregatesFilter<"Ride">
    createdAt?: DateTimeWithAggregatesFilter<"Ride"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Ride"> | Date | string
    rideServiceId?: StringNullableWithAggregatesFilter<"Ride"> | string | null
    settlementStatus?: EnumPaymentStatusWithAggregatesFilter<"Ride"> | $Enums.PaymentStatus
  }

  export type RideTokenWhereInput = {
    AND?: RideTokenWhereInput | RideTokenWhereInput[]
    OR?: RideTokenWhereInput[]
    NOT?: RideTokenWhereInput | RideTokenWhereInput[]
    id?: StringFilter<"RideToken"> | string
    rideId?: StringFilter<"RideToken"> | string
    token?: StringFilter<"RideToken"> | string
    isUsed?: BoolFilter<"RideToken"> | boolean
    usedAt?: DateTimeNullableFilter<"RideToken"> | Date | string | null
    expiresAt?: DateTimeFilter<"RideToken"> | Date | string
    createdAt?: DateTimeFilter<"RideToken"> | Date | string
    updatedAt?: DateTimeFilter<"RideToken"> | Date | string
    ride?: XOR<RideScalarRelationFilter, RideWhereInput>
  }

  export type RideTokenOrderByWithRelationInput = {
    id?: SortOrder
    rideId?: SortOrder
    token?: SortOrder
    isUsed?: SortOrder
    usedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ride?: RideOrderByWithRelationInput
  }

  export type RideTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    rideId?: string
    token?: string
    AND?: RideTokenWhereInput | RideTokenWhereInput[]
    OR?: RideTokenWhereInput[]
    NOT?: RideTokenWhereInput | RideTokenWhereInput[]
    isUsed?: BoolFilter<"RideToken"> | boolean
    usedAt?: DateTimeNullableFilter<"RideToken"> | Date | string | null
    expiresAt?: DateTimeFilter<"RideToken"> | Date | string
    createdAt?: DateTimeFilter<"RideToken"> | Date | string
    updatedAt?: DateTimeFilter<"RideToken"> | Date | string
    ride?: XOR<RideScalarRelationFilter, RideWhereInput>
  }, "id" | "rideId" | "token">

  export type RideTokenOrderByWithAggregationInput = {
    id?: SortOrder
    rideId?: SortOrder
    token?: SortOrder
    isUsed?: SortOrder
    usedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RideTokenCountOrderByAggregateInput
    _max?: RideTokenMaxOrderByAggregateInput
    _min?: RideTokenMinOrderByAggregateInput
  }

  export type RideTokenScalarWhereWithAggregatesInput = {
    AND?: RideTokenScalarWhereWithAggregatesInput | RideTokenScalarWhereWithAggregatesInput[]
    OR?: RideTokenScalarWhereWithAggregatesInput[]
    NOT?: RideTokenScalarWhereWithAggregatesInput | RideTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RideToken"> | string
    rideId?: StringWithAggregatesFilter<"RideToken"> | string
    token?: StringWithAggregatesFilter<"RideToken"> | string
    isUsed?: BoolWithAggregatesFilter<"RideToken"> | boolean
    usedAt?: DateTimeNullableWithAggregatesFilter<"RideToken"> | Date | string | null
    expiresAt?: DateTimeWithAggregatesFilter<"RideToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RideToken"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RideToken"> | Date | string
  }

  export type RideLocationWhereInput = {
    AND?: RideLocationWhereInput | RideLocationWhereInput[]
    OR?: RideLocationWhereInput[]
    NOT?: RideLocationWhereInput | RideLocationWhereInput[]
    id?: StringFilter<"RideLocation"> | string
    rideId?: StringFilter<"RideLocation"> | string
    latitude?: FloatFilter<"RideLocation"> | number
    longitude?: FloatFilter<"RideLocation"> | number
    accuracy?: FloatNullableFilter<"RideLocation"> | number | null
    speed?: FloatNullableFilter<"RideLocation"> | number | null
    heading?: FloatNullableFilter<"RideLocation"> | number | null
    timestamp?: DateTimeFilter<"RideLocation"> | Date | string
    ride?: XOR<RideScalarRelationFilter, RideWhereInput>
  }

  export type RideLocationOrderByWithRelationInput = {
    id?: SortOrder
    rideId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    accuracy?: SortOrderInput | SortOrder
    speed?: SortOrderInput | SortOrder
    heading?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    ride?: RideOrderByWithRelationInput
  }

  export type RideLocationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RideLocationWhereInput | RideLocationWhereInput[]
    OR?: RideLocationWhereInput[]
    NOT?: RideLocationWhereInput | RideLocationWhereInput[]
    rideId?: StringFilter<"RideLocation"> | string
    latitude?: FloatFilter<"RideLocation"> | number
    longitude?: FloatFilter<"RideLocation"> | number
    accuracy?: FloatNullableFilter<"RideLocation"> | number | null
    speed?: FloatNullableFilter<"RideLocation"> | number | null
    heading?: FloatNullableFilter<"RideLocation"> | number | null
    timestamp?: DateTimeFilter<"RideLocation"> | Date | string
    ride?: XOR<RideScalarRelationFilter, RideWhereInput>
  }, "id">

  export type RideLocationOrderByWithAggregationInput = {
    id?: SortOrder
    rideId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    accuracy?: SortOrderInput | SortOrder
    speed?: SortOrderInput | SortOrder
    heading?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: RideLocationCountOrderByAggregateInput
    _avg?: RideLocationAvgOrderByAggregateInput
    _max?: RideLocationMaxOrderByAggregateInput
    _min?: RideLocationMinOrderByAggregateInput
    _sum?: RideLocationSumOrderByAggregateInput
  }

  export type RideLocationScalarWhereWithAggregatesInput = {
    AND?: RideLocationScalarWhereWithAggregatesInput | RideLocationScalarWhereWithAggregatesInput[]
    OR?: RideLocationScalarWhereWithAggregatesInput[]
    NOT?: RideLocationScalarWhereWithAggregatesInput | RideLocationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RideLocation"> | string
    rideId?: StringWithAggregatesFilter<"RideLocation"> | string
    latitude?: FloatWithAggregatesFilter<"RideLocation"> | number
    longitude?: FloatWithAggregatesFilter<"RideLocation"> | number
    accuracy?: FloatNullableWithAggregatesFilter<"RideLocation"> | number | null
    speed?: FloatNullableWithAggregatesFilter<"RideLocation"> | number | null
    heading?: FloatNullableWithAggregatesFilter<"RideLocation"> | number | null
    timestamp?: DateTimeWithAggregatesFilter<"RideLocation"> | Date | string
  }

  export type DriverEarningWhereInput = {
    AND?: DriverEarningWhereInput | DriverEarningWhereInput[]
    OR?: DriverEarningWhereInput[]
    NOT?: DriverEarningWhereInput | DriverEarningWhereInput[]
    id?: StringFilter<"DriverEarning"> | string
    driverId?: StringFilter<"DriverEarning"> | string
    rideId?: StringFilter<"DriverEarning"> | string
    amount?: DecimalFilter<"DriverEarning"> | Decimal | DecimalJsLike | number | string
    type?: StringFilter<"DriverEarning"> | string
    description?: StringNullableFilter<"DriverEarning"> | string | null
    processedAt?: DateTimeNullableFilter<"DriverEarning"> | Date | string | null
    createdAt?: DateTimeFilter<"DriverEarning"> | Date | string
    driver?: XOR<DriverScalarRelationFilter, DriverWhereInput>
  }

  export type DriverEarningOrderByWithRelationInput = {
    id?: SortOrder
    driverId?: SortOrder
    rideId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    driver?: DriverOrderByWithRelationInput
  }

  export type DriverEarningWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DriverEarningWhereInput | DriverEarningWhereInput[]
    OR?: DriverEarningWhereInput[]
    NOT?: DriverEarningWhereInput | DriverEarningWhereInput[]
    driverId?: StringFilter<"DriverEarning"> | string
    rideId?: StringFilter<"DriverEarning"> | string
    amount?: DecimalFilter<"DriverEarning"> | Decimal | DecimalJsLike | number | string
    type?: StringFilter<"DriverEarning"> | string
    description?: StringNullableFilter<"DriverEarning"> | string | null
    processedAt?: DateTimeNullableFilter<"DriverEarning"> | Date | string | null
    createdAt?: DateTimeFilter<"DriverEarning"> | Date | string
    driver?: XOR<DriverScalarRelationFilter, DriverWhereInput>
  }, "id">

  export type DriverEarningOrderByWithAggregationInput = {
    id?: SortOrder
    driverId?: SortOrder
    rideId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: DriverEarningCountOrderByAggregateInput
    _avg?: DriverEarningAvgOrderByAggregateInput
    _max?: DriverEarningMaxOrderByAggregateInput
    _min?: DriverEarningMinOrderByAggregateInput
    _sum?: DriverEarningSumOrderByAggregateInput
  }

  export type DriverEarningScalarWhereWithAggregatesInput = {
    AND?: DriverEarningScalarWhereWithAggregatesInput | DriverEarningScalarWhereWithAggregatesInput[]
    OR?: DriverEarningScalarWhereWithAggregatesInput[]
    NOT?: DriverEarningScalarWhereWithAggregatesInput | DriverEarningScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DriverEarning"> | string
    driverId?: StringWithAggregatesFilter<"DriverEarning"> | string
    rideId?: StringWithAggregatesFilter<"DriverEarning"> | string
    amount?: DecimalWithAggregatesFilter<"DriverEarning"> | Decimal | DecimalJsLike | number | string
    type?: StringWithAggregatesFilter<"DriverEarning"> | string
    description?: StringNullableWithAggregatesFilter<"DriverEarning"> | string | null
    processedAt?: DateTimeNullableWithAggregatesFilter<"DriverEarning"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"DriverEarning"> | Date | string
  }

  export type RideServiceWhereInput = {
    AND?: RideServiceWhereInput | RideServiceWhereInput[]
    OR?: RideServiceWhereInput[]
    NOT?: RideServiceWhereInput | RideServiceWhereInput[]
    id?: StringFilter<"RideService"> | string
    serviceId?: StringFilter<"RideService"> | string
    name?: StringFilter<"RideService"> | string
    description?: StringNullableFilter<"RideService"> | string | null
    vehicleType?: EnumRiderVehicleTypeFilter<"RideService"> | $Enums.RiderVehicleType
    isActive?: BoolFilter<"RideService"> | boolean
    isDefault?: BoolFilter<"RideService"> | boolean
    distanceUnit?: EnumDistanceUnitFilter<"RideService"> | $Enums.DistanceUnit
    baseDistance?: FloatFilter<"RideService"> | number
    maxDistance?: FloatNullableFilter<"RideService"> | number | null
    baseFare?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    maximumFare?: DecimalNullableFilter<"RideService"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringFilter<"RideService"> | string
    currencySymbol?: StringFilter<"RideService"> | string
    surgeMultiplier?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFilter<"RideService"> | number
    features?: JsonNullableFilter<"RideService">
    restrictions?: JsonNullableFilter<"RideService">
    estimatedPickupTime?: IntFilter<"RideService"> | number
    maxWaitTime?: IntFilter<"RideService"> | number
    createdAt?: DateTimeFilter<"RideService"> | Date | string
    updatedAt?: DateTimeFilter<"RideService"> | Date | string
    createdBy?: StringNullableFilter<"RideService"> | string | null
    updatedBy?: StringNullableFilter<"RideService"> | string | null
    drivers?: DriverListRelationFilter
    rideRequests?: RideRequestListRelationFilter
    rides?: RideListRelationFilter
  }

  export type RideServiceOrderByWithRelationInput = {
    id?: SortOrder
    serviceId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    vehicleType?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    distanceUnit?: SortOrder
    baseDistance?: SortOrder
    maxDistance?: SortOrderInput | SortOrder
    baseFare?: SortOrder
    perKmRate?: SortOrder
    perMinuteRate?: SortOrder
    minimumFare?: SortOrder
    maximumFare?: SortOrderInput | SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    surgeMultiplier?: SortOrder
    maxSurgeMultiplier?: SortOrder
    platformFeePercentage?: SortOrder
    driverEarningsPercentage?: SortOrder
    nightFareMultiplier?: SortOrder
    weekendFareMultiplier?: SortOrder
    cancellationFee?: SortOrder
    cancellationTimeLimit?: SortOrder
    features?: SortOrderInput | SortOrder
    restrictions?: SortOrderInput | SortOrder
    estimatedPickupTime?: SortOrder
    maxWaitTime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    drivers?: DriverOrderByRelationAggregateInput
    rideRequests?: RideRequestOrderByRelationAggregateInput
    rides?: RideOrderByRelationAggregateInput
  }

  export type RideServiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    serviceId?: string
    AND?: RideServiceWhereInput | RideServiceWhereInput[]
    OR?: RideServiceWhereInput[]
    NOT?: RideServiceWhereInput | RideServiceWhereInput[]
    name?: StringFilter<"RideService"> | string
    description?: StringNullableFilter<"RideService"> | string | null
    vehicleType?: EnumRiderVehicleTypeFilter<"RideService"> | $Enums.RiderVehicleType
    isActive?: BoolFilter<"RideService"> | boolean
    isDefault?: BoolFilter<"RideService"> | boolean
    distanceUnit?: EnumDistanceUnitFilter<"RideService"> | $Enums.DistanceUnit
    baseDistance?: FloatFilter<"RideService"> | number
    maxDistance?: FloatNullableFilter<"RideService"> | number | null
    baseFare?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    maximumFare?: DecimalNullableFilter<"RideService"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringFilter<"RideService"> | string
    currencySymbol?: StringFilter<"RideService"> | string
    surgeMultiplier?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFilter<"RideService"> | number
    features?: JsonNullableFilter<"RideService">
    restrictions?: JsonNullableFilter<"RideService">
    estimatedPickupTime?: IntFilter<"RideService"> | number
    maxWaitTime?: IntFilter<"RideService"> | number
    createdAt?: DateTimeFilter<"RideService"> | Date | string
    updatedAt?: DateTimeFilter<"RideService"> | Date | string
    createdBy?: StringNullableFilter<"RideService"> | string | null
    updatedBy?: StringNullableFilter<"RideService"> | string | null
    drivers?: DriverListRelationFilter
    rideRequests?: RideRequestListRelationFilter
    rides?: RideListRelationFilter
  }, "id" | "serviceId">

  export type RideServiceOrderByWithAggregationInput = {
    id?: SortOrder
    serviceId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    vehicleType?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    distanceUnit?: SortOrder
    baseDistance?: SortOrder
    maxDistance?: SortOrderInput | SortOrder
    baseFare?: SortOrder
    perKmRate?: SortOrder
    perMinuteRate?: SortOrder
    minimumFare?: SortOrder
    maximumFare?: SortOrderInput | SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    surgeMultiplier?: SortOrder
    maxSurgeMultiplier?: SortOrder
    platformFeePercentage?: SortOrder
    driverEarningsPercentage?: SortOrder
    nightFareMultiplier?: SortOrder
    weekendFareMultiplier?: SortOrder
    cancellationFee?: SortOrder
    cancellationTimeLimit?: SortOrder
    features?: SortOrderInput | SortOrder
    restrictions?: SortOrderInput | SortOrder
    estimatedPickupTime?: SortOrder
    maxWaitTime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: RideServiceCountOrderByAggregateInput
    _avg?: RideServiceAvgOrderByAggregateInput
    _max?: RideServiceMaxOrderByAggregateInput
    _min?: RideServiceMinOrderByAggregateInput
    _sum?: RideServiceSumOrderByAggregateInput
  }

  export type RideServiceScalarWhereWithAggregatesInput = {
    AND?: RideServiceScalarWhereWithAggregatesInput | RideServiceScalarWhereWithAggregatesInput[]
    OR?: RideServiceScalarWhereWithAggregatesInput[]
    NOT?: RideServiceScalarWhereWithAggregatesInput | RideServiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RideService"> | string
    serviceId?: StringWithAggregatesFilter<"RideService"> | string
    name?: StringWithAggregatesFilter<"RideService"> | string
    description?: StringNullableWithAggregatesFilter<"RideService"> | string | null
    vehicleType?: EnumRiderVehicleTypeWithAggregatesFilter<"RideService"> | $Enums.RiderVehicleType
    isActive?: BoolWithAggregatesFilter<"RideService"> | boolean
    isDefault?: BoolWithAggregatesFilter<"RideService"> | boolean
    distanceUnit?: EnumDistanceUnitWithAggregatesFilter<"RideService"> | $Enums.DistanceUnit
    baseDistance?: FloatWithAggregatesFilter<"RideService"> | number
    maxDistance?: FloatNullableWithAggregatesFilter<"RideService"> | number | null
    baseFare?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    maximumFare?: DecimalNullableWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringWithAggregatesFilter<"RideService"> | string
    currencySymbol?: StringWithAggregatesFilter<"RideService"> | string
    surgeMultiplier?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalWithAggregatesFilter<"RideService"> | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntWithAggregatesFilter<"RideService"> | number
    features?: JsonNullableWithAggregatesFilter<"RideService">
    restrictions?: JsonNullableWithAggregatesFilter<"RideService">
    estimatedPickupTime?: IntWithAggregatesFilter<"RideService"> | number
    maxWaitTime?: IntWithAggregatesFilter<"RideService"> | number
    createdAt?: DateTimeWithAggregatesFilter<"RideService"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RideService"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"RideService"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"RideService"> | string | null
  }

  export type ordersWhereInput = {
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    id?: StringFilter<"orders"> | string
    orderNumber?: StringFilter<"orders"> | string
    userId?: StringFilter<"orders"> | string
    sellerId?: StringFilter<"orders"> | string
    status?: EnumOrderStatusFilter<"orders"> | $Enums.OrderStatus
    subtotal?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"orders"> | string
    customerName?: StringFilter<"orders"> | string
    customerEmail?: StringNullableFilter<"orders"> | string | null
    customerPhone?: StringFilter<"orders"> | string
    shippingAddress?: StringFilter<"orders"> | string
    billingAddress?: StringNullableFilter<"orders"> | string | null
    paymentMethod?: StringNullableFilter<"orders"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"orders"> | $Enums.PaymentStatus
    paymentReference?: StringNullableFilter<"orders"> | string | null
    paidAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    shippingMethod?: StringNullableFilter<"orders"> | string | null
    trackingNumber?: StringNullableFilter<"orders"> | string | null
    shippedAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    deliveredAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    notes?: StringNullableFilter<"orders"> | string | null
    sellerNotes?: StringNullableFilter<"orders"> | string | null
    metadata?: JsonNullableFilter<"orders">
    createdAt?: DateTimeFilter<"orders"> | Date | string
    updatedAt?: DateTimeFilter<"orders"> | Date | string
    cancelledAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    deliveryCurrency?: StringNullableFilter<"orders"> | string | null
    externalTransactions?: ExternalTransactionListRelationFilter
    items?: OrderItemListRelationFilter
    User_orders_sellerIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    User_orders_userIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ordersOrderByWithRelationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    sellerId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currencyCode?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrderInput | SortOrder
    customerPhone?: SortOrder
    shippingAddress?: SortOrder
    billingAddress?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    paymentReference?: SortOrderInput | SortOrder
    paidAt?: SortOrderInput | SortOrder
    shippingMethod?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    shippedAt?: SortOrderInput | SortOrder
    deliveredAt?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    sellerNotes?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    deliveryCurrency?: SortOrderInput | SortOrder
    externalTransactions?: ExternalTransactionOrderByRelationAggregateInput
    items?: OrderItemOrderByRelationAggregateInput
    User_orders_sellerIdToUser?: UserOrderByWithRelationInput
    User_orders_userIdToUser?: UserOrderByWithRelationInput
  }

  export type ordersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    userId?: StringFilter<"orders"> | string
    sellerId?: StringFilter<"orders"> | string
    status?: EnumOrderStatusFilter<"orders"> | $Enums.OrderStatus
    subtotal?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"orders"> | string
    customerName?: StringFilter<"orders"> | string
    customerEmail?: StringNullableFilter<"orders"> | string | null
    customerPhone?: StringFilter<"orders"> | string
    shippingAddress?: StringFilter<"orders"> | string
    billingAddress?: StringNullableFilter<"orders"> | string | null
    paymentMethod?: StringNullableFilter<"orders"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"orders"> | $Enums.PaymentStatus
    paymentReference?: StringNullableFilter<"orders"> | string | null
    paidAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    shippingMethod?: StringNullableFilter<"orders"> | string | null
    trackingNumber?: StringNullableFilter<"orders"> | string | null
    shippedAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    deliveredAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    notes?: StringNullableFilter<"orders"> | string | null
    sellerNotes?: StringNullableFilter<"orders"> | string | null
    metadata?: JsonNullableFilter<"orders">
    createdAt?: DateTimeFilter<"orders"> | Date | string
    updatedAt?: DateTimeFilter<"orders"> | Date | string
    cancelledAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    deliveryCurrency?: StringNullableFilter<"orders"> | string | null
    externalTransactions?: ExternalTransactionListRelationFilter
    items?: OrderItemListRelationFilter
    User_orders_sellerIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    User_orders_userIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "orderNumber">

  export type ordersOrderByWithAggregationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    sellerId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currencyCode?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrderInput | SortOrder
    customerPhone?: SortOrder
    shippingAddress?: SortOrder
    billingAddress?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    paymentReference?: SortOrderInput | SortOrder
    paidAt?: SortOrderInput | SortOrder
    shippingMethod?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    shippedAt?: SortOrderInput | SortOrder
    deliveredAt?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    sellerNotes?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    deliveryCurrency?: SortOrderInput | SortOrder
    _count?: ordersCountOrderByAggregateInput
    _avg?: ordersAvgOrderByAggregateInput
    _max?: ordersMaxOrderByAggregateInput
    _min?: ordersMinOrderByAggregateInput
    _sum?: ordersSumOrderByAggregateInput
  }

  export type ordersScalarWhereWithAggregatesInput = {
    AND?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    OR?: ordersScalarWhereWithAggregatesInput[]
    NOT?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"orders"> | string
    orderNumber?: StringWithAggregatesFilter<"orders"> | string
    userId?: StringWithAggregatesFilter<"orders"> | string
    sellerId?: StringWithAggregatesFilter<"orders"> | string
    status?: EnumOrderStatusWithAggregatesFilter<"orders"> | $Enums.OrderStatus
    subtotal?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringWithAggregatesFilter<"orders"> | string
    customerName?: StringWithAggregatesFilter<"orders"> | string
    customerEmail?: StringNullableWithAggregatesFilter<"orders"> | string | null
    customerPhone?: StringWithAggregatesFilter<"orders"> | string
    shippingAddress?: StringWithAggregatesFilter<"orders"> | string
    billingAddress?: StringNullableWithAggregatesFilter<"orders"> | string | null
    paymentMethod?: StringNullableWithAggregatesFilter<"orders"> | string | null
    paymentStatus?: EnumPaymentStatusWithAggregatesFilter<"orders"> | $Enums.PaymentStatus
    paymentReference?: StringNullableWithAggregatesFilter<"orders"> | string | null
    paidAt?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
    shippingMethod?: StringNullableWithAggregatesFilter<"orders"> | string | null
    trackingNumber?: StringNullableWithAggregatesFilter<"orders"> | string | null
    shippedAt?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
    deliveredAt?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
    notes?: StringNullableWithAggregatesFilter<"orders"> | string | null
    sellerNotes?: StringNullableWithAggregatesFilter<"orders"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"orders">
    createdAt?: DateTimeWithAggregatesFilter<"orders"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"orders"> | Date | string
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
    deliveryCurrency?: StringNullableWithAggregatesFilter<"orders"> | string | null
  }

  export type AdminCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    username: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    operatorEntity: OperatorEntityCreateNestedOneWithoutAdminsInput
  }

  export type AdminUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    username: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    operatorEntityId: string
    createdBy?: string | null
  }

  export type AdminUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    operatorEntity?: OperatorEntityUpdateOneRequiredWithoutAdminsNestedInput
  }

  export type AdminUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    operatorEntityId?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminCreateManyInput = {
    id?: string
    email: string
    password: string
    name: string
    username: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    operatorEntityId: string
    createdBy?: string | null
  }

  export type AdminUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    operatorEntityId?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoleCreateInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    operatorEntities?: OperatorEntityCreateNestedManyWithoutRoleInput
    permissions?: RolePermissionCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    operatorEntities?: OperatorEntityUncheckedCreateNestedManyWithoutRoleInput
    permissions?: RolePermissionUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    operatorEntities?: OperatorEntityUpdateManyWithoutRoleNestedInput
    permissions?: RolePermissionUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    operatorEntities?: OperatorEntityUncheckedUpdateManyWithoutRoleNestedInput
    permissions?: RolePermissionUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type RoleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RolePermissionCreateInput = {
    id?: string
    entityType: $Enums.EntityType
    permission: $Enums.Permission
    isGranted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutPermissionsInput
  }

  export type RolePermissionUncheckedCreateInput = {
    id?: string
    roleId: string
    entityType: $Enums.EntityType
    permission: $Enums.Permission
    isGranted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    permission?: EnumPermissionFieldUpdateOperationsInput | $Enums.Permission
    isGranted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutPermissionsNestedInput
  }

  export type RolePermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    permission?: EnumPermissionFieldUpdateOperationsInput | $Enums.Permission
    isGranted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionCreateManyInput = {
    id?: string
    roleId: string
    entityType: $Enums.EntityType
    permission: $Enums.Permission
    isGranted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    permission?: EnumPermissionFieldUpdateOperationsInput | $Enums.Permission
    isGranted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    permission?: EnumPermissionFieldUpdateOperationsInput | $Enums.Permission
    isGranted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OperatorEntityCreateInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    admins?: AdminCreateNestedManyWithoutOperatorEntityInput
    role: RoleCreateNestedOneWithoutOperatorEntitiesInput
  }

  export type OperatorEntityUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    roleId: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    admins?: AdminUncheckedCreateNestedManyWithoutOperatorEntityInput
  }

  export type OperatorEntityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    admins?: AdminUpdateManyWithoutOperatorEntityNestedInput
    role?: RoleUpdateOneRequiredWithoutOperatorEntitiesNestedInput
  }

  export type OperatorEntityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    roleId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    admins?: AdminUncheckedUpdateManyWithoutOperatorEntityNestedInput
  }

  export type OperatorEntityCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    roleId: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type OperatorEntityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OperatorEntityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    roleId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeliveryAddressCreateInput = {
    id?: string
    address: string
    city: string
    state: string
    postalCode?: string | null
    country: string
    isDefault?: boolean
    label?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isDeleted?: boolean
    user: UserCreateNestedOneWithoutDeliveryAddressesInput
  }

  export type DeliveryAddressUncheckedCreateInput = {
    id?: string
    userId: string
    address: string
    city: string
    state: string
    postalCode?: string | null
    country: string
    isDefault?: boolean
    label?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isDeleted?: boolean
  }

  export type DeliveryAddressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    label?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isDeleted?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutDeliveryAddressesNestedInput
  }

  export type DeliveryAddressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    label?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isDeleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DeliveryAddressCreateManyInput = {
    id?: string
    userId: string
    address: string
    city: string
    state: string
    postalCode?: string | null
    country: string
    isDefault?: boolean
    label?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isDeleted?: boolean
  }

  export type DeliveryAddressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    label?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isDeleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DeliveryAddressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    label?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isDeleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentGatewayServiceProviderCreateInput = {
    id?: string
    name: string
    type: string
    countryCode: string
    currencyCode: string
    isActive?: boolean
    logoUrl?: string | null
    description?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type PaymentGatewayServiceProviderUncheckedCreateInput = {
    id?: string
    name: string
    type: string
    countryCode: string
    currencyCode: string
    isActive?: boolean
    logoUrl?: string | null
    description?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type PaymentGatewayServiceProviderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentGatewayServiceProviderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentGatewayServiceProviderCreateManyInput = {
    id?: string
    name: string
    type: string
    countryCode: string
    currencyCode: string
    isActive?: boolean
    logoUrl?: string | null
    description?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type PaymentGatewayServiceProviderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentGatewayServiceProviderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DeviceCreateInput = {
    id?: string
    deviceId: string
    deviceName: string
    deviceType: string
    isVerified?: boolean
    lastLoginAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: string
    modelName: string
    osVersion: string
    phoneNumber: string
    lastLogoutAt?: Date | string | null
    user: UserCreateNestedOneWithoutDevicesInput
    sessions?: SessionCreateNestedManyWithoutDeviceInput
  }

  export type DeviceUncheckedCreateInput = {
    id?: string
    deviceId: string
    deviceName: string
    deviceType: string
    isVerified?: boolean
    lastLoginAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    brand: string
    modelName: string
    osVersion: string
    phoneNumber: string
    lastLogoutAt?: Date | string | null
    sessions?: SessionUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type DeviceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
    deviceName?: StringFieldUpdateOperationsInput | string
    deviceType?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: StringFieldUpdateOperationsInput | string
    modelName?: StringFieldUpdateOperationsInput | string
    osVersion?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    lastLogoutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutDevicesNestedInput
    sessions?: SessionUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
    deviceName?: StringFieldUpdateOperationsInput | string
    deviceType?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    brand?: StringFieldUpdateOperationsInput | string
    modelName?: StringFieldUpdateOperationsInput | string
    osVersion?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    lastLogoutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessions?: SessionUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceCreateManyInput = {
    id?: string
    deviceId: string
    deviceName: string
    deviceType: string
    isVerified?: boolean
    lastLoginAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    brand: string
    modelName: string
    osVersion: string
    phoneNumber: string
    lastLogoutAt?: Date | string | null
  }

  export type DeviceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
    deviceName?: StringFieldUpdateOperationsInput | string
    deviceType?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: StringFieldUpdateOperationsInput | string
    modelName?: StringFieldUpdateOperationsInput | string
    osVersion?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    lastLogoutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DeviceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
    deviceName?: StringFieldUpdateOperationsInput | string
    deviceType?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    brand?: StringFieldUpdateOperationsInput | string
    modelName?: StringFieldUpdateOperationsInput | string
    osVersion?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    lastLogoutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SessionCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    device: DeviceCreateNestedOneWithoutSessionsInput
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    deviceId: string
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    device?: DeviceUpdateOneRequiredWithoutSessionsNestedInput
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
  }

  export type SessionCreateManyInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    deviceId: string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
  }

  export type OTPCreateInput = {
    id?: string
    phoneNumber: string
    code: string
    type: string
    expiresAt: Date | string
    createdAt?: Date | string
    isUsed?: boolean
    attempts?: number
    originalCode?: string | null
  }

  export type OTPUncheckedCreateInput = {
    id?: string
    phoneNumber: string
    code: string
    type: string
    expiresAt: Date | string
    createdAt?: Date | string
    isUsed?: boolean
    attempts?: number
    originalCode?: string | null
  }

  export type OTPUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    attempts?: IntFieldUpdateOperationsInput | number
    originalCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OTPUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    attempts?: IntFieldUpdateOperationsInput | number
    originalCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OTPCreateManyInput = {
    id?: string
    phoneNumber: string
    code: string
    type: string
    expiresAt: Date | string
    createdAt?: Date | string
    isUsed?: boolean
    attempts?: number
    originalCode?: string | null
  }

  export type OTPUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    attempts?: IntFieldUpdateOperationsInput | number
    originalCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OTPUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    attempts?: IntFieldUpdateOperationsInput | number
    originalCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    location: LocationCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductImageCreateInput = {
    id?: string
    imageUrl: string
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    width?: number | null
    height?: number | null
    size?: number | null
    format?: string | null
    altText?: string | null
    product: ProductCreateNestedOneWithoutImagesInput
  }

  export type ProductImageUncheckedCreateInput = {
    id?: string
    productId: string
    imageUrl: string
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    width?: number | null
    height?: number | null
    size?: number | null
    format?: string | null
    altText?: string | null
  }

  export type ProductImageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    format?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutImagesNestedInput
  }

  export type ProductImageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    format?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductImageCreateManyInput = {
    id?: string
    productId: string
    imageUrl: string
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    width?: number | null
    height?: number | null
    size?: number | null
    format?: string | null
    altText?: string | null
  }

  export type ProductImageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    format?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductImageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    format?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryCreateInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    translations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: string
    name: string
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    translations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    translations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    translations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: string
    name: string
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
  }

  export type CategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LocationCreateInput = {
    id?: string
    countryCode: string
    region: string
    city: string
    createdAt?: Date | string
    updatedAt?: Date | string
    latitude?: number | null
    longitude?: number | null
    timezone?: string | null
    isActive?: boolean
    products?: ProductCreateNestedManyWithoutLocationInput
  }

  export type LocationUncheckedCreateInput = {
    id?: string
    countryCode: string
    region: string
    city: string
    createdAt?: Date | string
    updatedAt?: Date | string
    latitude?: number | null
    longitude?: number | null
    timezone?: string | null
    isActive?: boolean
    products?: ProductUncheckedCreateNestedManyWithoutLocationInput
  }

  export type LocationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    products?: ProductUpdateManyWithoutLocationNestedInput
  }

  export type LocationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    products?: ProductUncheckedUpdateManyWithoutLocationNestedInput
  }

  export type LocationCreateManyInput = {
    id?: string
    countryCode: string
    region: string
    city: string
    createdAt?: Date | string
    updatedAt?: Date | string
    latitude?: number | null
    longitude?: number | null
    timezone?: string | null
    isActive?: boolean
  }

  export type LocationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type LocationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductAttributeCreateInput = {
    id?: string
    key: string
    value: string
    createdAt?: Date | string
    updatedAt?: Date | string
    unit?: string | null
    isFilterable?: boolean
    order?: number
    product: ProductCreateNestedOneWithoutAttributesInput
  }

  export type ProductAttributeUncheckedCreateInput = {
    id?: string
    productId: string
    key: string
    value: string
    createdAt?: Date | string
    updatedAt?: Date | string
    unit?: string | null
    isFilterable?: boolean
    order?: number
  }

  export type ProductAttributeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    isFilterable?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    product?: ProductUpdateOneRequiredWithoutAttributesNestedInput
  }

  export type ProductAttributeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    isFilterable?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
  }

  export type ProductAttributeCreateManyInput = {
    id?: string
    productId: string
    key: string
    value: string
    createdAt?: Date | string
    updatedAt?: Date | string
    unit?: string | null
    isFilterable?: boolean
    order?: number
  }

  export type ProductAttributeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    isFilterable?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
  }

  export type ProductAttributeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    isFilterable?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
  }

  export type ProductTranslationCreateInput = {
    id?: string
    locale: string
    title: string
    description: string
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutTranslationsInput
  }

  export type ProductTranslationUncheckedCreateInput = {
    id?: string
    productId: string
    locale: string
    title: string
    description: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutTranslationsNestedInput
  }

  export type ProductTranslationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationCreateManyInput = {
    id?: string
    productId: string
    locale: string
    title: string
    description: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductDeliveryOptionCreateInput = {
    id?: string
    deliveryType: $Enums.DeliveryType
    name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    estimatedDays: number
    isDefault?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutDeliveryOptionsInput
  }

  export type ProductDeliveryOptionUncheckedCreateInput = {
    id?: string
    productId: string
    deliveryType: $Enums.DeliveryType
    name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    estimatedDays: number
    isDefault?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductDeliveryOptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    deliveryType?: EnumDeliveryTypeFieldUpdateOperationsInput | $Enums.DeliveryType
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    estimatedDays?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutDeliveryOptionsNestedInput
  }

  export type ProductDeliveryOptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    deliveryType?: EnumDeliveryTypeFieldUpdateOperationsInput | $Enums.DeliveryType
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    estimatedDays?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductDeliveryOptionCreateManyInput = {
    id?: string
    productId: string
    deliveryType: $Enums.DeliveryType
    name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    estimatedDays: number
    isDefault?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductDeliveryOptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    deliveryType?: EnumDeliveryTypeFieldUpdateOperationsInput | $Enums.DeliveryType
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    estimatedDays?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductDeliveryOptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    deliveryType?: EnumDeliveryTypeFieldUpdateOperationsInput | $Enums.DeliveryType
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    estimatedDays?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationCreateInput = {
    id?: string
    locale: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    category: CategoryCreateNestedOneWithoutTranslationsInput
  }

  export type CategoryTranslationUncheckedCreateInput = {
    id?: string
    categoryId: string
    locale: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: CategoryUpdateOneRequiredWithoutTranslationsNestedInput
  }

  export type CategoryTranslationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationCreateManyInput = {
    id?: string
    categoryId: string
    locale: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SellerKycCreateInput = {
    id?: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber?: string | null
    taxId?: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status?: $Enums.KycStatus
    rejectionReason?: string | null
    verifiedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    country?: SellerKycCreatecountryInput | string[]
    documentExpiryDate?: Date | string | null
    statusChangedBy?: string | null
    statusChangedAt?: Date | string | null
    bankAccounts?: BankAccountCreateNestedManyWithoutSellerKycInput
    user: UserCreateNestedOneWithoutSellerKycInput
    wallets?: WalletCreateNestedManyWithoutSellerKycInput
  }

  export type SellerKycUncheckedCreateInput = {
    id?: string
    userId: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber?: string | null
    taxId?: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status?: $Enums.KycStatus
    rejectionReason?: string | null
    verifiedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    country?: SellerKycCreatecountryInput | string[]
    documentExpiryDate?: Date | string | null
    statusChangedBy?: string | null
    statusChangedAt?: Date | string | null
    bankAccounts?: BankAccountUncheckedCreateNestedManyWithoutSellerKycInput
    wallets?: WalletUncheckedCreateNestedManyWithoutSellerKycInput
  }

  export type SellerKycUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bankAccounts?: BankAccountUpdateManyWithoutSellerKycNestedInput
    user?: UserUpdateOneRequiredWithoutSellerKycNestedInput
    wallets?: WalletUpdateManyWithoutSellerKycNestedInput
  }

  export type SellerKycUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bankAccounts?: BankAccountUncheckedUpdateManyWithoutSellerKycNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutSellerKycNestedInput
  }

  export type SellerKycCreateManyInput = {
    id?: string
    userId: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber?: string | null
    taxId?: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status?: $Enums.KycStatus
    rejectionReason?: string | null
    verifiedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    country?: SellerKycCreatecountryInput | string[]
    documentExpiryDate?: Date | string | null
    statusChangedBy?: string | null
    statusChangedAt?: Date | string | null
  }

  export type SellerKycUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SellerKycUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BankAccountCreateInput = {
    id?: string
    accountName: string
    accountNumber: string
    bankName: string
    bankCode: string
    branchCode?: string | null
    swiftCode?: string | null
    iban?: string | null
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    sellerKyc: SellerKycCreateNestedOneWithoutBankAccountsInput
    settlements?: SettlementCreateNestedManyWithoutBankAccountInput
  }

  export type BankAccountUncheckedCreateInput = {
    id?: string
    sellerKycId: string
    accountName: string
    accountNumber: string
    bankName: string
    bankCode: string
    branchCode?: string | null
    swiftCode?: string | null
    iban?: string | null
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    settlements?: SettlementUncheckedCreateNestedManyWithoutBankAccountInput
  }

  export type BankAccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankCode?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sellerKyc?: SellerKycUpdateOneRequiredWithoutBankAccountsNestedInput
    settlements?: SettlementUpdateManyWithoutBankAccountNestedInput
  }

  export type BankAccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerKycId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankCode?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlements?: SettlementUncheckedUpdateManyWithoutBankAccountNestedInput
  }

  export type BankAccountCreateManyInput = {
    id?: string
    sellerKycId: string
    accountName: string
    accountNumber: string
    bankName: string
    bankCode: string
    branchCode?: string | null
    swiftCode?: string | null
    iban?: string | null
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BankAccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankCode?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BankAccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerKycId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankCode?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WalletCreateInput = {
    id?: string
    walletType: $Enums.WalletType
    walletAddress: string
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    account: string
    settlements?: SettlementCreateNestedManyWithoutWalletInput
    sellerKyc: SellerKycCreateNestedOneWithoutWalletsInput
  }

  export type WalletUncheckedCreateInput = {
    id?: string
    sellerKycId: string
    walletType: $Enums.WalletType
    walletAddress: string
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    account: string
    settlements?: SettlementUncheckedCreateNestedManyWithoutWalletInput
  }

  export type WalletUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    walletType?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    walletAddress?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: StringFieldUpdateOperationsInput | string
    settlements?: SettlementUpdateManyWithoutWalletNestedInput
    sellerKyc?: SellerKycUpdateOneRequiredWithoutWalletsNestedInput
  }

  export type WalletUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerKycId?: StringFieldUpdateOperationsInput | string
    walletType?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    walletAddress?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: StringFieldUpdateOperationsInput | string
    settlements?: SettlementUncheckedUpdateManyWithoutWalletNestedInput
  }

  export type WalletCreateManyInput = {
    id?: string
    sellerKycId: string
    walletType: $Enums.WalletType
    walletAddress: string
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    account: string
  }

  export type WalletUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    walletType?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    walletAddress?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: StringFieldUpdateOperationsInput | string
  }

  export type WalletUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerKycId?: StringFieldUpdateOperationsInput | string
    walletType?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    walletAddress?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentMethodCreateInput = {
    id?: string
    type: $Enums.PaymentType
    provider: string
    accountId: string
    accountName: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutPaymentMethodInput
    user: UserCreateNestedOneWithoutPaymentMethodsInput
  }

  export type PaymentMethodUncheckedCreateInput = {
    id?: string
    userId: string
    type: $Enums.PaymentType
    provider: string
    accountId: string
    accountName: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutPaymentMethodInput
  }

  export type PaymentMethodUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    provider?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    externalTransactions?: ExternalTransactionUpdateManyWithoutPaymentMethodNestedInput
    user?: UserUpdateOneRequiredWithoutPaymentMethodsNestedInput
  }

  export type PaymentMethodUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    provider?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutPaymentMethodNestedInput
  }

  export type PaymentMethodCreateManyInput = {
    id?: string
    userId: string
    type: $Enums.PaymentType
    provider: string
    accountId: string
    accountName: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentMethodUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    provider?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentMethodUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    provider?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SettlementCreateInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
    bankAccount?: BankAccountCreateNestedOneWithoutSettlementsInput
    user: UserCreateNestedOneWithoutSettlementsInput
    wallet?: WalletCreateNestedOneWithoutSettlementsInput
  }

  export type SettlementUncheckedCreateInput = {
    id?: string
    userId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    bankAccountId?: string | null
    walletId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
  }

  export type SettlementUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
    bankAccount?: BankAccountUpdateOneWithoutSettlementsNestedInput
    user?: UserUpdateOneRequiredWithoutSettlementsNestedInput
    wallet?: WalletUpdateOneWithoutSettlementsNestedInput
  }

  export type SettlementUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    bankAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    walletId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
  }

  export type SettlementCreateManyInput = {
    id?: string
    userId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    bankAccountId?: string | null
    walletId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
  }

  export type SettlementUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
  }

  export type SettlementUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    bankAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    walletId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
  }

  export type ProductViewCreateInput = {
    id?: string
    deviceId?: string | null
    ipAddress?: string | null
    viewedAt?: Date | string
    product: ProductCreateNestedOneWithoutProductViewsInput
    user: UserCreateNestedOneWithoutProductViewsInput
  }

  export type ProductViewUncheckedCreateInput = {
    id?: string
    productId: string
    userId: string
    deviceId?: string | null
    ipAddress?: string | null
    viewedAt?: Date | string
  }

  export type ProductViewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductViewsNestedInput
    user?: UserUpdateOneRequiredWithoutProductViewsNestedInput
  }

  export type ProductViewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductViewCreateManyInput = {
    id?: string
    productId: string
    userId: string
    deviceId?: string | null
    ipAddress?: string | null
    viewedAt?: Date | string
  }

  export type ProductViewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductViewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOrderInterestCreateInput = {
    id?: string
    quantity?: number
    originalPrice: Decimal | DecimalJsLike | number | string
    discountPrice?: Decimal | DecimalJsLike | number | string | null
    currencyCode: string
    totalAmount: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderInterestStatus
    notes?: string | null
    preferredDeliveryDate?: Date | string | null
    deliveryAddress?: string | null
    contactPhone?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt?: Date | string | null
    product: ProductCreateNestedOneWithoutProductOrderInterestsInput
    user: UserCreateNestedOneWithoutProductOrderInterestsInput
  }

  export type ProductOrderInterestUncheckedCreateInput = {
    id?: string
    productId: string
    userId: string
    quantity?: number
    originalPrice: Decimal | DecimalJsLike | number | string
    discountPrice?: Decimal | DecimalJsLike | number | string | null
    currencyCode: string
    totalAmount: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderInterestStatus
    notes?: string | null
    preferredDeliveryDate?: Date | string | null
    deliveryAddress?: string | null
    contactPhone?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt?: Date | string | null
  }

  export type ProductOrderInterestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product?: ProductUpdateOneRequiredWithoutProductOrderInterestsNestedInput
    user?: UserUpdateOneRequiredWithoutProductOrderInterestsNestedInput
  }

  export type ProductOrderInterestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductOrderInterestCreateManyInput = {
    id?: string
    productId: string
    userId: string
    quantity?: number
    originalPrice: Decimal | DecimalJsLike | number | string
    discountPrice?: Decimal | DecimalJsLike | number | string | null
    currencyCode: string
    totalAmount: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderInterestStatus
    notes?: string | null
    preferredDeliveryDate?: Date | string | null
    deliveryAddress?: string | null
    contactPhone?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt?: Date | string | null
  }

  export type ProductOrderInterestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductOrderInterestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderItemCreateInput = {
    id?: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderItemStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    order: ordersCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateInput = {
    id?: string
    orderId: string
    productId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderItemStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: ordersUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemCreateManyInput = {
    id?: string
    orderId: string
    productId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderItemStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExternalTransactionCreateInput = {
    id?: string
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    customer: UserCreateNestedOneWithoutCustomerTransactionsInput
    order?: ordersCreateNestedOneWithoutExternalTransactionsInput
    paymentMethod?: PaymentMethodCreateNestedOneWithoutExternalTransactionsInput
    rideRequest?: RideRequestCreateNestedOneWithoutExternalTransactionsInput
    seller: UserCreateNestedOneWithoutSellerTransactionsInput
  }

  export type ExternalTransactionUncheckedCreateInput = {
    id?: string
    orderId?: string | null
    customerId: string
    sellerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type ExternalTransactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    customer?: UserUpdateOneRequiredWithoutCustomerTransactionsNestedInput
    order?: ordersUpdateOneWithoutExternalTransactionsNestedInput
    paymentMethod?: PaymentMethodUpdateOneWithoutExternalTransactionsNestedInput
    rideRequest?: RideRequestUpdateOneWithoutExternalTransactionsNestedInput
    seller?: UserUpdateOneRequiredWithoutSellerTransactionsNestedInput
  }

  export type ExternalTransactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExternalTransactionCreateManyInput = {
    id?: string
    orderId?: string | null
    customerId: string
    sellerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type ExternalTransactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
  }

  export type ExternalTransactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UCPCreateInput = {
    id?: string
    name: string
    value: Decimal | DecimalJsLike | number | string
    description?: string | null
    serviceType?: string | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type UCPUncheckedCreateInput = {
    id?: string
    name: string
    value: Decimal | DecimalJsLike | number | string
    description?: string | null
    serviceType?: string | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type UCPUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UCPUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UCPCreateManyInput = {
    id?: string
    name: string
    value: Decimal | DecimalJsLike | number | string
    description?: string | null
    serviceType?: string | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type UCPUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UCPUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RiderApplicationCreateInput = {
    id?: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driver?: DriverCreateNestedOneWithoutRiderApplicationInput
    user: UserCreateNestedOneWithoutRiderApplicationsInput
    documents?: RiderDocumentCreateNestedManyWithoutRiderApplicationInput
  }

  export type RiderApplicationUncheckedCreateInput = {
    id?: string
    userId: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driver?: DriverUncheckedCreateNestedOneWithoutRiderApplicationInput
    documents?: RiderDocumentUncheckedCreateNestedManyWithoutRiderApplicationInput
  }

  export type RiderApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driver?: DriverUpdateOneWithoutRiderApplicationNestedInput
    user?: UserUpdateOneRequiredWithoutRiderApplicationsNestedInput
    documents?: RiderDocumentUpdateManyWithoutRiderApplicationNestedInput
  }

  export type RiderApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driver?: DriverUncheckedUpdateOneWithoutRiderApplicationNestedInput
    documents?: RiderDocumentUncheckedUpdateManyWithoutRiderApplicationNestedInput
  }

  export type RiderApplicationCreateManyInput = {
    id?: string
    userId: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiderApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderDocumentCreateInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    uploadedAt?: Date | string
    riderApplication: RiderApplicationCreateNestedOneWithoutDocumentsInput
  }

  export type RiderDocumentUncheckedCreateInput = {
    id?: string
    riderApplicationId: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    uploadedAt?: Date | string
  }

  export type RiderDocumentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    riderApplication?: RiderApplicationUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type RiderDocumentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderDocumentCreateManyInput = {
    id?: string
    riderApplicationId: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    uploadedAt?: Date | string
  }

  export type RiderDocumentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderDocumentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverCreateInput = {
    id?: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
    earnings?: DriverEarningCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationCreateNestedManyWithoutDriverInput
    rideService?: RideServiceCreateNestedOneWithoutDriversInput
    riderApplication: RiderApplicationCreateNestedOneWithoutDriverInput
    user: UserCreateNestedOneWithoutDriverInput
    rideRequests?: RideRequestCreateNestedManyWithoutDriverInput
    rides?: RideCreateNestedManyWithoutDriverInput
  }

  export type DriverUncheckedCreateInput = {
    id?: string
    userId: string
    riderApplicationId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    updatedBy?: string | null
    earnings?: DriverEarningUncheckedCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationUncheckedCreateNestedManyWithoutDriverInput
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutDriverInput
    rides?: RideUncheckedCreateNestedManyWithoutDriverInput
  }

  export type DriverUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUpdateManyWithoutDriverNestedInput
    rideService?: RideServiceUpdateOneWithoutDriversNestedInput
    riderApplication?: RiderApplicationUpdateOneRequiredWithoutDriverNestedInput
    user?: UserUpdateOneRequiredWithoutDriverNestedInput
    rideRequests?: RideRequestUpdateManyWithoutDriverNestedInput
    rides?: RideUpdateManyWithoutDriverNestedInput
  }

  export type DriverUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUncheckedUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUncheckedUpdateManyWithoutDriverNestedInput
    rideRequests?: RideRequestUncheckedUpdateManyWithoutDriverNestedInput
    rides?: RideUncheckedUpdateManyWithoutDriverNestedInput
  }

  export type DriverCreateManyInput = {
    id?: string
    userId: string
    riderApplicationId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    updatedBy?: string | null
  }

  export type DriverUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DriverUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DriverLocationCreateInput = {
    id?: string
    latitude: number
    longitude: number
    address?: string | null
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
    driver: DriverCreateNestedOneWithoutLocationHistoryInput
  }

  export type DriverLocationUncheckedCreateInput = {
    id?: string
    driverId: string
    latitude: number
    longitude: number
    address?: string | null
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type DriverLocationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    driver?: DriverUpdateOneRequiredWithoutLocationHistoryNestedInput
  }

  export type DriverLocationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverLocationCreateManyInput = {
    id?: string
    driverId: string
    latitude: number
    longitude: number
    address?: string | null
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type DriverLocationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverLocationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideRequestCreateInput = {
    id?: string
    requestId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutRideRequestInput
    customer: UserCreateNestedOneWithoutCustomerRideRequestsInput
    driver?: DriverCreateNestedOneWithoutRideRequestsInput
    rideService?: RideServiceCreateNestedOneWithoutRideRequestsInput
    ride?: RideCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestUncheckedCreateInput = {
    id?: string
    requestId: string
    customerId: string
    driverId?: string | null
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutRideRequestInput
    ride?: RideUncheckedCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUpdateManyWithoutRideRequestNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRideRequestsNestedInput
    driver?: DriverUpdateOneWithoutRideRequestsNestedInput
    rideService?: RideServiceUpdateOneWithoutRideRequestsNestedInput
    ride?: RideUpdateOneWithoutRideRequestNestedInput
  }

  export type RideRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutRideRequestNestedInput
    ride?: RideUncheckedUpdateOneWithoutRideRequestNestedInput
  }

  export type RideRequestCreateManyInput = {
    id?: string
    requestId: string
    customerId: string
    driverId?: string | null
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    currency?: string
    currencySymbol?: string
  }

  export type RideRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
  }

  export type RideRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
  }

  export type RideCreateInput = {
    id?: string
    rideId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationCreateNestedManyWithoutRideInput
    rideToken?: RideTokenCreateNestedOneWithoutRideInput
    customer: UserCreateNestedOneWithoutCustomerRidesInput
    driver: DriverCreateNestedOneWithoutRidesInput
    rideRequest: RideRequestCreateNestedOneWithoutRideInput
    rideService?: RideServiceCreateNestedOneWithoutRidesInput
  }

  export type RideUncheckedCreateInput = {
    id?: string
    rideId: string
    rideRequestId: string
    driverId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedCreateNestedManyWithoutRideInput
    rideToken?: RideTokenUncheckedCreateNestedOneWithoutRideInput
  }

  export type RideUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUpdateOneWithoutRideNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRidesNestedInput
    driver?: DriverUpdateOneRequiredWithoutRidesNestedInput
    rideRequest?: RideRequestUpdateOneRequiredWithoutRideNestedInput
    rideService?: RideServiceUpdateOneWithoutRidesNestedInput
  }

  export type RideUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUncheckedUpdateOneWithoutRideNestedInput
  }

  export type RideCreateManyInput = {
    id?: string
    rideId: string
    rideRequestId: string
    driverId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    settlementStatus?: $Enums.PaymentStatus
  }

  export type RideUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  }

  export type RideUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  }

  export type RideTokenCreateInput = {
    id?: string
    token: string
    isUsed?: boolean
    usedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ride: RideCreateNestedOneWithoutRideTokenInput
  }

  export type RideTokenUncheckedCreateInput = {
    id?: string
    rideId: string
    token: string
    isUsed?: boolean
    usedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RideTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ride?: RideUpdateOneRequiredWithoutRideTokenNestedInput
  }

  export type RideTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideTokenCreateManyInput = {
    id?: string
    rideId: string
    token: string
    isUsed?: boolean
    usedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RideTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideLocationCreateInput = {
    id?: string
    latitude: number
    longitude: number
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
    ride: RideCreateNestedOneWithoutLocationUpdatesInput
  }

  export type RideLocationUncheckedCreateInput = {
    id?: string
    rideId: string
    latitude: number
    longitude: number
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type RideLocationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    ride?: RideUpdateOneRequiredWithoutLocationUpdatesNestedInput
  }

  export type RideLocationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideLocationCreateManyInput = {
    id?: string
    rideId: string
    latitude: number
    longitude: number
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type RideLocationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideLocationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverEarningCreateInput = {
    id?: string
    rideId: string
    amount: Decimal | DecimalJsLike | number | string
    type: string
    description?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    driver: DriverCreateNestedOneWithoutEarningsInput
  }

  export type DriverEarningUncheckedCreateInput = {
    id?: string
    driverId: string
    rideId: string
    amount: Decimal | DecimalJsLike | number | string
    type: string
    description?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type DriverEarningUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driver?: DriverUpdateOneRequiredWithoutEarningsNestedInput
  }

  export type DriverEarningUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverEarningCreateManyInput = {
    id?: string
    driverId: string
    rideId: string
    amount: Decimal | DecimalJsLike | number | string
    type: string
    description?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type DriverEarningUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverEarningUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideServiceCreateInput = {
    id?: string
    serviceId: string
    name: string
    description?: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: $Enums.DistanceUnit
    baseDistance?: number
    maxDistance?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    perKmRate: Decimal | DecimalJsLike | number | string
    perMinuteRate: Decimal | DecimalJsLike | number | string
    minimumFare: Decimal | DecimalJsLike | number | string
    maximumFare?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    currencySymbol?: string
    surgeMultiplier?: Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: Decimal | DecimalJsLike | number | string
    platformFeePercentage?: Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: Decimal | DecimalJsLike | number | string
    cancellationFee?: Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: number
    maxWaitTime?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    drivers?: DriverCreateNestedManyWithoutRideServiceInput
    rideRequests?: RideRequestCreateNestedManyWithoutRideServiceInput
    rides?: RideCreateNestedManyWithoutRideServiceInput
  }

  export type RideServiceUncheckedCreateInput = {
    id?: string
    serviceId: string
    name: string
    description?: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: $Enums.DistanceUnit
    baseDistance?: number
    maxDistance?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    perKmRate: Decimal | DecimalJsLike | number | string
    perMinuteRate: Decimal | DecimalJsLike | number | string
    minimumFare: Decimal | DecimalJsLike | number | string
    maximumFare?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    currencySymbol?: string
    surgeMultiplier?: Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: Decimal | DecimalJsLike | number | string
    platformFeePercentage?: Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: Decimal | DecimalJsLike | number | string
    cancellationFee?: Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: number
    maxWaitTime?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    drivers?: DriverUncheckedCreateNestedManyWithoutRideServiceInput
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutRideServiceInput
    rides?: RideUncheckedCreateNestedManyWithoutRideServiceInput
  }

  export type RideServiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    drivers?: DriverUpdateManyWithoutRideServiceNestedInput
    rideRequests?: RideRequestUpdateManyWithoutRideServiceNestedInput
    rides?: RideUpdateManyWithoutRideServiceNestedInput
  }

  export type RideServiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    drivers?: DriverUncheckedUpdateManyWithoutRideServiceNestedInput
    rideRequests?: RideRequestUncheckedUpdateManyWithoutRideServiceNestedInput
    rides?: RideUncheckedUpdateManyWithoutRideServiceNestedInput
  }

  export type RideServiceCreateManyInput = {
    id?: string
    serviceId: string
    name: string
    description?: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: $Enums.DistanceUnit
    baseDistance?: number
    maxDistance?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    perKmRate: Decimal | DecimalJsLike | number | string
    perMinuteRate: Decimal | DecimalJsLike | number | string
    minimumFare: Decimal | DecimalJsLike | number | string
    maximumFare?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    currencySymbol?: string
    surgeMultiplier?: Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: Decimal | DecimalJsLike | number | string
    platformFeePercentage?: Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: Decimal | DecimalJsLike | number | string
    cancellationFee?: Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: number
    maxWaitTime?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type RideServiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RideServiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordersCreateInput = {
    id: string
    orderNumber: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutOrderInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    User_orders_sellerIdToUser: UserCreateNestedOneWithoutOrders_orders_sellerIdToUserInput
    User_orders_userIdToUser: UserCreateNestedOneWithoutOrders_orders_userIdToUserInput
  }

  export type ordersUncheckedCreateInput = {
    id: string
    orderNumber: string
    userId: string
    sellerId: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutOrderInput
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    externalTransactions?: ExternalTransactionUpdateManyWithoutOrderNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    User_orders_sellerIdToUser?: UserUpdateOneRequiredWithoutOrders_orders_sellerIdToUserNestedInput
    User_orders_userIdToUser?: UserUpdateOneRequiredWithoutOrders_orders_userIdToUserNestedInput
  }

  export type ordersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutOrderNestedInput
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ordersCreateManyInput = {
    id: string
    orderNumber: string
    userId: string
    sellerId: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
  }

  export type ordersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type OperatorEntityScalarRelationFilter = {
    is?: OperatorEntityWhereInput
    isNot?: OperatorEntityWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AdminCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    username?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    operatorEntityId?: SortOrder
    createdBy?: SortOrder
  }

  export type AdminMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    username?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    operatorEntityId?: SortOrder
    createdBy?: SortOrder
  }

  export type AdminMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    username?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    operatorEntityId?: SortOrder
    createdBy?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type OperatorEntityListRelationFilter = {
    every?: OperatorEntityWhereInput
    some?: OperatorEntityWhereInput
    none?: OperatorEntityWhereInput
  }

  export type RolePermissionListRelationFilter = {
    every?: RolePermissionWhereInput
    some?: RolePermissionWhereInput
    none?: RolePermissionWhereInput
  }

  export type OperatorEntityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RolePermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type EnumEntityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EntityType | EnumEntityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEntityTypeFilter<$PrismaModel> | $Enums.EntityType
  }

  export type EnumPermissionFilter<$PrismaModel = never> = {
    equals?: $Enums.Permission | EnumPermissionFieldRefInput<$PrismaModel>
    in?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    not?: NestedEnumPermissionFilter<$PrismaModel> | $Enums.Permission
  }

  export type RoleScalarRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type RolePermissionRoleIdEntityTypePermissionCompoundUniqueInput = {
    roleId: string
    entityType: $Enums.EntityType
    permission: $Enums.Permission
  }

  export type RolePermissionCountOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    entityType?: SortOrder
    permission?: SortOrder
    isGranted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RolePermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    entityType?: SortOrder
    permission?: SortOrder
    isGranted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RolePermissionMinOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    entityType?: SortOrder
    permission?: SortOrder
    isGranted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumEntityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EntityType | EnumEntityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEntityTypeWithAggregatesFilter<$PrismaModel> | $Enums.EntityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEntityTypeFilter<$PrismaModel>
    _max?: NestedEnumEntityTypeFilter<$PrismaModel>
  }

  export type EnumPermissionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Permission | EnumPermissionFieldRefInput<$PrismaModel>
    in?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    not?: NestedEnumPermissionWithAggregatesFilter<$PrismaModel> | $Enums.Permission
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPermissionFilter<$PrismaModel>
    _max?: NestedEnumPermissionFilter<$PrismaModel>
  }

  export type AdminListRelationFilter = {
    every?: AdminWhereInput
    some?: AdminWhereInput
    none?: AdminWhereInput
  }

  export type AdminOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OperatorEntityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    roleId?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type OperatorEntityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    roleId?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type OperatorEntityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    roleId?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type DeliveryAddressListRelationFilter = {
    every?: DeliveryAddressWhereInput
    some?: DeliveryAddressWhereInput
    none?: DeliveryAddressWhereInput
  }

  export type DeviceListRelationFilter = {
    every?: DeviceWhereInput
    some?: DeviceWhereInput
    none?: DeviceWhereInput
  }

  export type ExternalTransactionListRelationFilter = {
    every?: ExternalTransactionWhereInput
    some?: ExternalTransactionWhereInput
    none?: ExternalTransactionWhereInput
  }

  export type PaymentMethodListRelationFilter = {
    every?: PaymentMethodWhereInput
    some?: PaymentMethodWhereInput
    none?: PaymentMethodWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type SellerKycNullableScalarRelationFilter = {
    is?: SellerKycWhereInput | null
    isNot?: SellerKycWhereInput | null
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type SettlementListRelationFilter = {
    every?: SettlementWhereInput
    some?: SettlementWhereInput
    none?: SettlementWhereInput
  }

  export type DriverNullableScalarRelationFilter = {
    is?: DriverWhereInput | null
    isNot?: DriverWhereInput | null
  }

  export type OrdersListRelationFilter = {
    every?: ordersWhereInput
    some?: ordersWhereInput
    none?: ordersWhereInput
  }

  export type ProductOrderInterestListRelationFilter = {
    every?: ProductOrderInterestWhereInput
    some?: ProductOrderInterestWhereInput
    none?: ProductOrderInterestWhereInput
  }

  export type ProductViewListRelationFilter = {
    every?: ProductViewWhereInput
    some?: ProductViewWhereInput
    none?: ProductViewWhereInput
  }

  export type RideRequestListRelationFilter = {
    every?: RideRequestWhereInput
    some?: RideRequestWhereInput
    none?: RideRequestWhereInput
  }

  export type RiderApplicationListRelationFilter = {
    every?: RiderApplicationWhereInput
    some?: RiderApplicationWhereInput
    none?: RiderApplicationWhereInput
  }

  export type RideListRelationFilter = {
    every?: RideWhereInput
    some?: RideWhereInput
    none?: RideWhereInput
  }

  export type DeliveryAddressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DeviceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ExternalTransactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentMethodOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SettlementOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ordersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderInterestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductViewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RideRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RiderApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RideOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    middleName?: SortOrder
    lastName?: SortOrder
    phoneNumber?: SortOrder
    pin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    middleName?: SortOrder
    lastName?: SortOrder
    phoneNumber?: SortOrder
    pin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    middleName?: SortOrder
    lastName?: SortOrder
    phoneNumber?: SortOrder
    pin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type DeliveryAddressCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    isDefault?: SortOrder
    label?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isDeleted?: SortOrder
  }

  export type DeliveryAddressMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    isDefault?: SortOrder
    label?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isDeleted?: SortOrder
  }

  export type DeliveryAddressMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    isDefault?: SortOrder
    label?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isDeleted?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type PaymentGatewayServiceProviderNameCountryCodeCompoundUniqueInput = {
    name: string
    countryCode: string
  }

  export type PaymentGatewayServiceProviderCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    countryCode?: SortOrder
    currencyCode?: SortOrder
    isActive?: SortOrder
    logoUrl?: SortOrder
    description?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PaymentGatewayServiceProviderMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    countryCode?: SortOrder
    currencyCode?: SortOrder
    isActive?: SortOrder
    logoUrl?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PaymentGatewayServiceProviderMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    countryCode?: SortOrder
    currencyCode?: SortOrder
    isActive?: SortOrder
    logoUrl?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DeviceUserIdDeviceIdCompoundUniqueInput = {
    userId: string
    deviceId: string
  }

  export type DeviceCountOrderByAggregateInput = {
    id?: SortOrder
    deviceId?: SortOrder
    deviceName?: SortOrder
    deviceType?: SortOrder
    isVerified?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    brand?: SortOrder
    modelName?: SortOrder
    osVersion?: SortOrder
    phoneNumber?: SortOrder
    lastLogoutAt?: SortOrder
  }

  export type DeviceMaxOrderByAggregateInput = {
    id?: SortOrder
    deviceId?: SortOrder
    deviceName?: SortOrder
    deviceType?: SortOrder
    isVerified?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    brand?: SortOrder
    modelName?: SortOrder
    osVersion?: SortOrder
    phoneNumber?: SortOrder
    lastLogoutAt?: SortOrder
  }

  export type DeviceMinOrderByAggregateInput = {
    id?: SortOrder
    deviceId?: SortOrder
    deviceName?: SortOrder
    deviceType?: SortOrder
    isVerified?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    brand?: SortOrder
    modelName?: SortOrder
    osVersion?: SortOrder
    phoneNumber?: SortOrder
    lastLogoutAt?: SortOrder
  }

  export type DeviceScalarRelationFilter = {
    is?: DeviceWhereInput
    isNot?: DeviceWhereInput
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type OTPCountOrderByAggregateInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isUsed?: SortOrder
    attempts?: SortOrder
    originalCode?: SortOrder
  }

  export type OTPAvgOrderByAggregateInput = {
    attempts?: SortOrder
  }

  export type OTPMaxOrderByAggregateInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isUsed?: SortOrder
    attempts?: SortOrder
    originalCode?: SortOrder
  }

  export type OTPMinOrderByAggregateInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isUsed?: SortOrder
    attempts?: SortOrder
    originalCode?: SortOrder
  }

  export type OTPSumOrderByAggregateInput = {
    attempts?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumProductConditionFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductCondition | EnumProductConditionFieldRefInput<$PrismaModel>
    in?: $Enums.ProductCondition[] | ListEnumProductConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductCondition[] | ListEnumProductConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumProductConditionFilter<$PrismaModel> | $Enums.ProductCondition
  }

  export type EnumProductStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusFilter<$PrismaModel> | $Enums.ProductStatus
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type CategoryNullableScalarRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type LocationScalarRelationFilter = {
    is?: LocationWhereInput
    isNot?: LocationWhereInput
  }

  export type ProductAttributeListRelationFilter = {
    every?: ProductAttributeWhereInput
    some?: ProductAttributeWhereInput
    none?: ProductAttributeWhereInput
  }

  export type ProductDeliveryOptionListRelationFilter = {
    every?: ProductDeliveryOptionWhereInput
    some?: ProductDeliveryOptionWhereInput
    none?: ProductDeliveryOptionWhereInput
  }

  export type ProductImageListRelationFilter = {
    every?: ProductImageWhereInput
    some?: ProductImageWhereInput
    none?: ProductImageWhereInput
  }

  export type ProductTranslationListRelationFilter = {
    every?: ProductTranslationWhereInput
    some?: ProductTranslationWhereInput
    none?: ProductTranslationWhereInput
  }

  export type OrderItemListRelationFilter = {
    every?: OrderItemWhereInput
    some?: OrderItemWhereInput
    none?: OrderItemWhereInput
  }

  export type ProductAttributeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductDeliveryOptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductImageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    sellerId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    quantity?: SortOrder
    categoryId?: SortOrder
    condition?: SortOrder
    locationId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    views?: SortOrder
    favorites?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
    isFeatured?: SortOrder
    featuredUntil?: SortOrder
    metadata?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    price?: SortOrder
    quantity?: SortOrder
    views?: SortOrder
    favorites?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    sellerId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    quantity?: SortOrder
    categoryId?: SortOrder
    condition?: SortOrder
    locationId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    views?: SortOrder
    favorites?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
    isFeatured?: SortOrder
    featuredUntil?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    sellerId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    quantity?: SortOrder
    categoryId?: SortOrder
    condition?: SortOrder
    locationId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    views?: SortOrder
    favorites?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
    isFeatured?: SortOrder
    featuredUntil?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    price?: SortOrder
    quantity?: SortOrder
    views?: SortOrder
    favorites?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumProductConditionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductCondition | EnumProductConditionFieldRefInput<$PrismaModel>
    in?: $Enums.ProductCondition[] | ListEnumProductConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductCondition[] | ListEnumProductConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumProductConditionWithAggregatesFilter<$PrismaModel> | $Enums.ProductCondition
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductConditionFilter<$PrismaModel>
    _max?: NestedEnumProductConditionFilter<$PrismaModel>
  }

  export type EnumProductStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductStatusFilter<$PrismaModel>
    _max?: NestedEnumProductStatusFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type ProductImageCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    imageUrl?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    width?: SortOrder
    height?: SortOrder
    size?: SortOrder
    format?: SortOrder
    altText?: SortOrder
  }

  export type ProductImageAvgOrderByAggregateInput = {
    width?: SortOrder
    height?: SortOrder
    size?: SortOrder
  }

  export type ProductImageMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    imageUrl?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    width?: SortOrder
    height?: SortOrder
    size?: SortOrder
    format?: SortOrder
    altText?: SortOrder
  }

  export type ProductImageMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    imageUrl?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    width?: SortOrder
    height?: SortOrder
    size?: SortOrder
    format?: SortOrder
    altText?: SortOrder
  }

  export type ProductImageSumOrderByAggregateInput = {
    width?: SortOrder
    height?: SortOrder
    size?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type CategoryListRelationFilter = {
    every?: CategoryWhereInput
    some?: CategoryWhereInput
    none?: CategoryWhereInput
  }

  export type CategoryTranslationListRelationFilter = {
    every?: CategoryTranslationWhereInput
    some?: CategoryTranslationWhereInput
    none?: CategoryTranslationWhereInput
  }

  export type CategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    parentId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    imageUrl?: SortOrder
    order?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrder
    createdBy?: SortOrder
  }

  export type CategoryAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    parentId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    imageUrl?: SortOrder
    order?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    parentId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    imageUrl?: SortOrder
    order?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
  }

  export type CategorySumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type LocationCountOrderByAggregateInput = {
    id?: SortOrder
    countryCode?: SortOrder
    region?: SortOrder
    city?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    timezone?: SortOrder
    isActive?: SortOrder
  }

  export type LocationAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type LocationMaxOrderByAggregateInput = {
    id?: SortOrder
    countryCode?: SortOrder
    region?: SortOrder
    city?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    timezone?: SortOrder
    isActive?: SortOrder
  }

  export type LocationMinOrderByAggregateInput = {
    id?: SortOrder
    countryCode?: SortOrder
    region?: SortOrder
    city?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    timezone?: SortOrder
    isActive?: SortOrder
  }

  export type LocationSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type ProductAttributeCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    unit?: SortOrder
    isFilterable?: SortOrder
    order?: SortOrder
  }

  export type ProductAttributeAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type ProductAttributeMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    unit?: SortOrder
    isFilterable?: SortOrder
    order?: SortOrder
  }

  export type ProductAttributeMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    unit?: SortOrder
    isFilterable?: SortOrder
    order?: SortOrder
  }

  export type ProductAttributeSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type ProductTranslationProductIdLocaleCompoundUniqueInput = {
    productId: string
    locale: string
  }

  export type ProductTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumDeliveryTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryType | EnumDeliveryTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryType[] | ListEnumDeliveryTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryType[] | ListEnumDeliveryTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryTypeFilter<$PrismaModel> | $Enums.DeliveryType
  }

  export type ProductDeliveryOptionCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    deliveryType?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    estimatedDays?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductDeliveryOptionAvgOrderByAggregateInput = {
    price?: SortOrder
    estimatedDays?: SortOrder
  }

  export type ProductDeliveryOptionMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    deliveryType?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    estimatedDays?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductDeliveryOptionMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    deliveryType?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    currencyCode?: SortOrder
    estimatedDays?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductDeliveryOptionSumOrderByAggregateInput = {
    price?: SortOrder
    estimatedDays?: SortOrder
  }

  export type EnumDeliveryTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryType | EnumDeliveryTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryType[] | ListEnumDeliveryTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryType[] | ListEnumDeliveryTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryTypeWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryTypeFilter<$PrismaModel>
    _max?: NestedEnumDeliveryTypeFilter<$PrismaModel>
  }

  export type CategoryScalarRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type CategoryTranslationCategoryIdLocaleCompoundUniqueInput = {
    categoryId: string
    locale: string
  }

  export type CategoryTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    locale?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    locale?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    locale?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumBusinessTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessType | EnumBusinessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessTypeFilter<$PrismaModel> | $Enums.BusinessType
  }

  export type EnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type EnumKycStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.KycStatus | EnumKycStatusFieldRefInput<$PrismaModel>
    in?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumKycStatusFilter<$PrismaModel> | $Enums.KycStatus
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type BankAccountListRelationFilter = {
    every?: BankAccountWhereInput
    some?: BankAccountWhereInput
    none?: BankAccountWhereInput
  }

  export type WalletListRelationFilter = {
    every?: WalletWhereInput
    some?: WalletWhereInput
    none?: WalletWhereInput
  }

  export type BankAccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WalletOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SellerKycCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    businessName?: SortOrder
    businessType?: SortOrder
    registrationNumber?: SortOrder
    taxId?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentUrl?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrder
    verifiedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    country?: SortOrder
    documentExpiryDate?: SortOrder
    statusChangedBy?: SortOrder
    statusChangedAt?: SortOrder
  }

  export type SellerKycMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    businessName?: SortOrder
    businessType?: SortOrder
    registrationNumber?: SortOrder
    taxId?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentUrl?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrder
    verifiedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    documentExpiryDate?: SortOrder
    statusChangedBy?: SortOrder
    statusChangedAt?: SortOrder
  }

  export type SellerKycMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    businessName?: SortOrder
    businessType?: SortOrder
    registrationNumber?: SortOrder
    taxId?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentUrl?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrder
    verifiedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    documentExpiryDate?: SortOrder
    statusChangedBy?: SortOrder
    statusChangedAt?: SortOrder
  }

  export type EnumBusinessTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessType | EnumBusinessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessTypeWithAggregatesFilter<$PrismaModel> | $Enums.BusinessType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBusinessTypeFilter<$PrismaModel>
    _max?: NestedEnumBusinessTypeFilter<$PrismaModel>
  }

  export type EnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type EnumKycStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.KycStatus | EnumKycStatusFieldRefInput<$PrismaModel>
    in?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumKycStatusWithAggregatesFilter<$PrismaModel> | $Enums.KycStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumKycStatusFilter<$PrismaModel>
    _max?: NestedEnumKycStatusFilter<$PrismaModel>
  }

  export type EnumAccountStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountStatus | EnumAccountStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountStatusFilter<$PrismaModel> | $Enums.AccountStatus
  }

  export type SellerKycScalarRelationFilter = {
    is?: SellerKycWhereInput
    isNot?: SellerKycWhereInput
  }

  export type BankAccountCountOrderByAggregateInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankCode?: SortOrder
    branchCode?: SortOrder
    swiftCode?: SortOrder
    iban?: SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BankAccountMaxOrderByAggregateInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankCode?: SortOrder
    branchCode?: SortOrder
    swiftCode?: SortOrder
    iban?: SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BankAccountMinOrderByAggregateInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankCode?: SortOrder
    branchCode?: SortOrder
    swiftCode?: SortOrder
    iban?: SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumAccountStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountStatus | EnumAccountStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountStatusWithAggregatesFilter<$PrismaModel> | $Enums.AccountStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAccountStatusFilter<$PrismaModel>
    _max?: NestedEnumAccountStatusFilter<$PrismaModel>
  }

  export type EnumWalletTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.WalletType | EnumWalletTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWalletTypeFilter<$PrismaModel> | $Enums.WalletType
  }

  export type WalletCountOrderByAggregateInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    walletType?: SortOrder
    walletAddress?: SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    account?: SortOrder
  }

  export type WalletMaxOrderByAggregateInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    walletType?: SortOrder
    walletAddress?: SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    account?: SortOrder
  }

  export type WalletMinOrderByAggregateInput = {
    id?: SortOrder
    sellerKycId?: SortOrder
    walletType?: SortOrder
    walletAddress?: SortOrder
    currency?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    account?: SortOrder
  }

  export type EnumWalletTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WalletType | EnumWalletTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWalletTypeWithAggregatesFilter<$PrismaModel> | $Enums.WalletType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWalletTypeFilter<$PrismaModel>
    _max?: NestedEnumWalletTypeFilter<$PrismaModel>
  }

  export type EnumPaymentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentTypeFilter<$PrismaModel> | $Enums.PaymentType
  }

  export type PaymentMethodCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    accountId?: SortOrder
    accountName?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentMethodMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    accountId?: SortOrder
    accountName?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentMethodMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    accountId?: SortOrder
    accountName?: SortOrder
    isDefault?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumPaymentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentTypeWithAggregatesFilter<$PrismaModel> | $Enums.PaymentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentTypeFilter<$PrismaModel>
    _max?: NestedEnumPaymentTypeFilter<$PrismaModel>
  }

  export type EnumSettlementStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementStatus | EnumSettlementStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementStatus[] | ListEnumSettlementStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementStatus[] | ListEnumSettlementStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementStatusFilter<$PrismaModel> | $Enums.SettlementStatus
  }

  export type EnumSettlementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementType | EnumSettlementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementType[] | ListEnumSettlementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementType[] | ListEnumSettlementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementTypeFilter<$PrismaModel> | $Enums.SettlementType
  }

  export type EnumSettlementChannelFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementChannel | EnumSettlementChannelFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementChannel[] | ListEnumSettlementChannelFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementChannel[] | ListEnumSettlementChannelFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementChannelFilter<$PrismaModel> | $Enums.SettlementChannel
  }

  export type BankAccountNullableScalarRelationFilter = {
    is?: BankAccountWhereInput | null
    isNot?: BankAccountWhereInput | null
  }

  export type WalletNullableScalarRelationFilter = {
    is?: WalletWhereInput | null
    isNot?: WalletWhereInput | null
  }

  export type SettlementCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    bankAccountId?: SortOrder
    walletId?: SortOrder
    metadata?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    includedOrderIds?: SortOrder
    netAmountBeforeFees?: SortOrder
    serviceFeesDeducted?: SortOrder
    totalOrdersCount?: SortOrder
    channel?: SortOrder
    includedRideIds?: SortOrder
    totalRidesCount?: SortOrder
  }

  export type SettlementAvgOrderByAggregateInput = {
    amount?: SortOrder
    netAmountBeforeFees?: SortOrder
    serviceFeesDeducted?: SortOrder
    totalOrdersCount?: SortOrder
    totalRidesCount?: SortOrder
  }

  export type SettlementMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    bankAccountId?: SortOrder
    walletId?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    netAmountBeforeFees?: SortOrder
    serviceFeesDeducted?: SortOrder
    totalOrdersCount?: SortOrder
    channel?: SortOrder
    totalRidesCount?: SortOrder
  }

  export type SettlementMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    bankAccountId?: SortOrder
    walletId?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    netAmountBeforeFees?: SortOrder
    serviceFeesDeducted?: SortOrder
    totalOrdersCount?: SortOrder
    channel?: SortOrder
    totalRidesCount?: SortOrder
  }

  export type SettlementSumOrderByAggregateInput = {
    amount?: SortOrder
    netAmountBeforeFees?: SortOrder
    serviceFeesDeducted?: SortOrder
    totalOrdersCount?: SortOrder
    totalRidesCount?: SortOrder
  }

  export type EnumSettlementStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementStatus | EnumSettlementStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementStatus[] | ListEnumSettlementStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementStatus[] | ListEnumSettlementStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementStatusWithAggregatesFilter<$PrismaModel> | $Enums.SettlementStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSettlementStatusFilter<$PrismaModel>
    _max?: NestedEnumSettlementStatusFilter<$PrismaModel>
  }

  export type EnumSettlementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementType | EnumSettlementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementType[] | ListEnumSettlementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementType[] | ListEnumSettlementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementTypeWithAggregatesFilter<$PrismaModel> | $Enums.SettlementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSettlementTypeFilter<$PrismaModel>
    _max?: NestedEnumSettlementTypeFilter<$PrismaModel>
  }

  export type EnumSettlementChannelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementChannel | EnumSettlementChannelFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementChannel[] | ListEnumSettlementChannelFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementChannel[] | ListEnumSettlementChannelFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementChannelWithAggregatesFilter<$PrismaModel> | $Enums.SettlementChannel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSettlementChannelFilter<$PrismaModel>
    _max?: NestedEnumSettlementChannelFilter<$PrismaModel>
  }

  export type ProductViewProductIdUserIdDeviceIdCompoundUniqueInput = {
    productId: string
    userId: string
    deviceId: string
  }

  export type ProductViewCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    ipAddress?: SortOrder
    viewedAt?: SortOrder
  }

  export type ProductViewMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    ipAddress?: SortOrder
    viewedAt?: SortOrder
  }

  export type ProductViewMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    ipAddress?: SortOrder
    viewedAt?: SortOrder
  }

  export type EnumOrderInterestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderInterestStatus | EnumOrderInterestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderInterestStatus[] | ListEnumOrderInterestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderInterestStatus[] | ListEnumOrderInterestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderInterestStatusFilter<$PrismaModel> | $Enums.OrderInterestStatus
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type ProductOrderInterestCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    quantity?: SortOrder
    originalPrice?: SortOrder
    discountPrice?: SortOrder
    currencyCode?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    preferredDeliveryDate?: SortOrder
    deliveryAddress?: SortOrder
    contactPhone?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type ProductOrderInterestAvgOrderByAggregateInput = {
    quantity?: SortOrder
    originalPrice?: SortOrder
    discountPrice?: SortOrder
    totalAmount?: SortOrder
  }

  export type ProductOrderInterestMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    quantity?: SortOrder
    originalPrice?: SortOrder
    discountPrice?: SortOrder
    currencyCode?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    preferredDeliveryDate?: SortOrder
    deliveryAddress?: SortOrder
    contactPhone?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type ProductOrderInterestMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    quantity?: SortOrder
    originalPrice?: SortOrder
    discountPrice?: SortOrder
    currencyCode?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    preferredDeliveryDate?: SortOrder
    deliveryAddress?: SortOrder
    contactPhone?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type ProductOrderInterestSumOrderByAggregateInput = {
    quantity?: SortOrder
    originalPrice?: SortOrder
    discountPrice?: SortOrder
    totalAmount?: SortOrder
  }

  export type EnumOrderInterestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderInterestStatus | EnumOrderInterestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderInterestStatus[] | ListEnumOrderInterestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderInterestStatus[] | ListEnumOrderInterestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderInterestStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderInterestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderInterestStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderInterestStatusFilter<$PrismaModel>
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumOrderItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemStatus | EnumOrderItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemStatusFilter<$PrismaModel> | $Enums.OrderItemStatus
  }

  export type OrdersScalarRelationFilter = {
    is?: ordersWhereInput
    isNot?: ordersWhereInput
  }

  export type OrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    productSnapshot?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type OrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumOrderItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemStatus | EnumOrderItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderItemStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderItemStatusFilter<$PrismaModel>
  }

  export type EnumTransactionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusFilter<$PrismaModel> | $Enums.TransactionStatus
  }

  export type EnumTransactionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeFilter<$PrismaModel> | $Enums.TransactionType
  }

  export type EnumAppServiceFilter<$PrismaModel = never> = {
    equals?: $Enums.AppService | EnumAppServiceFieldRefInput<$PrismaModel>
    in?: $Enums.AppService[] | ListEnumAppServiceFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppService[] | ListEnumAppServiceFieldRefInput<$PrismaModel>
    not?: NestedEnumAppServiceFilter<$PrismaModel> | $Enums.AppService
  }

  export type OrdersNullableScalarRelationFilter = {
    is?: ordersWhereInput | null
    isNot?: ordersWhereInput | null
  }

  export type PaymentMethodNullableScalarRelationFilter = {
    is?: PaymentMethodWhereInput | null
    isNot?: PaymentMethodWhereInput | null
  }

  export type RideRequestNullableScalarRelationFilter = {
    is?: RideRequestWhereInput | null
    isNot?: RideRequestWhereInput | null
  }

  export type ExternalTransactionCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    customerId?: SortOrder
    sellerId?: SortOrder
    paymentMethodId?: SortOrder
    gatewayProvider?: SortOrder
    gatewayTransactionId?: SortOrder
    paymentReference?: SortOrder
    amount?: SortOrder
    currencyCode?: SortOrder
    gatewayChargeFees?: SortOrder
    paidThroughGateway?: SortOrder
    gatewayResponse?: SortOrder
    gatewayRequest?: SortOrder
    status?: SortOrder
    failureReason?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    appTransactionId?: SortOrder
    processedAmount?: SortOrder
    transactionType?: SortOrder
    appService?: SortOrder
    rideRequestId?: SortOrder
  }

  export type ExternalTransactionAvgOrderByAggregateInput = {
    amount?: SortOrder
    gatewayChargeFees?: SortOrder
    processedAmount?: SortOrder
  }

  export type ExternalTransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    customerId?: SortOrder
    sellerId?: SortOrder
    paymentMethodId?: SortOrder
    gatewayProvider?: SortOrder
    gatewayTransactionId?: SortOrder
    paymentReference?: SortOrder
    amount?: SortOrder
    currencyCode?: SortOrder
    gatewayChargeFees?: SortOrder
    paidThroughGateway?: SortOrder
    status?: SortOrder
    failureReason?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    appTransactionId?: SortOrder
    processedAmount?: SortOrder
    transactionType?: SortOrder
    appService?: SortOrder
    rideRequestId?: SortOrder
  }

  export type ExternalTransactionMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    customerId?: SortOrder
    sellerId?: SortOrder
    paymentMethodId?: SortOrder
    gatewayProvider?: SortOrder
    gatewayTransactionId?: SortOrder
    paymentReference?: SortOrder
    amount?: SortOrder
    currencyCode?: SortOrder
    gatewayChargeFees?: SortOrder
    paidThroughGateway?: SortOrder
    status?: SortOrder
    failureReason?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    appTransactionId?: SortOrder
    processedAmount?: SortOrder
    transactionType?: SortOrder
    appService?: SortOrder
    rideRequestId?: SortOrder
  }

  export type ExternalTransactionSumOrderByAggregateInput = {
    amount?: SortOrder
    gatewayChargeFees?: SortOrder
    processedAmount?: SortOrder
  }

  export type EnumTransactionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransactionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionStatusFilter<$PrismaModel>
    _max?: NestedEnumTransactionStatusFilter<$PrismaModel>
  }

  export type EnumTransactionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeWithAggregatesFilter<$PrismaModel> | $Enums.TransactionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionTypeFilter<$PrismaModel>
    _max?: NestedEnumTransactionTypeFilter<$PrismaModel>
  }

  export type EnumAppServiceWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AppService | EnumAppServiceFieldRefInput<$PrismaModel>
    in?: $Enums.AppService[] | ListEnumAppServiceFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppService[] | ListEnumAppServiceFieldRefInput<$PrismaModel>
    not?: NestedEnumAppServiceWithAggregatesFilter<$PrismaModel> | $Enums.AppService
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAppServiceFilter<$PrismaModel>
    _max?: NestedEnumAppServiceFilter<$PrismaModel>
  }

  export type UCPCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    description?: SortOrder
    serviceType?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type UCPAvgOrderByAggregateInput = {
    value?: SortOrder
  }

  export type UCPMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    description?: SortOrder
    serviceType?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type UCPMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    description?: SortOrder
    serviceType?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type UCPSumOrderByAggregateInput = {
    value?: SortOrder
  }

  export type EnumRiderVehicleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RiderVehicleType | EnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RiderVehicleType[] | ListEnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RiderVehicleType[] | ListEnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRiderVehicleTypeFilter<$PrismaModel> | $Enums.RiderVehicleType
  }

  export type EnumRiderApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RiderApplicationStatus | EnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RiderApplicationStatus[] | ListEnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RiderApplicationStatus[] | ListEnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRiderApplicationStatusFilter<$PrismaModel> | $Enums.RiderApplicationStatus
  }

  export type RiderDocumentListRelationFilter = {
    every?: RiderDocumentWhereInput
    some?: RiderDocumentWhereInput
    none?: RiderDocumentWhereInput
  }

  export type RiderDocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RiderApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    vehicleType?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phoneNumber?: SortOrder
    dateOfBirth?: SortOrder
    address?: SortOrder
    city?: SortOrder
    licenseNumber?: SortOrder
    licenseExpiry?: SortOrder
    vehicleModel?: SortOrder
    vehiclePlate?: SortOrder
    insuranceNumber?: SortOrder
    insuranceExpiry?: SortOrder
    emergencyContact?: SortOrder
    emergencyPhone?: SortOrder
    experience?: SortOrder
    availability?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    approvedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RiderApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    vehicleType?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phoneNumber?: SortOrder
    dateOfBirth?: SortOrder
    address?: SortOrder
    city?: SortOrder
    licenseNumber?: SortOrder
    licenseExpiry?: SortOrder
    vehicleModel?: SortOrder
    vehiclePlate?: SortOrder
    insuranceNumber?: SortOrder
    insuranceExpiry?: SortOrder
    emergencyContact?: SortOrder
    emergencyPhone?: SortOrder
    experience?: SortOrder
    availability?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    approvedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RiderApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    vehicleType?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phoneNumber?: SortOrder
    dateOfBirth?: SortOrder
    address?: SortOrder
    city?: SortOrder
    licenseNumber?: SortOrder
    licenseExpiry?: SortOrder
    vehicleModel?: SortOrder
    vehiclePlate?: SortOrder
    insuranceNumber?: SortOrder
    insuranceExpiry?: SortOrder
    emergencyContact?: SortOrder
    emergencyPhone?: SortOrder
    experience?: SortOrder
    availability?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    approvedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumRiderVehicleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RiderVehicleType | EnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RiderVehicleType[] | ListEnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RiderVehicleType[] | ListEnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRiderVehicleTypeWithAggregatesFilter<$PrismaModel> | $Enums.RiderVehicleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRiderVehicleTypeFilter<$PrismaModel>
    _max?: NestedEnumRiderVehicleTypeFilter<$PrismaModel>
  }

  export type EnumRiderApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RiderApplicationStatus | EnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RiderApplicationStatus[] | ListEnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RiderApplicationStatus[] | ListEnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRiderApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.RiderApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRiderApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumRiderApplicationStatusFilter<$PrismaModel>
  }

  export type RiderApplicationScalarRelationFilter = {
    is?: RiderApplicationWhereInput
    isNot?: RiderApplicationWhereInput
  }

  export type RiderDocumentCountOrderByAggregateInput = {
    id?: SortOrder
    riderApplicationId?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    uploadedAt?: SortOrder
  }

  export type RiderDocumentAvgOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type RiderDocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    riderApplicationId?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    uploadedAt?: SortOrder
  }

  export type RiderDocumentMinOrderByAggregateInput = {
    id?: SortOrder
    riderApplicationId?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    uploadedAt?: SortOrder
  }

  export type RiderDocumentSumOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type EnumDriverStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDriverStatusFilter<$PrismaModel> | $Enums.DriverStatus
  }

  export type DriverEarningListRelationFilter = {
    every?: DriverEarningWhereInput
    some?: DriverEarningWhereInput
    none?: DriverEarningWhereInput
  }

  export type DriverLocationListRelationFilter = {
    every?: DriverLocationWhereInput
    some?: DriverLocationWhereInput
    none?: DriverLocationWhereInput
  }

  export type RideServiceNullableScalarRelationFilter = {
    is?: RideServiceWhereInput | null
    isNot?: RideServiceWhereInput | null
  }

  export type DriverEarningOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DriverLocationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DriverCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    riderApplicationId?: SortOrder
    driverId?: SortOrder
    isOnline?: SortOrder
    status?: SortOrder
    currentLocation?: SortOrder
    lastLocationUpdate?: SortOrder
    totalRides?: SortOrder
    totalEarnings?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
    vehicleInfo?: SortOrder
    documents?: SortOrder
    preferences?: SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrder
    updatedBy?: SortOrder
  }

  export type DriverAvgOrderByAggregateInput = {
    totalRides?: SortOrder
    totalEarnings?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
  }

  export type DriverMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    riderApplicationId?: SortOrder
    driverId?: SortOrder
    isOnline?: SortOrder
    status?: SortOrder
    lastLocationUpdate?: SortOrder
    totalRides?: SortOrder
    totalEarnings?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrder
    updatedBy?: SortOrder
  }

  export type DriverMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    riderApplicationId?: SortOrder
    driverId?: SortOrder
    isOnline?: SortOrder
    status?: SortOrder
    lastLocationUpdate?: SortOrder
    totalRides?: SortOrder
    totalEarnings?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrder
    updatedBy?: SortOrder
  }

  export type DriverSumOrderByAggregateInput = {
    totalRides?: SortOrder
    totalEarnings?: SortOrder
    rating?: SortOrder
    ratingCount?: SortOrder
  }

  export type EnumDriverStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDriverStatusWithAggregatesFilter<$PrismaModel> | $Enums.DriverStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDriverStatusFilter<$PrismaModel>
    _max?: NestedEnumDriverStatusFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DriverScalarRelationFilter = {
    is?: DriverWhereInput
    isNot?: DriverWhereInput
  }

  export type DriverLocationCountOrderByAggregateInput = {
    id?: SortOrder
    driverId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    address?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    timestamp?: SortOrder
  }

  export type DriverLocationAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
  }

  export type DriverLocationMaxOrderByAggregateInput = {
    id?: SortOrder
    driverId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    address?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    timestamp?: SortOrder
  }

  export type DriverLocationMinOrderByAggregateInput = {
    id?: SortOrder
    driverId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    address?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    timestamp?: SortOrder
  }

  export type DriverLocationSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumRideTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RideType | EnumRideTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RideType[] | ListEnumRideTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RideType[] | ListEnumRideTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRideTypeFilter<$PrismaModel> | $Enums.RideType
  }

  export type EnumRideStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RideStatus | EnumRideStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RideStatus[] | ListEnumRideStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RideStatus[] | ListEnumRideStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRideStatusFilter<$PrismaModel> | $Enums.RideStatus
  }

  export type EnumRidePaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.RidePaymentMethod | EnumRidePaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.RidePaymentMethod[] | ListEnumRidePaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.RidePaymentMethod[] | ListEnumRidePaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumRidePaymentMethodFilter<$PrismaModel> | $Enums.RidePaymentMethod
  }

  export type RideNullableScalarRelationFilter = {
    is?: RideWhereInput | null
    isNot?: RideWhereInput | null
  }

  export type RideRequestCountOrderByAggregateInput = {
    id?: SortOrder
    requestId?: SortOrder
    customerId?: SortOrder
    driverId?: SortOrder
    pickupLocation?: SortOrder
    destinationLocation?: SortOrder
    rideType?: SortOrder
    estimatedDistance?: SortOrder
    estimatedDuration?: SortOrder
    estimatedPrice?: SortOrder
    actualPrice?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    customerNotes?: SortOrder
    driverNotes?: SortOrder
    requestedAt?: SortOrder
    acceptedAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    cancelledBy?: SortOrder
    cancellationReason?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
  }

  export type RideRequestAvgOrderByAggregateInput = {
    estimatedDistance?: SortOrder
    estimatedDuration?: SortOrder
    estimatedPrice?: SortOrder
    actualPrice?: SortOrder
  }

  export type RideRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    requestId?: SortOrder
    customerId?: SortOrder
    driverId?: SortOrder
    rideType?: SortOrder
    estimatedDistance?: SortOrder
    estimatedDuration?: SortOrder
    estimatedPrice?: SortOrder
    actualPrice?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    customerNotes?: SortOrder
    driverNotes?: SortOrder
    requestedAt?: SortOrder
    acceptedAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    cancelledBy?: SortOrder
    cancellationReason?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
  }

  export type RideRequestMinOrderByAggregateInput = {
    id?: SortOrder
    requestId?: SortOrder
    customerId?: SortOrder
    driverId?: SortOrder
    rideType?: SortOrder
    estimatedDistance?: SortOrder
    estimatedDuration?: SortOrder
    estimatedPrice?: SortOrder
    actualPrice?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    customerNotes?: SortOrder
    driverNotes?: SortOrder
    requestedAt?: SortOrder
    acceptedAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    cancelledBy?: SortOrder
    cancellationReason?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
  }

  export type RideRequestSumOrderByAggregateInput = {
    estimatedDistance?: SortOrder
    estimatedDuration?: SortOrder
    estimatedPrice?: SortOrder
    actualPrice?: SortOrder
  }

  export type EnumRideTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RideType | EnumRideTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RideType[] | ListEnumRideTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RideType[] | ListEnumRideTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRideTypeWithAggregatesFilter<$PrismaModel> | $Enums.RideType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRideTypeFilter<$PrismaModel>
    _max?: NestedEnumRideTypeFilter<$PrismaModel>
  }

  export type EnumRideStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RideStatus | EnumRideStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RideStatus[] | ListEnumRideStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RideStatus[] | ListEnumRideStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRideStatusWithAggregatesFilter<$PrismaModel> | $Enums.RideStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRideStatusFilter<$PrismaModel>
    _max?: NestedEnumRideStatusFilter<$PrismaModel>
  }

  export type EnumRidePaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RidePaymentMethod | EnumRidePaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.RidePaymentMethod[] | ListEnumRidePaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.RidePaymentMethod[] | ListEnumRidePaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumRidePaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.RidePaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRidePaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumRidePaymentMethodFilter<$PrismaModel>
  }

  export type RideLocationListRelationFilter = {
    every?: RideLocationWhereInput
    some?: RideLocationWhereInput
    none?: RideLocationWhereInput
  }

  export type RideTokenNullableScalarRelationFilter = {
    is?: RideTokenWhereInput | null
    isNot?: RideTokenWhereInput | null
  }

  export type RideRequestScalarRelationFilter = {
    is?: RideRequestWhereInput
    isNot?: RideRequestWhereInput
  }

  export type RideLocationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RideCountOrderByAggregateInput = {
    id?: SortOrder
    rideId?: SortOrder
    rideRequestId?: SortOrder
    driverId?: SortOrder
    customerId?: SortOrder
    pickupLocation?: SortOrder
    destinationLocation?: SortOrder
    actualPickupLocation?: SortOrder
    actualDropoffLocation?: SortOrder
    rideType?: SortOrder
    distance?: SortOrder
    duration?: SortOrder
    baseFare?: SortOrder
    distanceFare?: SortOrder
    timeFare?: SortOrder
    surgeFare?: SortOrder
    totalFare?: SortOrder
    driverEarnings?: SortOrder
    platformFee?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    status?: SortOrder
    customerRating?: SortOrder
    driverRating?: SortOrder
    customerReview?: SortOrder
    driverReview?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    cancelledBy?: SortOrder
    cancellationReason?: SortOrder
    route?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrder
    settlementStatus?: SortOrder
  }

  export type RideAvgOrderByAggregateInput = {
    distance?: SortOrder
    duration?: SortOrder
    baseFare?: SortOrder
    distanceFare?: SortOrder
    timeFare?: SortOrder
    surgeFare?: SortOrder
    totalFare?: SortOrder
    driverEarnings?: SortOrder
    platformFee?: SortOrder
    customerRating?: SortOrder
    driverRating?: SortOrder
  }

  export type RideMaxOrderByAggregateInput = {
    id?: SortOrder
    rideId?: SortOrder
    rideRequestId?: SortOrder
    driverId?: SortOrder
    customerId?: SortOrder
    rideType?: SortOrder
    distance?: SortOrder
    duration?: SortOrder
    baseFare?: SortOrder
    distanceFare?: SortOrder
    timeFare?: SortOrder
    surgeFare?: SortOrder
    totalFare?: SortOrder
    driverEarnings?: SortOrder
    platformFee?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    status?: SortOrder
    customerRating?: SortOrder
    driverRating?: SortOrder
    customerReview?: SortOrder
    driverReview?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    cancelledBy?: SortOrder
    cancellationReason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrder
    settlementStatus?: SortOrder
  }

  export type RideMinOrderByAggregateInput = {
    id?: SortOrder
    rideId?: SortOrder
    rideRequestId?: SortOrder
    driverId?: SortOrder
    customerId?: SortOrder
    rideType?: SortOrder
    distance?: SortOrder
    duration?: SortOrder
    baseFare?: SortOrder
    distanceFare?: SortOrder
    timeFare?: SortOrder
    surgeFare?: SortOrder
    totalFare?: SortOrder
    driverEarnings?: SortOrder
    platformFee?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    status?: SortOrder
    customerRating?: SortOrder
    driverRating?: SortOrder
    customerReview?: SortOrder
    driverReview?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    cancelledBy?: SortOrder
    cancellationReason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rideServiceId?: SortOrder
    settlementStatus?: SortOrder
  }

  export type RideSumOrderByAggregateInput = {
    distance?: SortOrder
    duration?: SortOrder
    baseFare?: SortOrder
    distanceFare?: SortOrder
    timeFare?: SortOrder
    surgeFare?: SortOrder
    totalFare?: SortOrder
    driverEarnings?: SortOrder
    platformFee?: SortOrder
    customerRating?: SortOrder
    driverRating?: SortOrder
  }

  export type RideScalarRelationFilter = {
    is?: RideWhereInput
    isNot?: RideWhereInput
  }

  export type RideTokenCountOrderByAggregateInput = {
    id?: SortOrder
    rideId?: SortOrder
    token?: SortOrder
    isUsed?: SortOrder
    usedAt?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RideTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    rideId?: SortOrder
    token?: SortOrder
    isUsed?: SortOrder
    usedAt?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RideTokenMinOrderByAggregateInput = {
    id?: SortOrder
    rideId?: SortOrder
    token?: SortOrder
    isUsed?: SortOrder
    usedAt?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RideLocationCountOrderByAggregateInput = {
    id?: SortOrder
    rideId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    timestamp?: SortOrder
  }

  export type RideLocationAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
  }

  export type RideLocationMaxOrderByAggregateInput = {
    id?: SortOrder
    rideId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    timestamp?: SortOrder
  }

  export type RideLocationMinOrderByAggregateInput = {
    id?: SortOrder
    rideId?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    timestamp?: SortOrder
  }

  export type RideLocationSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
    accuracy?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
  }

  export type DriverEarningCountOrderByAggregateInput = {
    id?: SortOrder
    driverId?: SortOrder
    rideId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type DriverEarningAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type DriverEarningMaxOrderByAggregateInput = {
    id?: SortOrder
    driverId?: SortOrder
    rideId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type DriverEarningMinOrderByAggregateInput = {
    id?: SortOrder
    driverId?: SortOrder
    rideId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type DriverEarningSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumDistanceUnitFilter<$PrismaModel = never> = {
    equals?: $Enums.DistanceUnit | EnumDistanceUnitFieldRefInput<$PrismaModel>
    in?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumDistanceUnitFilter<$PrismaModel> | $Enums.DistanceUnit
  }

  export type DriverListRelationFilter = {
    every?: DriverWhereInput
    some?: DriverWhereInput
    none?: DriverWhereInput
  }

  export type DriverOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RideServiceCountOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    vehicleType?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    distanceUnit?: SortOrder
    baseDistance?: SortOrder
    maxDistance?: SortOrder
    baseFare?: SortOrder
    perKmRate?: SortOrder
    perMinuteRate?: SortOrder
    minimumFare?: SortOrder
    maximumFare?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    surgeMultiplier?: SortOrder
    maxSurgeMultiplier?: SortOrder
    platformFeePercentage?: SortOrder
    driverEarningsPercentage?: SortOrder
    nightFareMultiplier?: SortOrder
    weekendFareMultiplier?: SortOrder
    cancellationFee?: SortOrder
    cancellationTimeLimit?: SortOrder
    features?: SortOrder
    restrictions?: SortOrder
    estimatedPickupTime?: SortOrder
    maxWaitTime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type RideServiceAvgOrderByAggregateInput = {
    baseDistance?: SortOrder
    maxDistance?: SortOrder
    baseFare?: SortOrder
    perKmRate?: SortOrder
    perMinuteRate?: SortOrder
    minimumFare?: SortOrder
    maximumFare?: SortOrder
    surgeMultiplier?: SortOrder
    maxSurgeMultiplier?: SortOrder
    platformFeePercentage?: SortOrder
    driverEarningsPercentage?: SortOrder
    nightFareMultiplier?: SortOrder
    weekendFareMultiplier?: SortOrder
    cancellationFee?: SortOrder
    cancellationTimeLimit?: SortOrder
    estimatedPickupTime?: SortOrder
    maxWaitTime?: SortOrder
  }

  export type RideServiceMaxOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    vehicleType?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    distanceUnit?: SortOrder
    baseDistance?: SortOrder
    maxDistance?: SortOrder
    baseFare?: SortOrder
    perKmRate?: SortOrder
    perMinuteRate?: SortOrder
    minimumFare?: SortOrder
    maximumFare?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    surgeMultiplier?: SortOrder
    maxSurgeMultiplier?: SortOrder
    platformFeePercentage?: SortOrder
    driverEarningsPercentage?: SortOrder
    nightFareMultiplier?: SortOrder
    weekendFareMultiplier?: SortOrder
    cancellationFee?: SortOrder
    cancellationTimeLimit?: SortOrder
    estimatedPickupTime?: SortOrder
    maxWaitTime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type RideServiceMinOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    vehicleType?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    distanceUnit?: SortOrder
    baseDistance?: SortOrder
    maxDistance?: SortOrder
    baseFare?: SortOrder
    perKmRate?: SortOrder
    perMinuteRate?: SortOrder
    minimumFare?: SortOrder
    maximumFare?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    surgeMultiplier?: SortOrder
    maxSurgeMultiplier?: SortOrder
    platformFeePercentage?: SortOrder
    driverEarningsPercentage?: SortOrder
    nightFareMultiplier?: SortOrder
    weekendFareMultiplier?: SortOrder
    cancellationFee?: SortOrder
    cancellationTimeLimit?: SortOrder
    estimatedPickupTime?: SortOrder
    maxWaitTime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type RideServiceSumOrderByAggregateInput = {
    baseDistance?: SortOrder
    maxDistance?: SortOrder
    baseFare?: SortOrder
    perKmRate?: SortOrder
    perMinuteRate?: SortOrder
    minimumFare?: SortOrder
    maximumFare?: SortOrder
    surgeMultiplier?: SortOrder
    maxSurgeMultiplier?: SortOrder
    platformFeePercentage?: SortOrder
    driverEarningsPercentage?: SortOrder
    nightFareMultiplier?: SortOrder
    weekendFareMultiplier?: SortOrder
    cancellationFee?: SortOrder
    cancellationTimeLimit?: SortOrder
    estimatedPickupTime?: SortOrder
    maxWaitTime?: SortOrder
  }

  export type EnumDistanceUnitWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DistanceUnit | EnumDistanceUnitFieldRefInput<$PrismaModel>
    in?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumDistanceUnitWithAggregatesFilter<$PrismaModel> | $Enums.DistanceUnit
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDistanceUnitFilter<$PrismaModel>
    _max?: NestedEnumDistanceUnitFilter<$PrismaModel>
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type ordersCountOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    sellerId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currencyCode?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrder
    customerPhone?: SortOrder
    shippingAddress?: SortOrder
    billingAddress?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    paymentReference?: SortOrder
    paidAt?: SortOrder
    shippingMethod?: SortOrder
    trackingNumber?: SortOrder
    shippedAt?: SortOrder
    deliveredAt?: SortOrder
    notes?: SortOrder
    sellerNotes?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cancelledAt?: SortOrder
    deliveryCurrency?: SortOrder
  }

  export type ordersAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type ordersMaxOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    sellerId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currencyCode?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrder
    customerPhone?: SortOrder
    shippingAddress?: SortOrder
    billingAddress?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    paymentReference?: SortOrder
    paidAt?: SortOrder
    shippingMethod?: SortOrder
    trackingNumber?: SortOrder
    shippedAt?: SortOrder
    deliveredAt?: SortOrder
    notes?: SortOrder
    sellerNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cancelledAt?: SortOrder
    deliveryCurrency?: SortOrder
  }

  export type ordersMinOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    sellerId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currencyCode?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrder
    customerPhone?: SortOrder
    shippingAddress?: SortOrder
    billingAddress?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    paymentReference?: SortOrder
    paidAt?: SortOrder
    shippingMethod?: SortOrder
    trackingNumber?: SortOrder
    shippedAt?: SortOrder
    deliveredAt?: SortOrder
    notes?: SortOrder
    sellerNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cancelledAt?: SortOrder
    deliveryCurrency?: SortOrder
  }

  export type ordersSumOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type OperatorEntityCreateNestedOneWithoutAdminsInput = {
    create?: XOR<OperatorEntityCreateWithoutAdminsInput, OperatorEntityUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: OperatorEntityCreateOrConnectWithoutAdminsInput
    connect?: OperatorEntityWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type OperatorEntityUpdateOneRequiredWithoutAdminsNestedInput = {
    create?: XOR<OperatorEntityCreateWithoutAdminsInput, OperatorEntityUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: OperatorEntityCreateOrConnectWithoutAdminsInput
    upsert?: OperatorEntityUpsertWithoutAdminsInput
    connect?: OperatorEntityWhereUniqueInput
    update?: XOR<XOR<OperatorEntityUpdateToOneWithWhereWithoutAdminsInput, OperatorEntityUpdateWithoutAdminsInput>, OperatorEntityUncheckedUpdateWithoutAdminsInput>
  }

  export type OperatorEntityCreateNestedManyWithoutRoleInput = {
    create?: XOR<OperatorEntityCreateWithoutRoleInput, OperatorEntityUncheckedCreateWithoutRoleInput> | OperatorEntityCreateWithoutRoleInput[] | OperatorEntityUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: OperatorEntityCreateOrConnectWithoutRoleInput | OperatorEntityCreateOrConnectWithoutRoleInput[]
    createMany?: OperatorEntityCreateManyRoleInputEnvelope
    connect?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
  }

  export type RolePermissionCreateNestedManyWithoutRoleInput = {
    create?: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput> | RolePermissionCreateWithoutRoleInput[] | RolePermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutRoleInput | RolePermissionCreateOrConnectWithoutRoleInput[]
    createMany?: RolePermissionCreateManyRoleInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type OperatorEntityUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<OperatorEntityCreateWithoutRoleInput, OperatorEntityUncheckedCreateWithoutRoleInput> | OperatorEntityCreateWithoutRoleInput[] | OperatorEntityUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: OperatorEntityCreateOrConnectWithoutRoleInput | OperatorEntityCreateOrConnectWithoutRoleInput[]
    createMany?: OperatorEntityCreateManyRoleInputEnvelope
    connect?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
  }

  export type RolePermissionUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput> | RolePermissionCreateWithoutRoleInput[] | RolePermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutRoleInput | RolePermissionCreateOrConnectWithoutRoleInput[]
    createMany?: RolePermissionCreateManyRoleInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type OperatorEntityUpdateManyWithoutRoleNestedInput = {
    create?: XOR<OperatorEntityCreateWithoutRoleInput, OperatorEntityUncheckedCreateWithoutRoleInput> | OperatorEntityCreateWithoutRoleInput[] | OperatorEntityUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: OperatorEntityCreateOrConnectWithoutRoleInput | OperatorEntityCreateOrConnectWithoutRoleInput[]
    upsert?: OperatorEntityUpsertWithWhereUniqueWithoutRoleInput | OperatorEntityUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: OperatorEntityCreateManyRoleInputEnvelope
    set?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
    disconnect?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
    delete?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
    connect?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
    update?: OperatorEntityUpdateWithWhereUniqueWithoutRoleInput | OperatorEntityUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: OperatorEntityUpdateManyWithWhereWithoutRoleInput | OperatorEntityUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: OperatorEntityScalarWhereInput | OperatorEntityScalarWhereInput[]
  }

  export type RolePermissionUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput> | RolePermissionCreateWithoutRoleInput[] | RolePermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutRoleInput | RolePermissionCreateOrConnectWithoutRoleInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutRoleInput | RolePermissionUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RolePermissionCreateManyRoleInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutRoleInput | RolePermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutRoleInput | RolePermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type OperatorEntityUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<OperatorEntityCreateWithoutRoleInput, OperatorEntityUncheckedCreateWithoutRoleInput> | OperatorEntityCreateWithoutRoleInput[] | OperatorEntityUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: OperatorEntityCreateOrConnectWithoutRoleInput | OperatorEntityCreateOrConnectWithoutRoleInput[]
    upsert?: OperatorEntityUpsertWithWhereUniqueWithoutRoleInput | OperatorEntityUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: OperatorEntityCreateManyRoleInputEnvelope
    set?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
    disconnect?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
    delete?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
    connect?: OperatorEntityWhereUniqueInput | OperatorEntityWhereUniqueInput[]
    update?: OperatorEntityUpdateWithWhereUniqueWithoutRoleInput | OperatorEntityUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: OperatorEntityUpdateManyWithWhereWithoutRoleInput | OperatorEntityUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: OperatorEntityScalarWhereInput | OperatorEntityScalarWhereInput[]
  }

  export type RolePermissionUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput> | RolePermissionCreateWithoutRoleInput[] | RolePermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutRoleInput | RolePermissionCreateOrConnectWithoutRoleInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutRoleInput | RolePermissionUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RolePermissionCreateManyRoleInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutRoleInput | RolePermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutRoleInput | RolePermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type RoleCreateNestedOneWithoutPermissionsInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput>
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput
    connect?: RoleWhereUniqueInput
  }

  export type EnumEntityTypeFieldUpdateOperationsInput = {
    set?: $Enums.EntityType
  }

  export type EnumPermissionFieldUpdateOperationsInput = {
    set?: $Enums.Permission
  }

  export type RoleUpdateOneRequiredWithoutPermissionsNestedInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput>
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput
    upsert?: RoleUpsertWithoutPermissionsInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutPermissionsInput, RoleUpdateWithoutPermissionsInput>, RoleUncheckedUpdateWithoutPermissionsInput>
  }

  export type AdminCreateNestedManyWithoutOperatorEntityInput = {
    create?: XOR<AdminCreateWithoutOperatorEntityInput, AdminUncheckedCreateWithoutOperatorEntityInput> | AdminCreateWithoutOperatorEntityInput[] | AdminUncheckedCreateWithoutOperatorEntityInput[]
    connectOrCreate?: AdminCreateOrConnectWithoutOperatorEntityInput | AdminCreateOrConnectWithoutOperatorEntityInput[]
    createMany?: AdminCreateManyOperatorEntityInputEnvelope
    connect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
  }

  export type RoleCreateNestedOneWithoutOperatorEntitiesInput = {
    create?: XOR<RoleCreateWithoutOperatorEntitiesInput, RoleUncheckedCreateWithoutOperatorEntitiesInput>
    connectOrCreate?: RoleCreateOrConnectWithoutOperatorEntitiesInput
    connect?: RoleWhereUniqueInput
  }

  export type AdminUncheckedCreateNestedManyWithoutOperatorEntityInput = {
    create?: XOR<AdminCreateWithoutOperatorEntityInput, AdminUncheckedCreateWithoutOperatorEntityInput> | AdminCreateWithoutOperatorEntityInput[] | AdminUncheckedCreateWithoutOperatorEntityInput[]
    connectOrCreate?: AdminCreateOrConnectWithoutOperatorEntityInput | AdminCreateOrConnectWithoutOperatorEntityInput[]
    createMany?: AdminCreateManyOperatorEntityInputEnvelope
    connect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
  }

  export type AdminUpdateManyWithoutOperatorEntityNestedInput = {
    create?: XOR<AdminCreateWithoutOperatorEntityInput, AdminUncheckedCreateWithoutOperatorEntityInput> | AdminCreateWithoutOperatorEntityInput[] | AdminUncheckedCreateWithoutOperatorEntityInput[]
    connectOrCreate?: AdminCreateOrConnectWithoutOperatorEntityInput | AdminCreateOrConnectWithoutOperatorEntityInput[]
    upsert?: AdminUpsertWithWhereUniqueWithoutOperatorEntityInput | AdminUpsertWithWhereUniqueWithoutOperatorEntityInput[]
    createMany?: AdminCreateManyOperatorEntityInputEnvelope
    set?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    disconnect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    delete?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    connect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    update?: AdminUpdateWithWhereUniqueWithoutOperatorEntityInput | AdminUpdateWithWhereUniqueWithoutOperatorEntityInput[]
    updateMany?: AdminUpdateManyWithWhereWithoutOperatorEntityInput | AdminUpdateManyWithWhereWithoutOperatorEntityInput[]
    deleteMany?: AdminScalarWhereInput | AdminScalarWhereInput[]
  }

  export type RoleUpdateOneRequiredWithoutOperatorEntitiesNestedInput = {
    create?: XOR<RoleCreateWithoutOperatorEntitiesInput, RoleUncheckedCreateWithoutOperatorEntitiesInput>
    connectOrCreate?: RoleCreateOrConnectWithoutOperatorEntitiesInput
    upsert?: RoleUpsertWithoutOperatorEntitiesInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutOperatorEntitiesInput, RoleUpdateWithoutOperatorEntitiesInput>, RoleUncheckedUpdateWithoutOperatorEntitiesInput>
  }

  export type AdminUncheckedUpdateManyWithoutOperatorEntityNestedInput = {
    create?: XOR<AdminCreateWithoutOperatorEntityInput, AdminUncheckedCreateWithoutOperatorEntityInput> | AdminCreateWithoutOperatorEntityInput[] | AdminUncheckedCreateWithoutOperatorEntityInput[]
    connectOrCreate?: AdminCreateOrConnectWithoutOperatorEntityInput | AdminCreateOrConnectWithoutOperatorEntityInput[]
    upsert?: AdminUpsertWithWhereUniqueWithoutOperatorEntityInput | AdminUpsertWithWhereUniqueWithoutOperatorEntityInput[]
    createMany?: AdminCreateManyOperatorEntityInputEnvelope
    set?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    disconnect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    delete?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    connect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    update?: AdminUpdateWithWhereUniqueWithoutOperatorEntityInput | AdminUpdateWithWhereUniqueWithoutOperatorEntityInput[]
    updateMany?: AdminUpdateManyWithWhereWithoutOperatorEntityInput | AdminUpdateManyWithWhereWithoutOperatorEntityInput[]
    deleteMany?: AdminScalarWhereInput | AdminScalarWhereInput[]
  }

  export type DeliveryAddressCreateNestedManyWithoutUserInput = {
    create?: XOR<DeliveryAddressCreateWithoutUserInput, DeliveryAddressUncheckedCreateWithoutUserInput> | DeliveryAddressCreateWithoutUserInput[] | DeliveryAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeliveryAddressCreateOrConnectWithoutUserInput | DeliveryAddressCreateOrConnectWithoutUserInput[]
    createMany?: DeliveryAddressCreateManyUserInputEnvelope
    connect?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
  }

  export type DeviceCreateNestedManyWithoutUserInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
  }

  export type ExternalTransactionCreateNestedManyWithoutCustomerInput = {
    create?: XOR<ExternalTransactionCreateWithoutCustomerInput, ExternalTransactionUncheckedCreateWithoutCustomerInput> | ExternalTransactionCreateWithoutCustomerInput[] | ExternalTransactionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutCustomerInput | ExternalTransactionCreateOrConnectWithoutCustomerInput[]
    createMany?: ExternalTransactionCreateManyCustomerInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type ExternalTransactionCreateNestedManyWithoutSellerInput = {
    create?: XOR<ExternalTransactionCreateWithoutSellerInput, ExternalTransactionUncheckedCreateWithoutSellerInput> | ExternalTransactionCreateWithoutSellerInput[] | ExternalTransactionUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutSellerInput | ExternalTransactionCreateOrConnectWithoutSellerInput[]
    createMany?: ExternalTransactionCreateManySellerInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type PaymentMethodCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentMethodCreateWithoutUserInput, PaymentMethodUncheckedCreateWithoutUserInput> | PaymentMethodCreateWithoutUserInput[] | PaymentMethodUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentMethodCreateOrConnectWithoutUserInput | PaymentMethodCreateOrConnectWithoutUserInput[]
    createMany?: PaymentMethodCreateManyUserInputEnvelope
    connect?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutSellerInput = {
    create?: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput> | ProductCreateWithoutSellerInput[] | ProductUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSellerInput | ProductCreateOrConnectWithoutSellerInput[]
    createMany?: ProductCreateManySellerInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type SellerKycCreateNestedOneWithoutUserInput = {
    create?: XOR<SellerKycCreateWithoutUserInput, SellerKycUncheckedCreateWithoutUserInput>
    connectOrCreate?: SellerKycCreateOrConnectWithoutUserInput
    connect?: SellerKycWhereUniqueInput
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type SettlementCreateNestedManyWithoutUserInput = {
    create?: XOR<SettlementCreateWithoutUserInput, SettlementUncheckedCreateWithoutUserInput> | SettlementCreateWithoutUserInput[] | SettlementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutUserInput | SettlementCreateOrConnectWithoutUserInput[]
    createMany?: SettlementCreateManyUserInputEnvelope
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
  }

  export type DriverCreateNestedOneWithoutUserInput = {
    create?: XOR<DriverCreateWithoutUserInput, DriverUncheckedCreateWithoutUserInput>
    connectOrCreate?: DriverCreateOrConnectWithoutUserInput
    connect?: DriverWhereUniqueInput
  }

  export type ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput = {
    create?: XOR<ordersCreateWithoutUser_orders_sellerIdToUserInput, ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput> | ordersCreateWithoutUser_orders_sellerIdToUserInput[] | ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUser_orders_sellerIdToUserInput | ordersCreateOrConnectWithoutUser_orders_sellerIdToUserInput[]
    createMany?: ordersCreateManyUser_orders_sellerIdToUserInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type ordersCreateNestedManyWithoutUser_orders_userIdToUserInput = {
    create?: XOR<ordersCreateWithoutUser_orders_userIdToUserInput, ordersUncheckedCreateWithoutUser_orders_userIdToUserInput> | ordersCreateWithoutUser_orders_userIdToUserInput[] | ordersUncheckedCreateWithoutUser_orders_userIdToUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUser_orders_userIdToUserInput | ordersCreateOrConnectWithoutUser_orders_userIdToUserInput[]
    createMany?: ordersCreateManyUser_orders_userIdToUserInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type ProductOrderInterestCreateNestedManyWithoutUserInput = {
    create?: XOR<ProductOrderInterestCreateWithoutUserInput, ProductOrderInterestUncheckedCreateWithoutUserInput> | ProductOrderInterestCreateWithoutUserInput[] | ProductOrderInterestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductOrderInterestCreateOrConnectWithoutUserInput | ProductOrderInterestCreateOrConnectWithoutUserInput[]
    createMany?: ProductOrderInterestCreateManyUserInputEnvelope
    connect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
  }

  export type ProductViewCreateNestedManyWithoutUserInput = {
    create?: XOR<ProductViewCreateWithoutUserInput, ProductViewUncheckedCreateWithoutUserInput> | ProductViewCreateWithoutUserInput[] | ProductViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductViewCreateOrConnectWithoutUserInput | ProductViewCreateOrConnectWithoutUserInput[]
    createMany?: ProductViewCreateManyUserInputEnvelope
    connect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
  }

  export type RideRequestCreateNestedManyWithoutCustomerInput = {
    create?: XOR<RideRequestCreateWithoutCustomerInput, RideRequestUncheckedCreateWithoutCustomerInput> | RideRequestCreateWithoutCustomerInput[] | RideRequestUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutCustomerInput | RideRequestCreateOrConnectWithoutCustomerInput[]
    createMany?: RideRequestCreateManyCustomerInputEnvelope
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
  }

  export type RiderApplicationCreateNestedManyWithoutUserInput = {
    create?: XOR<RiderApplicationCreateWithoutUserInput, RiderApplicationUncheckedCreateWithoutUserInput> | RiderApplicationCreateWithoutUserInput[] | RiderApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RiderApplicationCreateOrConnectWithoutUserInput | RiderApplicationCreateOrConnectWithoutUserInput[]
    createMany?: RiderApplicationCreateManyUserInputEnvelope
    connect?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
  }

  export type RideCreateNestedManyWithoutCustomerInput = {
    create?: XOR<RideCreateWithoutCustomerInput, RideUncheckedCreateWithoutCustomerInput> | RideCreateWithoutCustomerInput[] | RideUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: RideCreateOrConnectWithoutCustomerInput | RideCreateOrConnectWithoutCustomerInput[]
    createMany?: RideCreateManyCustomerInputEnvelope
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
  }

  export type DeliveryAddressUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DeliveryAddressCreateWithoutUserInput, DeliveryAddressUncheckedCreateWithoutUserInput> | DeliveryAddressCreateWithoutUserInput[] | DeliveryAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeliveryAddressCreateOrConnectWithoutUserInput | DeliveryAddressCreateOrConnectWithoutUserInput[]
    createMany?: DeliveryAddressCreateManyUserInputEnvelope
    connect?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
  }

  export type DeviceUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
  }

  export type ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<ExternalTransactionCreateWithoutCustomerInput, ExternalTransactionUncheckedCreateWithoutCustomerInput> | ExternalTransactionCreateWithoutCustomerInput[] | ExternalTransactionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutCustomerInput | ExternalTransactionCreateOrConnectWithoutCustomerInput[]
    createMany?: ExternalTransactionCreateManyCustomerInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput = {
    create?: XOR<ExternalTransactionCreateWithoutSellerInput, ExternalTransactionUncheckedCreateWithoutSellerInput> | ExternalTransactionCreateWithoutSellerInput[] | ExternalTransactionUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutSellerInput | ExternalTransactionCreateOrConnectWithoutSellerInput[]
    createMany?: ExternalTransactionCreateManySellerInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type PaymentMethodUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentMethodCreateWithoutUserInput, PaymentMethodUncheckedCreateWithoutUserInput> | PaymentMethodCreateWithoutUserInput[] | PaymentMethodUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentMethodCreateOrConnectWithoutUserInput | PaymentMethodCreateOrConnectWithoutUserInput[]
    createMany?: PaymentMethodCreateManyUserInputEnvelope
    connect?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutSellerInput = {
    create?: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput> | ProductCreateWithoutSellerInput[] | ProductUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSellerInput | ProductCreateOrConnectWithoutSellerInput[]
    createMany?: ProductCreateManySellerInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type SellerKycUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<SellerKycCreateWithoutUserInput, SellerKycUncheckedCreateWithoutUserInput>
    connectOrCreate?: SellerKycCreateOrConnectWithoutUserInput
    connect?: SellerKycWhereUniqueInput
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type SettlementUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SettlementCreateWithoutUserInput, SettlementUncheckedCreateWithoutUserInput> | SettlementCreateWithoutUserInput[] | SettlementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutUserInput | SettlementCreateOrConnectWithoutUserInput[]
    createMany?: SettlementCreateManyUserInputEnvelope
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
  }

  export type DriverUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<DriverCreateWithoutUserInput, DriverUncheckedCreateWithoutUserInput>
    connectOrCreate?: DriverCreateOrConnectWithoutUserInput
    connect?: DriverWhereUniqueInput
  }

  export type ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput = {
    create?: XOR<ordersCreateWithoutUser_orders_sellerIdToUserInput, ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput> | ordersCreateWithoutUser_orders_sellerIdToUserInput[] | ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUser_orders_sellerIdToUserInput | ordersCreateOrConnectWithoutUser_orders_sellerIdToUserInput[]
    createMany?: ordersCreateManyUser_orders_sellerIdToUserInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput = {
    create?: XOR<ordersCreateWithoutUser_orders_userIdToUserInput, ordersUncheckedCreateWithoutUser_orders_userIdToUserInput> | ordersCreateWithoutUser_orders_userIdToUserInput[] | ordersUncheckedCreateWithoutUser_orders_userIdToUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUser_orders_userIdToUserInput | ordersCreateOrConnectWithoutUser_orders_userIdToUserInput[]
    createMany?: ordersCreateManyUser_orders_userIdToUserInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ProductOrderInterestCreateWithoutUserInput, ProductOrderInterestUncheckedCreateWithoutUserInput> | ProductOrderInterestCreateWithoutUserInput[] | ProductOrderInterestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductOrderInterestCreateOrConnectWithoutUserInput | ProductOrderInterestCreateOrConnectWithoutUserInput[]
    createMany?: ProductOrderInterestCreateManyUserInputEnvelope
    connect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
  }

  export type ProductViewUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ProductViewCreateWithoutUserInput, ProductViewUncheckedCreateWithoutUserInput> | ProductViewCreateWithoutUserInput[] | ProductViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductViewCreateOrConnectWithoutUserInput | ProductViewCreateOrConnectWithoutUserInput[]
    createMany?: ProductViewCreateManyUserInputEnvelope
    connect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
  }

  export type RideRequestUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<RideRequestCreateWithoutCustomerInput, RideRequestUncheckedCreateWithoutCustomerInput> | RideRequestCreateWithoutCustomerInput[] | RideRequestUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutCustomerInput | RideRequestCreateOrConnectWithoutCustomerInput[]
    createMany?: RideRequestCreateManyCustomerInputEnvelope
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
  }

  export type RiderApplicationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RiderApplicationCreateWithoutUserInput, RiderApplicationUncheckedCreateWithoutUserInput> | RiderApplicationCreateWithoutUserInput[] | RiderApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RiderApplicationCreateOrConnectWithoutUserInput | RiderApplicationCreateOrConnectWithoutUserInput[]
    createMany?: RiderApplicationCreateManyUserInputEnvelope
    connect?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
  }

  export type RideUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<RideCreateWithoutCustomerInput, RideUncheckedCreateWithoutCustomerInput> | RideCreateWithoutCustomerInput[] | RideUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: RideCreateOrConnectWithoutCustomerInput | RideCreateOrConnectWithoutCustomerInput[]
    createMany?: RideCreateManyCustomerInputEnvelope
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
  }

  export type DeliveryAddressUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeliveryAddressCreateWithoutUserInput, DeliveryAddressUncheckedCreateWithoutUserInput> | DeliveryAddressCreateWithoutUserInput[] | DeliveryAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeliveryAddressCreateOrConnectWithoutUserInput | DeliveryAddressCreateOrConnectWithoutUserInput[]
    upsert?: DeliveryAddressUpsertWithWhereUniqueWithoutUserInput | DeliveryAddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeliveryAddressCreateManyUserInputEnvelope
    set?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
    disconnect?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
    delete?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
    connect?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
    update?: DeliveryAddressUpdateWithWhereUniqueWithoutUserInput | DeliveryAddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeliveryAddressUpdateManyWithWhereWithoutUserInput | DeliveryAddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeliveryAddressScalarWhereInput | DeliveryAddressScalarWhereInput[]
  }

  export type DeviceUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    upsert?: DeviceUpsertWithWhereUniqueWithoutUserInput | DeviceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    set?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    disconnect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    delete?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    update?: DeviceUpdateWithWhereUniqueWithoutUserInput | DeviceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeviceUpdateManyWithWhereWithoutUserInput | DeviceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
  }

  export type ExternalTransactionUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutCustomerInput, ExternalTransactionUncheckedCreateWithoutCustomerInput> | ExternalTransactionCreateWithoutCustomerInput[] | ExternalTransactionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutCustomerInput | ExternalTransactionCreateOrConnectWithoutCustomerInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutCustomerInput | ExternalTransactionUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: ExternalTransactionCreateManyCustomerInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutCustomerInput | ExternalTransactionUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutCustomerInput | ExternalTransactionUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type ExternalTransactionUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutSellerInput, ExternalTransactionUncheckedCreateWithoutSellerInput> | ExternalTransactionCreateWithoutSellerInput[] | ExternalTransactionUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutSellerInput | ExternalTransactionCreateOrConnectWithoutSellerInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutSellerInput | ExternalTransactionUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ExternalTransactionCreateManySellerInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutSellerInput | ExternalTransactionUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutSellerInput | ExternalTransactionUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type PaymentMethodUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentMethodCreateWithoutUserInput, PaymentMethodUncheckedCreateWithoutUserInput> | PaymentMethodCreateWithoutUserInput[] | PaymentMethodUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentMethodCreateOrConnectWithoutUserInput | PaymentMethodCreateOrConnectWithoutUserInput[]
    upsert?: PaymentMethodUpsertWithWhereUniqueWithoutUserInput | PaymentMethodUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentMethodCreateManyUserInputEnvelope
    set?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
    disconnect?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
    delete?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
    connect?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
    update?: PaymentMethodUpdateWithWhereUniqueWithoutUserInput | PaymentMethodUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentMethodUpdateManyWithWhereWithoutUserInput | PaymentMethodUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentMethodScalarWhereInput | PaymentMethodScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput> | ProductCreateWithoutSellerInput[] | ProductUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSellerInput | ProductCreateOrConnectWithoutSellerInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutSellerInput | ProductUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ProductCreateManySellerInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutSellerInput | ProductUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutSellerInput | ProductUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type SellerKycUpdateOneWithoutUserNestedInput = {
    create?: XOR<SellerKycCreateWithoutUserInput, SellerKycUncheckedCreateWithoutUserInput>
    connectOrCreate?: SellerKycCreateOrConnectWithoutUserInput
    upsert?: SellerKycUpsertWithoutUserInput
    disconnect?: SellerKycWhereInput | boolean
    delete?: SellerKycWhereInput | boolean
    connect?: SellerKycWhereUniqueInput
    update?: XOR<XOR<SellerKycUpdateToOneWithWhereWithoutUserInput, SellerKycUpdateWithoutUserInput>, SellerKycUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type SettlementUpdateManyWithoutUserNestedInput = {
    create?: XOR<SettlementCreateWithoutUserInput, SettlementUncheckedCreateWithoutUserInput> | SettlementCreateWithoutUserInput[] | SettlementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutUserInput | SettlementCreateOrConnectWithoutUserInput[]
    upsert?: SettlementUpsertWithWhereUniqueWithoutUserInput | SettlementUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SettlementCreateManyUserInputEnvelope
    set?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    disconnect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    delete?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    update?: SettlementUpdateWithWhereUniqueWithoutUserInput | SettlementUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SettlementUpdateManyWithWhereWithoutUserInput | SettlementUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SettlementScalarWhereInput | SettlementScalarWhereInput[]
  }

  export type DriverUpdateOneWithoutUserNestedInput = {
    create?: XOR<DriverCreateWithoutUserInput, DriverUncheckedCreateWithoutUserInput>
    connectOrCreate?: DriverCreateOrConnectWithoutUserInput
    upsert?: DriverUpsertWithoutUserInput
    disconnect?: DriverWhereInput | boolean
    delete?: DriverWhereInput | boolean
    connect?: DriverWhereUniqueInput
    update?: XOR<XOR<DriverUpdateToOneWithWhereWithoutUserInput, DriverUpdateWithoutUserInput>, DriverUncheckedUpdateWithoutUserInput>
  }

  export type ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput = {
    create?: XOR<ordersCreateWithoutUser_orders_sellerIdToUserInput, ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput> | ordersCreateWithoutUser_orders_sellerIdToUserInput[] | ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUser_orders_sellerIdToUserInput | ordersCreateOrConnectWithoutUser_orders_sellerIdToUserInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUser_orders_sellerIdToUserInput | ordersUpsertWithWhereUniqueWithoutUser_orders_sellerIdToUserInput[]
    createMany?: ordersCreateManyUser_orders_sellerIdToUserInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUser_orders_sellerIdToUserInput | ordersUpdateWithWhereUniqueWithoutUser_orders_sellerIdToUserInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUser_orders_sellerIdToUserInput | ordersUpdateManyWithWhereWithoutUser_orders_sellerIdToUserInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput = {
    create?: XOR<ordersCreateWithoutUser_orders_userIdToUserInput, ordersUncheckedCreateWithoutUser_orders_userIdToUserInput> | ordersCreateWithoutUser_orders_userIdToUserInput[] | ordersUncheckedCreateWithoutUser_orders_userIdToUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUser_orders_userIdToUserInput | ordersCreateOrConnectWithoutUser_orders_userIdToUserInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUser_orders_userIdToUserInput | ordersUpsertWithWhereUniqueWithoutUser_orders_userIdToUserInput[]
    createMany?: ordersCreateManyUser_orders_userIdToUserInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUser_orders_userIdToUserInput | ordersUpdateWithWhereUniqueWithoutUser_orders_userIdToUserInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUser_orders_userIdToUserInput | ordersUpdateManyWithWhereWithoutUser_orders_userIdToUserInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type ProductOrderInterestUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProductOrderInterestCreateWithoutUserInput, ProductOrderInterestUncheckedCreateWithoutUserInput> | ProductOrderInterestCreateWithoutUserInput[] | ProductOrderInterestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductOrderInterestCreateOrConnectWithoutUserInput | ProductOrderInterestCreateOrConnectWithoutUserInput[]
    upsert?: ProductOrderInterestUpsertWithWhereUniqueWithoutUserInput | ProductOrderInterestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProductOrderInterestCreateManyUserInputEnvelope
    set?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    disconnect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    delete?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    connect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    update?: ProductOrderInterestUpdateWithWhereUniqueWithoutUserInput | ProductOrderInterestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProductOrderInterestUpdateManyWithWhereWithoutUserInput | ProductOrderInterestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProductOrderInterestScalarWhereInput | ProductOrderInterestScalarWhereInput[]
  }

  export type ProductViewUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProductViewCreateWithoutUserInput, ProductViewUncheckedCreateWithoutUserInput> | ProductViewCreateWithoutUserInput[] | ProductViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductViewCreateOrConnectWithoutUserInput | ProductViewCreateOrConnectWithoutUserInput[]
    upsert?: ProductViewUpsertWithWhereUniqueWithoutUserInput | ProductViewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProductViewCreateManyUserInputEnvelope
    set?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    disconnect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    delete?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    connect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    update?: ProductViewUpdateWithWhereUniqueWithoutUserInput | ProductViewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProductViewUpdateManyWithWhereWithoutUserInput | ProductViewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProductViewScalarWhereInput | ProductViewScalarWhereInput[]
  }

  export type RideRequestUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<RideRequestCreateWithoutCustomerInput, RideRequestUncheckedCreateWithoutCustomerInput> | RideRequestCreateWithoutCustomerInput[] | RideRequestUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutCustomerInput | RideRequestCreateOrConnectWithoutCustomerInput[]
    upsert?: RideRequestUpsertWithWhereUniqueWithoutCustomerInput | RideRequestUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: RideRequestCreateManyCustomerInputEnvelope
    set?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    disconnect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    delete?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    update?: RideRequestUpdateWithWhereUniqueWithoutCustomerInput | RideRequestUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: RideRequestUpdateManyWithWhereWithoutCustomerInput | RideRequestUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: RideRequestScalarWhereInput | RideRequestScalarWhereInput[]
  }

  export type RiderApplicationUpdateManyWithoutUserNestedInput = {
    create?: XOR<RiderApplicationCreateWithoutUserInput, RiderApplicationUncheckedCreateWithoutUserInput> | RiderApplicationCreateWithoutUserInput[] | RiderApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RiderApplicationCreateOrConnectWithoutUserInput | RiderApplicationCreateOrConnectWithoutUserInput[]
    upsert?: RiderApplicationUpsertWithWhereUniqueWithoutUserInput | RiderApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RiderApplicationCreateManyUserInputEnvelope
    set?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
    disconnect?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
    delete?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
    connect?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
    update?: RiderApplicationUpdateWithWhereUniqueWithoutUserInput | RiderApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RiderApplicationUpdateManyWithWhereWithoutUserInput | RiderApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RiderApplicationScalarWhereInput | RiderApplicationScalarWhereInput[]
  }

  export type RideUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<RideCreateWithoutCustomerInput, RideUncheckedCreateWithoutCustomerInput> | RideCreateWithoutCustomerInput[] | RideUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: RideCreateOrConnectWithoutCustomerInput | RideCreateOrConnectWithoutCustomerInput[]
    upsert?: RideUpsertWithWhereUniqueWithoutCustomerInput | RideUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: RideCreateManyCustomerInputEnvelope
    set?: RideWhereUniqueInput | RideWhereUniqueInput[]
    disconnect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    delete?: RideWhereUniqueInput | RideWhereUniqueInput[]
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    update?: RideUpdateWithWhereUniqueWithoutCustomerInput | RideUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: RideUpdateManyWithWhereWithoutCustomerInput | RideUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: RideScalarWhereInput | RideScalarWhereInput[]
  }

  export type DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeliveryAddressCreateWithoutUserInput, DeliveryAddressUncheckedCreateWithoutUserInput> | DeliveryAddressCreateWithoutUserInput[] | DeliveryAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeliveryAddressCreateOrConnectWithoutUserInput | DeliveryAddressCreateOrConnectWithoutUserInput[]
    upsert?: DeliveryAddressUpsertWithWhereUniqueWithoutUserInput | DeliveryAddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeliveryAddressCreateManyUserInputEnvelope
    set?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
    disconnect?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
    delete?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
    connect?: DeliveryAddressWhereUniqueInput | DeliveryAddressWhereUniqueInput[]
    update?: DeliveryAddressUpdateWithWhereUniqueWithoutUserInput | DeliveryAddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeliveryAddressUpdateManyWithWhereWithoutUserInput | DeliveryAddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeliveryAddressScalarWhereInput | DeliveryAddressScalarWhereInput[]
  }

  export type DeviceUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    upsert?: DeviceUpsertWithWhereUniqueWithoutUserInput | DeviceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    set?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    disconnect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    delete?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    update?: DeviceUpdateWithWhereUniqueWithoutUserInput | DeviceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeviceUpdateManyWithWhereWithoutUserInput | DeviceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutCustomerInput, ExternalTransactionUncheckedCreateWithoutCustomerInput> | ExternalTransactionCreateWithoutCustomerInput[] | ExternalTransactionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutCustomerInput | ExternalTransactionCreateOrConnectWithoutCustomerInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutCustomerInput | ExternalTransactionUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: ExternalTransactionCreateManyCustomerInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutCustomerInput | ExternalTransactionUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutCustomerInput | ExternalTransactionUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutSellerInput, ExternalTransactionUncheckedCreateWithoutSellerInput> | ExternalTransactionCreateWithoutSellerInput[] | ExternalTransactionUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutSellerInput | ExternalTransactionCreateOrConnectWithoutSellerInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutSellerInput | ExternalTransactionUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ExternalTransactionCreateManySellerInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutSellerInput | ExternalTransactionUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutSellerInput | ExternalTransactionUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type PaymentMethodUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentMethodCreateWithoutUserInput, PaymentMethodUncheckedCreateWithoutUserInput> | PaymentMethodCreateWithoutUserInput[] | PaymentMethodUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentMethodCreateOrConnectWithoutUserInput | PaymentMethodCreateOrConnectWithoutUserInput[]
    upsert?: PaymentMethodUpsertWithWhereUniqueWithoutUserInput | PaymentMethodUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentMethodCreateManyUserInputEnvelope
    set?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
    disconnect?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
    delete?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
    connect?: PaymentMethodWhereUniqueInput | PaymentMethodWhereUniqueInput[]
    update?: PaymentMethodUpdateWithWhereUniqueWithoutUserInput | PaymentMethodUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentMethodUpdateManyWithWhereWithoutUserInput | PaymentMethodUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentMethodScalarWhereInput | PaymentMethodScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput> | ProductCreateWithoutSellerInput[] | ProductUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSellerInput | ProductCreateOrConnectWithoutSellerInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutSellerInput | ProductUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ProductCreateManySellerInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutSellerInput | ProductUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutSellerInput | ProductUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type SellerKycUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<SellerKycCreateWithoutUserInput, SellerKycUncheckedCreateWithoutUserInput>
    connectOrCreate?: SellerKycCreateOrConnectWithoutUserInput
    upsert?: SellerKycUpsertWithoutUserInput
    disconnect?: SellerKycWhereInput | boolean
    delete?: SellerKycWhereInput | boolean
    connect?: SellerKycWhereUniqueInput
    update?: XOR<XOR<SellerKycUpdateToOneWithWhereWithoutUserInput, SellerKycUpdateWithoutUserInput>, SellerKycUncheckedUpdateWithoutUserInput>
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type SettlementUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SettlementCreateWithoutUserInput, SettlementUncheckedCreateWithoutUserInput> | SettlementCreateWithoutUserInput[] | SettlementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutUserInput | SettlementCreateOrConnectWithoutUserInput[]
    upsert?: SettlementUpsertWithWhereUniqueWithoutUserInput | SettlementUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SettlementCreateManyUserInputEnvelope
    set?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    disconnect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    delete?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    update?: SettlementUpdateWithWhereUniqueWithoutUserInput | SettlementUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SettlementUpdateManyWithWhereWithoutUserInput | SettlementUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SettlementScalarWhereInput | SettlementScalarWhereInput[]
  }

  export type DriverUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<DriverCreateWithoutUserInput, DriverUncheckedCreateWithoutUserInput>
    connectOrCreate?: DriverCreateOrConnectWithoutUserInput
    upsert?: DriverUpsertWithoutUserInput
    disconnect?: DriverWhereInput | boolean
    delete?: DriverWhereInput | boolean
    connect?: DriverWhereUniqueInput
    update?: XOR<XOR<DriverUpdateToOneWithWhereWithoutUserInput, DriverUpdateWithoutUserInput>, DriverUncheckedUpdateWithoutUserInput>
  }

  export type ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput = {
    create?: XOR<ordersCreateWithoutUser_orders_sellerIdToUserInput, ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput> | ordersCreateWithoutUser_orders_sellerIdToUserInput[] | ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUser_orders_sellerIdToUserInput | ordersCreateOrConnectWithoutUser_orders_sellerIdToUserInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUser_orders_sellerIdToUserInput | ordersUpsertWithWhereUniqueWithoutUser_orders_sellerIdToUserInput[]
    createMany?: ordersCreateManyUser_orders_sellerIdToUserInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUser_orders_sellerIdToUserInput | ordersUpdateWithWhereUniqueWithoutUser_orders_sellerIdToUserInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUser_orders_sellerIdToUserInput | ordersUpdateManyWithWhereWithoutUser_orders_sellerIdToUserInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput = {
    create?: XOR<ordersCreateWithoutUser_orders_userIdToUserInput, ordersUncheckedCreateWithoutUser_orders_userIdToUserInput> | ordersCreateWithoutUser_orders_userIdToUserInput[] | ordersUncheckedCreateWithoutUser_orders_userIdToUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUser_orders_userIdToUserInput | ordersCreateOrConnectWithoutUser_orders_userIdToUserInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUser_orders_userIdToUserInput | ordersUpsertWithWhereUniqueWithoutUser_orders_userIdToUserInput[]
    createMany?: ordersCreateManyUser_orders_userIdToUserInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUser_orders_userIdToUserInput | ordersUpdateWithWhereUniqueWithoutUser_orders_userIdToUserInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUser_orders_userIdToUserInput | ordersUpdateManyWithWhereWithoutUser_orders_userIdToUserInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProductOrderInterestCreateWithoutUserInput, ProductOrderInterestUncheckedCreateWithoutUserInput> | ProductOrderInterestCreateWithoutUserInput[] | ProductOrderInterestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductOrderInterestCreateOrConnectWithoutUserInput | ProductOrderInterestCreateOrConnectWithoutUserInput[]
    upsert?: ProductOrderInterestUpsertWithWhereUniqueWithoutUserInput | ProductOrderInterestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProductOrderInterestCreateManyUserInputEnvelope
    set?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    disconnect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    delete?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    connect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    update?: ProductOrderInterestUpdateWithWhereUniqueWithoutUserInput | ProductOrderInterestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProductOrderInterestUpdateManyWithWhereWithoutUserInput | ProductOrderInterestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProductOrderInterestScalarWhereInput | ProductOrderInterestScalarWhereInput[]
  }

  export type ProductViewUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProductViewCreateWithoutUserInput, ProductViewUncheckedCreateWithoutUserInput> | ProductViewCreateWithoutUserInput[] | ProductViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductViewCreateOrConnectWithoutUserInput | ProductViewCreateOrConnectWithoutUserInput[]
    upsert?: ProductViewUpsertWithWhereUniqueWithoutUserInput | ProductViewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProductViewCreateManyUserInputEnvelope
    set?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    disconnect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    delete?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    connect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    update?: ProductViewUpdateWithWhereUniqueWithoutUserInput | ProductViewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProductViewUpdateManyWithWhereWithoutUserInput | ProductViewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProductViewScalarWhereInput | ProductViewScalarWhereInput[]
  }

  export type RideRequestUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<RideRequestCreateWithoutCustomerInput, RideRequestUncheckedCreateWithoutCustomerInput> | RideRequestCreateWithoutCustomerInput[] | RideRequestUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutCustomerInput | RideRequestCreateOrConnectWithoutCustomerInput[]
    upsert?: RideRequestUpsertWithWhereUniqueWithoutCustomerInput | RideRequestUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: RideRequestCreateManyCustomerInputEnvelope
    set?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    disconnect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    delete?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    update?: RideRequestUpdateWithWhereUniqueWithoutCustomerInput | RideRequestUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: RideRequestUpdateManyWithWhereWithoutCustomerInput | RideRequestUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: RideRequestScalarWhereInput | RideRequestScalarWhereInput[]
  }

  export type RiderApplicationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RiderApplicationCreateWithoutUserInput, RiderApplicationUncheckedCreateWithoutUserInput> | RiderApplicationCreateWithoutUserInput[] | RiderApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RiderApplicationCreateOrConnectWithoutUserInput | RiderApplicationCreateOrConnectWithoutUserInput[]
    upsert?: RiderApplicationUpsertWithWhereUniqueWithoutUserInput | RiderApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RiderApplicationCreateManyUserInputEnvelope
    set?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
    disconnect?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
    delete?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
    connect?: RiderApplicationWhereUniqueInput | RiderApplicationWhereUniqueInput[]
    update?: RiderApplicationUpdateWithWhereUniqueWithoutUserInput | RiderApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RiderApplicationUpdateManyWithWhereWithoutUserInput | RiderApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RiderApplicationScalarWhereInput | RiderApplicationScalarWhereInput[]
  }

  export type RideUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<RideCreateWithoutCustomerInput, RideUncheckedCreateWithoutCustomerInput> | RideCreateWithoutCustomerInput[] | RideUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: RideCreateOrConnectWithoutCustomerInput | RideCreateOrConnectWithoutCustomerInput[]
    upsert?: RideUpsertWithWhereUniqueWithoutCustomerInput | RideUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: RideCreateManyCustomerInputEnvelope
    set?: RideWhereUniqueInput | RideWhereUniqueInput[]
    disconnect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    delete?: RideWhereUniqueInput | RideWhereUniqueInput[]
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    update?: RideUpdateWithWhereUniqueWithoutCustomerInput | RideUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: RideUpdateManyWithWhereWithoutCustomerInput | RideUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: RideScalarWhereInput | RideScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutDeliveryAddressesInput = {
    create?: XOR<UserCreateWithoutDeliveryAddressesInput, UserUncheckedCreateWithoutDeliveryAddressesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeliveryAddressesInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutDeliveryAddressesNestedInput = {
    create?: XOR<UserCreateWithoutDeliveryAddressesInput, UserUncheckedCreateWithoutDeliveryAddressesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeliveryAddressesInput
    upsert?: UserUpsertWithoutDeliveryAddressesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeliveryAddressesInput, UserUpdateWithoutDeliveryAddressesInput>, UserUncheckedUpdateWithoutDeliveryAddressesInput>
  }

  export type UserCreateNestedOneWithoutDevicesInput = {
    create?: XOR<UserCreateWithoutDevicesInput, UserUncheckedCreateWithoutDevicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevicesInput
    connect?: UserWhereUniqueInput
  }

  export type SessionCreateNestedManyWithoutDeviceInput = {
    create?: XOR<SessionCreateWithoutDeviceInput, SessionUncheckedCreateWithoutDeviceInput> | SessionCreateWithoutDeviceInput[] | SessionUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutDeviceInput | SessionCreateOrConnectWithoutDeviceInput[]
    createMany?: SessionCreateManyDeviceInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutDeviceInput = {
    create?: XOR<SessionCreateWithoutDeviceInput, SessionUncheckedCreateWithoutDeviceInput> | SessionCreateWithoutDeviceInput[] | SessionUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutDeviceInput | SessionCreateOrConnectWithoutDeviceInput[]
    createMany?: SessionCreateManyDeviceInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutDevicesNestedInput = {
    create?: XOR<UserCreateWithoutDevicesInput, UserUncheckedCreateWithoutDevicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevicesInput
    upsert?: UserUpsertWithoutDevicesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDevicesInput, UserUpdateWithoutDevicesInput>, UserUncheckedUpdateWithoutDevicesInput>
  }

  export type SessionUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<SessionCreateWithoutDeviceInput, SessionUncheckedCreateWithoutDeviceInput> | SessionCreateWithoutDeviceInput[] | SessionUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutDeviceInput | SessionCreateOrConnectWithoutDeviceInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutDeviceInput | SessionUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: SessionCreateManyDeviceInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutDeviceInput | SessionUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutDeviceInput | SessionUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<SessionCreateWithoutDeviceInput, SessionUncheckedCreateWithoutDeviceInput> | SessionCreateWithoutDeviceInput[] | SessionUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutDeviceInput | SessionCreateOrConnectWithoutDeviceInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutDeviceInput | SessionUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: SessionCreateManyDeviceInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutDeviceInput | SessionUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutDeviceInput | SessionUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type DeviceCreateNestedOneWithoutSessionsInput = {
    create?: XOR<DeviceCreateWithoutSessionsInput, DeviceUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: DeviceCreateOrConnectWithoutSessionsInput
    connect?: DeviceWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type DeviceUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<DeviceCreateWithoutSessionsInput, DeviceUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: DeviceCreateOrConnectWithoutSessionsInput
    upsert?: DeviceUpsertWithoutSessionsInput
    connect?: DeviceWhereUniqueInput
    update?: XOR<XOR<DeviceUpdateToOneWithWhereWithoutSessionsInput, DeviceUpdateWithoutSessionsInput>, DeviceUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CategoryCreateNestedOneWithoutProductsInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput
    connect?: CategoryWhereUniqueInput
  }

  export type LocationCreateNestedOneWithoutProductsInput = {
    create?: XOR<LocationCreateWithoutProductsInput, LocationUncheckedCreateWithoutProductsInput>
    connectOrCreate?: LocationCreateOrConnectWithoutProductsInput
    connect?: LocationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProductsInput = {
    create?: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductAttributeCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput> | ProductAttributeCreateWithoutProductInput[] | ProductAttributeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAttributeCreateOrConnectWithoutProductInput | ProductAttributeCreateOrConnectWithoutProductInput[]
    createMany?: ProductAttributeCreateManyProductInputEnvelope
    connect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
  }

  export type ProductDeliveryOptionCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductDeliveryOptionCreateWithoutProductInput, ProductDeliveryOptionUncheckedCreateWithoutProductInput> | ProductDeliveryOptionCreateWithoutProductInput[] | ProductDeliveryOptionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductDeliveryOptionCreateOrConnectWithoutProductInput | ProductDeliveryOptionCreateOrConnectWithoutProductInput[]
    createMany?: ProductDeliveryOptionCreateManyProductInputEnvelope
    connect?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
  }

  export type ProductImageCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type ProductTranslationCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type OrderItemCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ProductOrderInterestCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductOrderInterestCreateWithoutProductInput, ProductOrderInterestUncheckedCreateWithoutProductInput> | ProductOrderInterestCreateWithoutProductInput[] | ProductOrderInterestUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductOrderInterestCreateOrConnectWithoutProductInput | ProductOrderInterestCreateOrConnectWithoutProductInput[]
    createMany?: ProductOrderInterestCreateManyProductInputEnvelope
    connect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
  }

  export type ProductViewCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductViewCreateWithoutProductInput, ProductViewUncheckedCreateWithoutProductInput> | ProductViewCreateWithoutProductInput[] | ProductViewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductViewCreateOrConnectWithoutProductInput | ProductViewCreateOrConnectWithoutProductInput[]
    createMany?: ProductViewCreateManyProductInputEnvelope
    connect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
  }

  export type ProductAttributeUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput> | ProductAttributeCreateWithoutProductInput[] | ProductAttributeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAttributeCreateOrConnectWithoutProductInput | ProductAttributeCreateOrConnectWithoutProductInput[]
    createMany?: ProductAttributeCreateManyProductInputEnvelope
    connect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
  }

  export type ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductDeliveryOptionCreateWithoutProductInput, ProductDeliveryOptionUncheckedCreateWithoutProductInput> | ProductDeliveryOptionCreateWithoutProductInput[] | ProductDeliveryOptionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductDeliveryOptionCreateOrConnectWithoutProductInput | ProductDeliveryOptionCreateOrConnectWithoutProductInput[]
    createMany?: ProductDeliveryOptionCreateManyProductInputEnvelope
    connect?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
  }

  export type ProductImageUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type ProductTranslationUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductOrderInterestCreateWithoutProductInput, ProductOrderInterestUncheckedCreateWithoutProductInput> | ProductOrderInterestCreateWithoutProductInput[] | ProductOrderInterestUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductOrderInterestCreateOrConnectWithoutProductInput | ProductOrderInterestCreateOrConnectWithoutProductInput[]
    createMany?: ProductOrderInterestCreateManyProductInputEnvelope
    connect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
  }

  export type ProductViewUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductViewCreateWithoutProductInput, ProductViewUncheckedCreateWithoutProductInput> | ProductViewCreateWithoutProductInput[] | ProductViewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductViewCreateOrConnectWithoutProductInput | ProductViewCreateOrConnectWithoutProductInput[]
    createMany?: ProductViewCreateManyProductInputEnvelope
    connect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumProductConditionFieldUpdateOperationsInput = {
    set?: $Enums.ProductCondition
  }

  export type EnumProductStatusFieldUpdateOperationsInput = {
    set?: $Enums.ProductStatus
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type CategoryUpdateOneWithoutProductsNestedInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput
    upsert?: CategoryUpsertWithoutProductsInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutProductsInput, CategoryUpdateWithoutProductsInput>, CategoryUncheckedUpdateWithoutProductsInput>
  }

  export type LocationUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<LocationCreateWithoutProductsInput, LocationUncheckedCreateWithoutProductsInput>
    connectOrCreate?: LocationCreateOrConnectWithoutProductsInput
    upsert?: LocationUpsertWithoutProductsInput
    connect?: LocationWhereUniqueInput
    update?: XOR<XOR<LocationUpdateToOneWithWhereWithoutProductsInput, LocationUpdateWithoutProductsInput>, LocationUncheckedUpdateWithoutProductsInput>
  }

  export type UserUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductsInput
    upsert?: UserUpsertWithoutProductsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProductsInput, UserUpdateWithoutProductsInput>, UserUncheckedUpdateWithoutProductsInput>
  }

  export type ProductAttributeUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput> | ProductAttributeCreateWithoutProductInput[] | ProductAttributeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAttributeCreateOrConnectWithoutProductInput | ProductAttributeCreateOrConnectWithoutProductInput[]
    upsert?: ProductAttributeUpsertWithWhereUniqueWithoutProductInput | ProductAttributeUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductAttributeCreateManyProductInputEnvelope
    set?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    disconnect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    delete?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    connect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    update?: ProductAttributeUpdateWithWhereUniqueWithoutProductInput | ProductAttributeUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductAttributeUpdateManyWithWhereWithoutProductInput | ProductAttributeUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductAttributeScalarWhereInput | ProductAttributeScalarWhereInput[]
  }

  export type ProductDeliveryOptionUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductDeliveryOptionCreateWithoutProductInput, ProductDeliveryOptionUncheckedCreateWithoutProductInput> | ProductDeliveryOptionCreateWithoutProductInput[] | ProductDeliveryOptionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductDeliveryOptionCreateOrConnectWithoutProductInput | ProductDeliveryOptionCreateOrConnectWithoutProductInput[]
    upsert?: ProductDeliveryOptionUpsertWithWhereUniqueWithoutProductInput | ProductDeliveryOptionUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductDeliveryOptionCreateManyProductInputEnvelope
    set?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
    disconnect?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
    delete?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
    connect?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
    update?: ProductDeliveryOptionUpdateWithWhereUniqueWithoutProductInput | ProductDeliveryOptionUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductDeliveryOptionUpdateManyWithWhereWithoutProductInput | ProductDeliveryOptionUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductDeliveryOptionScalarWhereInput | ProductDeliveryOptionScalarWhereInput[]
  }

  export type ProductImageUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutProductInput | ProductImageUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutProductInput | ProductImageUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutProductInput | ProductImageUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type ProductTranslationUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutProductInput | ProductTranslationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutProductInput | ProductTranslationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutProductInput | ProductTranslationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type OrderItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ProductOrderInterestUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductOrderInterestCreateWithoutProductInput, ProductOrderInterestUncheckedCreateWithoutProductInput> | ProductOrderInterestCreateWithoutProductInput[] | ProductOrderInterestUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductOrderInterestCreateOrConnectWithoutProductInput | ProductOrderInterestCreateOrConnectWithoutProductInput[]
    upsert?: ProductOrderInterestUpsertWithWhereUniqueWithoutProductInput | ProductOrderInterestUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductOrderInterestCreateManyProductInputEnvelope
    set?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    disconnect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    delete?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    connect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    update?: ProductOrderInterestUpdateWithWhereUniqueWithoutProductInput | ProductOrderInterestUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductOrderInterestUpdateManyWithWhereWithoutProductInput | ProductOrderInterestUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductOrderInterestScalarWhereInput | ProductOrderInterestScalarWhereInput[]
  }

  export type ProductViewUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductViewCreateWithoutProductInput, ProductViewUncheckedCreateWithoutProductInput> | ProductViewCreateWithoutProductInput[] | ProductViewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductViewCreateOrConnectWithoutProductInput | ProductViewCreateOrConnectWithoutProductInput[]
    upsert?: ProductViewUpsertWithWhereUniqueWithoutProductInput | ProductViewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductViewCreateManyProductInputEnvelope
    set?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    disconnect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    delete?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    connect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    update?: ProductViewUpdateWithWhereUniqueWithoutProductInput | ProductViewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductViewUpdateManyWithWhereWithoutProductInput | ProductViewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductViewScalarWhereInput | ProductViewScalarWhereInput[]
  }

  export type ProductAttributeUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput> | ProductAttributeCreateWithoutProductInput[] | ProductAttributeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAttributeCreateOrConnectWithoutProductInput | ProductAttributeCreateOrConnectWithoutProductInput[]
    upsert?: ProductAttributeUpsertWithWhereUniqueWithoutProductInput | ProductAttributeUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductAttributeCreateManyProductInputEnvelope
    set?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    disconnect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    delete?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    connect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    update?: ProductAttributeUpdateWithWhereUniqueWithoutProductInput | ProductAttributeUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductAttributeUpdateManyWithWhereWithoutProductInput | ProductAttributeUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductAttributeScalarWhereInput | ProductAttributeScalarWhereInput[]
  }

  export type ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductDeliveryOptionCreateWithoutProductInput, ProductDeliveryOptionUncheckedCreateWithoutProductInput> | ProductDeliveryOptionCreateWithoutProductInput[] | ProductDeliveryOptionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductDeliveryOptionCreateOrConnectWithoutProductInput | ProductDeliveryOptionCreateOrConnectWithoutProductInput[]
    upsert?: ProductDeliveryOptionUpsertWithWhereUniqueWithoutProductInput | ProductDeliveryOptionUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductDeliveryOptionCreateManyProductInputEnvelope
    set?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
    disconnect?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
    delete?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
    connect?: ProductDeliveryOptionWhereUniqueInput | ProductDeliveryOptionWhereUniqueInput[]
    update?: ProductDeliveryOptionUpdateWithWhereUniqueWithoutProductInput | ProductDeliveryOptionUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductDeliveryOptionUpdateManyWithWhereWithoutProductInput | ProductDeliveryOptionUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductDeliveryOptionScalarWhereInput | ProductDeliveryOptionScalarWhereInput[]
  }

  export type ProductImageUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutProductInput | ProductImageUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutProductInput | ProductImageUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutProductInput | ProductImageUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type ProductTranslationUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutProductInput | ProductTranslationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutProductInput | ProductTranslationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutProductInput | ProductTranslationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductOrderInterestCreateWithoutProductInput, ProductOrderInterestUncheckedCreateWithoutProductInput> | ProductOrderInterestCreateWithoutProductInput[] | ProductOrderInterestUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductOrderInterestCreateOrConnectWithoutProductInput | ProductOrderInterestCreateOrConnectWithoutProductInput[]
    upsert?: ProductOrderInterestUpsertWithWhereUniqueWithoutProductInput | ProductOrderInterestUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductOrderInterestCreateManyProductInputEnvelope
    set?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    disconnect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    delete?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    connect?: ProductOrderInterestWhereUniqueInput | ProductOrderInterestWhereUniqueInput[]
    update?: ProductOrderInterestUpdateWithWhereUniqueWithoutProductInput | ProductOrderInterestUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductOrderInterestUpdateManyWithWhereWithoutProductInput | ProductOrderInterestUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductOrderInterestScalarWhereInput | ProductOrderInterestScalarWhereInput[]
  }

  export type ProductViewUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductViewCreateWithoutProductInput, ProductViewUncheckedCreateWithoutProductInput> | ProductViewCreateWithoutProductInput[] | ProductViewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductViewCreateOrConnectWithoutProductInput | ProductViewCreateOrConnectWithoutProductInput[]
    upsert?: ProductViewUpsertWithWhereUniqueWithoutProductInput | ProductViewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductViewCreateManyProductInputEnvelope
    set?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    disconnect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    delete?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    connect?: ProductViewWhereUniqueInput | ProductViewWhereUniqueInput[]
    update?: ProductViewUpdateWithWhereUniqueWithoutProductInput | ProductViewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductViewUpdateManyWithWhereWithoutProductInput | ProductViewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductViewScalarWhereInput | ProductViewScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutImagesInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput
    connect?: ProductWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProductUpdateOneRequiredWithoutImagesNestedInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput
    upsert?: ProductUpsertWithoutImagesInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutImagesInput, ProductUpdateWithoutImagesInput>, ProductUncheckedUpdateWithoutImagesInput>
  }

  export type CategoryCreateNestedOneWithoutChildrenInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    connect?: CategoryWhereUniqueInput
  }

  export type CategoryCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryTranslationCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CategoryUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    upsert?: CategoryUpsertWithoutChildrenInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutChildrenInput, CategoryUpdateWithoutChildrenInput>, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryTranslationUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutCategoryInput | CategoryTranslationUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutCategoryInput | CategoryTranslationUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutLocationInput = {
    create?: XOR<ProductCreateWithoutLocationInput, ProductUncheckedCreateWithoutLocationInput> | ProductCreateWithoutLocationInput[] | ProductUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLocationInput | ProductCreateOrConnectWithoutLocationInput[]
    createMany?: ProductCreateManyLocationInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutLocationInput = {
    create?: XOR<ProductCreateWithoutLocationInput, ProductUncheckedCreateWithoutLocationInput> | ProductCreateWithoutLocationInput[] | ProductUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLocationInput | ProductCreateOrConnectWithoutLocationInput[]
    createMany?: ProductCreateManyLocationInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProductUpdateManyWithoutLocationNestedInput = {
    create?: XOR<ProductCreateWithoutLocationInput, ProductUncheckedCreateWithoutLocationInput> | ProductCreateWithoutLocationInput[] | ProductUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLocationInput | ProductCreateOrConnectWithoutLocationInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutLocationInput | ProductUpsertWithWhereUniqueWithoutLocationInput[]
    createMany?: ProductCreateManyLocationInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutLocationInput | ProductUpdateWithWhereUniqueWithoutLocationInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutLocationInput | ProductUpdateManyWithWhereWithoutLocationInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutLocationNestedInput = {
    create?: XOR<ProductCreateWithoutLocationInput, ProductUncheckedCreateWithoutLocationInput> | ProductCreateWithoutLocationInput[] | ProductUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLocationInput | ProductCreateOrConnectWithoutLocationInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutLocationInput | ProductUpsertWithWhereUniqueWithoutLocationInput[]
    createMany?: ProductCreateManyLocationInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutLocationInput | ProductUpdateWithWhereUniqueWithoutLocationInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutLocationInput | ProductUpdateManyWithWhereWithoutLocationInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutAttributesInput = {
    create?: XOR<ProductCreateWithoutAttributesInput, ProductUncheckedCreateWithoutAttributesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutAttributesInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutAttributesNestedInput = {
    create?: XOR<ProductCreateWithoutAttributesInput, ProductUncheckedCreateWithoutAttributesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutAttributesInput
    upsert?: ProductUpsertWithoutAttributesInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutAttributesInput, ProductUpdateWithoutAttributesInput>, ProductUncheckedUpdateWithoutAttributesInput>
  }

  export type ProductCreateNestedOneWithoutTranslationsInput = {
    create?: XOR<ProductCreateWithoutTranslationsInput, ProductUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTranslationsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutTranslationsNestedInput = {
    create?: XOR<ProductCreateWithoutTranslationsInput, ProductUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTranslationsInput
    upsert?: ProductUpsertWithoutTranslationsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutTranslationsInput, ProductUpdateWithoutTranslationsInput>, ProductUncheckedUpdateWithoutTranslationsInput>
  }

  export type ProductCreateNestedOneWithoutDeliveryOptionsInput = {
    create?: XOR<ProductCreateWithoutDeliveryOptionsInput, ProductUncheckedCreateWithoutDeliveryOptionsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutDeliveryOptionsInput
    connect?: ProductWhereUniqueInput
  }

  export type EnumDeliveryTypeFieldUpdateOperationsInput = {
    set?: $Enums.DeliveryType
  }

  export type ProductUpdateOneRequiredWithoutDeliveryOptionsNestedInput = {
    create?: XOR<ProductCreateWithoutDeliveryOptionsInput, ProductUncheckedCreateWithoutDeliveryOptionsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutDeliveryOptionsInput
    upsert?: ProductUpsertWithoutDeliveryOptionsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutDeliveryOptionsInput, ProductUpdateWithoutDeliveryOptionsInput>, ProductUncheckedUpdateWithoutDeliveryOptionsInput>
  }

  export type CategoryCreateNestedOneWithoutTranslationsInput = {
    create?: XOR<CategoryCreateWithoutTranslationsInput, CategoryUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutTranslationsInput
    connect?: CategoryWhereUniqueInput
  }

  export type CategoryUpdateOneRequiredWithoutTranslationsNestedInput = {
    create?: XOR<CategoryCreateWithoutTranslationsInput, CategoryUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutTranslationsInput
    upsert?: CategoryUpsertWithoutTranslationsInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutTranslationsInput, CategoryUpdateWithoutTranslationsInput>, CategoryUncheckedUpdateWithoutTranslationsInput>
  }

  export type SellerKycCreatecountryInput = {
    set: string[]
  }

  export type BankAccountCreateNestedManyWithoutSellerKycInput = {
    create?: XOR<BankAccountCreateWithoutSellerKycInput, BankAccountUncheckedCreateWithoutSellerKycInput> | BankAccountCreateWithoutSellerKycInput[] | BankAccountUncheckedCreateWithoutSellerKycInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutSellerKycInput | BankAccountCreateOrConnectWithoutSellerKycInput[]
    createMany?: BankAccountCreateManySellerKycInputEnvelope
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutSellerKycInput = {
    create?: XOR<UserCreateWithoutSellerKycInput, UserUncheckedCreateWithoutSellerKycInput>
    connectOrCreate?: UserCreateOrConnectWithoutSellerKycInput
    connect?: UserWhereUniqueInput
  }

  export type WalletCreateNestedManyWithoutSellerKycInput = {
    create?: XOR<WalletCreateWithoutSellerKycInput, WalletUncheckedCreateWithoutSellerKycInput> | WalletCreateWithoutSellerKycInput[] | WalletUncheckedCreateWithoutSellerKycInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutSellerKycInput | WalletCreateOrConnectWithoutSellerKycInput[]
    createMany?: WalletCreateManySellerKycInputEnvelope
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
  }

  export type BankAccountUncheckedCreateNestedManyWithoutSellerKycInput = {
    create?: XOR<BankAccountCreateWithoutSellerKycInput, BankAccountUncheckedCreateWithoutSellerKycInput> | BankAccountCreateWithoutSellerKycInput[] | BankAccountUncheckedCreateWithoutSellerKycInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutSellerKycInput | BankAccountCreateOrConnectWithoutSellerKycInput[]
    createMany?: BankAccountCreateManySellerKycInputEnvelope
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
  }

  export type WalletUncheckedCreateNestedManyWithoutSellerKycInput = {
    create?: XOR<WalletCreateWithoutSellerKycInput, WalletUncheckedCreateWithoutSellerKycInput> | WalletCreateWithoutSellerKycInput[] | WalletUncheckedCreateWithoutSellerKycInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutSellerKycInput | WalletCreateOrConnectWithoutSellerKycInput[]
    createMany?: WalletCreateManySellerKycInputEnvelope
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
  }

  export type EnumBusinessTypeFieldUpdateOperationsInput = {
    set?: $Enums.BusinessType
  }

  export type EnumDocumentTypeFieldUpdateOperationsInput = {
    set?: $Enums.DocumentType
  }

  export type EnumKycStatusFieldUpdateOperationsInput = {
    set?: $Enums.KycStatus
  }

  export type SellerKycUpdatecountryInput = {
    set?: string[]
    push?: string | string[]
  }

  export type BankAccountUpdateManyWithoutSellerKycNestedInput = {
    create?: XOR<BankAccountCreateWithoutSellerKycInput, BankAccountUncheckedCreateWithoutSellerKycInput> | BankAccountCreateWithoutSellerKycInput[] | BankAccountUncheckedCreateWithoutSellerKycInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutSellerKycInput | BankAccountCreateOrConnectWithoutSellerKycInput[]
    upsert?: BankAccountUpsertWithWhereUniqueWithoutSellerKycInput | BankAccountUpsertWithWhereUniqueWithoutSellerKycInput[]
    createMany?: BankAccountCreateManySellerKycInputEnvelope
    set?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    disconnect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    delete?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    update?: BankAccountUpdateWithWhereUniqueWithoutSellerKycInput | BankAccountUpdateWithWhereUniqueWithoutSellerKycInput[]
    updateMany?: BankAccountUpdateManyWithWhereWithoutSellerKycInput | BankAccountUpdateManyWithWhereWithoutSellerKycInput[]
    deleteMany?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutSellerKycNestedInput = {
    create?: XOR<UserCreateWithoutSellerKycInput, UserUncheckedCreateWithoutSellerKycInput>
    connectOrCreate?: UserCreateOrConnectWithoutSellerKycInput
    upsert?: UserUpsertWithoutSellerKycInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSellerKycInput, UserUpdateWithoutSellerKycInput>, UserUncheckedUpdateWithoutSellerKycInput>
  }

  export type WalletUpdateManyWithoutSellerKycNestedInput = {
    create?: XOR<WalletCreateWithoutSellerKycInput, WalletUncheckedCreateWithoutSellerKycInput> | WalletCreateWithoutSellerKycInput[] | WalletUncheckedCreateWithoutSellerKycInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutSellerKycInput | WalletCreateOrConnectWithoutSellerKycInput[]
    upsert?: WalletUpsertWithWhereUniqueWithoutSellerKycInput | WalletUpsertWithWhereUniqueWithoutSellerKycInput[]
    createMany?: WalletCreateManySellerKycInputEnvelope
    set?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    disconnect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    delete?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    update?: WalletUpdateWithWhereUniqueWithoutSellerKycInput | WalletUpdateWithWhereUniqueWithoutSellerKycInput[]
    updateMany?: WalletUpdateManyWithWhereWithoutSellerKycInput | WalletUpdateManyWithWhereWithoutSellerKycInput[]
    deleteMany?: WalletScalarWhereInput | WalletScalarWhereInput[]
  }

  export type BankAccountUncheckedUpdateManyWithoutSellerKycNestedInput = {
    create?: XOR<BankAccountCreateWithoutSellerKycInput, BankAccountUncheckedCreateWithoutSellerKycInput> | BankAccountCreateWithoutSellerKycInput[] | BankAccountUncheckedCreateWithoutSellerKycInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutSellerKycInput | BankAccountCreateOrConnectWithoutSellerKycInput[]
    upsert?: BankAccountUpsertWithWhereUniqueWithoutSellerKycInput | BankAccountUpsertWithWhereUniqueWithoutSellerKycInput[]
    createMany?: BankAccountCreateManySellerKycInputEnvelope
    set?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    disconnect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    delete?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    update?: BankAccountUpdateWithWhereUniqueWithoutSellerKycInput | BankAccountUpdateWithWhereUniqueWithoutSellerKycInput[]
    updateMany?: BankAccountUpdateManyWithWhereWithoutSellerKycInput | BankAccountUpdateManyWithWhereWithoutSellerKycInput[]
    deleteMany?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
  }

  export type WalletUncheckedUpdateManyWithoutSellerKycNestedInput = {
    create?: XOR<WalletCreateWithoutSellerKycInput, WalletUncheckedCreateWithoutSellerKycInput> | WalletCreateWithoutSellerKycInput[] | WalletUncheckedCreateWithoutSellerKycInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutSellerKycInput | WalletCreateOrConnectWithoutSellerKycInput[]
    upsert?: WalletUpsertWithWhereUniqueWithoutSellerKycInput | WalletUpsertWithWhereUniqueWithoutSellerKycInput[]
    createMany?: WalletCreateManySellerKycInputEnvelope
    set?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    disconnect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    delete?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    update?: WalletUpdateWithWhereUniqueWithoutSellerKycInput | WalletUpdateWithWhereUniqueWithoutSellerKycInput[]
    updateMany?: WalletUpdateManyWithWhereWithoutSellerKycInput | WalletUpdateManyWithWhereWithoutSellerKycInput[]
    deleteMany?: WalletScalarWhereInput | WalletScalarWhereInput[]
  }

  export type SellerKycCreateNestedOneWithoutBankAccountsInput = {
    create?: XOR<SellerKycCreateWithoutBankAccountsInput, SellerKycUncheckedCreateWithoutBankAccountsInput>
    connectOrCreate?: SellerKycCreateOrConnectWithoutBankAccountsInput
    connect?: SellerKycWhereUniqueInput
  }

  export type SettlementCreateNestedManyWithoutBankAccountInput = {
    create?: XOR<SettlementCreateWithoutBankAccountInput, SettlementUncheckedCreateWithoutBankAccountInput> | SettlementCreateWithoutBankAccountInput[] | SettlementUncheckedCreateWithoutBankAccountInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutBankAccountInput | SettlementCreateOrConnectWithoutBankAccountInput[]
    createMany?: SettlementCreateManyBankAccountInputEnvelope
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
  }

  export type SettlementUncheckedCreateNestedManyWithoutBankAccountInput = {
    create?: XOR<SettlementCreateWithoutBankAccountInput, SettlementUncheckedCreateWithoutBankAccountInput> | SettlementCreateWithoutBankAccountInput[] | SettlementUncheckedCreateWithoutBankAccountInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutBankAccountInput | SettlementCreateOrConnectWithoutBankAccountInput[]
    createMany?: SettlementCreateManyBankAccountInputEnvelope
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
  }

  export type EnumAccountStatusFieldUpdateOperationsInput = {
    set?: $Enums.AccountStatus
  }

  export type SellerKycUpdateOneRequiredWithoutBankAccountsNestedInput = {
    create?: XOR<SellerKycCreateWithoutBankAccountsInput, SellerKycUncheckedCreateWithoutBankAccountsInput>
    connectOrCreate?: SellerKycCreateOrConnectWithoutBankAccountsInput
    upsert?: SellerKycUpsertWithoutBankAccountsInput
    connect?: SellerKycWhereUniqueInput
    update?: XOR<XOR<SellerKycUpdateToOneWithWhereWithoutBankAccountsInput, SellerKycUpdateWithoutBankAccountsInput>, SellerKycUncheckedUpdateWithoutBankAccountsInput>
  }

  export type SettlementUpdateManyWithoutBankAccountNestedInput = {
    create?: XOR<SettlementCreateWithoutBankAccountInput, SettlementUncheckedCreateWithoutBankAccountInput> | SettlementCreateWithoutBankAccountInput[] | SettlementUncheckedCreateWithoutBankAccountInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutBankAccountInput | SettlementCreateOrConnectWithoutBankAccountInput[]
    upsert?: SettlementUpsertWithWhereUniqueWithoutBankAccountInput | SettlementUpsertWithWhereUniqueWithoutBankAccountInput[]
    createMany?: SettlementCreateManyBankAccountInputEnvelope
    set?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    disconnect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    delete?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    update?: SettlementUpdateWithWhereUniqueWithoutBankAccountInput | SettlementUpdateWithWhereUniqueWithoutBankAccountInput[]
    updateMany?: SettlementUpdateManyWithWhereWithoutBankAccountInput | SettlementUpdateManyWithWhereWithoutBankAccountInput[]
    deleteMany?: SettlementScalarWhereInput | SettlementScalarWhereInput[]
  }

  export type SettlementUncheckedUpdateManyWithoutBankAccountNestedInput = {
    create?: XOR<SettlementCreateWithoutBankAccountInput, SettlementUncheckedCreateWithoutBankAccountInput> | SettlementCreateWithoutBankAccountInput[] | SettlementUncheckedCreateWithoutBankAccountInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutBankAccountInput | SettlementCreateOrConnectWithoutBankAccountInput[]
    upsert?: SettlementUpsertWithWhereUniqueWithoutBankAccountInput | SettlementUpsertWithWhereUniqueWithoutBankAccountInput[]
    createMany?: SettlementCreateManyBankAccountInputEnvelope
    set?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    disconnect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    delete?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    update?: SettlementUpdateWithWhereUniqueWithoutBankAccountInput | SettlementUpdateWithWhereUniqueWithoutBankAccountInput[]
    updateMany?: SettlementUpdateManyWithWhereWithoutBankAccountInput | SettlementUpdateManyWithWhereWithoutBankAccountInput[]
    deleteMany?: SettlementScalarWhereInput | SettlementScalarWhereInput[]
  }

  export type SettlementCreateNestedManyWithoutWalletInput = {
    create?: XOR<SettlementCreateWithoutWalletInput, SettlementUncheckedCreateWithoutWalletInput> | SettlementCreateWithoutWalletInput[] | SettlementUncheckedCreateWithoutWalletInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutWalletInput | SettlementCreateOrConnectWithoutWalletInput[]
    createMany?: SettlementCreateManyWalletInputEnvelope
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
  }

  export type SellerKycCreateNestedOneWithoutWalletsInput = {
    create?: XOR<SellerKycCreateWithoutWalletsInput, SellerKycUncheckedCreateWithoutWalletsInput>
    connectOrCreate?: SellerKycCreateOrConnectWithoutWalletsInput
    connect?: SellerKycWhereUniqueInput
  }

  export type SettlementUncheckedCreateNestedManyWithoutWalletInput = {
    create?: XOR<SettlementCreateWithoutWalletInput, SettlementUncheckedCreateWithoutWalletInput> | SettlementCreateWithoutWalletInput[] | SettlementUncheckedCreateWithoutWalletInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutWalletInput | SettlementCreateOrConnectWithoutWalletInput[]
    createMany?: SettlementCreateManyWalletInputEnvelope
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
  }

  export type EnumWalletTypeFieldUpdateOperationsInput = {
    set?: $Enums.WalletType
  }

  export type SettlementUpdateManyWithoutWalletNestedInput = {
    create?: XOR<SettlementCreateWithoutWalletInput, SettlementUncheckedCreateWithoutWalletInput> | SettlementCreateWithoutWalletInput[] | SettlementUncheckedCreateWithoutWalletInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutWalletInput | SettlementCreateOrConnectWithoutWalletInput[]
    upsert?: SettlementUpsertWithWhereUniqueWithoutWalletInput | SettlementUpsertWithWhereUniqueWithoutWalletInput[]
    createMany?: SettlementCreateManyWalletInputEnvelope
    set?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    disconnect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    delete?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    update?: SettlementUpdateWithWhereUniqueWithoutWalletInput | SettlementUpdateWithWhereUniqueWithoutWalletInput[]
    updateMany?: SettlementUpdateManyWithWhereWithoutWalletInput | SettlementUpdateManyWithWhereWithoutWalletInput[]
    deleteMany?: SettlementScalarWhereInput | SettlementScalarWhereInput[]
  }

  export type SellerKycUpdateOneRequiredWithoutWalletsNestedInput = {
    create?: XOR<SellerKycCreateWithoutWalletsInput, SellerKycUncheckedCreateWithoutWalletsInput>
    connectOrCreate?: SellerKycCreateOrConnectWithoutWalletsInput
    upsert?: SellerKycUpsertWithoutWalletsInput
    connect?: SellerKycWhereUniqueInput
    update?: XOR<XOR<SellerKycUpdateToOneWithWhereWithoutWalletsInput, SellerKycUpdateWithoutWalletsInput>, SellerKycUncheckedUpdateWithoutWalletsInput>
  }

  export type SettlementUncheckedUpdateManyWithoutWalletNestedInput = {
    create?: XOR<SettlementCreateWithoutWalletInput, SettlementUncheckedCreateWithoutWalletInput> | SettlementCreateWithoutWalletInput[] | SettlementUncheckedCreateWithoutWalletInput[]
    connectOrCreate?: SettlementCreateOrConnectWithoutWalletInput | SettlementCreateOrConnectWithoutWalletInput[]
    upsert?: SettlementUpsertWithWhereUniqueWithoutWalletInput | SettlementUpsertWithWhereUniqueWithoutWalletInput[]
    createMany?: SettlementCreateManyWalletInputEnvelope
    set?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    disconnect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    delete?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    connect?: SettlementWhereUniqueInput | SettlementWhereUniqueInput[]
    update?: SettlementUpdateWithWhereUniqueWithoutWalletInput | SettlementUpdateWithWhereUniqueWithoutWalletInput[]
    updateMany?: SettlementUpdateManyWithWhereWithoutWalletInput | SettlementUpdateManyWithWhereWithoutWalletInput[]
    deleteMany?: SettlementScalarWhereInput | SettlementScalarWhereInput[]
  }

  export type ExternalTransactionCreateNestedManyWithoutPaymentMethodInput = {
    create?: XOR<ExternalTransactionCreateWithoutPaymentMethodInput, ExternalTransactionUncheckedCreateWithoutPaymentMethodInput> | ExternalTransactionCreateWithoutPaymentMethodInput[] | ExternalTransactionUncheckedCreateWithoutPaymentMethodInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutPaymentMethodInput | ExternalTransactionCreateOrConnectWithoutPaymentMethodInput[]
    createMany?: ExternalTransactionCreateManyPaymentMethodInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutPaymentMethodsInput = {
    create?: XOR<UserCreateWithoutPaymentMethodsInput, UserUncheckedCreateWithoutPaymentMethodsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentMethodsInput
    connect?: UserWhereUniqueInput
  }

  export type ExternalTransactionUncheckedCreateNestedManyWithoutPaymentMethodInput = {
    create?: XOR<ExternalTransactionCreateWithoutPaymentMethodInput, ExternalTransactionUncheckedCreateWithoutPaymentMethodInput> | ExternalTransactionCreateWithoutPaymentMethodInput[] | ExternalTransactionUncheckedCreateWithoutPaymentMethodInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutPaymentMethodInput | ExternalTransactionCreateOrConnectWithoutPaymentMethodInput[]
    createMany?: ExternalTransactionCreateManyPaymentMethodInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type EnumPaymentTypeFieldUpdateOperationsInput = {
    set?: $Enums.PaymentType
  }

  export type ExternalTransactionUpdateManyWithoutPaymentMethodNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutPaymentMethodInput, ExternalTransactionUncheckedCreateWithoutPaymentMethodInput> | ExternalTransactionCreateWithoutPaymentMethodInput[] | ExternalTransactionUncheckedCreateWithoutPaymentMethodInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutPaymentMethodInput | ExternalTransactionCreateOrConnectWithoutPaymentMethodInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutPaymentMethodInput | ExternalTransactionUpsertWithWhereUniqueWithoutPaymentMethodInput[]
    createMany?: ExternalTransactionCreateManyPaymentMethodInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutPaymentMethodInput | ExternalTransactionUpdateWithWhereUniqueWithoutPaymentMethodInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutPaymentMethodInput | ExternalTransactionUpdateManyWithWhereWithoutPaymentMethodInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutPaymentMethodsNestedInput = {
    create?: XOR<UserCreateWithoutPaymentMethodsInput, UserUncheckedCreateWithoutPaymentMethodsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentMethodsInput
    upsert?: UserUpsertWithoutPaymentMethodsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPaymentMethodsInput, UserUpdateWithoutPaymentMethodsInput>, UserUncheckedUpdateWithoutPaymentMethodsInput>
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutPaymentMethodNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutPaymentMethodInput, ExternalTransactionUncheckedCreateWithoutPaymentMethodInput> | ExternalTransactionCreateWithoutPaymentMethodInput[] | ExternalTransactionUncheckedCreateWithoutPaymentMethodInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutPaymentMethodInput | ExternalTransactionCreateOrConnectWithoutPaymentMethodInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutPaymentMethodInput | ExternalTransactionUpsertWithWhereUniqueWithoutPaymentMethodInput[]
    createMany?: ExternalTransactionCreateManyPaymentMethodInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutPaymentMethodInput | ExternalTransactionUpdateWithWhereUniqueWithoutPaymentMethodInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutPaymentMethodInput | ExternalTransactionUpdateManyWithWhereWithoutPaymentMethodInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type BankAccountCreateNestedOneWithoutSettlementsInput = {
    create?: XOR<BankAccountCreateWithoutSettlementsInput, BankAccountUncheckedCreateWithoutSettlementsInput>
    connectOrCreate?: BankAccountCreateOrConnectWithoutSettlementsInput
    connect?: BankAccountWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSettlementsInput = {
    create?: XOR<UserCreateWithoutSettlementsInput, UserUncheckedCreateWithoutSettlementsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSettlementsInput
    connect?: UserWhereUniqueInput
  }

  export type WalletCreateNestedOneWithoutSettlementsInput = {
    create?: XOR<WalletCreateWithoutSettlementsInput, WalletUncheckedCreateWithoutSettlementsInput>
    connectOrCreate?: WalletCreateOrConnectWithoutSettlementsInput
    connect?: WalletWhereUniqueInput
  }

  export type EnumSettlementStatusFieldUpdateOperationsInput = {
    set?: $Enums.SettlementStatus
  }

  export type EnumSettlementTypeFieldUpdateOperationsInput = {
    set?: $Enums.SettlementType
  }

  export type EnumSettlementChannelFieldUpdateOperationsInput = {
    set?: $Enums.SettlementChannel
  }

  export type BankAccountUpdateOneWithoutSettlementsNestedInput = {
    create?: XOR<BankAccountCreateWithoutSettlementsInput, BankAccountUncheckedCreateWithoutSettlementsInput>
    connectOrCreate?: BankAccountCreateOrConnectWithoutSettlementsInput
    upsert?: BankAccountUpsertWithoutSettlementsInput
    disconnect?: BankAccountWhereInput | boolean
    delete?: BankAccountWhereInput | boolean
    connect?: BankAccountWhereUniqueInput
    update?: XOR<XOR<BankAccountUpdateToOneWithWhereWithoutSettlementsInput, BankAccountUpdateWithoutSettlementsInput>, BankAccountUncheckedUpdateWithoutSettlementsInput>
  }

  export type UserUpdateOneRequiredWithoutSettlementsNestedInput = {
    create?: XOR<UserCreateWithoutSettlementsInput, UserUncheckedCreateWithoutSettlementsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSettlementsInput
    upsert?: UserUpsertWithoutSettlementsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSettlementsInput, UserUpdateWithoutSettlementsInput>, UserUncheckedUpdateWithoutSettlementsInput>
  }

  export type WalletUpdateOneWithoutSettlementsNestedInput = {
    create?: XOR<WalletCreateWithoutSettlementsInput, WalletUncheckedCreateWithoutSettlementsInput>
    connectOrCreate?: WalletCreateOrConnectWithoutSettlementsInput
    upsert?: WalletUpsertWithoutSettlementsInput
    disconnect?: WalletWhereInput | boolean
    delete?: WalletWhereInput | boolean
    connect?: WalletWhereUniqueInput
    update?: XOR<XOR<WalletUpdateToOneWithWhereWithoutSettlementsInput, WalletUpdateWithoutSettlementsInput>, WalletUncheckedUpdateWithoutSettlementsInput>
  }

  export type ProductCreateNestedOneWithoutProductViewsInput = {
    create?: XOR<ProductCreateWithoutProductViewsInput, ProductUncheckedCreateWithoutProductViewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductViewsInput
    connect?: ProductWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProductViewsInput = {
    create?: XOR<UserCreateWithoutProductViewsInput, UserUncheckedCreateWithoutProductViewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductViewsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutProductViewsNestedInput = {
    create?: XOR<ProductCreateWithoutProductViewsInput, ProductUncheckedCreateWithoutProductViewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductViewsInput
    upsert?: ProductUpsertWithoutProductViewsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutProductViewsInput, ProductUpdateWithoutProductViewsInput>, ProductUncheckedUpdateWithoutProductViewsInput>
  }

  export type UserUpdateOneRequiredWithoutProductViewsNestedInput = {
    create?: XOR<UserCreateWithoutProductViewsInput, UserUncheckedCreateWithoutProductViewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductViewsInput
    upsert?: UserUpsertWithoutProductViewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProductViewsInput, UserUpdateWithoutProductViewsInput>, UserUncheckedUpdateWithoutProductViewsInput>
  }

  export type ProductCreateNestedOneWithoutProductOrderInterestsInput = {
    create?: XOR<ProductCreateWithoutProductOrderInterestsInput, ProductUncheckedCreateWithoutProductOrderInterestsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductOrderInterestsInput
    connect?: ProductWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProductOrderInterestsInput = {
    create?: XOR<UserCreateWithoutProductOrderInterestsInput, UserUncheckedCreateWithoutProductOrderInterestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductOrderInterestsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumOrderInterestStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderInterestStatus
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type ProductUpdateOneRequiredWithoutProductOrderInterestsNestedInput = {
    create?: XOR<ProductCreateWithoutProductOrderInterestsInput, ProductUncheckedCreateWithoutProductOrderInterestsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductOrderInterestsInput
    upsert?: ProductUpsertWithoutProductOrderInterestsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutProductOrderInterestsInput, ProductUpdateWithoutProductOrderInterestsInput>, ProductUncheckedUpdateWithoutProductOrderInterestsInput>
  }

  export type UserUpdateOneRequiredWithoutProductOrderInterestsNestedInput = {
    create?: XOR<UserCreateWithoutProductOrderInterestsInput, UserUncheckedCreateWithoutProductOrderInterestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductOrderInterestsInput
    upsert?: UserUpsertWithoutProductOrderInterestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProductOrderInterestsInput, UserUpdateWithoutProductOrderInterestsInput>, UserUncheckedUpdateWithoutProductOrderInterestsInput>
  }

  export type ordersCreateNestedOneWithoutItemsInput = {
    create?: XOR<ordersCreateWithoutItemsInput, ordersUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutItemsInput
    connect?: ordersWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutOrderItemsInput = {
    create?: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemsInput
    connect?: ProductWhereUniqueInput
  }

  export type EnumOrderItemStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderItemStatus
  }

  export type ordersUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<ordersCreateWithoutItemsInput, ordersUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutItemsInput
    upsert?: ordersUpsertWithoutItemsInput
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutItemsInput, ordersUpdateWithoutItemsInput>, ordersUncheckedUpdateWithoutItemsInput>
  }

  export type ProductUpdateOneRequiredWithoutOrderItemsNestedInput = {
    create?: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemsInput
    upsert?: ProductUpsertWithoutOrderItemsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutOrderItemsInput, ProductUpdateWithoutOrderItemsInput>, ProductUncheckedUpdateWithoutOrderItemsInput>
  }

  export type UserCreateNestedOneWithoutCustomerTransactionsInput = {
    create?: XOR<UserCreateWithoutCustomerTransactionsInput, UserUncheckedCreateWithoutCustomerTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerTransactionsInput
    connect?: UserWhereUniqueInput
  }

  export type ordersCreateNestedOneWithoutExternalTransactionsInput = {
    create?: XOR<ordersCreateWithoutExternalTransactionsInput, ordersUncheckedCreateWithoutExternalTransactionsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutExternalTransactionsInput
    connect?: ordersWhereUniqueInput
  }

  export type PaymentMethodCreateNestedOneWithoutExternalTransactionsInput = {
    create?: XOR<PaymentMethodCreateWithoutExternalTransactionsInput, PaymentMethodUncheckedCreateWithoutExternalTransactionsInput>
    connectOrCreate?: PaymentMethodCreateOrConnectWithoutExternalTransactionsInput
    connect?: PaymentMethodWhereUniqueInput
  }

  export type RideRequestCreateNestedOneWithoutExternalTransactionsInput = {
    create?: XOR<RideRequestCreateWithoutExternalTransactionsInput, RideRequestUncheckedCreateWithoutExternalTransactionsInput>
    connectOrCreate?: RideRequestCreateOrConnectWithoutExternalTransactionsInput
    connect?: RideRequestWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSellerTransactionsInput = {
    create?: XOR<UserCreateWithoutSellerTransactionsInput, UserUncheckedCreateWithoutSellerTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSellerTransactionsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumTransactionStatusFieldUpdateOperationsInput = {
    set?: $Enums.TransactionStatus
  }

  export type EnumTransactionTypeFieldUpdateOperationsInput = {
    set?: $Enums.TransactionType
  }

  export type EnumAppServiceFieldUpdateOperationsInput = {
    set?: $Enums.AppService
  }

  export type UserUpdateOneRequiredWithoutCustomerTransactionsNestedInput = {
    create?: XOR<UserCreateWithoutCustomerTransactionsInput, UserUncheckedCreateWithoutCustomerTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerTransactionsInput
    upsert?: UserUpsertWithoutCustomerTransactionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomerTransactionsInput, UserUpdateWithoutCustomerTransactionsInput>, UserUncheckedUpdateWithoutCustomerTransactionsInput>
  }

  export type ordersUpdateOneWithoutExternalTransactionsNestedInput = {
    create?: XOR<ordersCreateWithoutExternalTransactionsInput, ordersUncheckedCreateWithoutExternalTransactionsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutExternalTransactionsInput
    upsert?: ordersUpsertWithoutExternalTransactionsInput
    disconnect?: ordersWhereInput | boolean
    delete?: ordersWhereInput | boolean
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutExternalTransactionsInput, ordersUpdateWithoutExternalTransactionsInput>, ordersUncheckedUpdateWithoutExternalTransactionsInput>
  }

  export type PaymentMethodUpdateOneWithoutExternalTransactionsNestedInput = {
    create?: XOR<PaymentMethodCreateWithoutExternalTransactionsInput, PaymentMethodUncheckedCreateWithoutExternalTransactionsInput>
    connectOrCreate?: PaymentMethodCreateOrConnectWithoutExternalTransactionsInput
    upsert?: PaymentMethodUpsertWithoutExternalTransactionsInput
    disconnect?: PaymentMethodWhereInput | boolean
    delete?: PaymentMethodWhereInput | boolean
    connect?: PaymentMethodWhereUniqueInput
    update?: XOR<XOR<PaymentMethodUpdateToOneWithWhereWithoutExternalTransactionsInput, PaymentMethodUpdateWithoutExternalTransactionsInput>, PaymentMethodUncheckedUpdateWithoutExternalTransactionsInput>
  }

  export type RideRequestUpdateOneWithoutExternalTransactionsNestedInput = {
    create?: XOR<RideRequestCreateWithoutExternalTransactionsInput, RideRequestUncheckedCreateWithoutExternalTransactionsInput>
    connectOrCreate?: RideRequestCreateOrConnectWithoutExternalTransactionsInput
    upsert?: RideRequestUpsertWithoutExternalTransactionsInput
    disconnect?: RideRequestWhereInput | boolean
    delete?: RideRequestWhereInput | boolean
    connect?: RideRequestWhereUniqueInput
    update?: XOR<XOR<RideRequestUpdateToOneWithWhereWithoutExternalTransactionsInput, RideRequestUpdateWithoutExternalTransactionsInput>, RideRequestUncheckedUpdateWithoutExternalTransactionsInput>
  }

  export type UserUpdateOneRequiredWithoutSellerTransactionsNestedInput = {
    create?: XOR<UserCreateWithoutSellerTransactionsInput, UserUncheckedCreateWithoutSellerTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSellerTransactionsInput
    upsert?: UserUpsertWithoutSellerTransactionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSellerTransactionsInput, UserUpdateWithoutSellerTransactionsInput>, UserUncheckedUpdateWithoutSellerTransactionsInput>
  }

  export type DriverCreateNestedOneWithoutRiderApplicationInput = {
    create?: XOR<DriverCreateWithoutRiderApplicationInput, DriverUncheckedCreateWithoutRiderApplicationInput>
    connectOrCreate?: DriverCreateOrConnectWithoutRiderApplicationInput
    connect?: DriverWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutRiderApplicationsInput = {
    create?: XOR<UserCreateWithoutRiderApplicationsInput, UserUncheckedCreateWithoutRiderApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRiderApplicationsInput
    connect?: UserWhereUniqueInput
  }

  export type RiderDocumentCreateNestedManyWithoutRiderApplicationInput = {
    create?: XOR<RiderDocumentCreateWithoutRiderApplicationInput, RiderDocumentUncheckedCreateWithoutRiderApplicationInput> | RiderDocumentCreateWithoutRiderApplicationInput[] | RiderDocumentUncheckedCreateWithoutRiderApplicationInput[]
    connectOrCreate?: RiderDocumentCreateOrConnectWithoutRiderApplicationInput | RiderDocumentCreateOrConnectWithoutRiderApplicationInput[]
    createMany?: RiderDocumentCreateManyRiderApplicationInputEnvelope
    connect?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
  }

  export type DriverUncheckedCreateNestedOneWithoutRiderApplicationInput = {
    create?: XOR<DriverCreateWithoutRiderApplicationInput, DriverUncheckedCreateWithoutRiderApplicationInput>
    connectOrCreate?: DriverCreateOrConnectWithoutRiderApplicationInput
    connect?: DriverWhereUniqueInput
  }

  export type RiderDocumentUncheckedCreateNestedManyWithoutRiderApplicationInput = {
    create?: XOR<RiderDocumentCreateWithoutRiderApplicationInput, RiderDocumentUncheckedCreateWithoutRiderApplicationInput> | RiderDocumentCreateWithoutRiderApplicationInput[] | RiderDocumentUncheckedCreateWithoutRiderApplicationInput[]
    connectOrCreate?: RiderDocumentCreateOrConnectWithoutRiderApplicationInput | RiderDocumentCreateOrConnectWithoutRiderApplicationInput[]
    createMany?: RiderDocumentCreateManyRiderApplicationInputEnvelope
    connect?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
  }

  export type EnumRiderVehicleTypeFieldUpdateOperationsInput = {
    set?: $Enums.RiderVehicleType
  }

  export type EnumRiderApplicationStatusFieldUpdateOperationsInput = {
    set?: $Enums.RiderApplicationStatus
  }

  export type DriverUpdateOneWithoutRiderApplicationNestedInput = {
    create?: XOR<DriverCreateWithoutRiderApplicationInput, DriverUncheckedCreateWithoutRiderApplicationInput>
    connectOrCreate?: DriverCreateOrConnectWithoutRiderApplicationInput
    upsert?: DriverUpsertWithoutRiderApplicationInput
    disconnect?: DriverWhereInput | boolean
    delete?: DriverWhereInput | boolean
    connect?: DriverWhereUniqueInput
    update?: XOR<XOR<DriverUpdateToOneWithWhereWithoutRiderApplicationInput, DriverUpdateWithoutRiderApplicationInput>, DriverUncheckedUpdateWithoutRiderApplicationInput>
  }

  export type UserUpdateOneRequiredWithoutRiderApplicationsNestedInput = {
    create?: XOR<UserCreateWithoutRiderApplicationsInput, UserUncheckedCreateWithoutRiderApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRiderApplicationsInput
    upsert?: UserUpsertWithoutRiderApplicationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRiderApplicationsInput, UserUpdateWithoutRiderApplicationsInput>, UserUncheckedUpdateWithoutRiderApplicationsInput>
  }

  export type RiderDocumentUpdateManyWithoutRiderApplicationNestedInput = {
    create?: XOR<RiderDocumentCreateWithoutRiderApplicationInput, RiderDocumentUncheckedCreateWithoutRiderApplicationInput> | RiderDocumentCreateWithoutRiderApplicationInput[] | RiderDocumentUncheckedCreateWithoutRiderApplicationInput[]
    connectOrCreate?: RiderDocumentCreateOrConnectWithoutRiderApplicationInput | RiderDocumentCreateOrConnectWithoutRiderApplicationInput[]
    upsert?: RiderDocumentUpsertWithWhereUniqueWithoutRiderApplicationInput | RiderDocumentUpsertWithWhereUniqueWithoutRiderApplicationInput[]
    createMany?: RiderDocumentCreateManyRiderApplicationInputEnvelope
    set?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
    disconnect?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
    delete?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
    connect?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
    update?: RiderDocumentUpdateWithWhereUniqueWithoutRiderApplicationInput | RiderDocumentUpdateWithWhereUniqueWithoutRiderApplicationInput[]
    updateMany?: RiderDocumentUpdateManyWithWhereWithoutRiderApplicationInput | RiderDocumentUpdateManyWithWhereWithoutRiderApplicationInput[]
    deleteMany?: RiderDocumentScalarWhereInput | RiderDocumentScalarWhereInput[]
  }

  export type DriverUncheckedUpdateOneWithoutRiderApplicationNestedInput = {
    create?: XOR<DriverCreateWithoutRiderApplicationInput, DriverUncheckedCreateWithoutRiderApplicationInput>
    connectOrCreate?: DriverCreateOrConnectWithoutRiderApplicationInput
    upsert?: DriverUpsertWithoutRiderApplicationInput
    disconnect?: DriverWhereInput | boolean
    delete?: DriverWhereInput | boolean
    connect?: DriverWhereUniqueInput
    update?: XOR<XOR<DriverUpdateToOneWithWhereWithoutRiderApplicationInput, DriverUpdateWithoutRiderApplicationInput>, DriverUncheckedUpdateWithoutRiderApplicationInput>
  }

  export type RiderDocumentUncheckedUpdateManyWithoutRiderApplicationNestedInput = {
    create?: XOR<RiderDocumentCreateWithoutRiderApplicationInput, RiderDocumentUncheckedCreateWithoutRiderApplicationInput> | RiderDocumentCreateWithoutRiderApplicationInput[] | RiderDocumentUncheckedCreateWithoutRiderApplicationInput[]
    connectOrCreate?: RiderDocumentCreateOrConnectWithoutRiderApplicationInput | RiderDocumentCreateOrConnectWithoutRiderApplicationInput[]
    upsert?: RiderDocumentUpsertWithWhereUniqueWithoutRiderApplicationInput | RiderDocumentUpsertWithWhereUniqueWithoutRiderApplicationInput[]
    createMany?: RiderDocumentCreateManyRiderApplicationInputEnvelope
    set?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
    disconnect?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
    delete?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
    connect?: RiderDocumentWhereUniqueInput | RiderDocumentWhereUniqueInput[]
    update?: RiderDocumentUpdateWithWhereUniqueWithoutRiderApplicationInput | RiderDocumentUpdateWithWhereUniqueWithoutRiderApplicationInput[]
    updateMany?: RiderDocumentUpdateManyWithWhereWithoutRiderApplicationInput | RiderDocumentUpdateManyWithWhereWithoutRiderApplicationInput[]
    deleteMany?: RiderDocumentScalarWhereInput | RiderDocumentScalarWhereInput[]
  }

  export type RiderApplicationCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<RiderApplicationCreateWithoutDocumentsInput, RiderApplicationUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: RiderApplicationCreateOrConnectWithoutDocumentsInput
    connect?: RiderApplicationWhereUniqueInput
  }

  export type RiderApplicationUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<RiderApplicationCreateWithoutDocumentsInput, RiderApplicationUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: RiderApplicationCreateOrConnectWithoutDocumentsInput
    upsert?: RiderApplicationUpsertWithoutDocumentsInput
    connect?: RiderApplicationWhereUniqueInput
    update?: XOR<XOR<RiderApplicationUpdateToOneWithWhereWithoutDocumentsInput, RiderApplicationUpdateWithoutDocumentsInput>, RiderApplicationUncheckedUpdateWithoutDocumentsInput>
  }

  export type DriverEarningCreateNestedManyWithoutDriverInput = {
    create?: XOR<DriverEarningCreateWithoutDriverInput, DriverEarningUncheckedCreateWithoutDriverInput> | DriverEarningCreateWithoutDriverInput[] | DriverEarningUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DriverEarningCreateOrConnectWithoutDriverInput | DriverEarningCreateOrConnectWithoutDriverInput[]
    createMany?: DriverEarningCreateManyDriverInputEnvelope
    connect?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
  }

  export type DriverLocationCreateNestedManyWithoutDriverInput = {
    create?: XOR<DriverLocationCreateWithoutDriverInput, DriverLocationUncheckedCreateWithoutDriverInput> | DriverLocationCreateWithoutDriverInput[] | DriverLocationUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DriverLocationCreateOrConnectWithoutDriverInput | DriverLocationCreateOrConnectWithoutDriverInput[]
    createMany?: DriverLocationCreateManyDriverInputEnvelope
    connect?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
  }

  export type RideServiceCreateNestedOneWithoutDriversInput = {
    create?: XOR<RideServiceCreateWithoutDriversInput, RideServiceUncheckedCreateWithoutDriversInput>
    connectOrCreate?: RideServiceCreateOrConnectWithoutDriversInput
    connect?: RideServiceWhereUniqueInput
  }

  export type RiderApplicationCreateNestedOneWithoutDriverInput = {
    create?: XOR<RiderApplicationCreateWithoutDriverInput, RiderApplicationUncheckedCreateWithoutDriverInput>
    connectOrCreate?: RiderApplicationCreateOrConnectWithoutDriverInput
    connect?: RiderApplicationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDriverInput = {
    create?: XOR<UserCreateWithoutDriverInput, UserUncheckedCreateWithoutDriverInput>
    connectOrCreate?: UserCreateOrConnectWithoutDriverInput
    connect?: UserWhereUniqueInput
  }

  export type RideRequestCreateNestedManyWithoutDriverInput = {
    create?: XOR<RideRequestCreateWithoutDriverInput, RideRequestUncheckedCreateWithoutDriverInput> | RideRequestCreateWithoutDriverInput[] | RideRequestUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutDriverInput | RideRequestCreateOrConnectWithoutDriverInput[]
    createMany?: RideRequestCreateManyDriverInputEnvelope
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
  }

  export type RideCreateNestedManyWithoutDriverInput = {
    create?: XOR<RideCreateWithoutDriverInput, RideUncheckedCreateWithoutDriverInput> | RideCreateWithoutDriverInput[] | RideUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: RideCreateOrConnectWithoutDriverInput | RideCreateOrConnectWithoutDriverInput[]
    createMany?: RideCreateManyDriverInputEnvelope
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
  }

  export type DriverEarningUncheckedCreateNestedManyWithoutDriverInput = {
    create?: XOR<DriverEarningCreateWithoutDriverInput, DriverEarningUncheckedCreateWithoutDriverInput> | DriverEarningCreateWithoutDriverInput[] | DriverEarningUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DriverEarningCreateOrConnectWithoutDriverInput | DriverEarningCreateOrConnectWithoutDriverInput[]
    createMany?: DriverEarningCreateManyDriverInputEnvelope
    connect?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
  }

  export type DriverLocationUncheckedCreateNestedManyWithoutDriverInput = {
    create?: XOR<DriverLocationCreateWithoutDriverInput, DriverLocationUncheckedCreateWithoutDriverInput> | DriverLocationCreateWithoutDriverInput[] | DriverLocationUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DriverLocationCreateOrConnectWithoutDriverInput | DriverLocationCreateOrConnectWithoutDriverInput[]
    createMany?: DriverLocationCreateManyDriverInputEnvelope
    connect?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
  }

  export type RideRequestUncheckedCreateNestedManyWithoutDriverInput = {
    create?: XOR<RideRequestCreateWithoutDriverInput, RideRequestUncheckedCreateWithoutDriverInput> | RideRequestCreateWithoutDriverInput[] | RideRequestUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutDriverInput | RideRequestCreateOrConnectWithoutDriverInput[]
    createMany?: RideRequestCreateManyDriverInputEnvelope
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
  }

  export type RideUncheckedCreateNestedManyWithoutDriverInput = {
    create?: XOR<RideCreateWithoutDriverInput, RideUncheckedCreateWithoutDriverInput> | RideCreateWithoutDriverInput[] | RideUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: RideCreateOrConnectWithoutDriverInput | RideCreateOrConnectWithoutDriverInput[]
    createMany?: RideCreateManyDriverInputEnvelope
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
  }

  export type EnumDriverStatusFieldUpdateOperationsInput = {
    set?: $Enums.DriverStatus
  }

  export type DriverEarningUpdateManyWithoutDriverNestedInput = {
    create?: XOR<DriverEarningCreateWithoutDriverInput, DriverEarningUncheckedCreateWithoutDriverInput> | DriverEarningCreateWithoutDriverInput[] | DriverEarningUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DriverEarningCreateOrConnectWithoutDriverInput | DriverEarningCreateOrConnectWithoutDriverInput[]
    upsert?: DriverEarningUpsertWithWhereUniqueWithoutDriverInput | DriverEarningUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: DriverEarningCreateManyDriverInputEnvelope
    set?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
    disconnect?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
    delete?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
    connect?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
    update?: DriverEarningUpdateWithWhereUniqueWithoutDriverInput | DriverEarningUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: DriverEarningUpdateManyWithWhereWithoutDriverInput | DriverEarningUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: DriverEarningScalarWhereInput | DriverEarningScalarWhereInput[]
  }

  export type DriverLocationUpdateManyWithoutDriverNestedInput = {
    create?: XOR<DriverLocationCreateWithoutDriverInput, DriverLocationUncheckedCreateWithoutDriverInput> | DriverLocationCreateWithoutDriverInput[] | DriverLocationUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DriverLocationCreateOrConnectWithoutDriverInput | DriverLocationCreateOrConnectWithoutDriverInput[]
    upsert?: DriverLocationUpsertWithWhereUniqueWithoutDriverInput | DriverLocationUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: DriverLocationCreateManyDriverInputEnvelope
    set?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
    disconnect?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
    delete?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
    connect?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
    update?: DriverLocationUpdateWithWhereUniqueWithoutDriverInput | DriverLocationUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: DriverLocationUpdateManyWithWhereWithoutDriverInput | DriverLocationUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: DriverLocationScalarWhereInput | DriverLocationScalarWhereInput[]
  }

  export type RideServiceUpdateOneWithoutDriversNestedInput = {
    create?: XOR<RideServiceCreateWithoutDriversInput, RideServiceUncheckedCreateWithoutDriversInput>
    connectOrCreate?: RideServiceCreateOrConnectWithoutDriversInput
    upsert?: RideServiceUpsertWithoutDriversInput
    disconnect?: RideServiceWhereInput | boolean
    delete?: RideServiceWhereInput | boolean
    connect?: RideServiceWhereUniqueInput
    update?: XOR<XOR<RideServiceUpdateToOneWithWhereWithoutDriversInput, RideServiceUpdateWithoutDriversInput>, RideServiceUncheckedUpdateWithoutDriversInput>
  }

  export type RiderApplicationUpdateOneRequiredWithoutDriverNestedInput = {
    create?: XOR<RiderApplicationCreateWithoutDriverInput, RiderApplicationUncheckedCreateWithoutDriverInput>
    connectOrCreate?: RiderApplicationCreateOrConnectWithoutDriverInput
    upsert?: RiderApplicationUpsertWithoutDriverInput
    connect?: RiderApplicationWhereUniqueInput
    update?: XOR<XOR<RiderApplicationUpdateToOneWithWhereWithoutDriverInput, RiderApplicationUpdateWithoutDriverInput>, RiderApplicationUncheckedUpdateWithoutDriverInput>
  }

  export type UserUpdateOneRequiredWithoutDriverNestedInput = {
    create?: XOR<UserCreateWithoutDriverInput, UserUncheckedCreateWithoutDriverInput>
    connectOrCreate?: UserCreateOrConnectWithoutDriverInput
    upsert?: UserUpsertWithoutDriverInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDriverInput, UserUpdateWithoutDriverInput>, UserUncheckedUpdateWithoutDriverInput>
  }

  export type RideRequestUpdateManyWithoutDriverNestedInput = {
    create?: XOR<RideRequestCreateWithoutDriverInput, RideRequestUncheckedCreateWithoutDriverInput> | RideRequestCreateWithoutDriverInput[] | RideRequestUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutDriverInput | RideRequestCreateOrConnectWithoutDriverInput[]
    upsert?: RideRequestUpsertWithWhereUniqueWithoutDriverInput | RideRequestUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: RideRequestCreateManyDriverInputEnvelope
    set?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    disconnect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    delete?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    update?: RideRequestUpdateWithWhereUniqueWithoutDriverInput | RideRequestUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: RideRequestUpdateManyWithWhereWithoutDriverInput | RideRequestUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: RideRequestScalarWhereInput | RideRequestScalarWhereInput[]
  }

  export type RideUpdateManyWithoutDriverNestedInput = {
    create?: XOR<RideCreateWithoutDriverInput, RideUncheckedCreateWithoutDriverInput> | RideCreateWithoutDriverInput[] | RideUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: RideCreateOrConnectWithoutDriverInput | RideCreateOrConnectWithoutDriverInput[]
    upsert?: RideUpsertWithWhereUniqueWithoutDriverInput | RideUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: RideCreateManyDriverInputEnvelope
    set?: RideWhereUniqueInput | RideWhereUniqueInput[]
    disconnect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    delete?: RideWhereUniqueInput | RideWhereUniqueInput[]
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    update?: RideUpdateWithWhereUniqueWithoutDriverInput | RideUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: RideUpdateManyWithWhereWithoutDriverInput | RideUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: RideScalarWhereInput | RideScalarWhereInput[]
  }

  export type DriverEarningUncheckedUpdateManyWithoutDriverNestedInput = {
    create?: XOR<DriverEarningCreateWithoutDriverInput, DriverEarningUncheckedCreateWithoutDriverInput> | DriverEarningCreateWithoutDriverInput[] | DriverEarningUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DriverEarningCreateOrConnectWithoutDriverInput | DriverEarningCreateOrConnectWithoutDriverInput[]
    upsert?: DriverEarningUpsertWithWhereUniqueWithoutDriverInput | DriverEarningUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: DriverEarningCreateManyDriverInputEnvelope
    set?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
    disconnect?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
    delete?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
    connect?: DriverEarningWhereUniqueInput | DriverEarningWhereUniqueInput[]
    update?: DriverEarningUpdateWithWhereUniqueWithoutDriverInput | DriverEarningUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: DriverEarningUpdateManyWithWhereWithoutDriverInput | DriverEarningUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: DriverEarningScalarWhereInput | DriverEarningScalarWhereInput[]
  }

  export type DriverLocationUncheckedUpdateManyWithoutDriverNestedInput = {
    create?: XOR<DriverLocationCreateWithoutDriverInput, DriverLocationUncheckedCreateWithoutDriverInput> | DriverLocationCreateWithoutDriverInput[] | DriverLocationUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DriverLocationCreateOrConnectWithoutDriverInput | DriverLocationCreateOrConnectWithoutDriverInput[]
    upsert?: DriverLocationUpsertWithWhereUniqueWithoutDriverInput | DriverLocationUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: DriverLocationCreateManyDriverInputEnvelope
    set?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
    disconnect?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
    delete?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
    connect?: DriverLocationWhereUniqueInput | DriverLocationWhereUniqueInput[]
    update?: DriverLocationUpdateWithWhereUniqueWithoutDriverInput | DriverLocationUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: DriverLocationUpdateManyWithWhereWithoutDriverInput | DriverLocationUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: DriverLocationScalarWhereInput | DriverLocationScalarWhereInput[]
  }

  export type RideRequestUncheckedUpdateManyWithoutDriverNestedInput = {
    create?: XOR<RideRequestCreateWithoutDriverInput, RideRequestUncheckedCreateWithoutDriverInput> | RideRequestCreateWithoutDriverInput[] | RideRequestUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutDriverInput | RideRequestCreateOrConnectWithoutDriverInput[]
    upsert?: RideRequestUpsertWithWhereUniqueWithoutDriverInput | RideRequestUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: RideRequestCreateManyDriverInputEnvelope
    set?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    disconnect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    delete?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    update?: RideRequestUpdateWithWhereUniqueWithoutDriverInput | RideRequestUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: RideRequestUpdateManyWithWhereWithoutDriverInput | RideRequestUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: RideRequestScalarWhereInput | RideRequestScalarWhereInput[]
  }

  export type RideUncheckedUpdateManyWithoutDriverNestedInput = {
    create?: XOR<RideCreateWithoutDriverInput, RideUncheckedCreateWithoutDriverInput> | RideCreateWithoutDriverInput[] | RideUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: RideCreateOrConnectWithoutDriverInput | RideCreateOrConnectWithoutDriverInput[]
    upsert?: RideUpsertWithWhereUniqueWithoutDriverInput | RideUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: RideCreateManyDriverInputEnvelope
    set?: RideWhereUniqueInput | RideWhereUniqueInput[]
    disconnect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    delete?: RideWhereUniqueInput | RideWhereUniqueInput[]
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    update?: RideUpdateWithWhereUniqueWithoutDriverInput | RideUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: RideUpdateManyWithWhereWithoutDriverInput | RideUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: RideScalarWhereInput | RideScalarWhereInput[]
  }

  export type DriverCreateNestedOneWithoutLocationHistoryInput = {
    create?: XOR<DriverCreateWithoutLocationHistoryInput, DriverUncheckedCreateWithoutLocationHistoryInput>
    connectOrCreate?: DriverCreateOrConnectWithoutLocationHistoryInput
    connect?: DriverWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DriverUpdateOneRequiredWithoutLocationHistoryNestedInput = {
    create?: XOR<DriverCreateWithoutLocationHistoryInput, DriverUncheckedCreateWithoutLocationHistoryInput>
    connectOrCreate?: DriverCreateOrConnectWithoutLocationHistoryInput
    upsert?: DriverUpsertWithoutLocationHistoryInput
    connect?: DriverWhereUniqueInput
    update?: XOR<XOR<DriverUpdateToOneWithWhereWithoutLocationHistoryInput, DriverUpdateWithoutLocationHistoryInput>, DriverUncheckedUpdateWithoutLocationHistoryInput>
  }

  export type ExternalTransactionCreateNestedManyWithoutRideRequestInput = {
    create?: XOR<ExternalTransactionCreateWithoutRideRequestInput, ExternalTransactionUncheckedCreateWithoutRideRequestInput> | ExternalTransactionCreateWithoutRideRequestInput[] | ExternalTransactionUncheckedCreateWithoutRideRequestInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutRideRequestInput | ExternalTransactionCreateOrConnectWithoutRideRequestInput[]
    createMany?: ExternalTransactionCreateManyRideRequestInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCustomerRideRequestsInput = {
    create?: XOR<UserCreateWithoutCustomerRideRequestsInput, UserUncheckedCreateWithoutCustomerRideRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerRideRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type DriverCreateNestedOneWithoutRideRequestsInput = {
    create?: XOR<DriverCreateWithoutRideRequestsInput, DriverUncheckedCreateWithoutRideRequestsInput>
    connectOrCreate?: DriverCreateOrConnectWithoutRideRequestsInput
    connect?: DriverWhereUniqueInput
  }

  export type RideServiceCreateNestedOneWithoutRideRequestsInput = {
    create?: XOR<RideServiceCreateWithoutRideRequestsInput, RideServiceUncheckedCreateWithoutRideRequestsInput>
    connectOrCreate?: RideServiceCreateOrConnectWithoutRideRequestsInput
    connect?: RideServiceWhereUniqueInput
  }

  export type RideCreateNestedOneWithoutRideRequestInput = {
    create?: XOR<RideCreateWithoutRideRequestInput, RideUncheckedCreateWithoutRideRequestInput>
    connectOrCreate?: RideCreateOrConnectWithoutRideRequestInput
    connect?: RideWhereUniqueInput
  }

  export type ExternalTransactionUncheckedCreateNestedManyWithoutRideRequestInput = {
    create?: XOR<ExternalTransactionCreateWithoutRideRequestInput, ExternalTransactionUncheckedCreateWithoutRideRequestInput> | ExternalTransactionCreateWithoutRideRequestInput[] | ExternalTransactionUncheckedCreateWithoutRideRequestInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutRideRequestInput | ExternalTransactionCreateOrConnectWithoutRideRequestInput[]
    createMany?: ExternalTransactionCreateManyRideRequestInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type RideUncheckedCreateNestedOneWithoutRideRequestInput = {
    create?: XOR<RideCreateWithoutRideRequestInput, RideUncheckedCreateWithoutRideRequestInput>
    connectOrCreate?: RideCreateOrConnectWithoutRideRequestInput
    connect?: RideWhereUniqueInput
  }

  export type EnumRideTypeFieldUpdateOperationsInput = {
    set?: $Enums.RideType
  }

  export type EnumRideStatusFieldUpdateOperationsInput = {
    set?: $Enums.RideStatus
  }

  export type EnumRidePaymentMethodFieldUpdateOperationsInput = {
    set?: $Enums.RidePaymentMethod
  }

  export type ExternalTransactionUpdateManyWithoutRideRequestNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutRideRequestInput, ExternalTransactionUncheckedCreateWithoutRideRequestInput> | ExternalTransactionCreateWithoutRideRequestInput[] | ExternalTransactionUncheckedCreateWithoutRideRequestInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutRideRequestInput | ExternalTransactionCreateOrConnectWithoutRideRequestInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutRideRequestInput | ExternalTransactionUpsertWithWhereUniqueWithoutRideRequestInput[]
    createMany?: ExternalTransactionCreateManyRideRequestInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutRideRequestInput | ExternalTransactionUpdateWithWhereUniqueWithoutRideRequestInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutRideRequestInput | ExternalTransactionUpdateManyWithWhereWithoutRideRequestInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutCustomerRideRequestsNestedInput = {
    create?: XOR<UserCreateWithoutCustomerRideRequestsInput, UserUncheckedCreateWithoutCustomerRideRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerRideRequestsInput
    upsert?: UserUpsertWithoutCustomerRideRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomerRideRequestsInput, UserUpdateWithoutCustomerRideRequestsInput>, UserUncheckedUpdateWithoutCustomerRideRequestsInput>
  }

  export type DriverUpdateOneWithoutRideRequestsNestedInput = {
    create?: XOR<DriverCreateWithoutRideRequestsInput, DriverUncheckedCreateWithoutRideRequestsInput>
    connectOrCreate?: DriverCreateOrConnectWithoutRideRequestsInput
    upsert?: DriverUpsertWithoutRideRequestsInput
    disconnect?: DriverWhereInput | boolean
    delete?: DriverWhereInput | boolean
    connect?: DriverWhereUniqueInput
    update?: XOR<XOR<DriverUpdateToOneWithWhereWithoutRideRequestsInput, DriverUpdateWithoutRideRequestsInput>, DriverUncheckedUpdateWithoutRideRequestsInput>
  }

  export type RideServiceUpdateOneWithoutRideRequestsNestedInput = {
    create?: XOR<RideServiceCreateWithoutRideRequestsInput, RideServiceUncheckedCreateWithoutRideRequestsInput>
    connectOrCreate?: RideServiceCreateOrConnectWithoutRideRequestsInput
    upsert?: RideServiceUpsertWithoutRideRequestsInput
    disconnect?: RideServiceWhereInput | boolean
    delete?: RideServiceWhereInput | boolean
    connect?: RideServiceWhereUniqueInput
    update?: XOR<XOR<RideServiceUpdateToOneWithWhereWithoutRideRequestsInput, RideServiceUpdateWithoutRideRequestsInput>, RideServiceUncheckedUpdateWithoutRideRequestsInput>
  }

  export type RideUpdateOneWithoutRideRequestNestedInput = {
    create?: XOR<RideCreateWithoutRideRequestInput, RideUncheckedCreateWithoutRideRequestInput>
    connectOrCreate?: RideCreateOrConnectWithoutRideRequestInput
    upsert?: RideUpsertWithoutRideRequestInput
    disconnect?: RideWhereInput | boolean
    delete?: RideWhereInput | boolean
    connect?: RideWhereUniqueInput
    update?: XOR<XOR<RideUpdateToOneWithWhereWithoutRideRequestInput, RideUpdateWithoutRideRequestInput>, RideUncheckedUpdateWithoutRideRequestInput>
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutRideRequestNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutRideRequestInput, ExternalTransactionUncheckedCreateWithoutRideRequestInput> | ExternalTransactionCreateWithoutRideRequestInput[] | ExternalTransactionUncheckedCreateWithoutRideRequestInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutRideRequestInput | ExternalTransactionCreateOrConnectWithoutRideRequestInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutRideRequestInput | ExternalTransactionUpsertWithWhereUniqueWithoutRideRequestInput[]
    createMany?: ExternalTransactionCreateManyRideRequestInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutRideRequestInput | ExternalTransactionUpdateWithWhereUniqueWithoutRideRequestInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutRideRequestInput | ExternalTransactionUpdateManyWithWhereWithoutRideRequestInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type RideUncheckedUpdateOneWithoutRideRequestNestedInput = {
    create?: XOR<RideCreateWithoutRideRequestInput, RideUncheckedCreateWithoutRideRequestInput>
    connectOrCreate?: RideCreateOrConnectWithoutRideRequestInput
    upsert?: RideUpsertWithoutRideRequestInput
    disconnect?: RideWhereInput | boolean
    delete?: RideWhereInput | boolean
    connect?: RideWhereUniqueInput
    update?: XOR<XOR<RideUpdateToOneWithWhereWithoutRideRequestInput, RideUpdateWithoutRideRequestInput>, RideUncheckedUpdateWithoutRideRequestInput>
  }

  export type RideLocationCreateNestedManyWithoutRideInput = {
    create?: XOR<RideLocationCreateWithoutRideInput, RideLocationUncheckedCreateWithoutRideInput> | RideLocationCreateWithoutRideInput[] | RideLocationUncheckedCreateWithoutRideInput[]
    connectOrCreate?: RideLocationCreateOrConnectWithoutRideInput | RideLocationCreateOrConnectWithoutRideInput[]
    createMany?: RideLocationCreateManyRideInputEnvelope
    connect?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
  }

  export type RideTokenCreateNestedOneWithoutRideInput = {
    create?: XOR<RideTokenCreateWithoutRideInput, RideTokenUncheckedCreateWithoutRideInput>
    connectOrCreate?: RideTokenCreateOrConnectWithoutRideInput
    connect?: RideTokenWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCustomerRidesInput = {
    create?: XOR<UserCreateWithoutCustomerRidesInput, UserUncheckedCreateWithoutCustomerRidesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerRidesInput
    connect?: UserWhereUniqueInput
  }

  export type DriverCreateNestedOneWithoutRidesInput = {
    create?: XOR<DriverCreateWithoutRidesInput, DriverUncheckedCreateWithoutRidesInput>
    connectOrCreate?: DriverCreateOrConnectWithoutRidesInput
    connect?: DriverWhereUniqueInput
  }

  export type RideRequestCreateNestedOneWithoutRideInput = {
    create?: XOR<RideRequestCreateWithoutRideInput, RideRequestUncheckedCreateWithoutRideInput>
    connectOrCreate?: RideRequestCreateOrConnectWithoutRideInput
    connect?: RideRequestWhereUniqueInput
  }

  export type RideServiceCreateNestedOneWithoutRidesInput = {
    create?: XOR<RideServiceCreateWithoutRidesInput, RideServiceUncheckedCreateWithoutRidesInput>
    connectOrCreate?: RideServiceCreateOrConnectWithoutRidesInput
    connect?: RideServiceWhereUniqueInput
  }

  export type RideLocationUncheckedCreateNestedManyWithoutRideInput = {
    create?: XOR<RideLocationCreateWithoutRideInput, RideLocationUncheckedCreateWithoutRideInput> | RideLocationCreateWithoutRideInput[] | RideLocationUncheckedCreateWithoutRideInput[]
    connectOrCreate?: RideLocationCreateOrConnectWithoutRideInput | RideLocationCreateOrConnectWithoutRideInput[]
    createMany?: RideLocationCreateManyRideInputEnvelope
    connect?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
  }

  export type RideTokenUncheckedCreateNestedOneWithoutRideInput = {
    create?: XOR<RideTokenCreateWithoutRideInput, RideTokenUncheckedCreateWithoutRideInput>
    connectOrCreate?: RideTokenCreateOrConnectWithoutRideInput
    connect?: RideTokenWhereUniqueInput
  }

  export type RideLocationUpdateManyWithoutRideNestedInput = {
    create?: XOR<RideLocationCreateWithoutRideInput, RideLocationUncheckedCreateWithoutRideInput> | RideLocationCreateWithoutRideInput[] | RideLocationUncheckedCreateWithoutRideInput[]
    connectOrCreate?: RideLocationCreateOrConnectWithoutRideInput | RideLocationCreateOrConnectWithoutRideInput[]
    upsert?: RideLocationUpsertWithWhereUniqueWithoutRideInput | RideLocationUpsertWithWhereUniqueWithoutRideInput[]
    createMany?: RideLocationCreateManyRideInputEnvelope
    set?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
    disconnect?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
    delete?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
    connect?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
    update?: RideLocationUpdateWithWhereUniqueWithoutRideInput | RideLocationUpdateWithWhereUniqueWithoutRideInput[]
    updateMany?: RideLocationUpdateManyWithWhereWithoutRideInput | RideLocationUpdateManyWithWhereWithoutRideInput[]
    deleteMany?: RideLocationScalarWhereInput | RideLocationScalarWhereInput[]
  }

  export type RideTokenUpdateOneWithoutRideNestedInput = {
    create?: XOR<RideTokenCreateWithoutRideInput, RideTokenUncheckedCreateWithoutRideInput>
    connectOrCreate?: RideTokenCreateOrConnectWithoutRideInput
    upsert?: RideTokenUpsertWithoutRideInput
    disconnect?: RideTokenWhereInput | boolean
    delete?: RideTokenWhereInput | boolean
    connect?: RideTokenWhereUniqueInput
    update?: XOR<XOR<RideTokenUpdateToOneWithWhereWithoutRideInput, RideTokenUpdateWithoutRideInput>, RideTokenUncheckedUpdateWithoutRideInput>
  }

  export type UserUpdateOneRequiredWithoutCustomerRidesNestedInput = {
    create?: XOR<UserCreateWithoutCustomerRidesInput, UserUncheckedCreateWithoutCustomerRidesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerRidesInput
    upsert?: UserUpsertWithoutCustomerRidesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomerRidesInput, UserUpdateWithoutCustomerRidesInput>, UserUncheckedUpdateWithoutCustomerRidesInput>
  }

  export type DriverUpdateOneRequiredWithoutRidesNestedInput = {
    create?: XOR<DriverCreateWithoutRidesInput, DriverUncheckedCreateWithoutRidesInput>
    connectOrCreate?: DriverCreateOrConnectWithoutRidesInput
    upsert?: DriverUpsertWithoutRidesInput
    connect?: DriverWhereUniqueInput
    update?: XOR<XOR<DriverUpdateToOneWithWhereWithoutRidesInput, DriverUpdateWithoutRidesInput>, DriverUncheckedUpdateWithoutRidesInput>
  }

  export type RideRequestUpdateOneRequiredWithoutRideNestedInput = {
    create?: XOR<RideRequestCreateWithoutRideInput, RideRequestUncheckedCreateWithoutRideInput>
    connectOrCreate?: RideRequestCreateOrConnectWithoutRideInput
    upsert?: RideRequestUpsertWithoutRideInput
    connect?: RideRequestWhereUniqueInput
    update?: XOR<XOR<RideRequestUpdateToOneWithWhereWithoutRideInput, RideRequestUpdateWithoutRideInput>, RideRequestUncheckedUpdateWithoutRideInput>
  }

  export type RideServiceUpdateOneWithoutRidesNestedInput = {
    create?: XOR<RideServiceCreateWithoutRidesInput, RideServiceUncheckedCreateWithoutRidesInput>
    connectOrCreate?: RideServiceCreateOrConnectWithoutRidesInput
    upsert?: RideServiceUpsertWithoutRidesInput
    disconnect?: RideServiceWhereInput | boolean
    delete?: RideServiceWhereInput | boolean
    connect?: RideServiceWhereUniqueInput
    update?: XOR<XOR<RideServiceUpdateToOneWithWhereWithoutRidesInput, RideServiceUpdateWithoutRidesInput>, RideServiceUncheckedUpdateWithoutRidesInput>
  }

  export type RideLocationUncheckedUpdateManyWithoutRideNestedInput = {
    create?: XOR<RideLocationCreateWithoutRideInput, RideLocationUncheckedCreateWithoutRideInput> | RideLocationCreateWithoutRideInput[] | RideLocationUncheckedCreateWithoutRideInput[]
    connectOrCreate?: RideLocationCreateOrConnectWithoutRideInput | RideLocationCreateOrConnectWithoutRideInput[]
    upsert?: RideLocationUpsertWithWhereUniqueWithoutRideInput | RideLocationUpsertWithWhereUniqueWithoutRideInput[]
    createMany?: RideLocationCreateManyRideInputEnvelope
    set?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
    disconnect?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
    delete?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
    connect?: RideLocationWhereUniqueInput | RideLocationWhereUniqueInput[]
    update?: RideLocationUpdateWithWhereUniqueWithoutRideInput | RideLocationUpdateWithWhereUniqueWithoutRideInput[]
    updateMany?: RideLocationUpdateManyWithWhereWithoutRideInput | RideLocationUpdateManyWithWhereWithoutRideInput[]
    deleteMany?: RideLocationScalarWhereInput | RideLocationScalarWhereInput[]
  }

  export type RideTokenUncheckedUpdateOneWithoutRideNestedInput = {
    create?: XOR<RideTokenCreateWithoutRideInput, RideTokenUncheckedCreateWithoutRideInput>
    connectOrCreate?: RideTokenCreateOrConnectWithoutRideInput
    upsert?: RideTokenUpsertWithoutRideInput
    disconnect?: RideTokenWhereInput | boolean
    delete?: RideTokenWhereInput | boolean
    connect?: RideTokenWhereUniqueInput
    update?: XOR<XOR<RideTokenUpdateToOneWithWhereWithoutRideInput, RideTokenUpdateWithoutRideInput>, RideTokenUncheckedUpdateWithoutRideInput>
  }

  export type RideCreateNestedOneWithoutRideTokenInput = {
    create?: XOR<RideCreateWithoutRideTokenInput, RideUncheckedCreateWithoutRideTokenInput>
    connectOrCreate?: RideCreateOrConnectWithoutRideTokenInput
    connect?: RideWhereUniqueInput
  }

  export type RideUpdateOneRequiredWithoutRideTokenNestedInput = {
    create?: XOR<RideCreateWithoutRideTokenInput, RideUncheckedCreateWithoutRideTokenInput>
    connectOrCreate?: RideCreateOrConnectWithoutRideTokenInput
    upsert?: RideUpsertWithoutRideTokenInput
    connect?: RideWhereUniqueInput
    update?: XOR<XOR<RideUpdateToOneWithWhereWithoutRideTokenInput, RideUpdateWithoutRideTokenInput>, RideUncheckedUpdateWithoutRideTokenInput>
  }

  export type RideCreateNestedOneWithoutLocationUpdatesInput = {
    create?: XOR<RideCreateWithoutLocationUpdatesInput, RideUncheckedCreateWithoutLocationUpdatesInput>
    connectOrCreate?: RideCreateOrConnectWithoutLocationUpdatesInput
    connect?: RideWhereUniqueInput
  }

  export type RideUpdateOneRequiredWithoutLocationUpdatesNestedInput = {
    create?: XOR<RideCreateWithoutLocationUpdatesInput, RideUncheckedCreateWithoutLocationUpdatesInput>
    connectOrCreate?: RideCreateOrConnectWithoutLocationUpdatesInput
    upsert?: RideUpsertWithoutLocationUpdatesInput
    connect?: RideWhereUniqueInput
    update?: XOR<XOR<RideUpdateToOneWithWhereWithoutLocationUpdatesInput, RideUpdateWithoutLocationUpdatesInput>, RideUncheckedUpdateWithoutLocationUpdatesInput>
  }

  export type DriverCreateNestedOneWithoutEarningsInput = {
    create?: XOR<DriverCreateWithoutEarningsInput, DriverUncheckedCreateWithoutEarningsInput>
    connectOrCreate?: DriverCreateOrConnectWithoutEarningsInput
    connect?: DriverWhereUniqueInput
  }

  export type DriverUpdateOneRequiredWithoutEarningsNestedInput = {
    create?: XOR<DriverCreateWithoutEarningsInput, DriverUncheckedCreateWithoutEarningsInput>
    connectOrCreate?: DriverCreateOrConnectWithoutEarningsInput
    upsert?: DriverUpsertWithoutEarningsInput
    connect?: DriverWhereUniqueInput
    update?: XOR<XOR<DriverUpdateToOneWithWhereWithoutEarningsInput, DriverUpdateWithoutEarningsInput>, DriverUncheckedUpdateWithoutEarningsInput>
  }

  export type DriverCreateNestedManyWithoutRideServiceInput = {
    create?: XOR<DriverCreateWithoutRideServiceInput, DriverUncheckedCreateWithoutRideServiceInput> | DriverCreateWithoutRideServiceInput[] | DriverUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: DriverCreateOrConnectWithoutRideServiceInput | DriverCreateOrConnectWithoutRideServiceInput[]
    createMany?: DriverCreateManyRideServiceInputEnvelope
    connect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
  }

  export type RideRequestCreateNestedManyWithoutRideServiceInput = {
    create?: XOR<RideRequestCreateWithoutRideServiceInput, RideRequestUncheckedCreateWithoutRideServiceInput> | RideRequestCreateWithoutRideServiceInput[] | RideRequestUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutRideServiceInput | RideRequestCreateOrConnectWithoutRideServiceInput[]
    createMany?: RideRequestCreateManyRideServiceInputEnvelope
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
  }

  export type RideCreateNestedManyWithoutRideServiceInput = {
    create?: XOR<RideCreateWithoutRideServiceInput, RideUncheckedCreateWithoutRideServiceInput> | RideCreateWithoutRideServiceInput[] | RideUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: RideCreateOrConnectWithoutRideServiceInput | RideCreateOrConnectWithoutRideServiceInput[]
    createMany?: RideCreateManyRideServiceInputEnvelope
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
  }

  export type DriverUncheckedCreateNestedManyWithoutRideServiceInput = {
    create?: XOR<DriverCreateWithoutRideServiceInput, DriverUncheckedCreateWithoutRideServiceInput> | DriverCreateWithoutRideServiceInput[] | DriverUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: DriverCreateOrConnectWithoutRideServiceInput | DriverCreateOrConnectWithoutRideServiceInput[]
    createMany?: DriverCreateManyRideServiceInputEnvelope
    connect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
  }

  export type RideRequestUncheckedCreateNestedManyWithoutRideServiceInput = {
    create?: XOR<RideRequestCreateWithoutRideServiceInput, RideRequestUncheckedCreateWithoutRideServiceInput> | RideRequestCreateWithoutRideServiceInput[] | RideRequestUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutRideServiceInput | RideRequestCreateOrConnectWithoutRideServiceInput[]
    createMany?: RideRequestCreateManyRideServiceInputEnvelope
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
  }

  export type RideUncheckedCreateNestedManyWithoutRideServiceInput = {
    create?: XOR<RideCreateWithoutRideServiceInput, RideUncheckedCreateWithoutRideServiceInput> | RideCreateWithoutRideServiceInput[] | RideUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: RideCreateOrConnectWithoutRideServiceInput | RideCreateOrConnectWithoutRideServiceInput[]
    createMany?: RideCreateManyRideServiceInputEnvelope
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
  }

  export type EnumDistanceUnitFieldUpdateOperationsInput = {
    set?: $Enums.DistanceUnit
  }

  export type DriverUpdateManyWithoutRideServiceNestedInput = {
    create?: XOR<DriverCreateWithoutRideServiceInput, DriverUncheckedCreateWithoutRideServiceInput> | DriverCreateWithoutRideServiceInput[] | DriverUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: DriverCreateOrConnectWithoutRideServiceInput | DriverCreateOrConnectWithoutRideServiceInput[]
    upsert?: DriverUpsertWithWhereUniqueWithoutRideServiceInput | DriverUpsertWithWhereUniqueWithoutRideServiceInput[]
    createMany?: DriverCreateManyRideServiceInputEnvelope
    set?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    disconnect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    delete?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    connect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    update?: DriverUpdateWithWhereUniqueWithoutRideServiceInput | DriverUpdateWithWhereUniqueWithoutRideServiceInput[]
    updateMany?: DriverUpdateManyWithWhereWithoutRideServiceInput | DriverUpdateManyWithWhereWithoutRideServiceInput[]
    deleteMany?: DriverScalarWhereInput | DriverScalarWhereInput[]
  }

  export type RideRequestUpdateManyWithoutRideServiceNestedInput = {
    create?: XOR<RideRequestCreateWithoutRideServiceInput, RideRequestUncheckedCreateWithoutRideServiceInput> | RideRequestCreateWithoutRideServiceInput[] | RideRequestUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutRideServiceInput | RideRequestCreateOrConnectWithoutRideServiceInput[]
    upsert?: RideRequestUpsertWithWhereUniqueWithoutRideServiceInput | RideRequestUpsertWithWhereUniqueWithoutRideServiceInput[]
    createMany?: RideRequestCreateManyRideServiceInputEnvelope
    set?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    disconnect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    delete?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    update?: RideRequestUpdateWithWhereUniqueWithoutRideServiceInput | RideRequestUpdateWithWhereUniqueWithoutRideServiceInput[]
    updateMany?: RideRequestUpdateManyWithWhereWithoutRideServiceInput | RideRequestUpdateManyWithWhereWithoutRideServiceInput[]
    deleteMany?: RideRequestScalarWhereInput | RideRequestScalarWhereInput[]
  }

  export type RideUpdateManyWithoutRideServiceNestedInput = {
    create?: XOR<RideCreateWithoutRideServiceInput, RideUncheckedCreateWithoutRideServiceInput> | RideCreateWithoutRideServiceInput[] | RideUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: RideCreateOrConnectWithoutRideServiceInput | RideCreateOrConnectWithoutRideServiceInput[]
    upsert?: RideUpsertWithWhereUniqueWithoutRideServiceInput | RideUpsertWithWhereUniqueWithoutRideServiceInput[]
    createMany?: RideCreateManyRideServiceInputEnvelope
    set?: RideWhereUniqueInput | RideWhereUniqueInput[]
    disconnect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    delete?: RideWhereUniqueInput | RideWhereUniqueInput[]
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    update?: RideUpdateWithWhereUniqueWithoutRideServiceInput | RideUpdateWithWhereUniqueWithoutRideServiceInput[]
    updateMany?: RideUpdateManyWithWhereWithoutRideServiceInput | RideUpdateManyWithWhereWithoutRideServiceInput[]
    deleteMany?: RideScalarWhereInput | RideScalarWhereInput[]
  }

  export type DriverUncheckedUpdateManyWithoutRideServiceNestedInput = {
    create?: XOR<DriverCreateWithoutRideServiceInput, DriverUncheckedCreateWithoutRideServiceInput> | DriverCreateWithoutRideServiceInput[] | DriverUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: DriverCreateOrConnectWithoutRideServiceInput | DriverCreateOrConnectWithoutRideServiceInput[]
    upsert?: DriverUpsertWithWhereUniqueWithoutRideServiceInput | DriverUpsertWithWhereUniqueWithoutRideServiceInput[]
    createMany?: DriverCreateManyRideServiceInputEnvelope
    set?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    disconnect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    delete?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    connect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    update?: DriverUpdateWithWhereUniqueWithoutRideServiceInput | DriverUpdateWithWhereUniqueWithoutRideServiceInput[]
    updateMany?: DriverUpdateManyWithWhereWithoutRideServiceInput | DriverUpdateManyWithWhereWithoutRideServiceInput[]
    deleteMany?: DriverScalarWhereInput | DriverScalarWhereInput[]
  }

  export type RideRequestUncheckedUpdateManyWithoutRideServiceNestedInput = {
    create?: XOR<RideRequestCreateWithoutRideServiceInput, RideRequestUncheckedCreateWithoutRideServiceInput> | RideRequestCreateWithoutRideServiceInput[] | RideRequestUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: RideRequestCreateOrConnectWithoutRideServiceInput | RideRequestCreateOrConnectWithoutRideServiceInput[]
    upsert?: RideRequestUpsertWithWhereUniqueWithoutRideServiceInput | RideRequestUpsertWithWhereUniqueWithoutRideServiceInput[]
    createMany?: RideRequestCreateManyRideServiceInputEnvelope
    set?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    disconnect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    delete?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    connect?: RideRequestWhereUniqueInput | RideRequestWhereUniqueInput[]
    update?: RideRequestUpdateWithWhereUniqueWithoutRideServiceInput | RideRequestUpdateWithWhereUniqueWithoutRideServiceInput[]
    updateMany?: RideRequestUpdateManyWithWhereWithoutRideServiceInput | RideRequestUpdateManyWithWhereWithoutRideServiceInput[]
    deleteMany?: RideRequestScalarWhereInput | RideRequestScalarWhereInput[]
  }

  export type RideUncheckedUpdateManyWithoutRideServiceNestedInput = {
    create?: XOR<RideCreateWithoutRideServiceInput, RideUncheckedCreateWithoutRideServiceInput> | RideCreateWithoutRideServiceInput[] | RideUncheckedCreateWithoutRideServiceInput[]
    connectOrCreate?: RideCreateOrConnectWithoutRideServiceInput | RideCreateOrConnectWithoutRideServiceInput[]
    upsert?: RideUpsertWithWhereUniqueWithoutRideServiceInput | RideUpsertWithWhereUniqueWithoutRideServiceInput[]
    createMany?: RideCreateManyRideServiceInputEnvelope
    set?: RideWhereUniqueInput | RideWhereUniqueInput[]
    disconnect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    delete?: RideWhereUniqueInput | RideWhereUniqueInput[]
    connect?: RideWhereUniqueInput | RideWhereUniqueInput[]
    update?: RideUpdateWithWhereUniqueWithoutRideServiceInput | RideUpdateWithWhereUniqueWithoutRideServiceInput[]
    updateMany?: RideUpdateManyWithWhereWithoutRideServiceInput | RideUpdateManyWithWhereWithoutRideServiceInput[]
    deleteMany?: RideScalarWhereInput | RideScalarWhereInput[]
  }

  export type ExternalTransactionCreateNestedManyWithoutOrderInput = {
    create?: XOR<ExternalTransactionCreateWithoutOrderInput, ExternalTransactionUncheckedCreateWithoutOrderInput> | ExternalTransactionCreateWithoutOrderInput[] | ExternalTransactionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutOrderInput | ExternalTransactionCreateOrConnectWithoutOrderInput[]
    createMany?: ExternalTransactionCreateManyOrderInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type OrderItemCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutOrders_orders_sellerIdToUserInput = {
    create?: XOR<UserCreateWithoutOrders_orders_sellerIdToUserInput, UserUncheckedCreateWithoutOrders_orders_sellerIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrders_orders_sellerIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrders_orders_userIdToUserInput = {
    create?: XOR<UserCreateWithoutOrders_orders_userIdToUserInput, UserUncheckedCreateWithoutOrders_orders_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrders_orders_userIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type ExternalTransactionUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<ExternalTransactionCreateWithoutOrderInput, ExternalTransactionUncheckedCreateWithoutOrderInput> | ExternalTransactionCreateWithoutOrderInput[] | ExternalTransactionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutOrderInput | ExternalTransactionCreateOrConnectWithoutOrderInput[]
    createMany?: ExternalTransactionCreateManyOrderInputEnvelope
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type ExternalTransactionUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutOrderInput, ExternalTransactionUncheckedCreateWithoutOrderInput> | ExternalTransactionCreateWithoutOrderInput[] | ExternalTransactionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutOrderInput | ExternalTransactionCreateOrConnectWithoutOrderInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutOrderInput | ExternalTransactionUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ExternalTransactionCreateManyOrderInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutOrderInput | ExternalTransactionUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutOrderInput | ExternalTransactionUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type OrderItemUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutOrders_orders_sellerIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutOrders_orders_sellerIdToUserInput, UserUncheckedCreateWithoutOrders_orders_sellerIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrders_orders_sellerIdToUserInput
    upsert?: UserUpsertWithoutOrders_orders_sellerIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrders_orders_sellerIdToUserInput, UserUpdateWithoutOrders_orders_sellerIdToUserInput>, UserUncheckedUpdateWithoutOrders_orders_sellerIdToUserInput>
  }

  export type UserUpdateOneRequiredWithoutOrders_orders_userIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutOrders_orders_userIdToUserInput, UserUncheckedCreateWithoutOrders_orders_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrders_orders_userIdToUserInput
    upsert?: UserUpsertWithoutOrders_orders_userIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrders_orders_userIdToUserInput, UserUpdateWithoutOrders_orders_userIdToUserInput>, UserUncheckedUpdateWithoutOrders_orders_userIdToUserInput>
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ExternalTransactionCreateWithoutOrderInput, ExternalTransactionUncheckedCreateWithoutOrderInput> | ExternalTransactionCreateWithoutOrderInput[] | ExternalTransactionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ExternalTransactionCreateOrConnectWithoutOrderInput | ExternalTransactionCreateOrConnectWithoutOrderInput[]
    upsert?: ExternalTransactionUpsertWithWhereUniqueWithoutOrderInput | ExternalTransactionUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ExternalTransactionCreateManyOrderInputEnvelope
    set?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    disconnect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    delete?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    connect?: ExternalTransactionWhereUniqueInput | ExternalTransactionWhereUniqueInput[]
    update?: ExternalTransactionUpdateWithWhereUniqueWithoutOrderInput | ExternalTransactionUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ExternalTransactionUpdateManyWithWhereWithoutOrderInput | ExternalTransactionUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumEntityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EntityType | EnumEntityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEntityTypeFilter<$PrismaModel> | $Enums.EntityType
  }

  export type NestedEnumPermissionFilter<$PrismaModel = never> = {
    equals?: $Enums.Permission | EnumPermissionFieldRefInput<$PrismaModel>
    in?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    not?: NestedEnumPermissionFilter<$PrismaModel> | $Enums.Permission
  }

  export type NestedEnumEntityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EntityType | EnumEntityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEntityTypeWithAggregatesFilter<$PrismaModel> | $Enums.EntityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEntityTypeFilter<$PrismaModel>
    _max?: NestedEnumEntityTypeFilter<$PrismaModel>
  }

  export type NestedEnumPermissionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Permission | EnumPermissionFieldRefInput<$PrismaModel>
    in?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    not?: NestedEnumPermissionWithAggregatesFilter<$PrismaModel> | $Enums.Permission
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPermissionFilter<$PrismaModel>
    _max?: NestedEnumPermissionFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumProductConditionFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductCondition | EnumProductConditionFieldRefInput<$PrismaModel>
    in?: $Enums.ProductCondition[] | ListEnumProductConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductCondition[] | ListEnumProductConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumProductConditionFilter<$PrismaModel> | $Enums.ProductCondition
  }

  export type NestedEnumProductStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusFilter<$PrismaModel> | $Enums.ProductStatus
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumProductConditionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductCondition | EnumProductConditionFieldRefInput<$PrismaModel>
    in?: $Enums.ProductCondition[] | ListEnumProductConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductCondition[] | ListEnumProductConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumProductConditionWithAggregatesFilter<$PrismaModel> | $Enums.ProductCondition
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductConditionFilter<$PrismaModel>
    _max?: NestedEnumProductConditionFilter<$PrismaModel>
  }

  export type NestedEnumProductStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductStatusFilter<$PrismaModel>
    _max?: NestedEnumProductStatusFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumDeliveryTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryType | EnumDeliveryTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryType[] | ListEnumDeliveryTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryType[] | ListEnumDeliveryTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryTypeFilter<$PrismaModel> | $Enums.DeliveryType
  }

  export type NestedEnumDeliveryTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryType | EnumDeliveryTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryType[] | ListEnumDeliveryTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryType[] | ListEnumDeliveryTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryTypeWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryTypeFilter<$PrismaModel>
    _max?: NestedEnumDeliveryTypeFilter<$PrismaModel>
  }

  export type NestedEnumBusinessTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessType | EnumBusinessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessTypeFilter<$PrismaModel> | $Enums.BusinessType
  }

  export type NestedEnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type NestedEnumKycStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.KycStatus | EnumKycStatusFieldRefInput<$PrismaModel>
    in?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumKycStatusFilter<$PrismaModel> | $Enums.KycStatus
  }

  export type NestedEnumBusinessTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessType | EnumBusinessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessTypeWithAggregatesFilter<$PrismaModel> | $Enums.BusinessType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBusinessTypeFilter<$PrismaModel>
    _max?: NestedEnumBusinessTypeFilter<$PrismaModel>
  }

  export type NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type NestedEnumKycStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.KycStatus | EnumKycStatusFieldRefInput<$PrismaModel>
    in?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumKycStatusWithAggregatesFilter<$PrismaModel> | $Enums.KycStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumKycStatusFilter<$PrismaModel>
    _max?: NestedEnumKycStatusFilter<$PrismaModel>
  }

  export type NestedEnumAccountStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountStatus | EnumAccountStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountStatusFilter<$PrismaModel> | $Enums.AccountStatus
  }

  export type NestedEnumAccountStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountStatus | EnumAccountStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountStatusWithAggregatesFilter<$PrismaModel> | $Enums.AccountStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAccountStatusFilter<$PrismaModel>
    _max?: NestedEnumAccountStatusFilter<$PrismaModel>
  }

  export type NestedEnumWalletTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.WalletType | EnumWalletTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWalletTypeFilter<$PrismaModel> | $Enums.WalletType
  }

  export type NestedEnumWalletTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WalletType | EnumWalletTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWalletTypeWithAggregatesFilter<$PrismaModel> | $Enums.WalletType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWalletTypeFilter<$PrismaModel>
    _max?: NestedEnumWalletTypeFilter<$PrismaModel>
  }

  export type NestedEnumPaymentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentTypeFilter<$PrismaModel> | $Enums.PaymentType
  }

  export type NestedEnumPaymentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentTypeWithAggregatesFilter<$PrismaModel> | $Enums.PaymentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentTypeFilter<$PrismaModel>
    _max?: NestedEnumPaymentTypeFilter<$PrismaModel>
  }

  export type NestedEnumSettlementStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementStatus | EnumSettlementStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementStatus[] | ListEnumSettlementStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementStatus[] | ListEnumSettlementStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementStatusFilter<$PrismaModel> | $Enums.SettlementStatus
  }

  export type NestedEnumSettlementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementType | EnumSettlementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementType[] | ListEnumSettlementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementType[] | ListEnumSettlementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementTypeFilter<$PrismaModel> | $Enums.SettlementType
  }

  export type NestedEnumSettlementChannelFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementChannel | EnumSettlementChannelFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementChannel[] | ListEnumSettlementChannelFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementChannel[] | ListEnumSettlementChannelFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementChannelFilter<$PrismaModel> | $Enums.SettlementChannel
  }

  export type NestedEnumSettlementStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementStatus | EnumSettlementStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementStatus[] | ListEnumSettlementStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementStatus[] | ListEnumSettlementStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementStatusWithAggregatesFilter<$PrismaModel> | $Enums.SettlementStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSettlementStatusFilter<$PrismaModel>
    _max?: NestedEnumSettlementStatusFilter<$PrismaModel>
  }

  export type NestedEnumSettlementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementType | EnumSettlementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementType[] | ListEnumSettlementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementType[] | ListEnumSettlementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementTypeWithAggregatesFilter<$PrismaModel> | $Enums.SettlementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSettlementTypeFilter<$PrismaModel>
    _max?: NestedEnumSettlementTypeFilter<$PrismaModel>
  }

  export type NestedEnumSettlementChannelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SettlementChannel | EnumSettlementChannelFieldRefInput<$PrismaModel>
    in?: $Enums.SettlementChannel[] | ListEnumSettlementChannelFieldRefInput<$PrismaModel>
    notIn?: $Enums.SettlementChannel[] | ListEnumSettlementChannelFieldRefInput<$PrismaModel>
    not?: NestedEnumSettlementChannelWithAggregatesFilter<$PrismaModel> | $Enums.SettlementChannel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSettlementChannelFilter<$PrismaModel>
    _max?: NestedEnumSettlementChannelFilter<$PrismaModel>
  }

  export type NestedEnumOrderInterestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderInterestStatus | EnumOrderInterestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderInterestStatus[] | ListEnumOrderInterestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderInterestStatus[] | ListEnumOrderInterestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderInterestStatusFilter<$PrismaModel> | $Enums.OrderInterestStatus
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumOrderInterestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderInterestStatus | EnumOrderInterestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderInterestStatus[] | ListEnumOrderInterestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderInterestStatus[] | ListEnumOrderInterestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderInterestStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderInterestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderInterestStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderInterestStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumOrderItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemStatus | EnumOrderItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemStatusFilter<$PrismaModel> | $Enums.OrderItemStatus
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumOrderItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemStatus | EnumOrderItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderItemStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderItemStatusFilter<$PrismaModel>
  }

  export type NestedEnumTransactionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusFilter<$PrismaModel> | $Enums.TransactionStatus
  }

  export type NestedEnumTransactionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeFilter<$PrismaModel> | $Enums.TransactionType
  }

  export type NestedEnumAppServiceFilter<$PrismaModel = never> = {
    equals?: $Enums.AppService | EnumAppServiceFieldRefInput<$PrismaModel>
    in?: $Enums.AppService[] | ListEnumAppServiceFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppService[] | ListEnumAppServiceFieldRefInput<$PrismaModel>
    not?: NestedEnumAppServiceFilter<$PrismaModel> | $Enums.AppService
  }

  export type NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransactionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionStatusFilter<$PrismaModel>
    _max?: NestedEnumTransactionStatusFilter<$PrismaModel>
  }

  export type NestedEnumTransactionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeWithAggregatesFilter<$PrismaModel> | $Enums.TransactionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionTypeFilter<$PrismaModel>
    _max?: NestedEnumTransactionTypeFilter<$PrismaModel>
  }

  export type NestedEnumAppServiceWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AppService | EnumAppServiceFieldRefInput<$PrismaModel>
    in?: $Enums.AppService[] | ListEnumAppServiceFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppService[] | ListEnumAppServiceFieldRefInput<$PrismaModel>
    not?: NestedEnumAppServiceWithAggregatesFilter<$PrismaModel> | $Enums.AppService
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAppServiceFilter<$PrismaModel>
    _max?: NestedEnumAppServiceFilter<$PrismaModel>
  }

  export type NestedEnumRiderVehicleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RiderVehicleType | EnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RiderVehicleType[] | ListEnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RiderVehicleType[] | ListEnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRiderVehicleTypeFilter<$PrismaModel> | $Enums.RiderVehicleType
  }

  export type NestedEnumRiderApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RiderApplicationStatus | EnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RiderApplicationStatus[] | ListEnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RiderApplicationStatus[] | ListEnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRiderApplicationStatusFilter<$PrismaModel> | $Enums.RiderApplicationStatus
  }

  export type NestedEnumRiderVehicleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RiderVehicleType | EnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RiderVehicleType[] | ListEnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RiderVehicleType[] | ListEnumRiderVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRiderVehicleTypeWithAggregatesFilter<$PrismaModel> | $Enums.RiderVehicleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRiderVehicleTypeFilter<$PrismaModel>
    _max?: NestedEnumRiderVehicleTypeFilter<$PrismaModel>
  }

  export type NestedEnumRiderApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RiderApplicationStatus | EnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RiderApplicationStatus[] | ListEnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RiderApplicationStatus[] | ListEnumRiderApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRiderApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.RiderApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRiderApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumRiderApplicationStatusFilter<$PrismaModel>
  }

  export type NestedEnumDriverStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDriverStatusFilter<$PrismaModel> | $Enums.DriverStatus
  }

  export type NestedEnumDriverStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDriverStatusWithAggregatesFilter<$PrismaModel> | $Enums.DriverStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDriverStatusFilter<$PrismaModel>
    _max?: NestedEnumDriverStatusFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumRideTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RideType | EnumRideTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RideType[] | ListEnumRideTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RideType[] | ListEnumRideTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRideTypeFilter<$PrismaModel> | $Enums.RideType
  }

  export type NestedEnumRideStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RideStatus | EnumRideStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RideStatus[] | ListEnumRideStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RideStatus[] | ListEnumRideStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRideStatusFilter<$PrismaModel> | $Enums.RideStatus
  }

  export type NestedEnumRidePaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.RidePaymentMethod | EnumRidePaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.RidePaymentMethod[] | ListEnumRidePaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.RidePaymentMethod[] | ListEnumRidePaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumRidePaymentMethodFilter<$PrismaModel> | $Enums.RidePaymentMethod
  }

  export type NestedEnumRideTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RideType | EnumRideTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RideType[] | ListEnumRideTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RideType[] | ListEnumRideTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRideTypeWithAggregatesFilter<$PrismaModel> | $Enums.RideType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRideTypeFilter<$PrismaModel>
    _max?: NestedEnumRideTypeFilter<$PrismaModel>
  }

  export type NestedEnumRideStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RideStatus | EnumRideStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RideStatus[] | ListEnumRideStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RideStatus[] | ListEnumRideStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRideStatusWithAggregatesFilter<$PrismaModel> | $Enums.RideStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRideStatusFilter<$PrismaModel>
    _max?: NestedEnumRideStatusFilter<$PrismaModel>
  }

  export type NestedEnumRidePaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RidePaymentMethod | EnumRidePaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.RidePaymentMethod[] | ListEnumRidePaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.RidePaymentMethod[] | ListEnumRidePaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumRidePaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.RidePaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRidePaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumRidePaymentMethodFilter<$PrismaModel>
  }

  export type NestedEnumDistanceUnitFilter<$PrismaModel = never> = {
    equals?: $Enums.DistanceUnit | EnumDistanceUnitFieldRefInput<$PrismaModel>
    in?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumDistanceUnitFilter<$PrismaModel> | $Enums.DistanceUnit
  }

  export type NestedEnumDistanceUnitWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DistanceUnit | EnumDistanceUnitFieldRefInput<$PrismaModel>
    in?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumDistanceUnitWithAggregatesFilter<$PrismaModel> | $Enums.DistanceUnit
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDistanceUnitFilter<$PrismaModel>
    _max?: NestedEnumDistanceUnitFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type OperatorEntityCreateWithoutAdminsInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    role: RoleCreateNestedOneWithoutOperatorEntitiesInput
  }

  export type OperatorEntityUncheckedCreateWithoutAdminsInput = {
    id?: string
    name: string
    description?: string | null
    roleId: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type OperatorEntityCreateOrConnectWithoutAdminsInput = {
    where: OperatorEntityWhereUniqueInput
    create: XOR<OperatorEntityCreateWithoutAdminsInput, OperatorEntityUncheckedCreateWithoutAdminsInput>
  }

  export type OperatorEntityUpsertWithoutAdminsInput = {
    update: XOR<OperatorEntityUpdateWithoutAdminsInput, OperatorEntityUncheckedUpdateWithoutAdminsInput>
    create: XOR<OperatorEntityCreateWithoutAdminsInput, OperatorEntityUncheckedCreateWithoutAdminsInput>
    where?: OperatorEntityWhereInput
  }

  export type OperatorEntityUpdateToOneWithWhereWithoutAdminsInput = {
    where?: OperatorEntityWhereInput
    data: XOR<OperatorEntityUpdateWithoutAdminsInput, OperatorEntityUncheckedUpdateWithoutAdminsInput>
  }

  export type OperatorEntityUpdateWithoutAdminsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    role?: RoleUpdateOneRequiredWithoutOperatorEntitiesNestedInput
  }

  export type OperatorEntityUncheckedUpdateWithoutAdminsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    roleId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OperatorEntityCreateWithoutRoleInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    admins?: AdminCreateNestedManyWithoutOperatorEntityInput
  }

  export type OperatorEntityUncheckedCreateWithoutRoleInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    admins?: AdminUncheckedCreateNestedManyWithoutOperatorEntityInput
  }

  export type OperatorEntityCreateOrConnectWithoutRoleInput = {
    where: OperatorEntityWhereUniqueInput
    create: XOR<OperatorEntityCreateWithoutRoleInput, OperatorEntityUncheckedCreateWithoutRoleInput>
  }

  export type OperatorEntityCreateManyRoleInputEnvelope = {
    data: OperatorEntityCreateManyRoleInput | OperatorEntityCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type RolePermissionCreateWithoutRoleInput = {
    id?: string
    entityType: $Enums.EntityType
    permission: $Enums.Permission
    isGranted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionUncheckedCreateWithoutRoleInput = {
    id?: string
    entityType: $Enums.EntityType
    permission: $Enums.Permission
    isGranted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionCreateOrConnectWithoutRoleInput = {
    where: RolePermissionWhereUniqueInput
    create: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput>
  }

  export type RolePermissionCreateManyRoleInputEnvelope = {
    data: RolePermissionCreateManyRoleInput | RolePermissionCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type OperatorEntityUpsertWithWhereUniqueWithoutRoleInput = {
    where: OperatorEntityWhereUniqueInput
    update: XOR<OperatorEntityUpdateWithoutRoleInput, OperatorEntityUncheckedUpdateWithoutRoleInput>
    create: XOR<OperatorEntityCreateWithoutRoleInput, OperatorEntityUncheckedCreateWithoutRoleInput>
  }

  export type OperatorEntityUpdateWithWhereUniqueWithoutRoleInput = {
    where: OperatorEntityWhereUniqueInput
    data: XOR<OperatorEntityUpdateWithoutRoleInput, OperatorEntityUncheckedUpdateWithoutRoleInput>
  }

  export type OperatorEntityUpdateManyWithWhereWithoutRoleInput = {
    where: OperatorEntityScalarWhereInput
    data: XOR<OperatorEntityUpdateManyMutationInput, OperatorEntityUncheckedUpdateManyWithoutRoleInput>
  }

  export type OperatorEntityScalarWhereInput = {
    AND?: OperatorEntityScalarWhereInput | OperatorEntityScalarWhereInput[]
    OR?: OperatorEntityScalarWhereInput[]
    NOT?: OperatorEntityScalarWhereInput | OperatorEntityScalarWhereInput[]
    id?: StringFilter<"OperatorEntity"> | string
    name?: StringFilter<"OperatorEntity"> | string
    description?: StringNullableFilter<"OperatorEntity"> | string | null
    roleId?: StringFilter<"OperatorEntity"> | string
    isActive?: BoolFilter<"OperatorEntity"> | boolean
    createdAt?: DateTimeFilter<"OperatorEntity"> | Date | string
    updatedAt?: DateTimeFilter<"OperatorEntity"> | Date | string
    createdBy?: StringNullableFilter<"OperatorEntity"> | string | null
  }

  export type RolePermissionUpsertWithWhereUniqueWithoutRoleInput = {
    where: RolePermissionWhereUniqueInput
    update: XOR<RolePermissionUpdateWithoutRoleInput, RolePermissionUncheckedUpdateWithoutRoleInput>
    create: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput>
  }

  export type RolePermissionUpdateWithWhereUniqueWithoutRoleInput = {
    where: RolePermissionWhereUniqueInput
    data: XOR<RolePermissionUpdateWithoutRoleInput, RolePermissionUncheckedUpdateWithoutRoleInput>
  }

  export type RolePermissionUpdateManyWithWhereWithoutRoleInput = {
    where: RolePermissionScalarWhereInput
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyWithoutRoleInput>
  }

  export type RolePermissionScalarWhereInput = {
    AND?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
    OR?: RolePermissionScalarWhereInput[]
    NOT?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
    id?: StringFilter<"RolePermission"> | string
    roleId?: StringFilter<"RolePermission"> | string
    entityType?: EnumEntityTypeFilter<"RolePermission"> | $Enums.EntityType
    permission?: EnumPermissionFilter<"RolePermission"> | $Enums.Permission
    isGranted?: BoolFilter<"RolePermission"> | boolean
    createdAt?: DateTimeFilter<"RolePermission"> | Date | string
    updatedAt?: DateTimeFilter<"RolePermission"> | Date | string
  }

  export type RoleCreateWithoutPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    operatorEntities?: OperatorEntityCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    operatorEntities?: OperatorEntityUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutPermissionsInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput>
  }

  export type RoleUpsertWithoutPermissionsInput = {
    update: XOR<RoleUpdateWithoutPermissionsInput, RoleUncheckedUpdateWithoutPermissionsInput>
    create: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutPermissionsInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutPermissionsInput, RoleUncheckedUpdateWithoutPermissionsInput>
  }

  export type RoleUpdateWithoutPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    operatorEntities?: OperatorEntityUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    operatorEntities?: OperatorEntityUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type AdminCreateWithoutOperatorEntityInput = {
    id?: string
    email: string
    password: string
    name: string
    username: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type AdminUncheckedCreateWithoutOperatorEntityInput = {
    id?: string
    email: string
    password: string
    name: string
    username: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type AdminCreateOrConnectWithoutOperatorEntityInput = {
    where: AdminWhereUniqueInput
    create: XOR<AdminCreateWithoutOperatorEntityInput, AdminUncheckedCreateWithoutOperatorEntityInput>
  }

  export type AdminCreateManyOperatorEntityInputEnvelope = {
    data: AdminCreateManyOperatorEntityInput | AdminCreateManyOperatorEntityInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutOperatorEntitiesInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    permissions?: RolePermissionCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutOperatorEntitiesInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    permissions?: RolePermissionUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutOperatorEntitiesInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutOperatorEntitiesInput, RoleUncheckedCreateWithoutOperatorEntitiesInput>
  }

  export type AdminUpsertWithWhereUniqueWithoutOperatorEntityInput = {
    where: AdminWhereUniqueInput
    update: XOR<AdminUpdateWithoutOperatorEntityInput, AdminUncheckedUpdateWithoutOperatorEntityInput>
    create: XOR<AdminCreateWithoutOperatorEntityInput, AdminUncheckedCreateWithoutOperatorEntityInput>
  }

  export type AdminUpdateWithWhereUniqueWithoutOperatorEntityInput = {
    where: AdminWhereUniqueInput
    data: XOR<AdminUpdateWithoutOperatorEntityInput, AdminUncheckedUpdateWithoutOperatorEntityInput>
  }

  export type AdminUpdateManyWithWhereWithoutOperatorEntityInput = {
    where: AdminScalarWhereInput
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyWithoutOperatorEntityInput>
  }

  export type AdminScalarWhereInput = {
    AND?: AdminScalarWhereInput | AdminScalarWhereInput[]
    OR?: AdminScalarWhereInput[]
    NOT?: AdminScalarWhereInput | AdminScalarWhereInput[]
    id?: StringFilter<"Admin"> | string
    email?: StringFilter<"Admin"> | string
    password?: StringFilter<"Admin"> | string
    name?: StringFilter<"Admin"> | string
    username?: StringFilter<"Admin"> | string
    isActive?: BoolFilter<"Admin"> | boolean
    lastLogin?: DateTimeNullableFilter<"Admin"> | Date | string | null
    createdAt?: DateTimeFilter<"Admin"> | Date | string
    updatedAt?: DateTimeFilter<"Admin"> | Date | string
    operatorEntityId?: StringFilter<"Admin"> | string
    createdBy?: StringNullableFilter<"Admin"> | string | null
  }

  export type RoleUpsertWithoutOperatorEntitiesInput = {
    update: XOR<RoleUpdateWithoutOperatorEntitiesInput, RoleUncheckedUpdateWithoutOperatorEntitiesInput>
    create: XOR<RoleCreateWithoutOperatorEntitiesInput, RoleUncheckedCreateWithoutOperatorEntitiesInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutOperatorEntitiesInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutOperatorEntitiesInput, RoleUncheckedUpdateWithoutOperatorEntitiesInput>
  }

  export type RoleUpdateWithoutOperatorEntitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    permissions?: RolePermissionUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutOperatorEntitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    permissions?: RolePermissionUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type DeliveryAddressCreateWithoutUserInput = {
    id?: string
    address: string
    city: string
    state: string
    postalCode?: string | null
    country: string
    isDefault?: boolean
    label?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isDeleted?: boolean
  }

  export type DeliveryAddressUncheckedCreateWithoutUserInput = {
    id?: string
    address: string
    city: string
    state: string
    postalCode?: string | null
    country: string
    isDefault?: boolean
    label?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isDeleted?: boolean
  }

  export type DeliveryAddressCreateOrConnectWithoutUserInput = {
    where: DeliveryAddressWhereUniqueInput
    create: XOR<DeliveryAddressCreateWithoutUserInput, DeliveryAddressUncheckedCreateWithoutUserInput>
  }

  export type DeliveryAddressCreateManyUserInputEnvelope = {
    data: DeliveryAddressCreateManyUserInput | DeliveryAddressCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type DeviceCreateWithoutUserInput = {
    id?: string
    deviceId: string
    deviceName: string
    deviceType: string
    isVerified?: boolean
    lastLoginAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: string
    modelName: string
    osVersion: string
    phoneNumber: string
    lastLogoutAt?: Date | string | null
    sessions?: SessionCreateNestedManyWithoutDeviceInput
  }

  export type DeviceUncheckedCreateWithoutUserInput = {
    id?: string
    deviceId: string
    deviceName: string
    deviceType: string
    isVerified?: boolean
    lastLoginAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: string
    modelName: string
    osVersion: string
    phoneNumber: string
    lastLogoutAt?: Date | string | null
    sessions?: SessionUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type DeviceCreateOrConnectWithoutUserInput = {
    where: DeviceWhereUniqueInput
    create: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput>
  }

  export type DeviceCreateManyUserInputEnvelope = {
    data: DeviceCreateManyUserInput | DeviceCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ExternalTransactionCreateWithoutCustomerInput = {
    id?: string
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    order?: ordersCreateNestedOneWithoutExternalTransactionsInput
    paymentMethod?: PaymentMethodCreateNestedOneWithoutExternalTransactionsInput
    rideRequest?: RideRequestCreateNestedOneWithoutExternalTransactionsInput
    seller: UserCreateNestedOneWithoutSellerTransactionsInput
  }

  export type ExternalTransactionUncheckedCreateWithoutCustomerInput = {
    id?: string
    orderId?: string | null
    sellerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type ExternalTransactionCreateOrConnectWithoutCustomerInput = {
    where: ExternalTransactionWhereUniqueInput
    create: XOR<ExternalTransactionCreateWithoutCustomerInput, ExternalTransactionUncheckedCreateWithoutCustomerInput>
  }

  export type ExternalTransactionCreateManyCustomerInputEnvelope = {
    data: ExternalTransactionCreateManyCustomerInput | ExternalTransactionCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type ExternalTransactionCreateWithoutSellerInput = {
    id?: string
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    customer: UserCreateNestedOneWithoutCustomerTransactionsInput
    order?: ordersCreateNestedOneWithoutExternalTransactionsInput
    paymentMethod?: PaymentMethodCreateNestedOneWithoutExternalTransactionsInput
    rideRequest?: RideRequestCreateNestedOneWithoutExternalTransactionsInput
  }

  export type ExternalTransactionUncheckedCreateWithoutSellerInput = {
    id?: string
    orderId?: string | null
    customerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type ExternalTransactionCreateOrConnectWithoutSellerInput = {
    where: ExternalTransactionWhereUniqueInput
    create: XOR<ExternalTransactionCreateWithoutSellerInput, ExternalTransactionUncheckedCreateWithoutSellerInput>
  }

  export type ExternalTransactionCreateManySellerInputEnvelope = {
    data: ExternalTransactionCreateManySellerInput | ExternalTransactionCreateManySellerInput[]
    skipDuplicates?: boolean
  }

  export type PaymentMethodCreateWithoutUserInput = {
    id?: string
    type: $Enums.PaymentType
    provider: string
    accountId: string
    accountName: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutPaymentMethodInput
  }

  export type PaymentMethodUncheckedCreateWithoutUserInput = {
    id?: string
    type: $Enums.PaymentType
    provider: string
    accountId: string
    accountName: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutPaymentMethodInput
  }

  export type PaymentMethodCreateOrConnectWithoutUserInput = {
    where: PaymentMethodWhereUniqueInput
    create: XOR<PaymentMethodCreateWithoutUserInput, PaymentMethodUncheckedCreateWithoutUserInput>
  }

  export type PaymentMethodCreateManyUserInputEnvelope = {
    data: PaymentMethodCreateManyUserInput | PaymentMethodCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutSellerInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    location: LocationCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutSellerInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutSellerInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput>
  }

  export type ProductCreateManySellerInputEnvelope = {
    data: ProductCreateManySellerInput | ProductCreateManySellerInput[]
    skipDuplicates?: boolean
  }

  export type SellerKycCreateWithoutUserInput = {
    id?: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber?: string | null
    taxId?: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status?: $Enums.KycStatus
    rejectionReason?: string | null
    verifiedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    country?: SellerKycCreatecountryInput | string[]
    documentExpiryDate?: Date | string | null
    statusChangedBy?: string | null
    statusChangedAt?: Date | string | null
    bankAccounts?: BankAccountCreateNestedManyWithoutSellerKycInput
    wallets?: WalletCreateNestedManyWithoutSellerKycInput
  }

  export type SellerKycUncheckedCreateWithoutUserInput = {
    id?: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber?: string | null
    taxId?: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status?: $Enums.KycStatus
    rejectionReason?: string | null
    verifiedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    country?: SellerKycCreatecountryInput | string[]
    documentExpiryDate?: Date | string | null
    statusChangedBy?: string | null
    statusChangedAt?: Date | string | null
    bankAccounts?: BankAccountUncheckedCreateNestedManyWithoutSellerKycInput
    wallets?: WalletUncheckedCreateNestedManyWithoutSellerKycInput
  }

  export type SellerKycCreateOrConnectWithoutUserInput = {
    where: SellerKycWhereUniqueInput
    create: XOR<SellerKycCreateWithoutUserInput, SellerKycUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    device: DeviceCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    deviceId: string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SettlementCreateWithoutUserInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
    bankAccount?: BankAccountCreateNestedOneWithoutSettlementsInput
    wallet?: WalletCreateNestedOneWithoutSettlementsInput
  }

  export type SettlementUncheckedCreateWithoutUserInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    bankAccountId?: string | null
    walletId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
  }

  export type SettlementCreateOrConnectWithoutUserInput = {
    where: SettlementWhereUniqueInput
    create: XOR<SettlementCreateWithoutUserInput, SettlementUncheckedCreateWithoutUserInput>
  }

  export type SettlementCreateManyUserInputEnvelope = {
    data: SettlementCreateManyUserInput | SettlementCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type DriverCreateWithoutUserInput = {
    id?: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
    earnings?: DriverEarningCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationCreateNestedManyWithoutDriverInput
    rideService?: RideServiceCreateNestedOneWithoutDriversInput
    riderApplication: RiderApplicationCreateNestedOneWithoutDriverInput
    rideRequests?: RideRequestCreateNestedManyWithoutDriverInput
    rides?: RideCreateNestedManyWithoutDriverInput
  }

  export type DriverUncheckedCreateWithoutUserInput = {
    id?: string
    riderApplicationId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    updatedBy?: string | null
    earnings?: DriverEarningUncheckedCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationUncheckedCreateNestedManyWithoutDriverInput
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutDriverInput
    rides?: RideUncheckedCreateNestedManyWithoutDriverInput
  }

  export type DriverCreateOrConnectWithoutUserInput = {
    where: DriverWhereUniqueInput
    create: XOR<DriverCreateWithoutUserInput, DriverUncheckedCreateWithoutUserInput>
  }

  export type ordersCreateWithoutUser_orders_sellerIdToUserInput = {
    id: string
    orderNumber: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutOrderInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    User_orders_userIdToUser: UserCreateNestedOneWithoutOrders_orders_userIdToUserInput
  }

  export type ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput = {
    id: string
    orderNumber: string
    userId: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutOrderInput
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersCreateOrConnectWithoutUser_orders_sellerIdToUserInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutUser_orders_sellerIdToUserInput, ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput>
  }

  export type ordersCreateManyUser_orders_sellerIdToUserInputEnvelope = {
    data: ordersCreateManyUser_orders_sellerIdToUserInput | ordersCreateManyUser_orders_sellerIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ordersCreateWithoutUser_orders_userIdToUserInput = {
    id: string
    orderNumber: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutOrderInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    User_orders_sellerIdToUser: UserCreateNestedOneWithoutOrders_orders_sellerIdToUserInput
  }

  export type ordersUncheckedCreateWithoutUser_orders_userIdToUserInput = {
    id: string
    orderNumber: string
    sellerId: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutOrderInput
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersCreateOrConnectWithoutUser_orders_userIdToUserInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutUser_orders_userIdToUserInput, ordersUncheckedCreateWithoutUser_orders_userIdToUserInput>
  }

  export type ordersCreateManyUser_orders_userIdToUserInputEnvelope = {
    data: ordersCreateManyUser_orders_userIdToUserInput | ordersCreateManyUser_orders_userIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ProductOrderInterestCreateWithoutUserInput = {
    id?: string
    quantity?: number
    originalPrice: Decimal | DecimalJsLike | number | string
    discountPrice?: Decimal | DecimalJsLike | number | string | null
    currencyCode: string
    totalAmount: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderInterestStatus
    notes?: string | null
    preferredDeliveryDate?: Date | string | null
    deliveryAddress?: string | null
    contactPhone?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt?: Date | string | null
    product: ProductCreateNestedOneWithoutProductOrderInterestsInput
  }

  export type ProductOrderInterestUncheckedCreateWithoutUserInput = {
    id?: string
    productId: string
    quantity?: number
    originalPrice: Decimal | DecimalJsLike | number | string
    discountPrice?: Decimal | DecimalJsLike | number | string | null
    currencyCode: string
    totalAmount: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderInterestStatus
    notes?: string | null
    preferredDeliveryDate?: Date | string | null
    deliveryAddress?: string | null
    contactPhone?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt?: Date | string | null
  }

  export type ProductOrderInterestCreateOrConnectWithoutUserInput = {
    where: ProductOrderInterestWhereUniqueInput
    create: XOR<ProductOrderInterestCreateWithoutUserInput, ProductOrderInterestUncheckedCreateWithoutUserInput>
  }

  export type ProductOrderInterestCreateManyUserInputEnvelope = {
    data: ProductOrderInterestCreateManyUserInput | ProductOrderInterestCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ProductViewCreateWithoutUserInput = {
    id?: string
    deviceId?: string | null
    ipAddress?: string | null
    viewedAt?: Date | string
    product: ProductCreateNestedOneWithoutProductViewsInput
  }

  export type ProductViewUncheckedCreateWithoutUserInput = {
    id?: string
    productId: string
    deviceId?: string | null
    ipAddress?: string | null
    viewedAt?: Date | string
  }

  export type ProductViewCreateOrConnectWithoutUserInput = {
    where: ProductViewWhereUniqueInput
    create: XOR<ProductViewCreateWithoutUserInput, ProductViewUncheckedCreateWithoutUserInput>
  }

  export type ProductViewCreateManyUserInputEnvelope = {
    data: ProductViewCreateManyUserInput | ProductViewCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RideRequestCreateWithoutCustomerInput = {
    id?: string
    requestId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutRideRequestInput
    driver?: DriverCreateNestedOneWithoutRideRequestsInput
    rideService?: RideServiceCreateNestedOneWithoutRideRequestsInput
    ride?: RideCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestUncheckedCreateWithoutCustomerInput = {
    id?: string
    requestId: string
    driverId?: string | null
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutRideRequestInput
    ride?: RideUncheckedCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestCreateOrConnectWithoutCustomerInput = {
    where: RideRequestWhereUniqueInput
    create: XOR<RideRequestCreateWithoutCustomerInput, RideRequestUncheckedCreateWithoutCustomerInput>
  }

  export type RideRequestCreateManyCustomerInputEnvelope = {
    data: RideRequestCreateManyCustomerInput | RideRequestCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type RiderApplicationCreateWithoutUserInput = {
    id?: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driver?: DriverCreateNestedOneWithoutRiderApplicationInput
    documents?: RiderDocumentCreateNestedManyWithoutRiderApplicationInput
  }

  export type RiderApplicationUncheckedCreateWithoutUserInput = {
    id?: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driver?: DriverUncheckedCreateNestedOneWithoutRiderApplicationInput
    documents?: RiderDocumentUncheckedCreateNestedManyWithoutRiderApplicationInput
  }

  export type RiderApplicationCreateOrConnectWithoutUserInput = {
    where: RiderApplicationWhereUniqueInput
    create: XOR<RiderApplicationCreateWithoutUserInput, RiderApplicationUncheckedCreateWithoutUserInput>
  }

  export type RiderApplicationCreateManyUserInputEnvelope = {
    data: RiderApplicationCreateManyUserInput | RiderApplicationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RideCreateWithoutCustomerInput = {
    id?: string
    rideId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationCreateNestedManyWithoutRideInput
    rideToken?: RideTokenCreateNestedOneWithoutRideInput
    driver: DriverCreateNestedOneWithoutRidesInput
    rideRequest: RideRequestCreateNestedOneWithoutRideInput
    rideService?: RideServiceCreateNestedOneWithoutRidesInput
  }

  export type RideUncheckedCreateWithoutCustomerInput = {
    id?: string
    rideId: string
    rideRequestId: string
    driverId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedCreateNestedManyWithoutRideInput
    rideToken?: RideTokenUncheckedCreateNestedOneWithoutRideInput
  }

  export type RideCreateOrConnectWithoutCustomerInput = {
    where: RideWhereUniqueInput
    create: XOR<RideCreateWithoutCustomerInput, RideUncheckedCreateWithoutCustomerInput>
  }

  export type RideCreateManyCustomerInputEnvelope = {
    data: RideCreateManyCustomerInput | RideCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryAddressUpsertWithWhereUniqueWithoutUserInput = {
    where: DeliveryAddressWhereUniqueInput
    update: XOR<DeliveryAddressUpdateWithoutUserInput, DeliveryAddressUncheckedUpdateWithoutUserInput>
    create: XOR<DeliveryAddressCreateWithoutUserInput, DeliveryAddressUncheckedCreateWithoutUserInput>
  }

  export type DeliveryAddressUpdateWithWhereUniqueWithoutUserInput = {
    where: DeliveryAddressWhereUniqueInput
    data: XOR<DeliveryAddressUpdateWithoutUserInput, DeliveryAddressUncheckedUpdateWithoutUserInput>
  }

  export type DeliveryAddressUpdateManyWithWhereWithoutUserInput = {
    where: DeliveryAddressScalarWhereInput
    data: XOR<DeliveryAddressUpdateManyMutationInput, DeliveryAddressUncheckedUpdateManyWithoutUserInput>
  }

  export type DeliveryAddressScalarWhereInput = {
    AND?: DeliveryAddressScalarWhereInput | DeliveryAddressScalarWhereInput[]
    OR?: DeliveryAddressScalarWhereInput[]
    NOT?: DeliveryAddressScalarWhereInput | DeliveryAddressScalarWhereInput[]
    id?: StringFilter<"DeliveryAddress"> | string
    userId?: StringFilter<"DeliveryAddress"> | string
    address?: StringFilter<"DeliveryAddress"> | string
    city?: StringFilter<"DeliveryAddress"> | string
    state?: StringFilter<"DeliveryAddress"> | string
    postalCode?: StringNullableFilter<"DeliveryAddress"> | string | null
    country?: StringFilter<"DeliveryAddress"> | string
    isDefault?: BoolFilter<"DeliveryAddress"> | boolean
    label?: StringNullableFilter<"DeliveryAddress"> | string | null
    createdAt?: DateTimeFilter<"DeliveryAddress"> | Date | string
    updatedAt?: DateTimeFilter<"DeliveryAddress"> | Date | string
    isDeleted?: BoolFilter<"DeliveryAddress"> | boolean
  }

  export type DeviceUpsertWithWhereUniqueWithoutUserInput = {
    where: DeviceWhereUniqueInput
    update: XOR<DeviceUpdateWithoutUserInput, DeviceUncheckedUpdateWithoutUserInput>
    create: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput>
  }

  export type DeviceUpdateWithWhereUniqueWithoutUserInput = {
    where: DeviceWhereUniqueInput
    data: XOR<DeviceUpdateWithoutUserInput, DeviceUncheckedUpdateWithoutUserInput>
  }

  export type DeviceUpdateManyWithWhereWithoutUserInput = {
    where: DeviceScalarWhereInput
    data: XOR<DeviceUpdateManyMutationInput, DeviceUncheckedUpdateManyWithoutUserInput>
  }

  export type DeviceScalarWhereInput = {
    AND?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
    OR?: DeviceScalarWhereInput[]
    NOT?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
    id?: StringFilter<"Device"> | string
    deviceId?: StringFilter<"Device"> | string
    deviceName?: StringFilter<"Device"> | string
    deviceType?: StringFilter<"Device"> | string
    isVerified?: BoolFilter<"Device"> | boolean
    lastLoginAt?: DateTimeFilter<"Device"> | Date | string
    createdAt?: DateTimeFilter<"Device"> | Date | string
    updatedAt?: DateTimeFilter<"Device"> | Date | string
    userId?: StringFilter<"Device"> | string
    brand?: StringFilter<"Device"> | string
    modelName?: StringFilter<"Device"> | string
    osVersion?: StringFilter<"Device"> | string
    phoneNumber?: StringFilter<"Device"> | string
    lastLogoutAt?: DateTimeNullableFilter<"Device"> | Date | string | null
  }

  export type ExternalTransactionUpsertWithWhereUniqueWithoutCustomerInput = {
    where: ExternalTransactionWhereUniqueInput
    update: XOR<ExternalTransactionUpdateWithoutCustomerInput, ExternalTransactionUncheckedUpdateWithoutCustomerInput>
    create: XOR<ExternalTransactionCreateWithoutCustomerInput, ExternalTransactionUncheckedCreateWithoutCustomerInput>
  }

  export type ExternalTransactionUpdateWithWhereUniqueWithoutCustomerInput = {
    where: ExternalTransactionWhereUniqueInput
    data: XOR<ExternalTransactionUpdateWithoutCustomerInput, ExternalTransactionUncheckedUpdateWithoutCustomerInput>
  }

  export type ExternalTransactionUpdateManyWithWhereWithoutCustomerInput = {
    where: ExternalTransactionScalarWhereInput
    data: XOR<ExternalTransactionUpdateManyMutationInput, ExternalTransactionUncheckedUpdateManyWithoutCustomerInput>
  }

  export type ExternalTransactionScalarWhereInput = {
    AND?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
    OR?: ExternalTransactionScalarWhereInput[]
    NOT?: ExternalTransactionScalarWhereInput | ExternalTransactionScalarWhereInput[]
    id?: StringFilter<"ExternalTransaction"> | string
    orderId?: StringNullableFilter<"ExternalTransaction"> | string | null
    customerId?: StringFilter<"ExternalTransaction"> | string
    sellerId?: StringFilter<"ExternalTransaction"> | string
    paymentMethodId?: StringNullableFilter<"ExternalTransaction"> | string | null
    gatewayProvider?: StringFilter<"ExternalTransaction"> | string
    gatewayTransactionId?: StringNullableFilter<"ExternalTransaction"> | string | null
    paymentReference?: StringNullableFilter<"ExternalTransaction"> | string | null
    amount?: DecimalFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"ExternalTransaction"> | string
    gatewayChargeFees?: DecimalNullableFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFilter<"ExternalTransaction"> | boolean
    gatewayResponse?: JsonNullableFilter<"ExternalTransaction">
    gatewayRequest?: JsonNullableFilter<"ExternalTransaction">
    status?: EnumTransactionStatusFilter<"ExternalTransaction"> | $Enums.TransactionStatus
    failureReason?: StringNullableFilter<"ExternalTransaction"> | string | null
    processedAt?: DateTimeNullableFilter<"ExternalTransaction"> | Date | string | null
    createdAt?: DateTimeFilter<"ExternalTransaction"> | Date | string
    updatedAt?: DateTimeFilter<"ExternalTransaction"> | Date | string
    appTransactionId?: StringFilter<"ExternalTransaction"> | string
    processedAmount?: DecimalNullableFilter<"ExternalTransaction"> | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFilter<"ExternalTransaction"> | $Enums.TransactionType
    appService?: EnumAppServiceFilter<"ExternalTransaction"> | $Enums.AppService
    rideRequestId?: StringNullableFilter<"ExternalTransaction"> | string | null
  }

  export type ExternalTransactionUpsertWithWhereUniqueWithoutSellerInput = {
    where: ExternalTransactionWhereUniqueInput
    update: XOR<ExternalTransactionUpdateWithoutSellerInput, ExternalTransactionUncheckedUpdateWithoutSellerInput>
    create: XOR<ExternalTransactionCreateWithoutSellerInput, ExternalTransactionUncheckedCreateWithoutSellerInput>
  }

  export type ExternalTransactionUpdateWithWhereUniqueWithoutSellerInput = {
    where: ExternalTransactionWhereUniqueInput
    data: XOR<ExternalTransactionUpdateWithoutSellerInput, ExternalTransactionUncheckedUpdateWithoutSellerInput>
  }

  export type ExternalTransactionUpdateManyWithWhereWithoutSellerInput = {
    where: ExternalTransactionScalarWhereInput
    data: XOR<ExternalTransactionUpdateManyMutationInput, ExternalTransactionUncheckedUpdateManyWithoutSellerInput>
  }

  export type PaymentMethodUpsertWithWhereUniqueWithoutUserInput = {
    where: PaymentMethodWhereUniqueInput
    update: XOR<PaymentMethodUpdateWithoutUserInput, PaymentMethodUncheckedUpdateWithoutUserInput>
    create: XOR<PaymentMethodCreateWithoutUserInput, PaymentMethodUncheckedCreateWithoutUserInput>
  }

  export type PaymentMethodUpdateWithWhereUniqueWithoutUserInput = {
    where: PaymentMethodWhereUniqueInput
    data: XOR<PaymentMethodUpdateWithoutUserInput, PaymentMethodUncheckedUpdateWithoutUserInput>
  }

  export type PaymentMethodUpdateManyWithWhereWithoutUserInput = {
    where: PaymentMethodScalarWhereInput
    data: XOR<PaymentMethodUpdateManyMutationInput, PaymentMethodUncheckedUpdateManyWithoutUserInput>
  }

  export type PaymentMethodScalarWhereInput = {
    AND?: PaymentMethodScalarWhereInput | PaymentMethodScalarWhereInput[]
    OR?: PaymentMethodScalarWhereInput[]
    NOT?: PaymentMethodScalarWhereInput | PaymentMethodScalarWhereInput[]
    id?: StringFilter<"PaymentMethod"> | string
    userId?: StringFilter<"PaymentMethod"> | string
    type?: EnumPaymentTypeFilter<"PaymentMethod"> | $Enums.PaymentType
    provider?: StringFilter<"PaymentMethod"> | string
    accountId?: StringFilter<"PaymentMethod"> | string
    accountName?: StringFilter<"PaymentMethod"> | string
    isDefault?: BoolFilter<"PaymentMethod"> | boolean
    status?: EnumAccountStatusFilter<"PaymentMethod"> | $Enums.AccountStatus
    metadata?: JsonNullableFilter<"PaymentMethod">
    createdAt?: DateTimeFilter<"PaymentMethod"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentMethod"> | Date | string
  }

  export type ProductUpsertWithWhereUniqueWithoutSellerInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutSellerInput, ProductUncheckedUpdateWithoutSellerInput>
    create: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutSellerInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutSellerInput, ProductUncheckedUpdateWithoutSellerInput>
  }

  export type ProductUpdateManyWithWhereWithoutSellerInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutSellerInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    sellerId?: StringFilter<"Product"> | string
    title?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    price?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"Product"> | string
    quantity?: IntFilter<"Product"> | number
    categoryId?: StringNullableFilter<"Product"> | string | null
    condition?: EnumProductConditionFilter<"Product"> | $Enums.ProductCondition
    locationId?: StringFilter<"Product"> | string
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    views?: IntFilter<"Product"> | number
    favorites?: IntFilter<"Product"> | number
    rating?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFilter<"Product"> | number
    isFeatured?: BoolFilter<"Product"> | boolean
    featuredUntil?: DateTimeNullableFilter<"Product"> | Date | string | null
    metadata?: JsonNullableFilter<"Product">
  }

  export type SellerKycUpsertWithoutUserInput = {
    update: XOR<SellerKycUpdateWithoutUserInput, SellerKycUncheckedUpdateWithoutUserInput>
    create: XOR<SellerKycCreateWithoutUserInput, SellerKycUncheckedCreateWithoutUserInput>
    where?: SellerKycWhereInput
  }

  export type SellerKycUpdateToOneWithWhereWithoutUserInput = {
    where?: SellerKycWhereInput
    data: XOR<SellerKycUpdateWithoutUserInput, SellerKycUncheckedUpdateWithoutUserInput>
  }

  export type SellerKycUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bankAccounts?: BankAccountUpdateManyWithoutSellerKycNestedInput
    wallets?: WalletUpdateManyWithoutSellerKycNestedInput
  }

  export type SellerKycUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bankAccounts?: BankAccountUncheckedUpdateManyWithoutSellerKycNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutSellerKycNestedInput
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    token?: StringFilter<"Session"> | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    userId?: StringFilter<"Session"> | string
    deviceId?: StringFilter<"Session"> | string
  }

  export type SettlementUpsertWithWhereUniqueWithoutUserInput = {
    where: SettlementWhereUniqueInput
    update: XOR<SettlementUpdateWithoutUserInput, SettlementUncheckedUpdateWithoutUserInput>
    create: XOR<SettlementCreateWithoutUserInput, SettlementUncheckedCreateWithoutUserInput>
  }

  export type SettlementUpdateWithWhereUniqueWithoutUserInput = {
    where: SettlementWhereUniqueInput
    data: XOR<SettlementUpdateWithoutUserInput, SettlementUncheckedUpdateWithoutUserInput>
  }

  export type SettlementUpdateManyWithWhereWithoutUserInput = {
    where: SettlementScalarWhereInput
    data: XOR<SettlementUpdateManyMutationInput, SettlementUncheckedUpdateManyWithoutUserInput>
  }

  export type SettlementScalarWhereInput = {
    AND?: SettlementScalarWhereInput | SettlementScalarWhereInput[]
    OR?: SettlementScalarWhereInput[]
    NOT?: SettlementScalarWhereInput | SettlementScalarWhereInput[]
    id?: StringFilter<"Settlement"> | string
    userId?: StringFilter<"Settlement"> | string
    amount?: DecimalFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Settlement"> | string
    status?: EnumSettlementStatusFilter<"Settlement"> | $Enums.SettlementStatus
    type?: EnumSettlementTypeFilter<"Settlement"> | $Enums.SettlementType
    reference?: StringFilter<"Settlement"> | string
    bankAccountId?: StringNullableFilter<"Settlement"> | string | null
    walletId?: StringNullableFilter<"Settlement"> | string | null
    metadata?: JsonNullableFilter<"Settlement">
    processedAt?: DateTimeNullableFilter<"Settlement"> | Date | string | null
    createdAt?: DateTimeFilter<"Settlement"> | Date | string
    updatedAt?: DateTimeFilter<"Settlement"> | Date | string
    includedOrderIds?: JsonNullableFilter<"Settlement">
    netAmountBeforeFees?: DecimalFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFilter<"Settlement"> | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFilter<"Settlement"> | number
    channel?: EnumSettlementChannelFilter<"Settlement"> | $Enums.SettlementChannel
    includedRideIds?: JsonNullableFilter<"Settlement">
    totalRidesCount?: IntFilter<"Settlement"> | number
  }

  export type DriverUpsertWithoutUserInput = {
    update: XOR<DriverUpdateWithoutUserInput, DriverUncheckedUpdateWithoutUserInput>
    create: XOR<DriverCreateWithoutUserInput, DriverUncheckedCreateWithoutUserInput>
    where?: DriverWhereInput
  }

  export type DriverUpdateToOneWithWhereWithoutUserInput = {
    where?: DriverWhereInput
    data: XOR<DriverUpdateWithoutUserInput, DriverUncheckedUpdateWithoutUserInput>
  }

  export type DriverUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUpdateManyWithoutDriverNestedInput
    rideService?: RideServiceUpdateOneWithoutDriversNestedInput
    riderApplication?: RiderApplicationUpdateOneRequiredWithoutDriverNestedInput
    rideRequests?: RideRequestUpdateManyWithoutDriverNestedInput
    rides?: RideUpdateManyWithoutDriverNestedInput
  }

  export type DriverUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUncheckedUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUncheckedUpdateManyWithoutDriverNestedInput
    rideRequests?: RideRequestUncheckedUpdateManyWithoutDriverNestedInput
    rides?: RideUncheckedUpdateManyWithoutDriverNestedInput
  }

  export type ordersUpsertWithWhereUniqueWithoutUser_orders_sellerIdToUserInput = {
    where: ordersWhereUniqueInput
    update: XOR<ordersUpdateWithoutUser_orders_sellerIdToUserInput, ordersUncheckedUpdateWithoutUser_orders_sellerIdToUserInput>
    create: XOR<ordersCreateWithoutUser_orders_sellerIdToUserInput, ordersUncheckedCreateWithoutUser_orders_sellerIdToUserInput>
  }

  export type ordersUpdateWithWhereUniqueWithoutUser_orders_sellerIdToUserInput = {
    where: ordersWhereUniqueInput
    data: XOR<ordersUpdateWithoutUser_orders_sellerIdToUserInput, ordersUncheckedUpdateWithoutUser_orders_sellerIdToUserInput>
  }

  export type ordersUpdateManyWithWhereWithoutUser_orders_sellerIdToUserInput = {
    where: ordersScalarWhereInput
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserInput>
  }

  export type ordersScalarWhereInput = {
    AND?: ordersScalarWhereInput | ordersScalarWhereInput[]
    OR?: ordersScalarWhereInput[]
    NOT?: ordersScalarWhereInput | ordersScalarWhereInput[]
    id?: StringFilter<"orders"> | string
    orderNumber?: StringFilter<"orders"> | string
    userId?: StringFilter<"orders"> | string
    sellerId?: StringFilter<"orders"> | string
    status?: EnumOrderStatusFilter<"orders"> | $Enums.OrderStatus
    subtotal?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"orders"> | string
    customerName?: StringFilter<"orders"> | string
    customerEmail?: StringNullableFilter<"orders"> | string | null
    customerPhone?: StringFilter<"orders"> | string
    shippingAddress?: StringFilter<"orders"> | string
    billingAddress?: StringNullableFilter<"orders"> | string | null
    paymentMethod?: StringNullableFilter<"orders"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"orders"> | $Enums.PaymentStatus
    paymentReference?: StringNullableFilter<"orders"> | string | null
    paidAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    shippingMethod?: StringNullableFilter<"orders"> | string | null
    trackingNumber?: StringNullableFilter<"orders"> | string | null
    shippedAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    deliveredAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    notes?: StringNullableFilter<"orders"> | string | null
    sellerNotes?: StringNullableFilter<"orders"> | string | null
    metadata?: JsonNullableFilter<"orders">
    createdAt?: DateTimeFilter<"orders"> | Date | string
    updatedAt?: DateTimeFilter<"orders"> | Date | string
    cancelledAt?: DateTimeNullableFilter<"orders"> | Date | string | null
    deliveryCurrency?: StringNullableFilter<"orders"> | string | null
  }

  export type ordersUpsertWithWhereUniqueWithoutUser_orders_userIdToUserInput = {
    where: ordersWhereUniqueInput
    update: XOR<ordersUpdateWithoutUser_orders_userIdToUserInput, ordersUncheckedUpdateWithoutUser_orders_userIdToUserInput>
    create: XOR<ordersCreateWithoutUser_orders_userIdToUserInput, ordersUncheckedCreateWithoutUser_orders_userIdToUserInput>
  }

  export type ordersUpdateWithWhereUniqueWithoutUser_orders_userIdToUserInput = {
    where: ordersWhereUniqueInput
    data: XOR<ordersUpdateWithoutUser_orders_userIdToUserInput, ordersUncheckedUpdateWithoutUser_orders_userIdToUserInput>
  }

  export type ordersUpdateManyWithWhereWithoutUser_orders_userIdToUserInput = {
    where: ordersScalarWhereInput
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserInput>
  }

  export type ProductOrderInterestUpsertWithWhereUniqueWithoutUserInput = {
    where: ProductOrderInterestWhereUniqueInput
    update: XOR<ProductOrderInterestUpdateWithoutUserInput, ProductOrderInterestUncheckedUpdateWithoutUserInput>
    create: XOR<ProductOrderInterestCreateWithoutUserInput, ProductOrderInterestUncheckedCreateWithoutUserInput>
  }

  export type ProductOrderInterestUpdateWithWhereUniqueWithoutUserInput = {
    where: ProductOrderInterestWhereUniqueInput
    data: XOR<ProductOrderInterestUpdateWithoutUserInput, ProductOrderInterestUncheckedUpdateWithoutUserInput>
  }

  export type ProductOrderInterestUpdateManyWithWhereWithoutUserInput = {
    where: ProductOrderInterestScalarWhereInput
    data: XOR<ProductOrderInterestUpdateManyMutationInput, ProductOrderInterestUncheckedUpdateManyWithoutUserInput>
  }

  export type ProductOrderInterestScalarWhereInput = {
    AND?: ProductOrderInterestScalarWhereInput | ProductOrderInterestScalarWhereInput[]
    OR?: ProductOrderInterestScalarWhereInput[]
    NOT?: ProductOrderInterestScalarWhereInput | ProductOrderInterestScalarWhereInput[]
    id?: StringFilter<"ProductOrderInterest"> | string
    productId?: StringFilter<"ProductOrderInterest"> | string
    userId?: StringFilter<"ProductOrderInterest"> | string
    quantity?: IntFilter<"ProductOrderInterest"> | number
    originalPrice?: DecimalFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string
    discountPrice?: DecimalNullableFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFilter<"ProductOrderInterest"> | string
    totalAmount?: DecimalFilter<"ProductOrderInterest"> | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFilter<"ProductOrderInterest"> | $Enums.OrderInterestStatus
    notes?: StringNullableFilter<"ProductOrderInterest"> | string | null
    preferredDeliveryDate?: DateTimeNullableFilter<"ProductOrderInterest"> | Date | string | null
    deliveryAddress?: StringNullableFilter<"ProductOrderInterest"> | string | null
    contactPhone?: StringNullableFilter<"ProductOrderInterest"> | string | null
    paymentMethod?: StringNullableFilter<"ProductOrderInterest"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"ProductOrderInterest"> | $Enums.PaymentStatus
    createdAt?: DateTimeFilter<"ProductOrderInterest"> | Date | string
    updatedAt?: DateTimeFilter<"ProductOrderInterest"> | Date | string
    expiresAt?: DateTimeNullableFilter<"ProductOrderInterest"> | Date | string | null
  }

  export type ProductViewUpsertWithWhereUniqueWithoutUserInput = {
    where: ProductViewWhereUniqueInput
    update: XOR<ProductViewUpdateWithoutUserInput, ProductViewUncheckedUpdateWithoutUserInput>
    create: XOR<ProductViewCreateWithoutUserInput, ProductViewUncheckedCreateWithoutUserInput>
  }

  export type ProductViewUpdateWithWhereUniqueWithoutUserInput = {
    where: ProductViewWhereUniqueInput
    data: XOR<ProductViewUpdateWithoutUserInput, ProductViewUncheckedUpdateWithoutUserInput>
  }

  export type ProductViewUpdateManyWithWhereWithoutUserInput = {
    where: ProductViewScalarWhereInput
    data: XOR<ProductViewUpdateManyMutationInput, ProductViewUncheckedUpdateManyWithoutUserInput>
  }

  export type ProductViewScalarWhereInput = {
    AND?: ProductViewScalarWhereInput | ProductViewScalarWhereInput[]
    OR?: ProductViewScalarWhereInput[]
    NOT?: ProductViewScalarWhereInput | ProductViewScalarWhereInput[]
    id?: StringFilter<"ProductView"> | string
    productId?: StringFilter<"ProductView"> | string
    userId?: StringFilter<"ProductView"> | string
    deviceId?: StringNullableFilter<"ProductView"> | string | null
    ipAddress?: StringNullableFilter<"ProductView"> | string | null
    viewedAt?: DateTimeFilter<"ProductView"> | Date | string
  }

  export type RideRequestUpsertWithWhereUniqueWithoutCustomerInput = {
    where: RideRequestWhereUniqueInput
    update: XOR<RideRequestUpdateWithoutCustomerInput, RideRequestUncheckedUpdateWithoutCustomerInput>
    create: XOR<RideRequestCreateWithoutCustomerInput, RideRequestUncheckedCreateWithoutCustomerInput>
  }

  export type RideRequestUpdateWithWhereUniqueWithoutCustomerInput = {
    where: RideRequestWhereUniqueInput
    data: XOR<RideRequestUpdateWithoutCustomerInput, RideRequestUncheckedUpdateWithoutCustomerInput>
  }

  export type RideRequestUpdateManyWithWhereWithoutCustomerInput = {
    where: RideRequestScalarWhereInput
    data: XOR<RideRequestUpdateManyMutationInput, RideRequestUncheckedUpdateManyWithoutCustomerInput>
  }

  export type RideRequestScalarWhereInput = {
    AND?: RideRequestScalarWhereInput | RideRequestScalarWhereInput[]
    OR?: RideRequestScalarWhereInput[]
    NOT?: RideRequestScalarWhereInput | RideRequestScalarWhereInput[]
    id?: StringFilter<"RideRequest"> | string
    requestId?: StringFilter<"RideRequest"> | string
    customerId?: StringFilter<"RideRequest"> | string
    driverId?: StringNullableFilter<"RideRequest"> | string | null
    pickupLocation?: JsonFilter<"RideRequest">
    destinationLocation?: JsonFilter<"RideRequest">
    rideType?: EnumRideTypeFilter<"RideRequest"> | $Enums.RideType
    estimatedDistance?: FloatNullableFilter<"RideRequest"> | number | null
    estimatedDuration?: IntNullableFilter<"RideRequest"> | number | null
    estimatedPrice?: DecimalFilter<"RideRequest"> | Decimal | DecimalJsLike | number | string
    actualPrice?: DecimalNullableFilter<"RideRequest"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFilter<"RideRequest"> | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFilter<"RideRequest"> | $Enums.RidePaymentMethod
    customerNotes?: StringNullableFilter<"RideRequest"> | string | null
    driverNotes?: StringNullableFilter<"RideRequest"> | string | null
    requestedAt?: DateTimeFilter<"RideRequest"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    startedAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"RideRequest"> | Date | string | null
    cancelledBy?: StringNullableFilter<"RideRequest"> | string | null
    cancellationReason?: StringNullableFilter<"RideRequest"> | string | null
    expiresAt?: DateTimeFilter<"RideRequest"> | Date | string
    createdAt?: DateTimeFilter<"RideRequest"> | Date | string
    updatedAt?: DateTimeFilter<"RideRequest"> | Date | string
    rideServiceId?: StringNullableFilter<"RideRequest"> | string | null
    currency?: StringFilter<"RideRequest"> | string
    currencySymbol?: StringFilter<"RideRequest"> | string
  }

  export type RiderApplicationUpsertWithWhereUniqueWithoutUserInput = {
    where: RiderApplicationWhereUniqueInput
    update: XOR<RiderApplicationUpdateWithoutUserInput, RiderApplicationUncheckedUpdateWithoutUserInput>
    create: XOR<RiderApplicationCreateWithoutUserInput, RiderApplicationUncheckedCreateWithoutUserInput>
  }

  export type RiderApplicationUpdateWithWhereUniqueWithoutUserInput = {
    where: RiderApplicationWhereUniqueInput
    data: XOR<RiderApplicationUpdateWithoutUserInput, RiderApplicationUncheckedUpdateWithoutUserInput>
  }

  export type RiderApplicationUpdateManyWithWhereWithoutUserInput = {
    where: RiderApplicationScalarWhereInput
    data: XOR<RiderApplicationUpdateManyMutationInput, RiderApplicationUncheckedUpdateManyWithoutUserInput>
  }

  export type RiderApplicationScalarWhereInput = {
    AND?: RiderApplicationScalarWhereInput | RiderApplicationScalarWhereInput[]
    OR?: RiderApplicationScalarWhereInput[]
    NOT?: RiderApplicationScalarWhereInput | RiderApplicationScalarWhereInput[]
    id?: StringFilter<"RiderApplication"> | string
    userId?: StringFilter<"RiderApplication"> | string
    vehicleType?: EnumRiderVehicleTypeFilter<"RiderApplication"> | $Enums.RiderVehicleType
    firstName?: StringFilter<"RiderApplication"> | string
    lastName?: StringFilter<"RiderApplication"> | string
    email?: StringNullableFilter<"RiderApplication"> | string | null
    phoneNumber?: StringFilter<"RiderApplication"> | string
    dateOfBirth?: StringNullableFilter<"RiderApplication"> | string | null
    address?: StringFilter<"RiderApplication"> | string
    city?: StringFilter<"RiderApplication"> | string
    licenseNumber?: StringFilter<"RiderApplication"> | string
    licenseExpiry?: StringFilter<"RiderApplication"> | string
    vehicleModel?: StringFilter<"RiderApplication"> | string
    vehiclePlate?: StringFilter<"RiderApplication"> | string
    insuranceNumber?: StringNullableFilter<"RiderApplication"> | string | null
    insuranceExpiry?: StringNullableFilter<"RiderApplication"> | string | null
    emergencyContact?: StringNullableFilter<"RiderApplication"> | string | null
    emergencyPhone?: StringNullableFilter<"RiderApplication"> | string | null
    experience?: StringNullableFilter<"RiderApplication"> | string | null
    availability?: StringNullableFilter<"RiderApplication"> | string | null
    status?: EnumRiderApplicationStatusFilter<"RiderApplication"> | $Enums.RiderApplicationStatus
    rejectionReason?: StringNullableFilter<"RiderApplication"> | string | null
    reviewedBy?: StringNullableFilter<"RiderApplication"> | string | null
    reviewedAt?: DateTimeNullableFilter<"RiderApplication"> | Date | string | null
    approvedAt?: DateTimeNullableFilter<"RiderApplication"> | Date | string | null
    createdAt?: DateTimeFilter<"RiderApplication"> | Date | string
    updatedAt?: DateTimeFilter<"RiderApplication"> | Date | string
  }

  export type RideUpsertWithWhereUniqueWithoutCustomerInput = {
    where: RideWhereUniqueInput
    update: XOR<RideUpdateWithoutCustomerInput, RideUncheckedUpdateWithoutCustomerInput>
    create: XOR<RideCreateWithoutCustomerInput, RideUncheckedCreateWithoutCustomerInput>
  }

  export type RideUpdateWithWhereUniqueWithoutCustomerInput = {
    where: RideWhereUniqueInput
    data: XOR<RideUpdateWithoutCustomerInput, RideUncheckedUpdateWithoutCustomerInput>
  }

  export type RideUpdateManyWithWhereWithoutCustomerInput = {
    where: RideScalarWhereInput
    data: XOR<RideUpdateManyMutationInput, RideUncheckedUpdateManyWithoutCustomerInput>
  }

  export type RideScalarWhereInput = {
    AND?: RideScalarWhereInput | RideScalarWhereInput[]
    OR?: RideScalarWhereInput[]
    NOT?: RideScalarWhereInput | RideScalarWhereInput[]
    id?: StringFilter<"Ride"> | string
    rideId?: StringFilter<"Ride"> | string
    rideRequestId?: StringFilter<"Ride"> | string
    driverId?: StringFilter<"Ride"> | string
    customerId?: StringFilter<"Ride"> | string
    pickupLocation?: JsonFilter<"Ride">
    destinationLocation?: JsonFilter<"Ride">
    actualPickupLocation?: JsonNullableFilter<"Ride">
    actualDropoffLocation?: JsonNullableFilter<"Ride">
    rideType?: EnumRideTypeFilter<"Ride"> | $Enums.RideType
    distance?: FloatNullableFilter<"Ride"> | number | null
    duration?: IntNullableFilter<"Ride"> | number | null
    baseFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFilter<"Ride"> | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFilter<"Ride"> | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFilter<"Ride"> | $Enums.PaymentStatus
    status?: EnumRideStatusFilter<"Ride"> | $Enums.RideStatus
    customerRating?: IntNullableFilter<"Ride"> | number | null
    driverRating?: IntNullableFilter<"Ride"> | number | null
    customerReview?: StringNullableFilter<"Ride"> | string | null
    driverReview?: StringNullableFilter<"Ride"> | string | null
    startedAt?: DateTimeNullableFilter<"Ride"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Ride"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"Ride"> | Date | string | null
    cancelledBy?: StringNullableFilter<"Ride"> | string | null
    cancellationReason?: StringNullableFilter<"Ride"> | string | null
    route?: JsonNullableFilter<"Ride">
    createdAt?: DateTimeFilter<"Ride"> | Date | string
    updatedAt?: DateTimeFilter<"Ride"> | Date | string
    rideServiceId?: StringNullableFilter<"Ride"> | string | null
    settlementStatus?: EnumPaymentStatusFilter<"Ride"> | $Enums.PaymentStatus
  }

  export type UserCreateWithoutDeliveryAddressesInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutDeliveryAddressesInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutDeliveryAddressesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeliveryAddressesInput, UserUncheckedCreateWithoutDeliveryAddressesInput>
  }

  export type UserUpsertWithoutDeliveryAddressesInput = {
    update: XOR<UserUpdateWithoutDeliveryAddressesInput, UserUncheckedUpdateWithoutDeliveryAddressesInput>
    create: XOR<UserCreateWithoutDeliveryAddressesInput, UserUncheckedCreateWithoutDeliveryAddressesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeliveryAddressesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeliveryAddressesInput, UserUncheckedUpdateWithoutDeliveryAddressesInput>
  }

  export type UserUpdateWithoutDeliveryAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutDeliveryAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type UserCreateWithoutDevicesInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutDevicesInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutDevicesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDevicesInput, UserUncheckedCreateWithoutDevicesInput>
  }

  export type SessionCreateWithoutDeviceInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateWithoutDeviceInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type SessionCreateOrConnectWithoutDeviceInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutDeviceInput, SessionUncheckedCreateWithoutDeviceInput>
  }

  export type SessionCreateManyDeviceInputEnvelope = {
    data: SessionCreateManyDeviceInput | SessionCreateManyDeviceInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutDevicesInput = {
    update: XOR<UserUpdateWithoutDevicesInput, UserUncheckedUpdateWithoutDevicesInput>
    create: XOR<UserCreateWithoutDevicesInput, UserUncheckedCreateWithoutDevicesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDevicesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDevicesInput, UserUncheckedUpdateWithoutDevicesInput>
  }

  export type UserUpdateWithoutDevicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutDevicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type SessionUpsertWithWhereUniqueWithoutDeviceInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutDeviceInput, SessionUncheckedUpdateWithoutDeviceInput>
    create: XOR<SessionCreateWithoutDeviceInput, SessionUncheckedCreateWithoutDeviceInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutDeviceInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutDeviceInput, SessionUncheckedUpdateWithoutDeviceInput>
  }

  export type SessionUpdateManyWithWhereWithoutDeviceInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutDeviceInput>
  }

  export type DeviceCreateWithoutSessionsInput = {
    id?: string
    deviceId: string
    deviceName: string
    deviceType: string
    isVerified?: boolean
    lastLoginAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: string
    modelName: string
    osVersion: string
    phoneNumber: string
    lastLogoutAt?: Date | string | null
    user: UserCreateNestedOneWithoutDevicesInput
  }

  export type DeviceUncheckedCreateWithoutSessionsInput = {
    id?: string
    deviceId: string
    deviceName: string
    deviceType: string
    isVerified?: boolean
    lastLoginAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    brand: string
    modelName: string
    osVersion: string
    phoneNumber: string
    lastLogoutAt?: Date | string | null
  }

  export type DeviceCreateOrConnectWithoutSessionsInput = {
    where: DeviceWhereUniqueInput
    create: XOR<DeviceCreateWithoutSessionsInput, DeviceUncheckedCreateWithoutSessionsInput>
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type DeviceUpsertWithoutSessionsInput = {
    update: XOR<DeviceUpdateWithoutSessionsInput, DeviceUncheckedUpdateWithoutSessionsInput>
    create: XOR<DeviceCreateWithoutSessionsInput, DeviceUncheckedCreateWithoutSessionsInput>
    where?: DeviceWhereInput
  }

  export type DeviceUpdateToOneWithWhereWithoutSessionsInput = {
    where?: DeviceWhereInput
    data: XOR<DeviceUpdateWithoutSessionsInput, DeviceUncheckedUpdateWithoutSessionsInput>
  }

  export type DeviceUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
    deviceName?: StringFieldUpdateOperationsInput | string
    deviceType?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: StringFieldUpdateOperationsInput | string
    modelName?: StringFieldUpdateOperationsInput | string
    osVersion?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    lastLogoutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutDevicesNestedInput
  }

  export type DeviceUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
    deviceName?: StringFieldUpdateOperationsInput | string
    deviceType?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    brand?: StringFieldUpdateOperationsInput | string
    modelName?: StringFieldUpdateOperationsInput | string
    osVersion?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    lastLogoutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CategoryCreateWithoutProductsInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    translations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    translations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutProductsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
  }

  export type LocationCreateWithoutProductsInput = {
    id?: string
    countryCode: string
    region: string
    city: string
    createdAt?: Date | string
    updatedAt?: Date | string
    latitude?: number | null
    longitude?: number | null
    timezone?: string | null
    isActive?: boolean
  }

  export type LocationUncheckedCreateWithoutProductsInput = {
    id?: string
    countryCode: string
    region: string
    city: string
    createdAt?: Date | string
    updatedAt?: Date | string
    latitude?: number | null
    longitude?: number | null
    timezone?: string | null
    isActive?: boolean
  }

  export type LocationCreateOrConnectWithoutProductsInput = {
    where: LocationWhereUniqueInput
    create: XOR<LocationCreateWithoutProductsInput, LocationUncheckedCreateWithoutProductsInput>
  }

  export type UserCreateWithoutProductsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutProductsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutProductsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
  }

  export type ProductAttributeCreateWithoutProductInput = {
    id?: string
    key: string
    value: string
    createdAt?: Date | string
    updatedAt?: Date | string
    unit?: string | null
    isFilterable?: boolean
    order?: number
  }

  export type ProductAttributeUncheckedCreateWithoutProductInput = {
    id?: string
    key: string
    value: string
    createdAt?: Date | string
    updatedAt?: Date | string
    unit?: string | null
    isFilterable?: boolean
    order?: number
  }

  export type ProductAttributeCreateOrConnectWithoutProductInput = {
    where: ProductAttributeWhereUniqueInput
    create: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput>
  }

  export type ProductAttributeCreateManyProductInputEnvelope = {
    data: ProductAttributeCreateManyProductInput | ProductAttributeCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductDeliveryOptionCreateWithoutProductInput = {
    id?: string
    deliveryType: $Enums.DeliveryType
    name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    estimatedDays: number
    isDefault?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductDeliveryOptionUncheckedCreateWithoutProductInput = {
    id?: string
    deliveryType: $Enums.DeliveryType
    name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    estimatedDays: number
    isDefault?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductDeliveryOptionCreateOrConnectWithoutProductInput = {
    where: ProductDeliveryOptionWhereUniqueInput
    create: XOR<ProductDeliveryOptionCreateWithoutProductInput, ProductDeliveryOptionUncheckedCreateWithoutProductInput>
  }

  export type ProductDeliveryOptionCreateManyProductInputEnvelope = {
    data: ProductDeliveryOptionCreateManyProductInput | ProductDeliveryOptionCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductImageCreateWithoutProductInput = {
    id?: string
    imageUrl: string
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    width?: number | null
    height?: number | null
    size?: number | null
    format?: string | null
    altText?: string | null
  }

  export type ProductImageUncheckedCreateWithoutProductInput = {
    id?: string
    imageUrl: string
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    width?: number | null
    height?: number | null
    size?: number | null
    format?: string | null
    altText?: string | null
  }

  export type ProductImageCreateOrConnectWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    create: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput>
  }

  export type ProductImageCreateManyProductInputEnvelope = {
    data: ProductImageCreateManyProductInput | ProductImageCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductTranslationCreateWithoutProductInput = {
    id?: string
    locale: string
    title: string
    description: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationUncheckedCreateWithoutProductInput = {
    id?: string
    locale: string
    title: string
    description: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateOrConnectWithoutProductInput = {
    where: ProductTranslationWhereUniqueInput
    create: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput>
  }

  export type ProductTranslationCreateManyProductInputEnvelope = {
    data: ProductTranslationCreateManyProductInput | ProductTranslationCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type OrderItemCreateWithoutProductInput = {
    id?: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderItemStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    order: ordersCreateNestedOneWithoutItemsInput
  }

  export type OrderItemUncheckedCreateWithoutProductInput = {
    id?: string
    orderId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderItemStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemCreateOrConnectWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemCreateManyProductInputEnvelope = {
    data: OrderItemCreateManyProductInput | OrderItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductOrderInterestCreateWithoutProductInput = {
    id?: string
    quantity?: number
    originalPrice: Decimal | DecimalJsLike | number | string
    discountPrice?: Decimal | DecimalJsLike | number | string | null
    currencyCode: string
    totalAmount: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderInterestStatus
    notes?: string | null
    preferredDeliveryDate?: Date | string | null
    deliveryAddress?: string | null
    contactPhone?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt?: Date | string | null
    user: UserCreateNestedOneWithoutProductOrderInterestsInput
  }

  export type ProductOrderInterestUncheckedCreateWithoutProductInput = {
    id?: string
    userId: string
    quantity?: number
    originalPrice: Decimal | DecimalJsLike | number | string
    discountPrice?: Decimal | DecimalJsLike | number | string | null
    currencyCode: string
    totalAmount: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderInterestStatus
    notes?: string | null
    preferredDeliveryDate?: Date | string | null
    deliveryAddress?: string | null
    contactPhone?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt?: Date | string | null
  }

  export type ProductOrderInterestCreateOrConnectWithoutProductInput = {
    where: ProductOrderInterestWhereUniqueInput
    create: XOR<ProductOrderInterestCreateWithoutProductInput, ProductOrderInterestUncheckedCreateWithoutProductInput>
  }

  export type ProductOrderInterestCreateManyProductInputEnvelope = {
    data: ProductOrderInterestCreateManyProductInput | ProductOrderInterestCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductViewCreateWithoutProductInput = {
    id?: string
    deviceId?: string | null
    ipAddress?: string | null
    viewedAt?: Date | string
    user: UserCreateNestedOneWithoutProductViewsInput
  }

  export type ProductViewUncheckedCreateWithoutProductInput = {
    id?: string
    userId: string
    deviceId?: string | null
    ipAddress?: string | null
    viewedAt?: Date | string
  }

  export type ProductViewCreateOrConnectWithoutProductInput = {
    where: ProductViewWhereUniqueInput
    create: XOR<ProductViewCreateWithoutProductInput, ProductViewUncheckedCreateWithoutProductInput>
  }

  export type ProductViewCreateManyProductInputEnvelope = {
    data: ProductViewCreateManyProductInput | ProductViewCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutProductsInput = {
    update: XOR<CategoryUpdateWithoutProductsInput, CategoryUncheckedUpdateWithoutProductsInput>
    create: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutProductsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutProductsInput, CategoryUncheckedUpdateWithoutProductsInput>
  }

  export type CategoryUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    translations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    translations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type LocationUpsertWithoutProductsInput = {
    update: XOR<LocationUpdateWithoutProductsInput, LocationUncheckedUpdateWithoutProductsInput>
    create: XOR<LocationCreateWithoutProductsInput, LocationUncheckedCreateWithoutProductsInput>
    where?: LocationWhereInput
  }

  export type LocationUpdateToOneWithWhereWithoutProductsInput = {
    where?: LocationWhereInput
    data: XOR<LocationUpdateWithoutProductsInput, LocationUncheckedUpdateWithoutProductsInput>
  }

  export type LocationUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type LocationUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    countryCode?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserUpsertWithoutProductsInput = {
    update: XOR<UserUpdateWithoutProductsInput, UserUncheckedUpdateWithoutProductsInput>
    create: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProductsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProductsInput, UserUncheckedUpdateWithoutProductsInput>
  }

  export type UserUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type ProductAttributeUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductAttributeWhereUniqueInput
    update: XOR<ProductAttributeUpdateWithoutProductInput, ProductAttributeUncheckedUpdateWithoutProductInput>
    create: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput>
  }

  export type ProductAttributeUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductAttributeWhereUniqueInput
    data: XOR<ProductAttributeUpdateWithoutProductInput, ProductAttributeUncheckedUpdateWithoutProductInput>
  }

  export type ProductAttributeUpdateManyWithWhereWithoutProductInput = {
    where: ProductAttributeScalarWhereInput
    data: XOR<ProductAttributeUpdateManyMutationInput, ProductAttributeUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductAttributeScalarWhereInput = {
    AND?: ProductAttributeScalarWhereInput | ProductAttributeScalarWhereInput[]
    OR?: ProductAttributeScalarWhereInput[]
    NOT?: ProductAttributeScalarWhereInput | ProductAttributeScalarWhereInput[]
    id?: StringFilter<"ProductAttribute"> | string
    productId?: StringFilter<"ProductAttribute"> | string
    key?: StringFilter<"ProductAttribute"> | string
    value?: StringFilter<"ProductAttribute"> | string
    createdAt?: DateTimeFilter<"ProductAttribute"> | Date | string
    updatedAt?: DateTimeFilter<"ProductAttribute"> | Date | string
    unit?: StringNullableFilter<"ProductAttribute"> | string | null
    isFilterable?: BoolFilter<"ProductAttribute"> | boolean
    order?: IntFilter<"ProductAttribute"> | number
  }

  export type ProductDeliveryOptionUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductDeliveryOptionWhereUniqueInput
    update: XOR<ProductDeliveryOptionUpdateWithoutProductInput, ProductDeliveryOptionUncheckedUpdateWithoutProductInput>
    create: XOR<ProductDeliveryOptionCreateWithoutProductInput, ProductDeliveryOptionUncheckedCreateWithoutProductInput>
  }

  export type ProductDeliveryOptionUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductDeliveryOptionWhereUniqueInput
    data: XOR<ProductDeliveryOptionUpdateWithoutProductInput, ProductDeliveryOptionUncheckedUpdateWithoutProductInput>
  }

  export type ProductDeliveryOptionUpdateManyWithWhereWithoutProductInput = {
    where: ProductDeliveryOptionScalarWhereInput
    data: XOR<ProductDeliveryOptionUpdateManyMutationInput, ProductDeliveryOptionUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductDeliveryOptionScalarWhereInput = {
    AND?: ProductDeliveryOptionScalarWhereInput | ProductDeliveryOptionScalarWhereInput[]
    OR?: ProductDeliveryOptionScalarWhereInput[]
    NOT?: ProductDeliveryOptionScalarWhereInput | ProductDeliveryOptionScalarWhereInput[]
    id?: StringFilter<"ProductDeliveryOption"> | string
    productId?: StringFilter<"ProductDeliveryOption"> | string
    deliveryType?: EnumDeliveryTypeFilter<"ProductDeliveryOption"> | $Enums.DeliveryType
    name?: StringFilter<"ProductDeliveryOption"> | string
    description?: StringNullableFilter<"ProductDeliveryOption"> | string | null
    price?: DecimalFilter<"ProductDeliveryOption"> | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFilter<"ProductDeliveryOption"> | string
    estimatedDays?: IntFilter<"ProductDeliveryOption"> | number
    isDefault?: BoolFilter<"ProductDeliveryOption"> | boolean
    isActive?: BoolFilter<"ProductDeliveryOption"> | boolean
    createdAt?: DateTimeFilter<"ProductDeliveryOption"> | Date | string
    updatedAt?: DateTimeFilter<"ProductDeliveryOption"> | Date | string
  }

  export type ProductImageUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    update: XOR<ProductImageUpdateWithoutProductInput, ProductImageUncheckedUpdateWithoutProductInput>
    create: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput>
  }

  export type ProductImageUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    data: XOR<ProductImageUpdateWithoutProductInput, ProductImageUncheckedUpdateWithoutProductInput>
  }

  export type ProductImageUpdateManyWithWhereWithoutProductInput = {
    where: ProductImageScalarWhereInput
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductImageScalarWhereInput = {
    AND?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
    OR?: ProductImageScalarWhereInput[]
    NOT?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
    id?: StringFilter<"ProductImage"> | string
    productId?: StringFilter<"ProductImage"> | string
    imageUrl?: StringFilter<"ProductImage"> | string
    isPrimary?: BoolFilter<"ProductImage"> | boolean
    createdAt?: DateTimeFilter<"ProductImage"> | Date | string
    updatedAt?: DateTimeFilter<"ProductImage"> | Date | string
    width?: IntNullableFilter<"ProductImage"> | number | null
    height?: IntNullableFilter<"ProductImage"> | number | null
    size?: IntNullableFilter<"ProductImage"> | number | null
    format?: StringNullableFilter<"ProductImage"> | string | null
    altText?: StringNullableFilter<"ProductImage"> | string | null
  }

  export type ProductTranslationUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductTranslationWhereUniqueInput
    update: XOR<ProductTranslationUpdateWithoutProductInput, ProductTranslationUncheckedUpdateWithoutProductInput>
    create: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput>
  }

  export type ProductTranslationUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductTranslationWhereUniqueInput
    data: XOR<ProductTranslationUpdateWithoutProductInput, ProductTranslationUncheckedUpdateWithoutProductInput>
  }

  export type ProductTranslationUpdateManyWithWhereWithoutProductInput = {
    where: ProductTranslationScalarWhereInput
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductTranslationScalarWhereInput = {
    AND?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
    OR?: ProductTranslationScalarWhereInput[]
    NOT?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
    id?: StringFilter<"ProductTranslation"> | string
    productId?: StringFilter<"ProductTranslation"> | string
    locale?: StringFilter<"ProductTranslation"> | string
    title?: StringFilter<"ProductTranslation"> | string
    description?: StringFilter<"ProductTranslation"> | string
    createdAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ProductTranslation"> | Date | string
  }

  export type OrderItemUpsertWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutProductInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutProductInput>
  }

  export type OrderItemScalarWhereInput = {
    AND?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    OR?: OrderItemScalarWhereInput[]
    NOT?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    productSnapshot?: JsonFilter<"OrderItem">
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFilter<"OrderItem"> | $Enums.OrderItemStatus
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"OrderItem"> | Date | string
  }

  export type ProductOrderInterestUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductOrderInterestWhereUniqueInput
    update: XOR<ProductOrderInterestUpdateWithoutProductInput, ProductOrderInterestUncheckedUpdateWithoutProductInput>
    create: XOR<ProductOrderInterestCreateWithoutProductInput, ProductOrderInterestUncheckedCreateWithoutProductInput>
  }

  export type ProductOrderInterestUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductOrderInterestWhereUniqueInput
    data: XOR<ProductOrderInterestUpdateWithoutProductInput, ProductOrderInterestUncheckedUpdateWithoutProductInput>
  }

  export type ProductOrderInterestUpdateManyWithWhereWithoutProductInput = {
    where: ProductOrderInterestScalarWhereInput
    data: XOR<ProductOrderInterestUpdateManyMutationInput, ProductOrderInterestUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductViewUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductViewWhereUniqueInput
    update: XOR<ProductViewUpdateWithoutProductInput, ProductViewUncheckedUpdateWithoutProductInput>
    create: XOR<ProductViewCreateWithoutProductInput, ProductViewUncheckedCreateWithoutProductInput>
  }

  export type ProductViewUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductViewWhereUniqueInput
    data: XOR<ProductViewUpdateWithoutProductInput, ProductViewUncheckedUpdateWithoutProductInput>
  }

  export type ProductViewUpdateManyWithWhereWithoutProductInput = {
    where: ProductViewScalarWhereInput
    data: XOR<ProductViewUpdateManyMutationInput, ProductViewUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductCreateWithoutImagesInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    location: LocationCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutImagesInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutImagesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
  }

  export type ProductUpsertWithoutImagesInput = {
    update: XOR<ProductUpdateWithoutImagesInput, ProductUncheckedUpdateWithoutImagesInput>
    create: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutImagesInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutImagesInput, ProductUncheckedUpdateWithoutImagesInput>
  }

  export type ProductUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type CategoryCreateWithoutChildrenInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    translations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutChildrenInput = {
    id?: string
    name: string
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    translations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutChildrenInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
  }

  export type CategoryCreateWithoutParentInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    children?: CategoryCreateNestedManyWithoutParentInput
    translations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutParentInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    translations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutParentInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryCreateManyParentInputEnvelope = {
    data: CategoryCreateManyParentInput | CategoryCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type CategoryTranslationCreateWithoutCategoryInput = {
    id?: string
    locale: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationUncheckedCreateWithoutCategoryInput = {
    id?: string
    locale: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateOrConnectWithoutCategoryInput = {
    where: CategoryTranslationWhereUniqueInput
    create: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput>
  }

  export type CategoryTranslationCreateManyCategoryInputEnvelope = {
    data: CategoryTranslationCreateManyCategoryInput | CategoryTranslationCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCategoryInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    location: LocationCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutCategoryInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductCreateManyCategoryInputEnvelope = {
    data: ProductCreateManyCategoryInput | ProductCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutChildrenInput = {
    update: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutChildrenInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    translations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUpsertWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
  }

  export type CategoryUpdateManyWithWhereWithoutParentInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutParentInput>
  }

  export type CategoryScalarWhereInput = {
    AND?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    OR?: CategoryScalarWhereInput[]
    NOT?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    parentId?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    slug?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    imageUrl?: StringNullableFilter<"Category"> | string | null
    order?: IntFilter<"Category"> | number
    isActive?: BoolFilter<"Category"> | boolean
    metadata?: JsonNullableFilter<"Category">
    createdBy?: StringNullableFilter<"Category"> | string | null
  }

  export type CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput = {
    where: CategoryTranslationWhereUniqueInput
    update: XOR<CategoryTranslationUpdateWithoutCategoryInput, CategoryTranslationUncheckedUpdateWithoutCategoryInput>
    create: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput>
  }

  export type CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput = {
    where: CategoryTranslationWhereUniqueInput
    data: XOR<CategoryTranslationUpdateWithoutCategoryInput, CategoryTranslationUncheckedUpdateWithoutCategoryInput>
  }

  export type CategoryTranslationUpdateManyWithWhereWithoutCategoryInput = {
    where: CategoryTranslationScalarWhereInput
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyWithoutCategoryInput>
  }

  export type CategoryTranslationScalarWhereInput = {
    AND?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
    OR?: CategoryTranslationScalarWhereInput[]
    NOT?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
    id?: StringFilter<"CategoryTranslation"> | string
    categoryId?: StringFilter<"CategoryTranslation"> | string
    locale?: StringFilter<"CategoryTranslation"> | string
    name?: StringFilter<"CategoryTranslation"> | string
    description?: StringNullableFilter<"CategoryTranslation"> | string | null
    createdAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
  }

  export type ProductUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
  }

  export type ProductUpdateManyWithWhereWithoutCategoryInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ProductCreateWithoutLocationInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutLocationInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutLocationInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutLocationInput, ProductUncheckedCreateWithoutLocationInput>
  }

  export type ProductCreateManyLocationInputEnvelope = {
    data: ProductCreateManyLocationInput | ProductCreateManyLocationInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutLocationInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutLocationInput, ProductUncheckedUpdateWithoutLocationInput>
    create: XOR<ProductCreateWithoutLocationInput, ProductUncheckedCreateWithoutLocationInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutLocationInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutLocationInput, ProductUncheckedUpdateWithoutLocationInput>
  }

  export type ProductUpdateManyWithWhereWithoutLocationInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutLocationInput>
  }

  export type ProductCreateWithoutAttributesInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    location: LocationCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutAttributesInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutAttributesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutAttributesInput, ProductUncheckedCreateWithoutAttributesInput>
  }

  export type ProductUpsertWithoutAttributesInput = {
    update: XOR<ProductUpdateWithoutAttributesInput, ProductUncheckedUpdateWithoutAttributesInput>
    create: XOR<ProductCreateWithoutAttributesInput, ProductUncheckedCreateWithoutAttributesInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutAttributesInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutAttributesInput, ProductUncheckedUpdateWithoutAttributesInput>
  }

  export type ProductUpdateWithoutAttributesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutAttributesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateWithoutTranslationsInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    location: LocationCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutTranslationsInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutTranslationsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutTranslationsInput, ProductUncheckedCreateWithoutTranslationsInput>
  }

  export type ProductUpsertWithoutTranslationsInput = {
    update: XOR<ProductUpdateWithoutTranslationsInput, ProductUncheckedUpdateWithoutTranslationsInput>
    create: XOR<ProductCreateWithoutTranslationsInput, ProductUncheckedCreateWithoutTranslationsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutTranslationsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutTranslationsInput, ProductUncheckedUpdateWithoutTranslationsInput>
  }

  export type ProductUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateWithoutDeliveryOptionsInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    location: LocationCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutDeliveryOptionsInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutDeliveryOptionsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutDeliveryOptionsInput, ProductUncheckedCreateWithoutDeliveryOptionsInput>
  }

  export type ProductUpsertWithoutDeliveryOptionsInput = {
    update: XOR<ProductUpdateWithoutDeliveryOptionsInput, ProductUncheckedUpdateWithoutDeliveryOptionsInput>
    create: XOR<ProductCreateWithoutDeliveryOptionsInput, ProductUncheckedCreateWithoutDeliveryOptionsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutDeliveryOptionsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutDeliveryOptionsInput, ProductUncheckedUpdateWithoutDeliveryOptionsInput>
  }

  export type ProductUpdateWithoutDeliveryOptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutDeliveryOptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type CategoryCreateWithoutTranslationsInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutTranslationsInput = {
    id?: string
    name: string
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutTranslationsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutTranslationsInput, CategoryUncheckedCreateWithoutTranslationsInput>
  }

  export type CategoryUpsertWithoutTranslationsInput = {
    update: XOR<CategoryUpdateWithoutTranslationsInput, CategoryUncheckedUpdateWithoutTranslationsInput>
    create: XOR<CategoryCreateWithoutTranslationsInput, CategoryUncheckedCreateWithoutTranslationsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutTranslationsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutTranslationsInput, CategoryUncheckedUpdateWithoutTranslationsInput>
  }

  export type CategoryUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type BankAccountCreateWithoutSellerKycInput = {
    id?: string
    accountName: string
    accountNumber: string
    bankName: string
    bankCode: string
    branchCode?: string | null
    swiftCode?: string | null
    iban?: string | null
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    settlements?: SettlementCreateNestedManyWithoutBankAccountInput
  }

  export type BankAccountUncheckedCreateWithoutSellerKycInput = {
    id?: string
    accountName: string
    accountNumber: string
    bankName: string
    bankCode: string
    branchCode?: string | null
    swiftCode?: string | null
    iban?: string | null
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    settlements?: SettlementUncheckedCreateNestedManyWithoutBankAccountInput
  }

  export type BankAccountCreateOrConnectWithoutSellerKycInput = {
    where: BankAccountWhereUniqueInput
    create: XOR<BankAccountCreateWithoutSellerKycInput, BankAccountUncheckedCreateWithoutSellerKycInput>
  }

  export type BankAccountCreateManySellerKycInputEnvelope = {
    data: BankAccountCreateManySellerKycInput | BankAccountCreateManySellerKycInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutSellerKycInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutSellerKycInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutSellerKycInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSellerKycInput, UserUncheckedCreateWithoutSellerKycInput>
  }

  export type WalletCreateWithoutSellerKycInput = {
    id?: string
    walletType: $Enums.WalletType
    walletAddress: string
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    account: string
    settlements?: SettlementCreateNestedManyWithoutWalletInput
  }

  export type WalletUncheckedCreateWithoutSellerKycInput = {
    id?: string
    walletType: $Enums.WalletType
    walletAddress: string
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    account: string
    settlements?: SettlementUncheckedCreateNestedManyWithoutWalletInput
  }

  export type WalletCreateOrConnectWithoutSellerKycInput = {
    where: WalletWhereUniqueInput
    create: XOR<WalletCreateWithoutSellerKycInput, WalletUncheckedCreateWithoutSellerKycInput>
  }

  export type WalletCreateManySellerKycInputEnvelope = {
    data: WalletCreateManySellerKycInput | WalletCreateManySellerKycInput[]
    skipDuplicates?: boolean
  }

  export type BankAccountUpsertWithWhereUniqueWithoutSellerKycInput = {
    where: BankAccountWhereUniqueInput
    update: XOR<BankAccountUpdateWithoutSellerKycInput, BankAccountUncheckedUpdateWithoutSellerKycInput>
    create: XOR<BankAccountCreateWithoutSellerKycInput, BankAccountUncheckedCreateWithoutSellerKycInput>
  }

  export type BankAccountUpdateWithWhereUniqueWithoutSellerKycInput = {
    where: BankAccountWhereUniqueInput
    data: XOR<BankAccountUpdateWithoutSellerKycInput, BankAccountUncheckedUpdateWithoutSellerKycInput>
  }

  export type BankAccountUpdateManyWithWhereWithoutSellerKycInput = {
    where: BankAccountScalarWhereInput
    data: XOR<BankAccountUpdateManyMutationInput, BankAccountUncheckedUpdateManyWithoutSellerKycInput>
  }

  export type BankAccountScalarWhereInput = {
    AND?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
    OR?: BankAccountScalarWhereInput[]
    NOT?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
    id?: StringFilter<"BankAccount"> | string
    sellerKycId?: StringFilter<"BankAccount"> | string
    accountName?: StringFilter<"BankAccount"> | string
    accountNumber?: StringFilter<"BankAccount"> | string
    bankName?: StringFilter<"BankAccount"> | string
    bankCode?: StringFilter<"BankAccount"> | string
    branchCode?: StringNullableFilter<"BankAccount"> | string | null
    swiftCode?: StringNullableFilter<"BankAccount"> | string | null
    iban?: StringNullableFilter<"BankAccount"> | string | null
    currency?: StringFilter<"BankAccount"> | string
    isDefault?: BoolFilter<"BankAccount"> | boolean
    status?: EnumAccountStatusFilter<"BankAccount"> | $Enums.AccountStatus
    createdAt?: DateTimeFilter<"BankAccount"> | Date | string
    updatedAt?: DateTimeFilter<"BankAccount"> | Date | string
  }

  export type UserUpsertWithoutSellerKycInput = {
    update: XOR<UserUpdateWithoutSellerKycInput, UserUncheckedUpdateWithoutSellerKycInput>
    create: XOR<UserCreateWithoutSellerKycInput, UserUncheckedCreateWithoutSellerKycInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSellerKycInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSellerKycInput, UserUncheckedUpdateWithoutSellerKycInput>
  }

  export type UserUpdateWithoutSellerKycInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutSellerKycInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type WalletUpsertWithWhereUniqueWithoutSellerKycInput = {
    where: WalletWhereUniqueInput
    update: XOR<WalletUpdateWithoutSellerKycInput, WalletUncheckedUpdateWithoutSellerKycInput>
    create: XOR<WalletCreateWithoutSellerKycInput, WalletUncheckedCreateWithoutSellerKycInput>
  }

  export type WalletUpdateWithWhereUniqueWithoutSellerKycInput = {
    where: WalletWhereUniqueInput
    data: XOR<WalletUpdateWithoutSellerKycInput, WalletUncheckedUpdateWithoutSellerKycInput>
  }

  export type WalletUpdateManyWithWhereWithoutSellerKycInput = {
    where: WalletScalarWhereInput
    data: XOR<WalletUpdateManyMutationInput, WalletUncheckedUpdateManyWithoutSellerKycInput>
  }

  export type WalletScalarWhereInput = {
    AND?: WalletScalarWhereInput | WalletScalarWhereInput[]
    OR?: WalletScalarWhereInput[]
    NOT?: WalletScalarWhereInput | WalletScalarWhereInput[]
    id?: StringFilter<"Wallet"> | string
    sellerKycId?: StringFilter<"Wallet"> | string
    walletType?: EnumWalletTypeFilter<"Wallet"> | $Enums.WalletType
    walletAddress?: StringFilter<"Wallet"> | string
    currency?: StringFilter<"Wallet"> | string
    isDefault?: BoolFilter<"Wallet"> | boolean
    status?: EnumAccountStatusFilter<"Wallet"> | $Enums.AccountStatus
    createdAt?: DateTimeFilter<"Wallet"> | Date | string
    updatedAt?: DateTimeFilter<"Wallet"> | Date | string
    account?: StringFilter<"Wallet"> | string
  }

  export type SellerKycCreateWithoutBankAccountsInput = {
    id?: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber?: string | null
    taxId?: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status?: $Enums.KycStatus
    rejectionReason?: string | null
    verifiedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    country?: SellerKycCreatecountryInput | string[]
    documentExpiryDate?: Date | string | null
    statusChangedBy?: string | null
    statusChangedAt?: Date | string | null
    user: UserCreateNestedOneWithoutSellerKycInput
    wallets?: WalletCreateNestedManyWithoutSellerKycInput
  }

  export type SellerKycUncheckedCreateWithoutBankAccountsInput = {
    id?: string
    userId: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber?: string | null
    taxId?: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status?: $Enums.KycStatus
    rejectionReason?: string | null
    verifiedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    country?: SellerKycCreatecountryInput | string[]
    documentExpiryDate?: Date | string | null
    statusChangedBy?: string | null
    statusChangedAt?: Date | string | null
    wallets?: WalletUncheckedCreateNestedManyWithoutSellerKycInput
  }

  export type SellerKycCreateOrConnectWithoutBankAccountsInput = {
    where: SellerKycWhereUniqueInput
    create: XOR<SellerKycCreateWithoutBankAccountsInput, SellerKycUncheckedCreateWithoutBankAccountsInput>
  }

  export type SettlementCreateWithoutBankAccountInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
    user: UserCreateNestedOneWithoutSettlementsInput
    wallet?: WalletCreateNestedOneWithoutSettlementsInput
  }

  export type SettlementUncheckedCreateWithoutBankAccountInput = {
    id?: string
    userId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    walletId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
  }

  export type SettlementCreateOrConnectWithoutBankAccountInput = {
    where: SettlementWhereUniqueInput
    create: XOR<SettlementCreateWithoutBankAccountInput, SettlementUncheckedCreateWithoutBankAccountInput>
  }

  export type SettlementCreateManyBankAccountInputEnvelope = {
    data: SettlementCreateManyBankAccountInput | SettlementCreateManyBankAccountInput[]
    skipDuplicates?: boolean
  }

  export type SellerKycUpsertWithoutBankAccountsInput = {
    update: XOR<SellerKycUpdateWithoutBankAccountsInput, SellerKycUncheckedUpdateWithoutBankAccountsInput>
    create: XOR<SellerKycCreateWithoutBankAccountsInput, SellerKycUncheckedCreateWithoutBankAccountsInput>
    where?: SellerKycWhereInput
  }

  export type SellerKycUpdateToOneWithWhereWithoutBankAccountsInput = {
    where?: SellerKycWhereInput
    data: XOR<SellerKycUpdateWithoutBankAccountsInput, SellerKycUncheckedUpdateWithoutBankAccountsInput>
  }

  export type SellerKycUpdateWithoutBankAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutSellerKycNestedInput
    wallets?: WalletUpdateManyWithoutSellerKycNestedInput
  }

  export type SellerKycUncheckedUpdateWithoutBankAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wallets?: WalletUncheckedUpdateManyWithoutSellerKycNestedInput
  }

  export type SettlementUpsertWithWhereUniqueWithoutBankAccountInput = {
    where: SettlementWhereUniqueInput
    update: XOR<SettlementUpdateWithoutBankAccountInput, SettlementUncheckedUpdateWithoutBankAccountInput>
    create: XOR<SettlementCreateWithoutBankAccountInput, SettlementUncheckedCreateWithoutBankAccountInput>
  }

  export type SettlementUpdateWithWhereUniqueWithoutBankAccountInput = {
    where: SettlementWhereUniqueInput
    data: XOR<SettlementUpdateWithoutBankAccountInput, SettlementUncheckedUpdateWithoutBankAccountInput>
  }

  export type SettlementUpdateManyWithWhereWithoutBankAccountInput = {
    where: SettlementScalarWhereInput
    data: XOR<SettlementUpdateManyMutationInput, SettlementUncheckedUpdateManyWithoutBankAccountInput>
  }

  export type SettlementCreateWithoutWalletInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
    bankAccount?: BankAccountCreateNestedOneWithoutSettlementsInput
    user: UserCreateNestedOneWithoutSettlementsInput
  }

  export type SettlementUncheckedCreateWithoutWalletInput = {
    id?: string
    userId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    bankAccountId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
  }

  export type SettlementCreateOrConnectWithoutWalletInput = {
    where: SettlementWhereUniqueInput
    create: XOR<SettlementCreateWithoutWalletInput, SettlementUncheckedCreateWithoutWalletInput>
  }

  export type SettlementCreateManyWalletInputEnvelope = {
    data: SettlementCreateManyWalletInput | SettlementCreateManyWalletInput[]
    skipDuplicates?: boolean
  }

  export type SellerKycCreateWithoutWalletsInput = {
    id?: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber?: string | null
    taxId?: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status?: $Enums.KycStatus
    rejectionReason?: string | null
    verifiedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    country?: SellerKycCreatecountryInput | string[]
    documentExpiryDate?: Date | string | null
    statusChangedBy?: string | null
    statusChangedAt?: Date | string | null
    bankAccounts?: BankAccountCreateNestedManyWithoutSellerKycInput
    user: UserCreateNestedOneWithoutSellerKycInput
  }

  export type SellerKycUncheckedCreateWithoutWalletsInput = {
    id?: string
    userId: string
    businessName: string
    businessType: $Enums.BusinessType
    registrationNumber?: string | null
    taxId?: string | null
    address: string
    city: string
    state: string
    postalCode: string
    documentType: $Enums.DocumentType
    documentNumber: string
    documentUrl: string
    status?: $Enums.KycStatus
    rejectionReason?: string | null
    verifiedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    country?: SellerKycCreatecountryInput | string[]
    documentExpiryDate?: Date | string | null
    statusChangedBy?: string | null
    statusChangedAt?: Date | string | null
    bankAccounts?: BankAccountUncheckedCreateNestedManyWithoutSellerKycInput
  }

  export type SellerKycCreateOrConnectWithoutWalletsInput = {
    where: SellerKycWhereUniqueInput
    create: XOR<SellerKycCreateWithoutWalletsInput, SellerKycUncheckedCreateWithoutWalletsInput>
  }

  export type SettlementUpsertWithWhereUniqueWithoutWalletInput = {
    where: SettlementWhereUniqueInput
    update: XOR<SettlementUpdateWithoutWalletInput, SettlementUncheckedUpdateWithoutWalletInput>
    create: XOR<SettlementCreateWithoutWalletInput, SettlementUncheckedCreateWithoutWalletInput>
  }

  export type SettlementUpdateWithWhereUniqueWithoutWalletInput = {
    where: SettlementWhereUniqueInput
    data: XOR<SettlementUpdateWithoutWalletInput, SettlementUncheckedUpdateWithoutWalletInput>
  }

  export type SettlementUpdateManyWithWhereWithoutWalletInput = {
    where: SettlementScalarWhereInput
    data: XOR<SettlementUpdateManyMutationInput, SettlementUncheckedUpdateManyWithoutWalletInput>
  }

  export type SellerKycUpsertWithoutWalletsInput = {
    update: XOR<SellerKycUpdateWithoutWalletsInput, SellerKycUncheckedUpdateWithoutWalletsInput>
    create: XOR<SellerKycCreateWithoutWalletsInput, SellerKycUncheckedCreateWithoutWalletsInput>
    where?: SellerKycWhereInput
  }

  export type SellerKycUpdateToOneWithWhereWithoutWalletsInput = {
    where?: SellerKycWhereInput
    data: XOR<SellerKycUpdateWithoutWalletsInput, SellerKycUncheckedUpdateWithoutWalletsInput>
  }

  export type SellerKycUpdateWithoutWalletsInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bankAccounts?: BankAccountUpdateManyWithoutSellerKycNestedInput
    user?: UserUpdateOneRequiredWithoutSellerKycNestedInput
  }

  export type SellerKycUncheckedUpdateWithoutWalletsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    businessName?: StringFieldUpdateOperationsInput | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    status?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    country?: SellerKycUpdatecountryInput | string[]
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusChangedBy?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bankAccounts?: BankAccountUncheckedUpdateManyWithoutSellerKycNestedInput
  }

  export type ExternalTransactionCreateWithoutPaymentMethodInput = {
    id?: string
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    customer: UserCreateNestedOneWithoutCustomerTransactionsInput
    order?: ordersCreateNestedOneWithoutExternalTransactionsInput
    rideRequest?: RideRequestCreateNestedOneWithoutExternalTransactionsInput
    seller: UserCreateNestedOneWithoutSellerTransactionsInput
  }

  export type ExternalTransactionUncheckedCreateWithoutPaymentMethodInput = {
    id?: string
    orderId?: string | null
    customerId: string
    sellerId: string
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type ExternalTransactionCreateOrConnectWithoutPaymentMethodInput = {
    where: ExternalTransactionWhereUniqueInput
    create: XOR<ExternalTransactionCreateWithoutPaymentMethodInput, ExternalTransactionUncheckedCreateWithoutPaymentMethodInput>
  }

  export type ExternalTransactionCreateManyPaymentMethodInputEnvelope = {
    data: ExternalTransactionCreateManyPaymentMethodInput | ExternalTransactionCreateManyPaymentMethodInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutPaymentMethodsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutPaymentMethodsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutPaymentMethodsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPaymentMethodsInput, UserUncheckedCreateWithoutPaymentMethodsInput>
  }

  export type ExternalTransactionUpsertWithWhereUniqueWithoutPaymentMethodInput = {
    where: ExternalTransactionWhereUniqueInput
    update: XOR<ExternalTransactionUpdateWithoutPaymentMethodInput, ExternalTransactionUncheckedUpdateWithoutPaymentMethodInput>
    create: XOR<ExternalTransactionCreateWithoutPaymentMethodInput, ExternalTransactionUncheckedCreateWithoutPaymentMethodInput>
  }

  export type ExternalTransactionUpdateWithWhereUniqueWithoutPaymentMethodInput = {
    where: ExternalTransactionWhereUniqueInput
    data: XOR<ExternalTransactionUpdateWithoutPaymentMethodInput, ExternalTransactionUncheckedUpdateWithoutPaymentMethodInput>
  }

  export type ExternalTransactionUpdateManyWithWhereWithoutPaymentMethodInput = {
    where: ExternalTransactionScalarWhereInput
    data: XOR<ExternalTransactionUpdateManyMutationInput, ExternalTransactionUncheckedUpdateManyWithoutPaymentMethodInput>
  }

  export type UserUpsertWithoutPaymentMethodsInput = {
    update: XOR<UserUpdateWithoutPaymentMethodsInput, UserUncheckedUpdateWithoutPaymentMethodsInput>
    create: XOR<UserCreateWithoutPaymentMethodsInput, UserUncheckedCreateWithoutPaymentMethodsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPaymentMethodsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPaymentMethodsInput, UserUncheckedUpdateWithoutPaymentMethodsInput>
  }

  export type UserUpdateWithoutPaymentMethodsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutPaymentMethodsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type BankAccountCreateWithoutSettlementsInput = {
    id?: string
    accountName: string
    accountNumber: string
    bankName: string
    bankCode: string
    branchCode?: string | null
    swiftCode?: string | null
    iban?: string | null
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    sellerKyc: SellerKycCreateNestedOneWithoutBankAccountsInput
  }

  export type BankAccountUncheckedCreateWithoutSettlementsInput = {
    id?: string
    sellerKycId: string
    accountName: string
    accountNumber: string
    bankName: string
    bankCode: string
    branchCode?: string | null
    swiftCode?: string | null
    iban?: string | null
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BankAccountCreateOrConnectWithoutSettlementsInput = {
    where: BankAccountWhereUniqueInput
    create: XOR<BankAccountCreateWithoutSettlementsInput, BankAccountUncheckedCreateWithoutSettlementsInput>
  }

  export type UserCreateWithoutSettlementsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutSettlementsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutSettlementsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSettlementsInput, UserUncheckedCreateWithoutSettlementsInput>
  }

  export type WalletCreateWithoutSettlementsInput = {
    id?: string
    walletType: $Enums.WalletType
    walletAddress: string
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    account: string
    sellerKyc: SellerKycCreateNestedOneWithoutWalletsInput
  }

  export type WalletUncheckedCreateWithoutSettlementsInput = {
    id?: string
    sellerKycId: string
    walletType: $Enums.WalletType
    walletAddress: string
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    account: string
  }

  export type WalletCreateOrConnectWithoutSettlementsInput = {
    where: WalletWhereUniqueInput
    create: XOR<WalletCreateWithoutSettlementsInput, WalletUncheckedCreateWithoutSettlementsInput>
  }

  export type BankAccountUpsertWithoutSettlementsInput = {
    update: XOR<BankAccountUpdateWithoutSettlementsInput, BankAccountUncheckedUpdateWithoutSettlementsInput>
    create: XOR<BankAccountCreateWithoutSettlementsInput, BankAccountUncheckedCreateWithoutSettlementsInput>
    where?: BankAccountWhereInput
  }

  export type BankAccountUpdateToOneWithWhereWithoutSettlementsInput = {
    where?: BankAccountWhereInput
    data: XOR<BankAccountUpdateWithoutSettlementsInput, BankAccountUncheckedUpdateWithoutSettlementsInput>
  }

  export type BankAccountUpdateWithoutSettlementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankCode?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sellerKyc?: SellerKycUpdateOneRequiredWithoutBankAccountsNestedInput
  }

  export type BankAccountUncheckedUpdateWithoutSettlementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerKycId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankCode?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutSettlementsInput = {
    update: XOR<UserUpdateWithoutSettlementsInput, UserUncheckedUpdateWithoutSettlementsInput>
    create: XOR<UserCreateWithoutSettlementsInput, UserUncheckedCreateWithoutSettlementsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSettlementsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSettlementsInput, UserUncheckedUpdateWithoutSettlementsInput>
  }

  export type UserUpdateWithoutSettlementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutSettlementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type WalletUpsertWithoutSettlementsInput = {
    update: XOR<WalletUpdateWithoutSettlementsInput, WalletUncheckedUpdateWithoutSettlementsInput>
    create: XOR<WalletCreateWithoutSettlementsInput, WalletUncheckedCreateWithoutSettlementsInput>
    where?: WalletWhereInput
  }

  export type WalletUpdateToOneWithWhereWithoutSettlementsInput = {
    where?: WalletWhereInput
    data: XOR<WalletUpdateWithoutSettlementsInput, WalletUncheckedUpdateWithoutSettlementsInput>
  }

  export type WalletUpdateWithoutSettlementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    walletType?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    walletAddress?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: StringFieldUpdateOperationsInput | string
    sellerKyc?: SellerKycUpdateOneRequiredWithoutWalletsNestedInput
  }

  export type WalletUncheckedUpdateWithoutSettlementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerKycId?: StringFieldUpdateOperationsInput | string
    walletType?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    walletAddress?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCreateWithoutProductViewsInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    location: LocationCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutProductViewsInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutProductViewsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutProductViewsInput, ProductUncheckedCreateWithoutProductViewsInput>
  }

  export type UserCreateWithoutProductViewsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutProductViewsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutProductViewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProductViewsInput, UserUncheckedCreateWithoutProductViewsInput>
  }

  export type ProductUpsertWithoutProductViewsInput = {
    update: XOR<ProductUpdateWithoutProductViewsInput, ProductUncheckedUpdateWithoutProductViewsInput>
    create: XOR<ProductCreateWithoutProductViewsInput, ProductUncheckedCreateWithoutProductViewsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutProductViewsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutProductViewsInput, ProductUncheckedUpdateWithoutProductViewsInput>
  }

  export type ProductUpdateWithoutProductViewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutProductViewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UserUpsertWithoutProductViewsInput = {
    update: XOR<UserUpdateWithoutProductViewsInput, UserUncheckedUpdateWithoutProductViewsInput>
    create: XOR<UserCreateWithoutProductViewsInput, UserUncheckedCreateWithoutProductViewsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProductViewsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProductViewsInput, UserUncheckedUpdateWithoutProductViewsInput>
  }

  export type UserUpdateWithoutProductViewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutProductViewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type ProductCreateWithoutProductOrderInterestsInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    location: LocationCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutProductOrderInterestsInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutProductOrderInterestsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutProductOrderInterestsInput, ProductUncheckedCreateWithoutProductOrderInterestsInput>
  }

  export type UserCreateWithoutProductOrderInterestsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutProductOrderInterestsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutProductOrderInterestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProductOrderInterestsInput, UserUncheckedCreateWithoutProductOrderInterestsInput>
  }

  export type ProductUpsertWithoutProductOrderInterestsInput = {
    update: XOR<ProductUpdateWithoutProductOrderInterestsInput, ProductUncheckedUpdateWithoutProductOrderInterestsInput>
    create: XOR<ProductCreateWithoutProductOrderInterestsInput, ProductUncheckedCreateWithoutProductOrderInterestsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutProductOrderInterestsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutProductOrderInterestsInput, ProductUncheckedUpdateWithoutProductOrderInterestsInput>
  }

  export type ProductUpdateWithoutProductOrderInterestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutProductOrderInterestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UserUpsertWithoutProductOrderInterestsInput = {
    update: XOR<UserUpdateWithoutProductOrderInterestsInput, UserUncheckedUpdateWithoutProductOrderInterestsInput>
    create: XOR<UserCreateWithoutProductOrderInterestsInput, UserUncheckedCreateWithoutProductOrderInterestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProductOrderInterestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProductOrderInterestsInput, UserUncheckedUpdateWithoutProductOrderInterestsInput>
  }

  export type UserUpdateWithoutProductOrderInterestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutProductOrderInterestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type ordersCreateWithoutItemsInput = {
    id: string
    orderNumber: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutOrderInput
    User_orders_sellerIdToUser: UserCreateNestedOneWithoutOrders_orders_sellerIdToUserInput
    User_orders_userIdToUser: UserCreateNestedOneWithoutOrders_orders_userIdToUserInput
  }

  export type ordersUncheckedCreateWithoutItemsInput = {
    id: string
    orderNumber: string
    userId: string
    sellerId: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersCreateOrConnectWithoutItemsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutItemsInput, ordersUncheckedCreateWithoutItemsInput>
  }

  export type ProductCreateWithoutOrderItemsInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryCreateNestedOneWithoutProductsInput
    location: LocationCreateNestedOneWithoutProductsInput
    seller: UserCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutProductInput
    productViews?: ProductViewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutOrderItemsInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    deliveryOptions?: ProductDeliveryOptionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutProductInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutOrderItemsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
  }

  export type ordersUpsertWithoutItemsInput = {
    update: XOR<ordersUpdateWithoutItemsInput, ordersUncheckedUpdateWithoutItemsInput>
    create: XOR<ordersCreateWithoutItemsInput, ordersUncheckedCreateWithoutItemsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutItemsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutItemsInput, ordersUncheckedUpdateWithoutItemsInput>
  }

  export type ordersUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    externalTransactions?: ExternalTransactionUpdateManyWithoutOrderNestedInput
    User_orders_sellerIdToUser?: UserUpdateOneRequiredWithoutOrders_orders_sellerIdToUserNestedInput
    User_orders_userIdToUser?: UserUpdateOneRequiredWithoutOrders_orders_userIdToUserNestedInput
  }

  export type ordersUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ProductUpsertWithoutOrderItemsInput = {
    update: XOR<ProductUpdateWithoutOrderItemsInput, ProductUncheckedUpdateWithoutOrderItemsInput>
    create: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutOrderItemsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutOrderItemsInput, ProductUncheckedUpdateWithoutOrderItemsInput>
  }

  export type ProductUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UserCreateWithoutCustomerTransactionsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutCustomerTransactionsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutCustomerTransactionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomerTransactionsInput, UserUncheckedCreateWithoutCustomerTransactionsInput>
  }

  export type ordersCreateWithoutExternalTransactionsInput = {
    id: string
    orderNumber: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    items?: OrderItemCreateNestedManyWithoutOrderInput
    User_orders_sellerIdToUser: UserCreateNestedOneWithoutOrders_orders_sellerIdToUserInput
    User_orders_userIdToUser: UserCreateNestedOneWithoutOrders_orders_userIdToUserInput
  }

  export type ordersUncheckedCreateWithoutExternalTransactionsInput = {
    id: string
    orderNumber: string
    userId: string
    sellerId: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersCreateOrConnectWithoutExternalTransactionsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutExternalTransactionsInput, ordersUncheckedCreateWithoutExternalTransactionsInput>
  }

  export type PaymentMethodCreateWithoutExternalTransactionsInput = {
    id?: string
    type: $Enums.PaymentType
    provider: string
    accountId: string
    accountName: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutPaymentMethodsInput
  }

  export type PaymentMethodUncheckedCreateWithoutExternalTransactionsInput = {
    id?: string
    userId: string
    type: $Enums.PaymentType
    provider: string
    accountId: string
    accountName: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentMethodCreateOrConnectWithoutExternalTransactionsInput = {
    where: PaymentMethodWhereUniqueInput
    create: XOR<PaymentMethodCreateWithoutExternalTransactionsInput, PaymentMethodUncheckedCreateWithoutExternalTransactionsInput>
  }

  export type RideRequestCreateWithoutExternalTransactionsInput = {
    id?: string
    requestId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    currency?: string
    currencySymbol?: string
    customer: UserCreateNestedOneWithoutCustomerRideRequestsInput
    driver?: DriverCreateNestedOneWithoutRideRequestsInput
    rideService?: RideServiceCreateNestedOneWithoutRideRequestsInput
    ride?: RideCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestUncheckedCreateWithoutExternalTransactionsInput = {
    id?: string
    requestId: string
    customerId: string
    driverId?: string | null
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    currency?: string
    currencySymbol?: string
    ride?: RideUncheckedCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestCreateOrConnectWithoutExternalTransactionsInput = {
    where: RideRequestWhereUniqueInput
    create: XOR<RideRequestCreateWithoutExternalTransactionsInput, RideRequestUncheckedCreateWithoutExternalTransactionsInput>
  }

  export type UserCreateWithoutSellerTransactionsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutSellerTransactionsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutSellerTransactionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSellerTransactionsInput, UserUncheckedCreateWithoutSellerTransactionsInput>
  }

  export type UserUpsertWithoutCustomerTransactionsInput = {
    update: XOR<UserUpdateWithoutCustomerTransactionsInput, UserUncheckedUpdateWithoutCustomerTransactionsInput>
    create: XOR<UserCreateWithoutCustomerTransactionsInput, UserUncheckedCreateWithoutCustomerTransactionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomerTransactionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomerTransactionsInput, UserUncheckedUpdateWithoutCustomerTransactionsInput>
  }

  export type UserUpdateWithoutCustomerTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomerTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type ordersUpsertWithoutExternalTransactionsInput = {
    update: XOR<ordersUpdateWithoutExternalTransactionsInput, ordersUncheckedUpdateWithoutExternalTransactionsInput>
    create: XOR<ordersCreateWithoutExternalTransactionsInput, ordersUncheckedCreateWithoutExternalTransactionsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutExternalTransactionsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutExternalTransactionsInput, ordersUncheckedUpdateWithoutExternalTransactionsInput>
  }

  export type ordersUpdateWithoutExternalTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    User_orders_sellerIdToUser?: UserUpdateOneRequiredWithoutOrders_orders_sellerIdToUserNestedInput
    User_orders_userIdToUser?: UserUpdateOneRequiredWithoutOrders_orders_userIdToUserNestedInput
  }

  export type ordersUncheckedUpdateWithoutExternalTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type PaymentMethodUpsertWithoutExternalTransactionsInput = {
    update: XOR<PaymentMethodUpdateWithoutExternalTransactionsInput, PaymentMethodUncheckedUpdateWithoutExternalTransactionsInput>
    create: XOR<PaymentMethodCreateWithoutExternalTransactionsInput, PaymentMethodUncheckedCreateWithoutExternalTransactionsInput>
    where?: PaymentMethodWhereInput
  }

  export type PaymentMethodUpdateToOneWithWhereWithoutExternalTransactionsInput = {
    where?: PaymentMethodWhereInput
    data: XOR<PaymentMethodUpdateWithoutExternalTransactionsInput, PaymentMethodUncheckedUpdateWithoutExternalTransactionsInput>
  }

  export type PaymentMethodUpdateWithoutExternalTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    provider?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutPaymentMethodsNestedInput
  }

  export type PaymentMethodUncheckedUpdateWithoutExternalTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    provider?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideRequestUpsertWithoutExternalTransactionsInput = {
    update: XOR<RideRequestUpdateWithoutExternalTransactionsInput, RideRequestUncheckedUpdateWithoutExternalTransactionsInput>
    create: XOR<RideRequestCreateWithoutExternalTransactionsInput, RideRequestUncheckedCreateWithoutExternalTransactionsInput>
    where?: RideRequestWhereInput
  }

  export type RideRequestUpdateToOneWithWhereWithoutExternalTransactionsInput = {
    where?: RideRequestWhereInput
    data: XOR<RideRequestUpdateWithoutExternalTransactionsInput, RideRequestUncheckedUpdateWithoutExternalTransactionsInput>
  }

  export type RideRequestUpdateWithoutExternalTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    customer?: UserUpdateOneRequiredWithoutCustomerRideRequestsNestedInput
    driver?: DriverUpdateOneWithoutRideRequestsNestedInput
    rideService?: RideServiceUpdateOneWithoutRideRequestsNestedInput
    ride?: RideUpdateOneWithoutRideRequestNestedInput
  }

  export type RideRequestUncheckedUpdateWithoutExternalTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    ride?: RideUncheckedUpdateOneWithoutRideRequestNestedInput
  }

  export type UserUpsertWithoutSellerTransactionsInput = {
    update: XOR<UserUpdateWithoutSellerTransactionsInput, UserUncheckedUpdateWithoutSellerTransactionsInput>
    create: XOR<UserCreateWithoutSellerTransactionsInput, UserUncheckedCreateWithoutSellerTransactionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSellerTransactionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSellerTransactionsInput, UserUncheckedUpdateWithoutSellerTransactionsInput>
  }

  export type UserUpdateWithoutSellerTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutSellerTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type DriverCreateWithoutRiderApplicationInput = {
    id?: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
    earnings?: DriverEarningCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationCreateNestedManyWithoutDriverInput
    rideService?: RideServiceCreateNestedOneWithoutDriversInput
    user: UserCreateNestedOneWithoutDriverInput
    rideRequests?: RideRequestCreateNestedManyWithoutDriverInput
    rides?: RideCreateNestedManyWithoutDriverInput
  }

  export type DriverUncheckedCreateWithoutRiderApplicationInput = {
    id?: string
    userId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    updatedBy?: string | null
    earnings?: DriverEarningUncheckedCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationUncheckedCreateNestedManyWithoutDriverInput
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutDriverInput
    rides?: RideUncheckedCreateNestedManyWithoutDriverInput
  }

  export type DriverCreateOrConnectWithoutRiderApplicationInput = {
    where: DriverWhereUniqueInput
    create: XOR<DriverCreateWithoutRiderApplicationInput, DriverUncheckedCreateWithoutRiderApplicationInput>
  }

  export type UserCreateWithoutRiderApplicationsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutRiderApplicationsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutRiderApplicationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRiderApplicationsInput, UserUncheckedCreateWithoutRiderApplicationsInput>
  }

  export type RiderDocumentCreateWithoutRiderApplicationInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    uploadedAt?: Date | string
  }

  export type RiderDocumentUncheckedCreateWithoutRiderApplicationInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    uploadedAt?: Date | string
  }

  export type RiderDocumentCreateOrConnectWithoutRiderApplicationInput = {
    where: RiderDocumentWhereUniqueInput
    create: XOR<RiderDocumentCreateWithoutRiderApplicationInput, RiderDocumentUncheckedCreateWithoutRiderApplicationInput>
  }

  export type RiderDocumentCreateManyRiderApplicationInputEnvelope = {
    data: RiderDocumentCreateManyRiderApplicationInput | RiderDocumentCreateManyRiderApplicationInput[]
    skipDuplicates?: boolean
  }

  export type DriverUpsertWithoutRiderApplicationInput = {
    update: XOR<DriverUpdateWithoutRiderApplicationInput, DriverUncheckedUpdateWithoutRiderApplicationInput>
    create: XOR<DriverCreateWithoutRiderApplicationInput, DriverUncheckedCreateWithoutRiderApplicationInput>
    where?: DriverWhereInput
  }

  export type DriverUpdateToOneWithWhereWithoutRiderApplicationInput = {
    where?: DriverWhereInput
    data: XOR<DriverUpdateWithoutRiderApplicationInput, DriverUncheckedUpdateWithoutRiderApplicationInput>
  }

  export type DriverUpdateWithoutRiderApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUpdateManyWithoutDriverNestedInput
    rideService?: RideServiceUpdateOneWithoutDriversNestedInput
    user?: UserUpdateOneRequiredWithoutDriverNestedInput
    rideRequests?: RideRequestUpdateManyWithoutDriverNestedInput
    rides?: RideUpdateManyWithoutDriverNestedInput
  }

  export type DriverUncheckedUpdateWithoutRiderApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUncheckedUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUncheckedUpdateManyWithoutDriverNestedInput
    rideRequests?: RideRequestUncheckedUpdateManyWithoutDriverNestedInput
    rides?: RideUncheckedUpdateManyWithoutDriverNestedInput
  }

  export type UserUpsertWithoutRiderApplicationsInput = {
    update: XOR<UserUpdateWithoutRiderApplicationsInput, UserUncheckedUpdateWithoutRiderApplicationsInput>
    create: XOR<UserCreateWithoutRiderApplicationsInput, UserUncheckedCreateWithoutRiderApplicationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRiderApplicationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRiderApplicationsInput, UserUncheckedUpdateWithoutRiderApplicationsInput>
  }

  export type UserUpdateWithoutRiderApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutRiderApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type RiderDocumentUpsertWithWhereUniqueWithoutRiderApplicationInput = {
    where: RiderDocumentWhereUniqueInput
    update: XOR<RiderDocumentUpdateWithoutRiderApplicationInput, RiderDocumentUncheckedUpdateWithoutRiderApplicationInput>
    create: XOR<RiderDocumentCreateWithoutRiderApplicationInput, RiderDocumentUncheckedCreateWithoutRiderApplicationInput>
  }

  export type RiderDocumentUpdateWithWhereUniqueWithoutRiderApplicationInput = {
    where: RiderDocumentWhereUniqueInput
    data: XOR<RiderDocumentUpdateWithoutRiderApplicationInput, RiderDocumentUncheckedUpdateWithoutRiderApplicationInput>
  }

  export type RiderDocumentUpdateManyWithWhereWithoutRiderApplicationInput = {
    where: RiderDocumentScalarWhereInput
    data: XOR<RiderDocumentUpdateManyMutationInput, RiderDocumentUncheckedUpdateManyWithoutRiderApplicationInput>
  }

  export type RiderDocumentScalarWhereInput = {
    AND?: RiderDocumentScalarWhereInput | RiderDocumentScalarWhereInput[]
    OR?: RiderDocumentScalarWhereInput[]
    NOT?: RiderDocumentScalarWhereInput | RiderDocumentScalarWhereInput[]
    id?: StringFilter<"RiderDocument"> | string
    riderApplicationId?: StringFilter<"RiderDocument"> | string
    documentType?: StringFilter<"RiderDocument"> | string
    fileName?: StringFilter<"RiderDocument"> | string
    fileUrl?: StringFilter<"RiderDocument"> | string
    fileSize?: IntNullableFilter<"RiderDocument"> | number | null
    mimeType?: StringNullableFilter<"RiderDocument"> | string | null
    uploadedAt?: DateTimeFilter<"RiderDocument"> | Date | string
  }

  export type RiderApplicationCreateWithoutDocumentsInput = {
    id?: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driver?: DriverCreateNestedOneWithoutRiderApplicationInput
    user: UserCreateNestedOneWithoutRiderApplicationsInput
  }

  export type RiderApplicationUncheckedCreateWithoutDocumentsInput = {
    id?: string
    userId: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driver?: DriverUncheckedCreateNestedOneWithoutRiderApplicationInput
  }

  export type RiderApplicationCreateOrConnectWithoutDocumentsInput = {
    where: RiderApplicationWhereUniqueInput
    create: XOR<RiderApplicationCreateWithoutDocumentsInput, RiderApplicationUncheckedCreateWithoutDocumentsInput>
  }

  export type RiderApplicationUpsertWithoutDocumentsInput = {
    update: XOR<RiderApplicationUpdateWithoutDocumentsInput, RiderApplicationUncheckedUpdateWithoutDocumentsInput>
    create: XOR<RiderApplicationCreateWithoutDocumentsInput, RiderApplicationUncheckedCreateWithoutDocumentsInput>
    where?: RiderApplicationWhereInput
  }

  export type RiderApplicationUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: RiderApplicationWhereInput
    data: XOR<RiderApplicationUpdateWithoutDocumentsInput, RiderApplicationUncheckedUpdateWithoutDocumentsInput>
  }

  export type RiderApplicationUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driver?: DriverUpdateOneWithoutRiderApplicationNestedInput
    user?: UserUpdateOneRequiredWithoutRiderApplicationsNestedInput
  }

  export type RiderApplicationUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driver?: DriverUncheckedUpdateOneWithoutRiderApplicationNestedInput
  }

  export type DriverEarningCreateWithoutDriverInput = {
    id?: string
    rideId: string
    amount: Decimal | DecimalJsLike | number | string
    type: string
    description?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type DriverEarningUncheckedCreateWithoutDriverInput = {
    id?: string
    rideId: string
    amount: Decimal | DecimalJsLike | number | string
    type: string
    description?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type DriverEarningCreateOrConnectWithoutDriverInput = {
    where: DriverEarningWhereUniqueInput
    create: XOR<DriverEarningCreateWithoutDriverInput, DriverEarningUncheckedCreateWithoutDriverInput>
  }

  export type DriverEarningCreateManyDriverInputEnvelope = {
    data: DriverEarningCreateManyDriverInput | DriverEarningCreateManyDriverInput[]
    skipDuplicates?: boolean
  }

  export type DriverLocationCreateWithoutDriverInput = {
    id?: string
    latitude: number
    longitude: number
    address?: string | null
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type DriverLocationUncheckedCreateWithoutDriverInput = {
    id?: string
    latitude: number
    longitude: number
    address?: string | null
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type DriverLocationCreateOrConnectWithoutDriverInput = {
    where: DriverLocationWhereUniqueInput
    create: XOR<DriverLocationCreateWithoutDriverInput, DriverLocationUncheckedCreateWithoutDriverInput>
  }

  export type DriverLocationCreateManyDriverInputEnvelope = {
    data: DriverLocationCreateManyDriverInput | DriverLocationCreateManyDriverInput[]
    skipDuplicates?: boolean
  }

  export type RideServiceCreateWithoutDriversInput = {
    id?: string
    serviceId: string
    name: string
    description?: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: $Enums.DistanceUnit
    baseDistance?: number
    maxDistance?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    perKmRate: Decimal | DecimalJsLike | number | string
    perMinuteRate: Decimal | DecimalJsLike | number | string
    minimumFare: Decimal | DecimalJsLike | number | string
    maximumFare?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    currencySymbol?: string
    surgeMultiplier?: Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: Decimal | DecimalJsLike | number | string
    platformFeePercentage?: Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: Decimal | DecimalJsLike | number | string
    cancellationFee?: Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: number
    maxWaitTime?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    rideRequests?: RideRequestCreateNestedManyWithoutRideServiceInput
    rides?: RideCreateNestedManyWithoutRideServiceInput
  }

  export type RideServiceUncheckedCreateWithoutDriversInput = {
    id?: string
    serviceId: string
    name: string
    description?: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: $Enums.DistanceUnit
    baseDistance?: number
    maxDistance?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    perKmRate: Decimal | DecimalJsLike | number | string
    perMinuteRate: Decimal | DecimalJsLike | number | string
    minimumFare: Decimal | DecimalJsLike | number | string
    maximumFare?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    currencySymbol?: string
    surgeMultiplier?: Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: Decimal | DecimalJsLike | number | string
    platformFeePercentage?: Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: Decimal | DecimalJsLike | number | string
    cancellationFee?: Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: number
    maxWaitTime?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutRideServiceInput
    rides?: RideUncheckedCreateNestedManyWithoutRideServiceInput
  }

  export type RideServiceCreateOrConnectWithoutDriversInput = {
    where: RideServiceWhereUniqueInput
    create: XOR<RideServiceCreateWithoutDriversInput, RideServiceUncheckedCreateWithoutDriversInput>
  }

  export type RiderApplicationCreateWithoutDriverInput = {
    id?: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutRiderApplicationsInput
    documents?: RiderDocumentCreateNestedManyWithoutRiderApplicationInput
  }

  export type RiderApplicationUncheckedCreateWithoutDriverInput = {
    id?: string
    userId: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: RiderDocumentUncheckedCreateNestedManyWithoutRiderApplicationInput
  }

  export type RiderApplicationCreateOrConnectWithoutDriverInput = {
    where: RiderApplicationWhereUniqueInput
    create: XOR<RiderApplicationCreateWithoutDriverInput, RiderApplicationUncheckedCreateWithoutDriverInput>
  }

  export type UserCreateWithoutDriverInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutDriverInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutDriverInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDriverInput, UserUncheckedCreateWithoutDriverInput>
  }

  export type RideRequestCreateWithoutDriverInput = {
    id?: string
    requestId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutRideRequestInput
    customer: UserCreateNestedOneWithoutCustomerRideRequestsInput
    rideService?: RideServiceCreateNestedOneWithoutRideRequestsInput
    ride?: RideCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestUncheckedCreateWithoutDriverInput = {
    id?: string
    requestId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutRideRequestInput
    ride?: RideUncheckedCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestCreateOrConnectWithoutDriverInput = {
    where: RideRequestWhereUniqueInput
    create: XOR<RideRequestCreateWithoutDriverInput, RideRequestUncheckedCreateWithoutDriverInput>
  }

  export type RideRequestCreateManyDriverInputEnvelope = {
    data: RideRequestCreateManyDriverInput | RideRequestCreateManyDriverInput[]
    skipDuplicates?: boolean
  }

  export type RideCreateWithoutDriverInput = {
    id?: string
    rideId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationCreateNestedManyWithoutRideInput
    rideToken?: RideTokenCreateNestedOneWithoutRideInput
    customer: UserCreateNestedOneWithoutCustomerRidesInput
    rideRequest: RideRequestCreateNestedOneWithoutRideInput
    rideService?: RideServiceCreateNestedOneWithoutRidesInput
  }

  export type RideUncheckedCreateWithoutDriverInput = {
    id?: string
    rideId: string
    rideRequestId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedCreateNestedManyWithoutRideInput
    rideToken?: RideTokenUncheckedCreateNestedOneWithoutRideInput
  }

  export type RideCreateOrConnectWithoutDriverInput = {
    where: RideWhereUniqueInput
    create: XOR<RideCreateWithoutDriverInput, RideUncheckedCreateWithoutDriverInput>
  }

  export type RideCreateManyDriverInputEnvelope = {
    data: RideCreateManyDriverInput | RideCreateManyDriverInput[]
    skipDuplicates?: boolean
  }

  export type DriverEarningUpsertWithWhereUniqueWithoutDriverInput = {
    where: DriverEarningWhereUniqueInput
    update: XOR<DriverEarningUpdateWithoutDriverInput, DriverEarningUncheckedUpdateWithoutDriverInput>
    create: XOR<DriverEarningCreateWithoutDriverInput, DriverEarningUncheckedCreateWithoutDriverInput>
  }

  export type DriverEarningUpdateWithWhereUniqueWithoutDriverInput = {
    where: DriverEarningWhereUniqueInput
    data: XOR<DriverEarningUpdateWithoutDriverInput, DriverEarningUncheckedUpdateWithoutDriverInput>
  }

  export type DriverEarningUpdateManyWithWhereWithoutDriverInput = {
    where: DriverEarningScalarWhereInput
    data: XOR<DriverEarningUpdateManyMutationInput, DriverEarningUncheckedUpdateManyWithoutDriverInput>
  }

  export type DriverEarningScalarWhereInput = {
    AND?: DriverEarningScalarWhereInput | DriverEarningScalarWhereInput[]
    OR?: DriverEarningScalarWhereInput[]
    NOT?: DriverEarningScalarWhereInput | DriverEarningScalarWhereInput[]
    id?: StringFilter<"DriverEarning"> | string
    driverId?: StringFilter<"DriverEarning"> | string
    rideId?: StringFilter<"DriverEarning"> | string
    amount?: DecimalFilter<"DriverEarning"> | Decimal | DecimalJsLike | number | string
    type?: StringFilter<"DriverEarning"> | string
    description?: StringNullableFilter<"DriverEarning"> | string | null
    processedAt?: DateTimeNullableFilter<"DriverEarning"> | Date | string | null
    createdAt?: DateTimeFilter<"DriverEarning"> | Date | string
  }

  export type DriverLocationUpsertWithWhereUniqueWithoutDriverInput = {
    where: DriverLocationWhereUniqueInput
    update: XOR<DriverLocationUpdateWithoutDriverInput, DriverLocationUncheckedUpdateWithoutDriverInput>
    create: XOR<DriverLocationCreateWithoutDriverInput, DriverLocationUncheckedCreateWithoutDriverInput>
  }

  export type DriverLocationUpdateWithWhereUniqueWithoutDriverInput = {
    where: DriverLocationWhereUniqueInput
    data: XOR<DriverLocationUpdateWithoutDriverInput, DriverLocationUncheckedUpdateWithoutDriverInput>
  }

  export type DriverLocationUpdateManyWithWhereWithoutDriverInput = {
    where: DriverLocationScalarWhereInput
    data: XOR<DriverLocationUpdateManyMutationInput, DriverLocationUncheckedUpdateManyWithoutDriverInput>
  }

  export type DriverLocationScalarWhereInput = {
    AND?: DriverLocationScalarWhereInput | DriverLocationScalarWhereInput[]
    OR?: DriverLocationScalarWhereInput[]
    NOT?: DriverLocationScalarWhereInput | DriverLocationScalarWhereInput[]
    id?: StringFilter<"DriverLocation"> | string
    driverId?: StringFilter<"DriverLocation"> | string
    latitude?: FloatFilter<"DriverLocation"> | number
    longitude?: FloatFilter<"DriverLocation"> | number
    address?: StringNullableFilter<"DriverLocation"> | string | null
    accuracy?: FloatNullableFilter<"DriverLocation"> | number | null
    speed?: FloatNullableFilter<"DriverLocation"> | number | null
    heading?: FloatNullableFilter<"DriverLocation"> | number | null
    timestamp?: DateTimeFilter<"DriverLocation"> | Date | string
  }

  export type RideServiceUpsertWithoutDriversInput = {
    update: XOR<RideServiceUpdateWithoutDriversInput, RideServiceUncheckedUpdateWithoutDriversInput>
    create: XOR<RideServiceCreateWithoutDriversInput, RideServiceUncheckedCreateWithoutDriversInput>
    where?: RideServiceWhereInput
  }

  export type RideServiceUpdateToOneWithWhereWithoutDriversInput = {
    where?: RideServiceWhereInput
    data: XOR<RideServiceUpdateWithoutDriversInput, RideServiceUncheckedUpdateWithoutDriversInput>
  }

  export type RideServiceUpdateWithoutDriversInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rideRequests?: RideRequestUpdateManyWithoutRideServiceNestedInput
    rides?: RideUpdateManyWithoutRideServiceNestedInput
  }

  export type RideServiceUncheckedUpdateWithoutDriversInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rideRequests?: RideRequestUncheckedUpdateManyWithoutRideServiceNestedInput
    rides?: RideUncheckedUpdateManyWithoutRideServiceNestedInput
  }

  export type RiderApplicationUpsertWithoutDriverInput = {
    update: XOR<RiderApplicationUpdateWithoutDriverInput, RiderApplicationUncheckedUpdateWithoutDriverInput>
    create: XOR<RiderApplicationCreateWithoutDriverInput, RiderApplicationUncheckedCreateWithoutDriverInput>
    where?: RiderApplicationWhereInput
  }

  export type RiderApplicationUpdateToOneWithWhereWithoutDriverInput = {
    where?: RiderApplicationWhereInput
    data: XOR<RiderApplicationUpdateWithoutDriverInput, RiderApplicationUncheckedUpdateWithoutDriverInput>
  }

  export type RiderApplicationUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutRiderApplicationsNestedInput
    documents?: RiderDocumentUpdateManyWithoutRiderApplicationNestedInput
  }

  export type RiderApplicationUncheckedUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: RiderDocumentUncheckedUpdateManyWithoutRiderApplicationNestedInput
  }

  export type UserUpsertWithoutDriverInput = {
    update: XOR<UserUpdateWithoutDriverInput, UserUncheckedUpdateWithoutDriverInput>
    create: XOR<UserCreateWithoutDriverInput, UserUncheckedCreateWithoutDriverInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDriverInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDriverInput, UserUncheckedUpdateWithoutDriverInput>
  }

  export type UserUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type RideRequestUpsertWithWhereUniqueWithoutDriverInput = {
    where: RideRequestWhereUniqueInput
    update: XOR<RideRequestUpdateWithoutDriverInput, RideRequestUncheckedUpdateWithoutDriverInput>
    create: XOR<RideRequestCreateWithoutDriverInput, RideRequestUncheckedCreateWithoutDriverInput>
  }

  export type RideRequestUpdateWithWhereUniqueWithoutDriverInput = {
    where: RideRequestWhereUniqueInput
    data: XOR<RideRequestUpdateWithoutDriverInput, RideRequestUncheckedUpdateWithoutDriverInput>
  }

  export type RideRequestUpdateManyWithWhereWithoutDriverInput = {
    where: RideRequestScalarWhereInput
    data: XOR<RideRequestUpdateManyMutationInput, RideRequestUncheckedUpdateManyWithoutDriverInput>
  }

  export type RideUpsertWithWhereUniqueWithoutDriverInput = {
    where: RideWhereUniqueInput
    update: XOR<RideUpdateWithoutDriverInput, RideUncheckedUpdateWithoutDriverInput>
    create: XOR<RideCreateWithoutDriverInput, RideUncheckedCreateWithoutDriverInput>
  }

  export type RideUpdateWithWhereUniqueWithoutDriverInput = {
    where: RideWhereUniqueInput
    data: XOR<RideUpdateWithoutDriverInput, RideUncheckedUpdateWithoutDriverInput>
  }

  export type RideUpdateManyWithWhereWithoutDriverInput = {
    where: RideScalarWhereInput
    data: XOR<RideUpdateManyMutationInput, RideUncheckedUpdateManyWithoutDriverInput>
  }

  export type DriverCreateWithoutLocationHistoryInput = {
    id?: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
    earnings?: DriverEarningCreateNestedManyWithoutDriverInput
    rideService?: RideServiceCreateNestedOneWithoutDriversInput
    riderApplication: RiderApplicationCreateNestedOneWithoutDriverInput
    user: UserCreateNestedOneWithoutDriverInput
    rideRequests?: RideRequestCreateNestedManyWithoutDriverInput
    rides?: RideCreateNestedManyWithoutDriverInput
  }

  export type DriverUncheckedCreateWithoutLocationHistoryInput = {
    id?: string
    userId: string
    riderApplicationId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    updatedBy?: string | null
    earnings?: DriverEarningUncheckedCreateNestedManyWithoutDriverInput
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutDriverInput
    rides?: RideUncheckedCreateNestedManyWithoutDriverInput
  }

  export type DriverCreateOrConnectWithoutLocationHistoryInput = {
    where: DriverWhereUniqueInput
    create: XOR<DriverCreateWithoutLocationHistoryInput, DriverUncheckedCreateWithoutLocationHistoryInput>
  }

  export type DriverUpsertWithoutLocationHistoryInput = {
    update: XOR<DriverUpdateWithoutLocationHistoryInput, DriverUncheckedUpdateWithoutLocationHistoryInput>
    create: XOR<DriverCreateWithoutLocationHistoryInput, DriverUncheckedCreateWithoutLocationHistoryInput>
    where?: DriverWhereInput
  }

  export type DriverUpdateToOneWithWhereWithoutLocationHistoryInput = {
    where?: DriverWhereInput
    data: XOR<DriverUpdateWithoutLocationHistoryInput, DriverUncheckedUpdateWithoutLocationHistoryInput>
  }

  export type DriverUpdateWithoutLocationHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUpdateManyWithoutDriverNestedInput
    rideService?: RideServiceUpdateOneWithoutDriversNestedInput
    riderApplication?: RiderApplicationUpdateOneRequiredWithoutDriverNestedInput
    user?: UserUpdateOneRequiredWithoutDriverNestedInput
    rideRequests?: RideRequestUpdateManyWithoutDriverNestedInput
    rides?: RideUpdateManyWithoutDriverNestedInput
  }

  export type DriverUncheckedUpdateWithoutLocationHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUncheckedUpdateManyWithoutDriverNestedInput
    rideRequests?: RideRequestUncheckedUpdateManyWithoutDriverNestedInput
    rides?: RideUncheckedUpdateManyWithoutDriverNestedInput
  }

  export type ExternalTransactionCreateWithoutRideRequestInput = {
    id?: string
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    customer: UserCreateNestedOneWithoutCustomerTransactionsInput
    order?: ordersCreateNestedOneWithoutExternalTransactionsInput
    paymentMethod?: PaymentMethodCreateNestedOneWithoutExternalTransactionsInput
    seller: UserCreateNestedOneWithoutSellerTransactionsInput
  }

  export type ExternalTransactionUncheckedCreateWithoutRideRequestInput = {
    id?: string
    orderId?: string | null
    customerId: string
    sellerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
  }

  export type ExternalTransactionCreateOrConnectWithoutRideRequestInput = {
    where: ExternalTransactionWhereUniqueInput
    create: XOR<ExternalTransactionCreateWithoutRideRequestInput, ExternalTransactionUncheckedCreateWithoutRideRequestInput>
  }

  export type ExternalTransactionCreateManyRideRequestInputEnvelope = {
    data: ExternalTransactionCreateManyRideRequestInput | ExternalTransactionCreateManyRideRequestInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCustomerRideRequestsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutCustomerRideRequestsInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutCustomerRideRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomerRideRequestsInput, UserUncheckedCreateWithoutCustomerRideRequestsInput>
  }

  export type DriverCreateWithoutRideRequestsInput = {
    id?: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
    earnings?: DriverEarningCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationCreateNestedManyWithoutDriverInput
    rideService?: RideServiceCreateNestedOneWithoutDriversInput
    riderApplication: RiderApplicationCreateNestedOneWithoutDriverInput
    user: UserCreateNestedOneWithoutDriverInput
    rides?: RideCreateNestedManyWithoutDriverInput
  }

  export type DriverUncheckedCreateWithoutRideRequestsInput = {
    id?: string
    userId: string
    riderApplicationId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    updatedBy?: string | null
    earnings?: DriverEarningUncheckedCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationUncheckedCreateNestedManyWithoutDriverInput
    rides?: RideUncheckedCreateNestedManyWithoutDriverInput
  }

  export type DriverCreateOrConnectWithoutRideRequestsInput = {
    where: DriverWhereUniqueInput
    create: XOR<DriverCreateWithoutRideRequestsInput, DriverUncheckedCreateWithoutRideRequestsInput>
  }

  export type RideServiceCreateWithoutRideRequestsInput = {
    id?: string
    serviceId: string
    name: string
    description?: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: $Enums.DistanceUnit
    baseDistance?: number
    maxDistance?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    perKmRate: Decimal | DecimalJsLike | number | string
    perMinuteRate: Decimal | DecimalJsLike | number | string
    minimumFare: Decimal | DecimalJsLike | number | string
    maximumFare?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    currencySymbol?: string
    surgeMultiplier?: Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: Decimal | DecimalJsLike | number | string
    platformFeePercentage?: Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: Decimal | DecimalJsLike | number | string
    cancellationFee?: Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: number
    maxWaitTime?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    drivers?: DriverCreateNestedManyWithoutRideServiceInput
    rides?: RideCreateNestedManyWithoutRideServiceInput
  }

  export type RideServiceUncheckedCreateWithoutRideRequestsInput = {
    id?: string
    serviceId: string
    name: string
    description?: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: $Enums.DistanceUnit
    baseDistance?: number
    maxDistance?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    perKmRate: Decimal | DecimalJsLike | number | string
    perMinuteRate: Decimal | DecimalJsLike | number | string
    minimumFare: Decimal | DecimalJsLike | number | string
    maximumFare?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    currencySymbol?: string
    surgeMultiplier?: Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: Decimal | DecimalJsLike | number | string
    platformFeePercentage?: Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: Decimal | DecimalJsLike | number | string
    cancellationFee?: Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: number
    maxWaitTime?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    drivers?: DriverUncheckedCreateNestedManyWithoutRideServiceInput
    rides?: RideUncheckedCreateNestedManyWithoutRideServiceInput
  }

  export type RideServiceCreateOrConnectWithoutRideRequestsInput = {
    where: RideServiceWhereUniqueInput
    create: XOR<RideServiceCreateWithoutRideRequestsInput, RideServiceUncheckedCreateWithoutRideRequestsInput>
  }

  export type RideCreateWithoutRideRequestInput = {
    id?: string
    rideId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationCreateNestedManyWithoutRideInput
    rideToken?: RideTokenCreateNestedOneWithoutRideInput
    customer: UserCreateNestedOneWithoutCustomerRidesInput
    driver: DriverCreateNestedOneWithoutRidesInput
    rideService?: RideServiceCreateNestedOneWithoutRidesInput
  }

  export type RideUncheckedCreateWithoutRideRequestInput = {
    id?: string
    rideId: string
    driverId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedCreateNestedManyWithoutRideInput
    rideToken?: RideTokenUncheckedCreateNestedOneWithoutRideInput
  }

  export type RideCreateOrConnectWithoutRideRequestInput = {
    where: RideWhereUniqueInput
    create: XOR<RideCreateWithoutRideRequestInput, RideUncheckedCreateWithoutRideRequestInput>
  }

  export type ExternalTransactionUpsertWithWhereUniqueWithoutRideRequestInput = {
    where: ExternalTransactionWhereUniqueInput
    update: XOR<ExternalTransactionUpdateWithoutRideRequestInput, ExternalTransactionUncheckedUpdateWithoutRideRequestInput>
    create: XOR<ExternalTransactionCreateWithoutRideRequestInput, ExternalTransactionUncheckedCreateWithoutRideRequestInput>
  }

  export type ExternalTransactionUpdateWithWhereUniqueWithoutRideRequestInput = {
    where: ExternalTransactionWhereUniqueInput
    data: XOR<ExternalTransactionUpdateWithoutRideRequestInput, ExternalTransactionUncheckedUpdateWithoutRideRequestInput>
  }

  export type ExternalTransactionUpdateManyWithWhereWithoutRideRequestInput = {
    where: ExternalTransactionScalarWhereInput
    data: XOR<ExternalTransactionUpdateManyMutationInput, ExternalTransactionUncheckedUpdateManyWithoutRideRequestInput>
  }

  export type UserUpsertWithoutCustomerRideRequestsInput = {
    update: XOR<UserUpdateWithoutCustomerRideRequestsInput, UserUncheckedUpdateWithoutCustomerRideRequestsInput>
    create: XOR<UserCreateWithoutCustomerRideRequestsInput, UserUncheckedCreateWithoutCustomerRideRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomerRideRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomerRideRequestsInput, UserUncheckedUpdateWithoutCustomerRideRequestsInput>
  }

  export type UserUpdateWithoutCustomerRideRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomerRideRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type DriverUpsertWithoutRideRequestsInput = {
    update: XOR<DriverUpdateWithoutRideRequestsInput, DriverUncheckedUpdateWithoutRideRequestsInput>
    create: XOR<DriverCreateWithoutRideRequestsInput, DriverUncheckedCreateWithoutRideRequestsInput>
    where?: DriverWhereInput
  }

  export type DriverUpdateToOneWithWhereWithoutRideRequestsInput = {
    where?: DriverWhereInput
    data: XOR<DriverUpdateWithoutRideRequestsInput, DriverUncheckedUpdateWithoutRideRequestsInput>
  }

  export type DriverUpdateWithoutRideRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUpdateManyWithoutDriverNestedInput
    rideService?: RideServiceUpdateOneWithoutDriversNestedInput
    riderApplication?: RiderApplicationUpdateOneRequiredWithoutDriverNestedInput
    user?: UserUpdateOneRequiredWithoutDriverNestedInput
    rides?: RideUpdateManyWithoutDriverNestedInput
  }

  export type DriverUncheckedUpdateWithoutRideRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUncheckedUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUncheckedUpdateManyWithoutDriverNestedInput
    rides?: RideUncheckedUpdateManyWithoutDriverNestedInput
  }

  export type RideServiceUpsertWithoutRideRequestsInput = {
    update: XOR<RideServiceUpdateWithoutRideRequestsInput, RideServiceUncheckedUpdateWithoutRideRequestsInput>
    create: XOR<RideServiceCreateWithoutRideRequestsInput, RideServiceUncheckedCreateWithoutRideRequestsInput>
    where?: RideServiceWhereInput
  }

  export type RideServiceUpdateToOneWithWhereWithoutRideRequestsInput = {
    where?: RideServiceWhereInput
    data: XOR<RideServiceUpdateWithoutRideRequestsInput, RideServiceUncheckedUpdateWithoutRideRequestsInput>
  }

  export type RideServiceUpdateWithoutRideRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    drivers?: DriverUpdateManyWithoutRideServiceNestedInput
    rides?: RideUpdateManyWithoutRideServiceNestedInput
  }

  export type RideServiceUncheckedUpdateWithoutRideRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    drivers?: DriverUncheckedUpdateManyWithoutRideServiceNestedInput
    rides?: RideUncheckedUpdateManyWithoutRideServiceNestedInput
  }

  export type RideUpsertWithoutRideRequestInput = {
    update: XOR<RideUpdateWithoutRideRequestInput, RideUncheckedUpdateWithoutRideRequestInput>
    create: XOR<RideCreateWithoutRideRequestInput, RideUncheckedCreateWithoutRideRequestInput>
    where?: RideWhereInput
  }

  export type RideUpdateToOneWithWhereWithoutRideRequestInput = {
    where?: RideWhereInput
    data: XOR<RideUpdateWithoutRideRequestInput, RideUncheckedUpdateWithoutRideRequestInput>
  }

  export type RideUpdateWithoutRideRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUpdateOneWithoutRideNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRidesNestedInput
    driver?: DriverUpdateOneRequiredWithoutRidesNestedInput
    rideService?: RideServiceUpdateOneWithoutRidesNestedInput
  }

  export type RideUncheckedUpdateWithoutRideRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUncheckedUpdateOneWithoutRideNestedInput
  }

  export type RideLocationCreateWithoutRideInput = {
    id?: string
    latitude: number
    longitude: number
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type RideLocationUncheckedCreateWithoutRideInput = {
    id?: string
    latitude: number
    longitude: number
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type RideLocationCreateOrConnectWithoutRideInput = {
    where: RideLocationWhereUniqueInput
    create: XOR<RideLocationCreateWithoutRideInput, RideLocationUncheckedCreateWithoutRideInput>
  }

  export type RideLocationCreateManyRideInputEnvelope = {
    data: RideLocationCreateManyRideInput | RideLocationCreateManyRideInput[]
    skipDuplicates?: boolean
  }

  export type RideTokenCreateWithoutRideInput = {
    id?: string
    token: string
    isUsed?: boolean
    usedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RideTokenUncheckedCreateWithoutRideInput = {
    id?: string
    token: string
    isUsed?: boolean
    usedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RideTokenCreateOrConnectWithoutRideInput = {
    where: RideTokenWhereUniqueInput
    create: XOR<RideTokenCreateWithoutRideInput, RideTokenUncheckedCreateWithoutRideInput>
  }

  export type UserCreateWithoutCustomerRidesInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCustomerRidesInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCustomerRidesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomerRidesInput, UserUncheckedCreateWithoutCustomerRidesInput>
  }

  export type DriverCreateWithoutRidesInput = {
    id?: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
    earnings?: DriverEarningCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationCreateNestedManyWithoutDriverInput
    rideService?: RideServiceCreateNestedOneWithoutDriversInput
    riderApplication: RiderApplicationCreateNestedOneWithoutDriverInput
    user: UserCreateNestedOneWithoutDriverInput
    rideRequests?: RideRequestCreateNestedManyWithoutDriverInput
  }

  export type DriverUncheckedCreateWithoutRidesInput = {
    id?: string
    userId: string
    riderApplicationId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    updatedBy?: string | null
    earnings?: DriverEarningUncheckedCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationUncheckedCreateNestedManyWithoutDriverInput
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutDriverInput
  }

  export type DriverCreateOrConnectWithoutRidesInput = {
    where: DriverWhereUniqueInput
    create: XOR<DriverCreateWithoutRidesInput, DriverUncheckedCreateWithoutRidesInput>
  }

  export type RideRequestCreateWithoutRideInput = {
    id?: string
    requestId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutRideRequestInput
    customer: UserCreateNestedOneWithoutCustomerRideRequestsInput
    driver?: DriverCreateNestedOneWithoutRideRequestsInput
    rideService?: RideServiceCreateNestedOneWithoutRideRequestsInput
  }

  export type RideRequestUncheckedCreateWithoutRideInput = {
    id?: string
    requestId: string
    customerId: string
    driverId?: string | null
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutRideRequestInput
  }

  export type RideRequestCreateOrConnectWithoutRideInput = {
    where: RideRequestWhereUniqueInput
    create: XOR<RideRequestCreateWithoutRideInput, RideRequestUncheckedCreateWithoutRideInput>
  }

  export type RideServiceCreateWithoutRidesInput = {
    id?: string
    serviceId: string
    name: string
    description?: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: $Enums.DistanceUnit
    baseDistance?: number
    maxDistance?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    perKmRate: Decimal | DecimalJsLike | number | string
    perMinuteRate: Decimal | DecimalJsLike | number | string
    minimumFare: Decimal | DecimalJsLike | number | string
    maximumFare?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    currencySymbol?: string
    surgeMultiplier?: Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: Decimal | DecimalJsLike | number | string
    platformFeePercentage?: Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: Decimal | DecimalJsLike | number | string
    cancellationFee?: Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: number
    maxWaitTime?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    drivers?: DriverCreateNestedManyWithoutRideServiceInput
    rideRequests?: RideRequestCreateNestedManyWithoutRideServiceInput
  }

  export type RideServiceUncheckedCreateWithoutRidesInput = {
    id?: string
    serviceId: string
    name: string
    description?: string | null
    vehicleType: $Enums.RiderVehicleType
    isActive?: boolean
    isDefault?: boolean
    distanceUnit?: $Enums.DistanceUnit
    baseDistance?: number
    maxDistance?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    perKmRate: Decimal | DecimalJsLike | number | string
    perMinuteRate: Decimal | DecimalJsLike | number | string
    minimumFare: Decimal | DecimalJsLike | number | string
    maximumFare?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    currencySymbol?: string
    surgeMultiplier?: Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: Decimal | DecimalJsLike | number | string
    platformFeePercentage?: Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: Decimal | DecimalJsLike | number | string
    cancellationFee?: Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: number
    maxWaitTime?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    drivers?: DriverUncheckedCreateNestedManyWithoutRideServiceInput
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutRideServiceInput
  }

  export type RideServiceCreateOrConnectWithoutRidesInput = {
    where: RideServiceWhereUniqueInput
    create: XOR<RideServiceCreateWithoutRidesInput, RideServiceUncheckedCreateWithoutRidesInput>
  }

  export type RideLocationUpsertWithWhereUniqueWithoutRideInput = {
    where: RideLocationWhereUniqueInput
    update: XOR<RideLocationUpdateWithoutRideInput, RideLocationUncheckedUpdateWithoutRideInput>
    create: XOR<RideLocationCreateWithoutRideInput, RideLocationUncheckedCreateWithoutRideInput>
  }

  export type RideLocationUpdateWithWhereUniqueWithoutRideInput = {
    where: RideLocationWhereUniqueInput
    data: XOR<RideLocationUpdateWithoutRideInput, RideLocationUncheckedUpdateWithoutRideInput>
  }

  export type RideLocationUpdateManyWithWhereWithoutRideInput = {
    where: RideLocationScalarWhereInput
    data: XOR<RideLocationUpdateManyMutationInput, RideLocationUncheckedUpdateManyWithoutRideInput>
  }

  export type RideLocationScalarWhereInput = {
    AND?: RideLocationScalarWhereInput | RideLocationScalarWhereInput[]
    OR?: RideLocationScalarWhereInput[]
    NOT?: RideLocationScalarWhereInput | RideLocationScalarWhereInput[]
    id?: StringFilter<"RideLocation"> | string
    rideId?: StringFilter<"RideLocation"> | string
    latitude?: FloatFilter<"RideLocation"> | number
    longitude?: FloatFilter<"RideLocation"> | number
    accuracy?: FloatNullableFilter<"RideLocation"> | number | null
    speed?: FloatNullableFilter<"RideLocation"> | number | null
    heading?: FloatNullableFilter<"RideLocation"> | number | null
    timestamp?: DateTimeFilter<"RideLocation"> | Date | string
  }

  export type RideTokenUpsertWithoutRideInput = {
    update: XOR<RideTokenUpdateWithoutRideInput, RideTokenUncheckedUpdateWithoutRideInput>
    create: XOR<RideTokenCreateWithoutRideInput, RideTokenUncheckedCreateWithoutRideInput>
    where?: RideTokenWhereInput
  }

  export type RideTokenUpdateToOneWithWhereWithoutRideInput = {
    where?: RideTokenWhereInput
    data: XOR<RideTokenUpdateWithoutRideInput, RideTokenUncheckedUpdateWithoutRideInput>
  }

  export type RideTokenUpdateWithoutRideInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideTokenUncheckedUpdateWithoutRideInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutCustomerRidesInput = {
    update: XOR<UserUpdateWithoutCustomerRidesInput, UserUncheckedUpdateWithoutCustomerRidesInput>
    create: XOR<UserCreateWithoutCustomerRidesInput, UserUncheckedCreateWithoutCustomerRidesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomerRidesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomerRidesInput, UserUncheckedUpdateWithoutCustomerRidesInput>
  }

  export type UserUpdateWithoutCustomerRidesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomerRidesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type DriverUpsertWithoutRidesInput = {
    update: XOR<DriverUpdateWithoutRidesInput, DriverUncheckedUpdateWithoutRidesInput>
    create: XOR<DriverCreateWithoutRidesInput, DriverUncheckedCreateWithoutRidesInput>
    where?: DriverWhereInput
  }

  export type DriverUpdateToOneWithWhereWithoutRidesInput = {
    where?: DriverWhereInput
    data: XOR<DriverUpdateWithoutRidesInput, DriverUncheckedUpdateWithoutRidesInput>
  }

  export type DriverUpdateWithoutRidesInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUpdateManyWithoutDriverNestedInput
    rideService?: RideServiceUpdateOneWithoutDriversNestedInput
    riderApplication?: RiderApplicationUpdateOneRequiredWithoutDriverNestedInput
    user?: UserUpdateOneRequiredWithoutDriverNestedInput
    rideRequests?: RideRequestUpdateManyWithoutDriverNestedInput
  }

  export type DriverUncheckedUpdateWithoutRidesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUncheckedUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUncheckedUpdateManyWithoutDriverNestedInput
    rideRequests?: RideRequestUncheckedUpdateManyWithoutDriverNestedInput
  }

  export type RideRequestUpsertWithoutRideInput = {
    update: XOR<RideRequestUpdateWithoutRideInput, RideRequestUncheckedUpdateWithoutRideInput>
    create: XOR<RideRequestCreateWithoutRideInput, RideRequestUncheckedCreateWithoutRideInput>
    where?: RideRequestWhereInput
  }

  export type RideRequestUpdateToOneWithWhereWithoutRideInput = {
    where?: RideRequestWhereInput
    data: XOR<RideRequestUpdateWithoutRideInput, RideRequestUncheckedUpdateWithoutRideInput>
  }

  export type RideRequestUpdateWithoutRideInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUpdateManyWithoutRideRequestNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRideRequestsNestedInput
    driver?: DriverUpdateOneWithoutRideRequestsNestedInput
    rideService?: RideServiceUpdateOneWithoutRideRequestsNestedInput
  }

  export type RideRequestUncheckedUpdateWithoutRideInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutRideRequestNestedInput
  }

  export type RideServiceUpsertWithoutRidesInput = {
    update: XOR<RideServiceUpdateWithoutRidesInput, RideServiceUncheckedUpdateWithoutRidesInput>
    create: XOR<RideServiceCreateWithoutRidesInput, RideServiceUncheckedCreateWithoutRidesInput>
    where?: RideServiceWhereInput
  }

  export type RideServiceUpdateToOneWithWhereWithoutRidesInput = {
    where?: RideServiceWhereInput
    data: XOR<RideServiceUpdateWithoutRidesInput, RideServiceUncheckedUpdateWithoutRidesInput>
  }

  export type RideServiceUpdateWithoutRidesInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    drivers?: DriverUpdateManyWithoutRideServiceNestedInput
    rideRequests?: RideRequestUpdateManyWithoutRideServiceNestedInput
  }

  export type RideServiceUncheckedUpdateWithoutRidesInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    distanceUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    baseDistance?: FloatFieldUpdateOperationsInput | number
    maxDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perKmRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perMinuteRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimumFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maximumFare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    surgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxSurgeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFeePercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarningsPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    nightFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    weekendFareMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cancellationTimeLimit?: IntFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    restrictions?: NullableJsonNullValueInput | InputJsonValue
    estimatedPickupTime?: IntFieldUpdateOperationsInput | number
    maxWaitTime?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    drivers?: DriverUncheckedUpdateManyWithoutRideServiceNestedInput
    rideRequests?: RideRequestUncheckedUpdateManyWithoutRideServiceNestedInput
  }

  export type RideCreateWithoutRideTokenInput = {
    id?: string
    rideId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationCreateNestedManyWithoutRideInput
    customer: UserCreateNestedOneWithoutCustomerRidesInput
    driver: DriverCreateNestedOneWithoutRidesInput
    rideRequest: RideRequestCreateNestedOneWithoutRideInput
    rideService?: RideServiceCreateNestedOneWithoutRidesInput
  }

  export type RideUncheckedCreateWithoutRideTokenInput = {
    id?: string
    rideId: string
    rideRequestId: string
    driverId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedCreateNestedManyWithoutRideInput
  }

  export type RideCreateOrConnectWithoutRideTokenInput = {
    where: RideWhereUniqueInput
    create: XOR<RideCreateWithoutRideTokenInput, RideUncheckedCreateWithoutRideTokenInput>
  }

  export type RideUpsertWithoutRideTokenInput = {
    update: XOR<RideUpdateWithoutRideTokenInput, RideUncheckedUpdateWithoutRideTokenInput>
    create: XOR<RideCreateWithoutRideTokenInput, RideUncheckedCreateWithoutRideTokenInput>
    where?: RideWhereInput
  }

  export type RideUpdateToOneWithWhereWithoutRideTokenInput = {
    where?: RideWhereInput
    data: XOR<RideUpdateWithoutRideTokenInput, RideUncheckedUpdateWithoutRideTokenInput>
  }

  export type RideUpdateWithoutRideTokenInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUpdateManyWithoutRideNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRidesNestedInput
    driver?: DriverUpdateOneRequiredWithoutRidesNestedInput
    rideRequest?: RideRequestUpdateOneRequiredWithoutRideNestedInput
    rideService?: RideServiceUpdateOneWithoutRidesNestedInput
  }

  export type RideUncheckedUpdateWithoutRideTokenInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedUpdateManyWithoutRideNestedInput
  }

  export type RideCreateWithoutLocationUpdatesInput = {
    id?: string
    rideId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    settlementStatus?: $Enums.PaymentStatus
    rideToken?: RideTokenCreateNestedOneWithoutRideInput
    customer: UserCreateNestedOneWithoutCustomerRidesInput
    driver: DriverCreateNestedOneWithoutRidesInput
    rideRequest: RideRequestCreateNestedOneWithoutRideInput
    rideService?: RideServiceCreateNestedOneWithoutRidesInput
  }

  export type RideUncheckedCreateWithoutLocationUpdatesInput = {
    id?: string
    rideId: string
    rideRequestId: string
    driverId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    settlementStatus?: $Enums.PaymentStatus
    rideToken?: RideTokenUncheckedCreateNestedOneWithoutRideInput
  }

  export type RideCreateOrConnectWithoutLocationUpdatesInput = {
    where: RideWhereUniqueInput
    create: XOR<RideCreateWithoutLocationUpdatesInput, RideUncheckedCreateWithoutLocationUpdatesInput>
  }

  export type RideUpsertWithoutLocationUpdatesInput = {
    update: XOR<RideUpdateWithoutLocationUpdatesInput, RideUncheckedUpdateWithoutLocationUpdatesInput>
    create: XOR<RideCreateWithoutLocationUpdatesInput, RideUncheckedCreateWithoutLocationUpdatesInput>
    where?: RideWhereInput
  }

  export type RideUpdateToOneWithWhereWithoutLocationUpdatesInput = {
    where?: RideWhereInput
    data: XOR<RideUpdateWithoutLocationUpdatesInput, RideUncheckedUpdateWithoutLocationUpdatesInput>
  }

  export type RideUpdateWithoutLocationUpdatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    rideToken?: RideTokenUpdateOneWithoutRideNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRidesNestedInput
    driver?: DriverUpdateOneRequiredWithoutRidesNestedInput
    rideRequest?: RideRequestUpdateOneRequiredWithoutRideNestedInput
    rideService?: RideServiceUpdateOneWithoutRidesNestedInput
  }

  export type RideUncheckedUpdateWithoutLocationUpdatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    rideToken?: RideTokenUncheckedUpdateOneWithoutRideNestedInput
  }

  export type DriverCreateWithoutEarningsInput = {
    id?: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
    locationHistory?: DriverLocationCreateNestedManyWithoutDriverInput
    rideService?: RideServiceCreateNestedOneWithoutDriversInput
    riderApplication: RiderApplicationCreateNestedOneWithoutDriverInput
    user: UserCreateNestedOneWithoutDriverInput
    rideRequests?: RideRequestCreateNestedManyWithoutDriverInput
    rides?: RideCreateNestedManyWithoutDriverInput
  }

  export type DriverUncheckedCreateWithoutEarningsInput = {
    id?: string
    userId: string
    riderApplicationId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    updatedBy?: string | null
    locationHistory?: DriverLocationUncheckedCreateNestedManyWithoutDriverInput
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutDriverInput
    rides?: RideUncheckedCreateNestedManyWithoutDriverInput
  }

  export type DriverCreateOrConnectWithoutEarningsInput = {
    where: DriverWhereUniqueInput
    create: XOR<DriverCreateWithoutEarningsInput, DriverUncheckedCreateWithoutEarningsInput>
  }

  export type DriverUpsertWithoutEarningsInput = {
    update: XOR<DriverUpdateWithoutEarningsInput, DriverUncheckedUpdateWithoutEarningsInput>
    create: XOR<DriverCreateWithoutEarningsInput, DriverUncheckedCreateWithoutEarningsInput>
    where?: DriverWhereInput
  }

  export type DriverUpdateToOneWithWhereWithoutEarningsInput = {
    where?: DriverWhereInput
    data: XOR<DriverUpdateWithoutEarningsInput, DriverUncheckedUpdateWithoutEarningsInput>
  }

  export type DriverUpdateWithoutEarningsInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    locationHistory?: DriverLocationUpdateManyWithoutDriverNestedInput
    rideService?: RideServiceUpdateOneWithoutDriversNestedInput
    riderApplication?: RiderApplicationUpdateOneRequiredWithoutDriverNestedInput
    user?: UserUpdateOneRequiredWithoutDriverNestedInput
    rideRequests?: RideRequestUpdateManyWithoutDriverNestedInput
    rides?: RideUpdateManyWithoutDriverNestedInput
  }

  export type DriverUncheckedUpdateWithoutEarningsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    locationHistory?: DriverLocationUncheckedUpdateManyWithoutDriverNestedInput
    rideRequests?: RideRequestUncheckedUpdateManyWithoutDriverNestedInput
    rides?: RideUncheckedUpdateManyWithoutDriverNestedInput
  }

  export type DriverCreateWithoutRideServiceInput = {
    id?: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
    earnings?: DriverEarningCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationCreateNestedManyWithoutDriverInput
    riderApplication: RiderApplicationCreateNestedOneWithoutDriverInput
    user: UserCreateNestedOneWithoutDriverInput
    rideRequests?: RideRequestCreateNestedManyWithoutDriverInput
    rides?: RideCreateNestedManyWithoutDriverInput
  }

  export type DriverUncheckedCreateWithoutRideServiceInput = {
    id?: string
    userId: string
    riderApplicationId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
    earnings?: DriverEarningUncheckedCreateNestedManyWithoutDriverInput
    locationHistory?: DriverLocationUncheckedCreateNestedManyWithoutDriverInput
    rideRequests?: RideRequestUncheckedCreateNestedManyWithoutDriverInput
    rides?: RideUncheckedCreateNestedManyWithoutDriverInput
  }

  export type DriverCreateOrConnectWithoutRideServiceInput = {
    where: DriverWhereUniqueInput
    create: XOR<DriverCreateWithoutRideServiceInput, DriverUncheckedCreateWithoutRideServiceInput>
  }

  export type DriverCreateManyRideServiceInputEnvelope = {
    data: DriverCreateManyRideServiceInput | DriverCreateManyRideServiceInput[]
    skipDuplicates?: boolean
  }

  export type RideRequestCreateWithoutRideServiceInput = {
    id?: string
    requestId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionCreateNestedManyWithoutRideRequestInput
    customer: UserCreateNestedOneWithoutCustomerRideRequestsInput
    driver?: DriverCreateNestedOneWithoutRideRequestsInput
    ride?: RideCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestUncheckedCreateWithoutRideServiceInput = {
    id?: string
    requestId: string
    customerId: string
    driverId?: string | null
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    currency?: string
    currencySymbol?: string
    externalTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutRideRequestInput
    ride?: RideUncheckedCreateNestedOneWithoutRideRequestInput
  }

  export type RideRequestCreateOrConnectWithoutRideServiceInput = {
    where: RideRequestWhereUniqueInput
    create: XOR<RideRequestCreateWithoutRideServiceInput, RideRequestUncheckedCreateWithoutRideServiceInput>
  }

  export type RideRequestCreateManyRideServiceInputEnvelope = {
    data: RideRequestCreateManyRideServiceInput | RideRequestCreateManyRideServiceInput[]
    skipDuplicates?: boolean
  }

  export type RideCreateWithoutRideServiceInput = {
    id?: string
    rideId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationCreateNestedManyWithoutRideInput
    rideToken?: RideTokenCreateNestedOneWithoutRideInput
    customer: UserCreateNestedOneWithoutCustomerRidesInput
    driver: DriverCreateNestedOneWithoutRidesInput
    rideRequest: RideRequestCreateNestedOneWithoutRideInput
  }

  export type RideUncheckedCreateWithoutRideServiceInput = {
    id?: string
    rideId: string
    rideRequestId: string
    driverId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    settlementStatus?: $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedCreateNestedManyWithoutRideInput
    rideToken?: RideTokenUncheckedCreateNestedOneWithoutRideInput
  }

  export type RideCreateOrConnectWithoutRideServiceInput = {
    where: RideWhereUniqueInput
    create: XOR<RideCreateWithoutRideServiceInput, RideUncheckedCreateWithoutRideServiceInput>
  }

  export type RideCreateManyRideServiceInputEnvelope = {
    data: RideCreateManyRideServiceInput | RideCreateManyRideServiceInput[]
    skipDuplicates?: boolean
  }

  export type DriverUpsertWithWhereUniqueWithoutRideServiceInput = {
    where: DriverWhereUniqueInput
    update: XOR<DriverUpdateWithoutRideServiceInput, DriverUncheckedUpdateWithoutRideServiceInput>
    create: XOR<DriverCreateWithoutRideServiceInput, DriverUncheckedCreateWithoutRideServiceInput>
  }

  export type DriverUpdateWithWhereUniqueWithoutRideServiceInput = {
    where: DriverWhereUniqueInput
    data: XOR<DriverUpdateWithoutRideServiceInput, DriverUncheckedUpdateWithoutRideServiceInput>
  }

  export type DriverUpdateManyWithWhereWithoutRideServiceInput = {
    where: DriverScalarWhereInput
    data: XOR<DriverUpdateManyMutationInput, DriverUncheckedUpdateManyWithoutRideServiceInput>
  }

  export type DriverScalarWhereInput = {
    AND?: DriverScalarWhereInput | DriverScalarWhereInput[]
    OR?: DriverScalarWhereInput[]
    NOT?: DriverScalarWhereInput | DriverScalarWhereInput[]
    id?: StringFilter<"Driver"> | string
    userId?: StringFilter<"Driver"> | string
    riderApplicationId?: StringFilter<"Driver"> | string
    driverId?: StringFilter<"Driver"> | string
    isOnline?: BoolFilter<"Driver"> | boolean
    status?: EnumDriverStatusFilter<"Driver"> | $Enums.DriverStatus
    currentLocation?: JsonNullableFilter<"Driver">
    lastLocationUpdate?: DateTimeNullableFilter<"Driver"> | Date | string | null
    totalRides?: IntFilter<"Driver"> | number
    totalEarnings?: DecimalFilter<"Driver"> | Decimal | DecimalJsLike | number | string
    rating?: DecimalNullableFilter<"Driver"> | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFilter<"Driver"> | number
    vehicleInfo?: JsonNullableFilter<"Driver">
    documents?: JsonNullableFilter<"Driver">
    preferences?: JsonNullableFilter<"Driver">
    isVerified?: BoolFilter<"Driver"> | boolean
    isActive?: BoolFilter<"Driver"> | boolean
    createdAt?: DateTimeFilter<"Driver"> | Date | string
    updatedAt?: DateTimeFilter<"Driver"> | Date | string
    rideServiceId?: StringNullableFilter<"Driver"> | string | null
    updatedBy?: StringNullableFilter<"Driver"> | string | null
  }

  export type RideRequestUpsertWithWhereUniqueWithoutRideServiceInput = {
    where: RideRequestWhereUniqueInput
    update: XOR<RideRequestUpdateWithoutRideServiceInput, RideRequestUncheckedUpdateWithoutRideServiceInput>
    create: XOR<RideRequestCreateWithoutRideServiceInput, RideRequestUncheckedCreateWithoutRideServiceInput>
  }

  export type RideRequestUpdateWithWhereUniqueWithoutRideServiceInput = {
    where: RideRequestWhereUniqueInput
    data: XOR<RideRequestUpdateWithoutRideServiceInput, RideRequestUncheckedUpdateWithoutRideServiceInput>
  }

  export type RideRequestUpdateManyWithWhereWithoutRideServiceInput = {
    where: RideRequestScalarWhereInput
    data: XOR<RideRequestUpdateManyMutationInput, RideRequestUncheckedUpdateManyWithoutRideServiceInput>
  }

  export type RideUpsertWithWhereUniqueWithoutRideServiceInput = {
    where: RideWhereUniqueInput
    update: XOR<RideUpdateWithoutRideServiceInput, RideUncheckedUpdateWithoutRideServiceInput>
    create: XOR<RideCreateWithoutRideServiceInput, RideUncheckedCreateWithoutRideServiceInput>
  }

  export type RideUpdateWithWhereUniqueWithoutRideServiceInput = {
    where: RideWhereUniqueInput
    data: XOR<RideUpdateWithoutRideServiceInput, RideUncheckedUpdateWithoutRideServiceInput>
  }

  export type RideUpdateManyWithWhereWithoutRideServiceInput = {
    where: RideScalarWhereInput
    data: XOR<RideUpdateManyMutationInput, RideUncheckedUpdateManyWithoutRideServiceInput>
  }

  export type ExternalTransactionCreateWithoutOrderInput = {
    id?: string
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    customer: UserCreateNestedOneWithoutCustomerTransactionsInput
    paymentMethod?: PaymentMethodCreateNestedOneWithoutExternalTransactionsInput
    rideRequest?: RideRequestCreateNestedOneWithoutExternalTransactionsInput
    seller: UserCreateNestedOneWithoutSellerTransactionsInput
  }

  export type ExternalTransactionUncheckedCreateWithoutOrderInput = {
    id?: string
    customerId: string
    sellerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type ExternalTransactionCreateOrConnectWithoutOrderInput = {
    where: ExternalTransactionWhereUniqueInput
    create: XOR<ExternalTransactionCreateWithoutOrderInput, ExternalTransactionUncheckedCreateWithoutOrderInput>
  }

  export type ExternalTransactionCreateManyOrderInputEnvelope = {
    data: ExternalTransactionCreateManyOrderInput | ExternalTransactionCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrderItemCreateWithoutOrderInput = {
    id?: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderItemStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateWithoutOrderInput = {
    id?: string
    productId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderItemStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemCreateOrConnectWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateManyOrderInputEnvelope = {
    data: OrderItemCreateManyOrderInput | OrderItemCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutOrders_orders_sellerIdToUserInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_userIdToUser?: ordersCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutOrders_orders_sellerIdToUserInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_userIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_userIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutOrders_orders_sellerIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrders_orders_sellerIdToUserInput, UserUncheckedCreateWithoutOrders_orders_sellerIdToUserInput>
  }

  export type UserCreateWithoutOrders_orders_userIdToUserInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressCreateNestedManyWithoutUserInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settlements?: SettlementCreateNestedManyWithoutUserInput
    driver?: DriverCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    productOrderInterests?: ProductOrderInterestCreateNestedManyWithoutUserInput
    productViews?: ProductViewCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationCreateNestedManyWithoutUserInput
    customerRides?: RideCreateNestedManyWithoutCustomerInput
  }

  export type UserUncheckedCreateWithoutOrders_orders_userIdToUserInput = {
    id?: string
    firstName: string
    middleName?: string | null
    lastName: string
    phoneNumber: string
    pin: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveryAddresses?: DeliveryAddressUncheckedCreateNestedManyWithoutUserInput
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    customerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutCustomerInput
    sellerTransactions?: ExternalTransactionUncheckedCreateNestedManyWithoutSellerInput
    paymentMethods?: PaymentMethodUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    sellerKyc?: SellerKycUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settlements?: SettlementUncheckedCreateNestedManyWithoutUserInput
    driver?: DriverUncheckedCreateNestedOneWithoutUserInput
    orders_orders_sellerIdToUser?: ordersUncheckedCreateNestedManyWithoutUser_orders_sellerIdToUserInput
    productOrderInterests?: ProductOrderInterestUncheckedCreateNestedManyWithoutUserInput
    productViews?: ProductViewUncheckedCreateNestedManyWithoutUserInput
    customerRideRequests?: RideRequestUncheckedCreateNestedManyWithoutCustomerInput
    riderApplications?: RiderApplicationUncheckedCreateNestedManyWithoutUserInput
    customerRides?: RideUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type UserCreateOrConnectWithoutOrders_orders_userIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrders_orders_userIdToUserInput, UserUncheckedCreateWithoutOrders_orders_userIdToUserInput>
  }

  export type ExternalTransactionUpsertWithWhereUniqueWithoutOrderInput = {
    where: ExternalTransactionWhereUniqueInput
    update: XOR<ExternalTransactionUpdateWithoutOrderInput, ExternalTransactionUncheckedUpdateWithoutOrderInput>
    create: XOR<ExternalTransactionCreateWithoutOrderInput, ExternalTransactionUncheckedCreateWithoutOrderInput>
  }

  export type ExternalTransactionUpdateWithWhereUniqueWithoutOrderInput = {
    where: ExternalTransactionWhereUniqueInput
    data: XOR<ExternalTransactionUpdateWithoutOrderInput, ExternalTransactionUncheckedUpdateWithoutOrderInput>
  }

  export type ExternalTransactionUpdateManyWithWhereWithoutOrderInput = {
    where: ExternalTransactionScalarWhereInput
    data: XOR<ExternalTransactionUpdateManyMutationInput, ExternalTransactionUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderItemUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutOrderInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutOrderInput>
  }

  export type UserUpsertWithoutOrders_orders_sellerIdToUserInput = {
    update: XOR<UserUpdateWithoutOrders_orders_sellerIdToUserInput, UserUncheckedUpdateWithoutOrders_orders_sellerIdToUserInput>
    create: XOR<UserCreateWithoutOrders_orders_sellerIdToUserInput, UserUncheckedCreateWithoutOrders_orders_sellerIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrders_orders_sellerIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrders_orders_sellerIdToUserInput, UserUncheckedUpdateWithoutOrders_orders_sellerIdToUserInput>
  }

  export type UserUpdateWithoutOrders_orders_sellerIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_userIdToUser?: ordersUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutOrders_orders_sellerIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_userIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type UserUpsertWithoutOrders_orders_userIdToUserInput = {
    update: XOR<UserUpdateWithoutOrders_orders_userIdToUserInput, UserUncheckedUpdateWithoutOrders_orders_userIdToUserInput>
    create: XOR<UserCreateWithoutOrders_orders_userIdToUserInput, UserUncheckedCreateWithoutOrders_orders_userIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrders_orders_userIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrders_orders_userIdToUserInput, UserUncheckedUpdateWithoutOrders_orders_userIdToUserInput>
  }

  export type UserUpdateWithoutOrders_orders_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUpdateManyWithoutUserNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settlements?: SettlementUpdateManyWithoutUserNestedInput
    driver?: DriverUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUpdateManyWithoutUserNestedInput
    customerRides?: RideUpdateManyWithoutCustomerNestedInput
  }

  export type UserUncheckedUpdateWithoutOrders_orders_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    pin?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryAddresses?: DeliveryAddressUncheckedUpdateManyWithoutUserNestedInput
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    customerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutCustomerNestedInput
    sellerTransactions?: ExternalTransactionUncheckedUpdateManyWithoutSellerNestedInput
    paymentMethods?: PaymentMethodUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    sellerKyc?: SellerKycUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settlements?: SettlementUncheckedUpdateManyWithoutUserNestedInput
    driver?: DriverUncheckedUpdateOneWithoutUserNestedInput
    orders_orders_sellerIdToUser?: ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutUserNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutUserNestedInput
    customerRideRequests?: RideRequestUncheckedUpdateManyWithoutCustomerNestedInput
    riderApplications?: RiderApplicationUncheckedUpdateManyWithoutUserNestedInput
    customerRides?: RideUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type OperatorEntityCreateManyRoleInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type RolePermissionCreateManyRoleInput = {
    id?: string
    entityType: $Enums.EntityType
    permission: $Enums.Permission
    isGranted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OperatorEntityUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    admins?: AdminUpdateManyWithoutOperatorEntityNestedInput
  }

  export type OperatorEntityUncheckedUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    admins?: AdminUncheckedUpdateManyWithoutOperatorEntityNestedInput
  }

  export type OperatorEntityUncheckedUpdateManyWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RolePermissionUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    permission?: EnumPermissionFieldUpdateOperationsInput | $Enums.Permission
    isGranted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionUncheckedUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    permission?: EnumPermissionFieldUpdateOperationsInput | $Enums.Permission
    isGranted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionUncheckedUpdateManyWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    permission?: EnumPermissionFieldUpdateOperationsInput | $Enums.Permission
    isGranted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminCreateManyOperatorEntityInput = {
    id?: string
    email: string
    password: string
    name: string
    username: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type AdminUpdateWithoutOperatorEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminUncheckedUpdateWithoutOperatorEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminUncheckedUpdateManyWithoutOperatorEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DeliveryAddressCreateManyUserInput = {
    id?: string
    address: string
    city: string
    state: string
    postalCode?: string | null
    country: string
    isDefault?: boolean
    label?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isDeleted?: boolean
  }

  export type DeviceCreateManyUserInput = {
    id?: string
    deviceId: string
    deviceName: string
    deviceType: string
    isVerified?: boolean
    lastLoginAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: string
    modelName: string
    osVersion: string
    phoneNumber: string
    lastLogoutAt?: Date | string | null
  }

  export type ExternalTransactionCreateManyCustomerInput = {
    id?: string
    orderId?: string | null
    sellerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type ExternalTransactionCreateManySellerInput = {
    id?: string
    orderId?: string | null
    customerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type PaymentMethodCreateManyUserInput = {
    id?: string
    type: $Enums.PaymentType
    provider: string
    accountId: string
    accountName: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateManySellerInput = {
    id?: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SessionCreateManyUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    deviceId: string
  }

  export type SettlementCreateManyUserInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    bankAccountId?: string | null
    walletId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
  }

  export type ordersCreateManyUser_orders_sellerIdToUserInput = {
    id: string
    orderNumber: string
    userId: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
  }

  export type ordersCreateManyUser_orders_userIdToUserInput = {
    id: string
    orderNumber: string
    sellerId: string
    status?: $Enums.OrderStatus
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingAmount?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    customerName: string
    customerEmail?: string | null
    customerPhone: string
    shippingAddress: string
    billingAddress?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentReference?: string | null
    paidAt?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    shippedAt?: Date | string | null
    deliveredAt?: Date | string | null
    notes?: string | null
    sellerNotes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    cancelledAt?: Date | string | null
    deliveryCurrency?: string | null
  }

  export type ProductOrderInterestCreateManyUserInput = {
    id?: string
    productId: string
    quantity?: number
    originalPrice: Decimal | DecimalJsLike | number | string
    discountPrice?: Decimal | DecimalJsLike | number | string | null
    currencyCode: string
    totalAmount: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderInterestStatus
    notes?: string | null
    preferredDeliveryDate?: Date | string | null
    deliveryAddress?: string | null
    contactPhone?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt?: Date | string | null
  }

  export type ProductViewCreateManyUserInput = {
    id?: string
    productId: string
    deviceId?: string | null
    ipAddress?: string | null
    viewedAt?: Date | string
  }

  export type RideRequestCreateManyCustomerInput = {
    id?: string
    requestId: string
    driverId?: string | null
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    currency?: string
    currencySymbol?: string
  }

  export type RiderApplicationCreateManyUserInput = {
    id?: string
    vehicleType: $Enums.RiderVehicleType
    firstName: string
    lastName: string
    email?: string | null
    phoneNumber: string
    dateOfBirth?: string | null
    address: string
    city: string
    licenseNumber: string
    licenseExpiry: string
    vehicleModel: string
    vehiclePlate: string
    insuranceNumber?: string | null
    insuranceExpiry?: string | null
    emergencyContact?: string | null
    emergencyPhone?: string | null
    experience?: string | null
    availability?: string | null
    status?: $Enums.RiderApplicationStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RideCreateManyCustomerInput = {
    id?: string
    rideId: string
    rideRequestId: string
    driverId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    settlementStatus?: $Enums.PaymentStatus
  }

  export type DeliveryAddressUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    label?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isDeleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DeliveryAddressUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    label?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isDeleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DeliveryAddressUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    label?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isDeleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DeviceUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
    deviceName?: StringFieldUpdateOperationsInput | string
    deviceType?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: StringFieldUpdateOperationsInput | string
    modelName?: StringFieldUpdateOperationsInput | string
    osVersion?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    lastLogoutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessions?: SessionUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
    deviceName?: StringFieldUpdateOperationsInput | string
    deviceType?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: StringFieldUpdateOperationsInput | string
    modelName?: StringFieldUpdateOperationsInput | string
    osVersion?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    lastLogoutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessions?: SessionUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: StringFieldUpdateOperationsInput | string
    deviceName?: StringFieldUpdateOperationsInput | string
    deviceType?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: StringFieldUpdateOperationsInput | string
    modelName?: StringFieldUpdateOperationsInput | string
    osVersion?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    lastLogoutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ExternalTransactionUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    order?: ordersUpdateOneWithoutExternalTransactionsNestedInput
    paymentMethod?: PaymentMethodUpdateOneWithoutExternalTransactionsNestedInput
    rideRequest?: RideRequestUpdateOneWithoutExternalTransactionsNestedInput
    seller?: UserUpdateOneRequiredWithoutSellerTransactionsNestedInput
  }

  export type ExternalTransactionUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    sellerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    sellerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExternalTransactionUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    customer?: UserUpdateOneRequiredWithoutCustomerTransactionsNestedInput
    order?: ordersUpdateOneWithoutExternalTransactionsNestedInput
    paymentMethod?: PaymentMethodUpdateOneWithoutExternalTransactionsNestedInput
    rideRequest?: RideRequestUpdateOneWithoutExternalTransactionsNestedInput
  }

  export type ExternalTransactionUncheckedUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentMethodUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    provider?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    externalTransactions?: ExternalTransactionUpdateManyWithoutPaymentMethodNestedInput
  }

  export type PaymentMethodUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    provider?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutPaymentMethodNestedInput
  }

  export type PaymentMethodUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    provider?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    device?: DeviceUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deviceId?: StringFieldUpdateOperationsInput | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deviceId?: StringFieldUpdateOperationsInput | string
  }

  export type SettlementUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
    bankAccount?: BankAccountUpdateOneWithoutSettlementsNestedInput
    wallet?: WalletUpdateOneWithoutSettlementsNestedInput
  }

  export type SettlementUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    bankAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    walletId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
  }

  export type SettlementUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    bankAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    walletId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
  }

  export type ordersUpdateWithoutUser_orders_sellerIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    externalTransactions?: ExternalTransactionUpdateManyWithoutOrderNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    User_orders_userIdToUser?: UserUpdateOneRequiredWithoutOrders_orders_userIdToUserNestedInput
  }

  export type ordersUncheckedUpdateWithoutUser_orders_sellerIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutOrderNestedInput
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ordersUncheckedUpdateManyWithoutUser_orders_sellerIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordersUpdateWithoutUser_orders_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    externalTransactions?: ExternalTransactionUpdateManyWithoutOrderNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    User_orders_sellerIdToUser?: UserUpdateOneRequiredWithoutOrders_orders_sellerIdToUserNestedInput
  }

  export type ordersUncheckedUpdateWithoutUser_orders_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutOrderNestedInput
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ordersUncheckedUpdateManyWithoutUser_orders_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    sellerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductOrderInterestUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product?: ProductUpdateOneRequiredWithoutProductOrderInterestsNestedInput
  }

  export type ProductOrderInterestUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductOrderInterestUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductViewUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductViewsNestedInput
  }

  export type ProductViewUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductViewUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideRequestUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUpdateManyWithoutRideRequestNestedInput
    driver?: DriverUpdateOneWithoutRideRequestsNestedInput
    rideService?: RideServiceUpdateOneWithoutRideRequestsNestedInput
    ride?: RideUpdateOneWithoutRideRequestNestedInput
  }

  export type RideRequestUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutRideRequestNestedInput
    ride?: RideUncheckedUpdateOneWithoutRideRequestNestedInput
  }

  export type RideRequestUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
  }

  export type RiderApplicationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driver?: DriverUpdateOneWithoutRiderApplicationNestedInput
    documents?: RiderDocumentUpdateManyWithoutRiderApplicationNestedInput
  }

  export type RiderApplicationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driver?: DriverUncheckedUpdateOneWithoutRiderApplicationNestedInput
    documents?: RiderDocumentUncheckedUpdateManyWithoutRiderApplicationNestedInput
  }

  export type RiderApplicationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumRiderVehicleTypeFieldUpdateOperationsInput | $Enums.RiderVehicleType
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseExpiry?: StringFieldUpdateOperationsInput | string
    vehicleModel?: StringFieldUpdateOperationsInput | string
    vehiclePlate?: StringFieldUpdateOperationsInput | string
    insuranceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyContact?: NullableStringFieldUpdateOperationsInput | string | null
    emergencyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRiderApplicationStatusFieldUpdateOperationsInput | $Enums.RiderApplicationStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUpdateOneWithoutRideNestedInput
    driver?: DriverUpdateOneRequiredWithoutRidesNestedInput
    rideRequest?: RideRequestUpdateOneRequiredWithoutRideNestedInput
    rideService?: RideServiceUpdateOneWithoutRidesNestedInput
  }

  export type RideUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUncheckedUpdateOneWithoutRideNestedInput
  }

  export type RideUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  }

  export type SessionCreateManyDeviceInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type SessionUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type SessionUncheckedUpdateManyWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProductAttributeCreateManyProductInput = {
    id?: string
    key: string
    value: string
    createdAt?: Date | string
    updatedAt?: Date | string
    unit?: string | null
    isFilterable?: boolean
    order?: number
  }

  export type ProductDeliveryOptionCreateManyProductInput = {
    id?: string
    deliveryType: $Enums.DeliveryType
    name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    estimatedDays: number
    isDefault?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductImageCreateManyProductInput = {
    id?: string
    imageUrl: string
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    width?: number | null
    height?: number | null
    size?: number | null
    format?: string | null
    altText?: string | null
  }

  export type ProductTranslationCreateManyProductInput = {
    id?: string
    locale: string
    title: string
    description: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemCreateManyProductInput = {
    id?: string
    orderId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderItemStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductOrderInterestCreateManyProductInput = {
    id?: string
    userId: string
    quantity?: number
    originalPrice: Decimal | DecimalJsLike | number | string
    discountPrice?: Decimal | DecimalJsLike | number | string | null
    currencyCode: string
    totalAmount: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderInterestStatus
    notes?: string | null
    preferredDeliveryDate?: Date | string | null
    deliveryAddress?: string | null
    contactPhone?: string | null
    paymentMethod?: string | null
    paymentStatus?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt?: Date | string | null
  }

  export type ProductViewCreateManyProductInput = {
    id?: string
    userId: string
    deviceId?: string | null
    ipAddress?: string | null
    viewedAt?: Date | string
  }

  export type ProductAttributeUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    isFilterable?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
  }

  export type ProductAttributeUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    isFilterable?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
  }

  export type ProductAttributeUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    isFilterable?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
  }

  export type ProductDeliveryOptionUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    deliveryType?: EnumDeliveryTypeFieldUpdateOperationsInput | $Enums.DeliveryType
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    estimatedDays?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductDeliveryOptionUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    deliveryType?: EnumDeliveryTypeFieldUpdateOperationsInput | $Enums.DeliveryType
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    estimatedDays?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductDeliveryOptionUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    deliveryType?: EnumDeliveryTypeFieldUpdateOperationsInput | $Enums.DeliveryType
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    estimatedDays?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductImageUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    format?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductImageUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    format?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductImageUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    format?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductTranslationUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: ordersUpdateOneRequiredWithoutItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOrderInterestUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductOrderInterestsNestedInput
  }

  export type ProductOrderInterestUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductOrderInterestUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currencyCode?: StringFieldUpdateOperationsInput | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderInterestStatusFieldUpdateOperationsInput | $Enums.OrderInterestStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDeliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductViewUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductViewsNestedInput
  }

  export type ProductViewUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductViewUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    deviceId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateManyParentInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    slug: string
    description?: string | null
    imageUrl?: string | null
    order?: number
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: string | null
  }

  export type CategoryTranslationCreateManyCategoryInput = {
    id?: string
    locale: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateManyCategoryInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    condition: $Enums.ProductCondition
    locationId: string
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CategoryUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUpdateManyWithoutParentNestedInput
    translations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    translations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryTranslationUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    location?: LocationUpdateOneRequiredWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    locationId?: StringFieldUpdateOperationsInput | string
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductCreateManyLocationInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    currencyCode: string
    quantity: number
    categoryId?: string | null
    condition: $Enums.ProductCondition
    status: $Enums.ProductStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    views?: number
    favorites?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    isFeatured?: boolean
    featuredUntil?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductUpdateWithoutLocationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    category?: CategoryUpdateOneWithoutProductsNestedInput
    seller?: UserUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutLocationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    deliveryOptions?: ProductDeliveryOptionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    productOrderInterests?: ProductOrderInterestUncheckedUpdateManyWithoutProductNestedInput
    productViews?: ProductViewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutLocationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: EnumProductConditionFieldUpdateOperationsInput | $Enums.ProductCondition
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    views?: IntFieldUpdateOperationsInput | number
    favorites?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    featuredUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BankAccountCreateManySellerKycInput = {
    id?: string
    accountName: string
    accountNumber: string
    bankName: string
    bankCode: string
    branchCode?: string | null
    swiftCode?: string | null
    iban?: string | null
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WalletCreateManySellerKycInput = {
    id?: string
    walletType: $Enums.WalletType
    walletAddress: string
    currency: string
    isDefault?: boolean
    status?: $Enums.AccountStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    account: string
  }

  export type BankAccountUpdateWithoutSellerKycInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankCode?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlements?: SettlementUpdateManyWithoutBankAccountNestedInput
  }

  export type BankAccountUncheckedUpdateWithoutSellerKycInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankCode?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlements?: SettlementUncheckedUpdateManyWithoutBankAccountNestedInput
  }

  export type BankAccountUncheckedUpdateManyWithoutSellerKycInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankCode?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WalletUpdateWithoutSellerKycInput = {
    id?: StringFieldUpdateOperationsInput | string
    walletType?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    walletAddress?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: StringFieldUpdateOperationsInput | string
    settlements?: SettlementUpdateManyWithoutWalletNestedInput
  }

  export type WalletUncheckedUpdateWithoutSellerKycInput = {
    id?: StringFieldUpdateOperationsInput | string
    walletType?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    walletAddress?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: StringFieldUpdateOperationsInput | string
    settlements?: SettlementUncheckedUpdateManyWithoutWalletNestedInput
  }

  export type WalletUncheckedUpdateManyWithoutSellerKycInput = {
    id?: StringFieldUpdateOperationsInput | string
    walletType?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    walletAddress?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: StringFieldUpdateOperationsInput | string
  }

  export type SettlementCreateManyBankAccountInput = {
    id?: string
    userId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    walletId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
  }

  export type SettlementUpdateWithoutBankAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutSettlementsNestedInput
    wallet?: WalletUpdateOneWithoutSettlementsNestedInput
  }

  export type SettlementUncheckedUpdateWithoutBankAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    walletId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
  }

  export type SettlementUncheckedUpdateManyWithoutBankAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    walletId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
  }

  export type SettlementCreateManyWalletInput = {
    id?: string
    userId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status?: $Enums.SettlementStatus
    type: $Enums.SettlementType
    reference: string
    bankAccountId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: Decimal | DecimalJsLike | number | string
    totalOrdersCount?: number
    channel?: $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: number
  }

  export type SettlementUpdateWithoutWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
    bankAccount?: BankAccountUpdateOneWithoutSettlementsNestedInput
    user?: UserUpdateOneRequiredWithoutSettlementsNestedInput
  }

  export type SettlementUncheckedUpdateWithoutWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    bankAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
  }

  export type SettlementUncheckedUpdateManyWithoutWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumSettlementStatusFieldUpdateOperationsInput | $Enums.SettlementStatus
    type?: EnumSettlementTypeFieldUpdateOperationsInput | $Enums.SettlementType
    reference?: StringFieldUpdateOperationsInput | string
    bankAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    includedOrderIds?: NullableJsonNullValueInput | InputJsonValue
    netAmountBeforeFees?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFeesDeducted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalOrdersCount?: IntFieldUpdateOperationsInput | number
    channel?: EnumSettlementChannelFieldUpdateOperationsInput | $Enums.SettlementChannel
    includedRideIds?: NullableJsonNullValueInput | InputJsonValue
    totalRidesCount?: IntFieldUpdateOperationsInput | number
  }

  export type ExternalTransactionCreateManyPaymentMethodInput = {
    id?: string
    orderId?: string | null
    customerId: string
    sellerId: string
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type ExternalTransactionUpdateWithoutPaymentMethodInput = {
    id?: StringFieldUpdateOperationsInput | string
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    customer?: UserUpdateOneRequiredWithoutCustomerTransactionsNestedInput
    order?: ordersUpdateOneWithoutExternalTransactionsNestedInput
    rideRequest?: RideRequestUpdateOneWithoutExternalTransactionsNestedInput
    seller?: UserUpdateOneRequiredWithoutSellerTransactionsNestedInput
  }

  export type ExternalTransactionUncheckedUpdateWithoutPaymentMethodInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutPaymentMethodInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RiderDocumentCreateManyRiderApplicationInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    uploadedAt?: Date | string
  }

  export type RiderDocumentUpdateWithoutRiderApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderDocumentUncheckedUpdateWithoutRiderApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderDocumentUncheckedUpdateManyWithoutRiderApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverEarningCreateManyDriverInput = {
    id?: string
    rideId: string
    amount: Decimal | DecimalJsLike | number | string
    type: string
    description?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type DriverLocationCreateManyDriverInput = {
    id?: string
    latitude: number
    longitude: number
    address?: string | null
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type RideRequestCreateManyDriverInput = {
    id?: string
    requestId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    currency?: string
    currencySymbol?: string
  }

  export type RideCreateManyDriverInput = {
    id?: string
    rideId: string
    rideRequestId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    rideServiceId?: string | null
    settlementStatus?: $Enums.PaymentStatus
  }

  export type DriverEarningUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverEarningUncheckedUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverEarningUncheckedUpdateManyWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverLocationUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverLocationUncheckedUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverLocationUncheckedUpdateManyWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideRequestUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUpdateManyWithoutRideRequestNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRideRequestsNestedInput
    rideService?: RideServiceUpdateOneWithoutRideRequestsNestedInput
    ride?: RideUpdateOneWithoutRideRequestNestedInput
  }

  export type RideRequestUncheckedUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutRideRequestNestedInput
    ride?: RideUncheckedUpdateOneWithoutRideRequestNestedInput
  }

  export type RideRequestUncheckedUpdateManyWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
  }

  export type RideUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUpdateOneWithoutRideNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRidesNestedInput
    rideRequest?: RideRequestUpdateOneRequiredWithoutRideNestedInput
    rideService?: RideServiceUpdateOneWithoutRidesNestedInput
  }

  export type RideUncheckedUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUncheckedUpdateOneWithoutRideNestedInput
  }

  export type RideUncheckedUpdateManyWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rideServiceId?: NullableStringFieldUpdateOperationsInput | string | null
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  }

  export type ExternalTransactionCreateManyRideRequestInput = {
    id?: string
    orderId?: string | null
    customerId: string
    sellerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
  }

  export type ExternalTransactionUpdateWithoutRideRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    customer?: UserUpdateOneRequiredWithoutCustomerTransactionsNestedInput
    order?: ordersUpdateOneWithoutExternalTransactionsNestedInput
    paymentMethod?: PaymentMethodUpdateOneWithoutExternalTransactionsNestedInput
    seller?: UserUpdateOneRequiredWithoutSellerTransactionsNestedInput
  }

  export type ExternalTransactionUncheckedUpdateWithoutRideRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutRideRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
  }

  export type RideLocationCreateManyRideInput = {
    id?: string
    latitude: number
    longitude: number
    accuracy?: number | null
    speed?: number | null
    heading?: number | null
    timestamp?: Date | string
  }

  export type RideLocationUpdateWithoutRideInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideLocationUncheckedUpdateWithoutRideInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RideLocationUncheckedUpdateManyWithoutRideInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    accuracy?: NullableFloatFieldUpdateOperationsInput | number | null
    speed?: NullableFloatFieldUpdateOperationsInput | number | null
    heading?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverCreateManyRideServiceInput = {
    id?: string
    userId: string
    riderApplicationId: string
    driverId: string
    isOnline?: boolean
    status?: $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: Date | string | null
    totalRides?: number
    totalEarnings?: Decimal | DecimalJsLike | number | string
    rating?: Decimal | DecimalJsLike | number | string | null
    ratingCount?: number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type RideRequestCreateManyRideServiceInput = {
    id?: string
    requestId: string
    customerId: string
    driverId?: string | null
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    estimatedDistance?: number | null
    estimatedDuration?: number | null
    estimatedPrice: Decimal | DecimalJsLike | number | string
    actualPrice?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.RideStatus
    paymentMethod?: $Enums.RidePaymentMethod
    customerNotes?: string | null
    driverNotes?: string | null
    requestedAt?: Date | string
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    currency?: string
    currencySymbol?: string
  }

  export type RideCreateManyRideServiceInput = {
    id?: string
    rideId: string
    rideRequestId: string
    driverId: string
    customerId: string
    pickupLocation: JsonNullValueInput | InputJsonValue
    destinationLocation: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: $Enums.RideType
    distance?: number | null
    duration?: number | null
    baseFare: Decimal | DecimalJsLike | number | string
    distanceFare: Decimal | DecimalJsLike | number | string
    timeFare: Decimal | DecimalJsLike | number | string
    surgeFare?: Decimal | DecimalJsLike | number | string
    totalFare: Decimal | DecimalJsLike | number | string
    driverEarnings: Decimal | DecimalJsLike | number | string
    platformFee: Decimal | DecimalJsLike | number | string
    paymentMethod?: $Enums.RidePaymentMethod
    paymentStatus?: $Enums.PaymentStatus
    status?: $Enums.RideStatus
    customerRating?: number | null
    driverRating?: number | null
    customerReview?: string | null
    driverReview?: string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    settlementStatus?: $Enums.PaymentStatus
  }

  export type DriverUpdateWithoutRideServiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUpdateManyWithoutDriverNestedInput
    riderApplication?: RiderApplicationUpdateOneRequiredWithoutDriverNestedInput
    user?: UserUpdateOneRequiredWithoutDriverNestedInput
    rideRequests?: RideRequestUpdateManyWithoutDriverNestedInput
    rides?: RideUpdateManyWithoutDriverNestedInput
  }

  export type DriverUncheckedUpdateWithoutRideServiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    earnings?: DriverEarningUncheckedUpdateManyWithoutDriverNestedInput
    locationHistory?: DriverLocationUncheckedUpdateManyWithoutDriverNestedInput
    rideRequests?: RideRequestUncheckedUpdateManyWithoutDriverNestedInput
    rides?: RideUncheckedUpdateManyWithoutDriverNestedInput
  }

  export type DriverUncheckedUpdateManyWithoutRideServiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    riderApplicationId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    isOnline?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    lastLocationUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRides?: IntFieldUpdateOperationsInput | number
    totalEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingCount?: IntFieldUpdateOperationsInput | number
    vehicleInfo?: NullableJsonNullValueInput | InputJsonValue
    documents?: NullableJsonNullValueInput | InputJsonValue
    preferences?: NullableJsonNullValueInput | InputJsonValue
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RideRequestUpdateWithoutRideServiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUpdateManyWithoutRideRequestNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRideRequestsNestedInput
    driver?: DriverUpdateOneWithoutRideRequestsNestedInput
    ride?: RideUpdateOneWithoutRideRequestNestedInput
  }

  export type RideRequestUncheckedUpdateWithoutRideServiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    externalTransactions?: ExternalTransactionUncheckedUpdateManyWithoutRideRequestNestedInput
    ride?: RideUncheckedUpdateOneWithoutRideRequestNestedInput
  }

  export type RideRequestUncheckedUpdateManyWithoutRideServiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    estimatedDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actualPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    driverNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
  }

  export type RideUpdateWithoutRideServiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUpdateOneWithoutRideNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerRidesNestedInput
    driver?: DriverUpdateOneRequiredWithoutRidesNestedInput
    rideRequest?: RideRequestUpdateOneRequiredWithoutRideNestedInput
  }

  export type RideUncheckedUpdateWithoutRideServiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    locationUpdates?: RideLocationUncheckedUpdateManyWithoutRideNestedInput
    rideToken?: RideTokenUncheckedUpdateOneWithoutRideNestedInput
  }

  export type RideUncheckedUpdateManyWithoutRideServiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    rideId?: StringFieldUpdateOperationsInput | string
    rideRequestId?: StringFieldUpdateOperationsInput | string
    driverId?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    pickupLocation?: JsonNullValueInput | InputJsonValue
    destinationLocation?: JsonNullValueInput | InputJsonValue
    actualPickupLocation?: NullableJsonNullValueInput | InputJsonValue
    actualDropoffLocation?: NullableJsonNullValueInput | InputJsonValue
    rideType?: EnumRideTypeFieldUpdateOperationsInput | $Enums.RideType
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    baseFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    distanceFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    surgeFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFare?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    driverEarnings?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentMethod?: EnumRidePaymentMethodFieldUpdateOperationsInput | $Enums.RidePaymentMethod
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    status?: EnumRideStatusFieldUpdateOperationsInput | $Enums.RideStatus
    customerRating?: NullableIntFieldUpdateOperationsInput | number | null
    driverRating?: NullableIntFieldUpdateOperationsInput | number | null
    customerReview?: NullableStringFieldUpdateOperationsInput | string | null
    driverReview?: NullableStringFieldUpdateOperationsInput | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    route?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    settlementStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  }

  export type ExternalTransactionCreateManyOrderInput = {
    id?: string
    customerId: string
    sellerId: string
    paymentMethodId?: string | null
    gatewayProvider: string
    gatewayTransactionId?: string | null
    paymentReference?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currencyCode: string
    gatewayChargeFees?: Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.TransactionStatus
    failureReason?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appTransactionId: string
    processedAmount?: Decimal | DecimalJsLike | number | string | null
    transactionType?: $Enums.TransactionType
    appService?: $Enums.AppService
    rideRequestId?: string | null
  }

  export type OrderItemCreateManyOrderInput = {
    id?: string
    productId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    status?: $Enums.OrderItemStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ExternalTransactionUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    customer?: UserUpdateOneRequiredWithoutCustomerTransactionsNestedInput
    paymentMethod?: PaymentMethodUpdateOneWithoutExternalTransactionsNestedInput
    rideRequest?: RideRequestUpdateOneWithoutExternalTransactionsNestedInput
    seller?: UserUpdateOneRequiredWithoutSellerTransactionsNestedInput
  }

  export type ExternalTransactionUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExternalTransactionUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    paymentMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    gatewayProvider?: StringFieldUpdateOperationsInput | string
    gatewayTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencyCode?: StringFieldUpdateOperationsInput | string
    gatewayChargeFees?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paidThroughGateway?: BoolFieldUpdateOperationsInput | boolean
    gatewayResponse?: NullableJsonNullValueInput | InputJsonValue
    gatewayRequest?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appTransactionId?: StringFieldUpdateOperationsInput | string
    processedAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    appService?: EnumAppServiceFieldUpdateOperationsInput | $Enums.AppService
    rideRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}